warning: in the working copy of 'capstoneproject/capstoneproject.csproj', LF will be replaced by CRLF the next time Git touches it
[1mdiff --cc .vs/capstoneproject/v14/.suo[m
[1mindex 457facc,7345c79..0000000[m
Binary files differ
[1mdiff --cc capstoneproject/bin/Debug/capstoneproject.exe[m
[1mindex 4e8bbf0,5651bd8..0000000[m
Binary files differ
[1mdiff --cc capstoneproject/bin/Debug/capstoneproject.pdb[m
[1mindex b1e148e,7947332..0000000[m
Binary files differ
[1mdiff --cc capstoneproject/capstoneproject.csproj[m
[1mindex a5df6ba,6834934..0000000[m
[1m--- a/capstoneproject/capstoneproject.csproj[m
[1m+++ b/capstoneproject/capstoneproject.csproj[m
[36m@@@ -1,256 -1,255 +1,513 @@@[m
[31m -ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[31m -<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">[m
[31m -  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />[m
[31m -  <PropertyGroup>[m
[31m -    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>[m
[31m -    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>[m
[31m -    <ProjectGuid>{337388FF-7DDC-4339-A6A4-6A85072907D2}</ProjectGuid>[m
[31m -    <OutputType>WinExe</OutputType>[m
[31m -    <AppDesignerFolder>Properties</AppDesignerFolder>[m
[31m -    <RootNamespace>capstoneproject</RootNamespace>[m
[31m -    <AssemblyName>capstoneproject</AssemblyName>[m
[31m -    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>[m
[31m -    <FileAlignment>512</FileAlignment>[m
[31m -    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>[m
[31m -  </PropertyGroup>[m
[31m -  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">[m
[31m -    <PlatformTarget>AnyCPU</PlatformTarget>[m
[31m -    <DebugSymbols>true</DebugSymbols>[m
[31m -    <DebugType>full</DebugType>[m
[31m -    <Optimize>false</Optimize>[m
[31m -    <OutputPath>bin\Debug\</OutputPath>[m
[31m -    <DefineConstants>DEBUG;TRACE</DefineConstants>[m
[31m -    <ErrorReport>prompt</ErrorReport>[m
[31m -    <WarningLevel>4</WarningLevel>[m
[31m -  </PropertyGroup>[m
[31m -  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">[m
[31m -    <PlatformTarget>AnyCPU</PlatformTarget>[m
[31m -    <DebugType>pdbonly</DebugType>[m
[31m -    <Optimize>true</Optimize>[m
[31m -    <OutputPath>bin\Release\</OutputPath>[m
[31m -    <DefineConstants>TRACE</DefineConstants>[m
[31m -    <ErrorReport>prompt</ErrorReport>[m
[31m -    <WarningLevel>4</WarningLevel>[m
[31m -  </PropertyGroup>[m
[31m -  <ItemGroup>[m
[31m -    <Reference Include="System" />[m
[31m -    <Reference Include="System.Core" />[m
[31m -    <Reference Include="System.Xml.Linq" />[m
[31m -    <Reference Include="System.Data.DataSetExtensions" />[m
[31m -    <Reference Include="Microsoft.CSharp" />[m
[31m -    <Reference Include="System.Data" />[m
[31m -    <Reference Include="System.Deployment" />[m
[31m -    <Reference Include="System.Drawing" />[m
[31m -    <Reference Include="System.Net.Http" />[m
[31m -    <Reference Include="System.Windows.Forms" />[m
[31m -    <Reference Include="System.Xml" />[m
[31m -  </ItemGroup>[m
[31m -  <ItemGroup>[m
[31m -    <Compile Include="adduser.cs">[m
[31m -      <SubType>Form</SubType>[m
[31m -    </Compile>[m
[31m -    <Compile Include="adduser.Designer.cs">[m
[31m -      <DependentUpon>adduser.cs</DependentUpon>[m
[31m -    </Compile>[m
[31m -    <Compile Include="dashboard.cs">[m
[31m -      <SubType>Form</SubType>[m
[31m -    </Compile>[m
[31m -    <Compile Include="dashboard.Designer.cs">[m
[31m -      <DependentUpon>dashboard.cs</DependentUpon>[m
[31m -    </Compile>[m
[31m -    <Compile Include="Form1.cs">[m
[31m -      <SubType>Form</SubType>[m
[31m -    </Compile>[m
[31m -    <Compile Include="Form1.Designer.cs">[m
[31m -      <DependentUpon>Form1.cs</DependentUpon>[m
[31m -    </Compile>[m
[31m -    <Compile Include="loginformDataSet.Designer.cs">[m
[31m -      <AutoGen>True</AutoGen>[m
[31m -      <DesignTime>True</DesignTime>[m
[31m -      <DependentUpon>loginformDataSet.xsd</DependentUpon>[m
[31m -    </Compile>[m
[31m -    <Compile Include="loginformDataSet1.Designer.cs">[m
[31m -      <AutoGen>True</AutoGen>[m
[31m -      <DesignTime>True</DesignTime>[m
[31m -      <DependentUpon>loginformDataSet1.xsd</DependentUpon>[m
[31m -    </Compile>[m
[31m -    <Compile Include="loginformDataSet2.Designer.cs">[m
[31m -      <AutoGen>True</AutoGen>[m
[31m -      <DesignTime>True</DesignTime>[m
[31m -      <DependentUpon>loginformDataSet2.xsd</DependentUpon>[m
[31m -    </Compile>[m
[31m -    <Compile Include="loginformDataSet3.Designer.cs">[m
[31m -      <AutoGen>True</AutoGen>[m
[31m -      <DesignTime>True</DesignTime>[m
[31m -      <DependentUpon>loginformDataSet3.xsd</DependentUpon>[m
[31m -    </Compile>[m
[31m -    <Compile Include="loginformDataSet4.Designer.cs">[m
[31m -      <AutoGen>True</AutoGen>[m
[31m -      <DesignTime>True</DesignTime>[m
[31m -      <DependentUpon>loginformDataSet4.xsd</DependentUpon>[m
[31m -    </Compile>[m
[31m -    <Compile Include="loginformDataSet5.Designer.cs">[m
[31m -      <AutoGen>True</AutoGen>[m
[31m -      <DesignTime>True</DesignTime>[m
[31m -      <DependentUpon>loginformDataSet5.xsd</DependentUpon>[m
[31m -    </Compile>[m
[31m -    <Compile Include="loginformDataSet6.Designer.cs">[m
[31m -      <AutoGen>True</AutoGen>[m
[31m -      <DesignTime>True</DesignTime>[m
[31m -      <DependentUpon>loginformDataSet6.xsd</DependentUpon>[m
[31m -    </Compile>[m
[31m -    <Compile Include="loginformDataSet7.Designer.cs">[m
[31m -      <AutoGen>True</AutoGen>[m
[31m -      <DesignTime>True</DesignTime>[m
[31m -      <DependentUpon>loginformDataSet7.xsd</DependentUpon>[m
[31m -    </Compile>[m
[31m -    <Compile Include="Program.cs" />[m
[31m -    <Compile Include="Properties\AssemblyInfo.cs" />[m
[31m -    <Compile Include="Users.cs">[m
[31m -      <SubType>Form</SubType>[m
[31m -    </Compile>[m
[31m -    <Compile Include="Users.Designer.cs">[m
[31m -      <DependentUpon>Users.cs</DependentUpon>[m
[31m -    </Compile>[m
[31m -    <EmbeddedResource Include="adduser.resx">[m
[31m -      <DependentUpon>adduser.cs</DependentUpon>[m
[31m -    </EmbeddedResource>[m
[31m -    <EmbeddedResource Include="dashboard.resx">[m
[31m -      <DependentUpon>dashboard.cs</DependentUpon>[m
[31m -    </EmbeddedResource>[m
[31m -    <EmbeddedResource Include="Form1.resx">[m
[31m -      <DependentUpon>Form1.cs</DependentUpon>[m
[31m -    </EmbeddedResource>[m
[31m -    <EmbeddedResource Include="Properties\Resources.resx">[m
[31m -      <Generator>ResXFileCodeGenerator</Generator>[m
[31m -      <LastGenOutput>Resources.Designer.cs</LastGenOutput>[m
[31m -      <SubType>Designer</SubType>[m
[31m -    </EmbeddedResource>[m
[31m -    <Compile Include="Properties\Resources.Designer.cs">[m
[31m -      <AutoGen>True</AutoGen>[m
[31m -      <DependentUpon>Resources.resx</DependentUpon>[m
[31m -      <DesignTime>True</DesignTime>[m
[31m -    </Compile>[m
[31m -    <EmbeddedResource Include="Users.resx">[m
[31m -      <DependentUpon>Users.cs</DependentUpon>[m
[31m -    </EmbeddedResource>[m
[31m -    <None Include="loginformDataSet.xsc">[m
[31m -      <DependentUpon>loginformDataSet.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet.xsd">[m
[31m -      <Generator>MSDataSetGenerator</Generator>[m
[31m -      <LastGenOutput>loginformDataSet.Designer.cs</LastGenOutput>[m
[31m -      <SubType>Designer</SubType>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet.xss">[m
[31m -      <DependentUpon>loginformDataSet.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet1.xsc">[m
[31m -      <DependentUpon>loginformDataSet1.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet1.xsd">[m
[31m -      <Generator>MSDataSetGenerator</Generator>[m
[31m -      <LastGenOutput>loginformDataSet1.Designer.cs</LastGenOutput>[m
[31m -      <SubType>Designer</SubType>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet1.xss">[m
[31m -      <DependentUpon>loginformDataSet1.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet2.xsc">[m
[31m -      <DependentUpon>loginformDataSet2.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet2.xsd">[m
[31m -      <Generator>MSDataSetGenerator</Generator>[m
[31m -      <LastGenOutput>loginformDataSet2.Designer.cs</LastGenOutput>[m
[31m -      <SubType>Designer</SubType>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet2.xss">[m
[31m -      <DependentUpon>loginformDataSet2.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet3.xsc">[m
[31m -      <DependentUpon>loginformDataSet3.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet3.xsd">[m
[31m -      <Generator>MSDataSetGenerator</Generator>[m
[31m -      <LastGenOutput>loginformDataSet3.Designer.cs</LastGenOutput>[m
[31m -      <SubType>Designer</SubType>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet3.xss">[m
[31m -      <DependentUpon>loginformDataSet3.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet4.xsc">[m
[31m -      <DependentUpon>loginformDataSet4.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet4.xsd">[m
[31m -      <Generator>MSDataSetGenerator</Generator>[m
[31m -      <LastGenOutput>loginformDataSet4.Designer.cs</LastGenOutput>[m
[31m -      <SubType>Designer</SubType>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet4.xss">[m
[31m -      <DependentUpon>loginformDataSet4.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet5.xsc">[m
[31m -      <DependentUpon>loginformDataSet5.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet5.xsd">[m
[31m -      <Generator>MSDataSetGenerator</Generator>[m
[31m -      <LastGenOutput>loginformDataSet5.Designer.cs</LastGenOutput>[m
[31m -      <SubType>Designer</SubType>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet5.xss">[m
[31m -      <DependentUpon>loginformDataSet5.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet6.xsc">[m
[31m -      <DependentUpon>loginformDataSet6.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet6.xsd">[m
[31m -      <Generator>MSDataSetGenerator</Generator>[m
[31m -      <LastGenOutput>loginformDataSet6.Designer.cs</LastGenOutput>[m
[31m -      <SubType>Designer</SubType>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet6.xss">[m
[31m -      <DependentUpon>loginformDataSet6.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet7.xsc">[m
[31m -      <DependentUpon>loginformDataSet7.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet7.xsd">[m
[31m -      <Generator>MSDataSetGenerator</Generator>[m
[31m -      <LastGenOutput>loginformDataSet7.Designer.cs</LastGenOutput>[m
[31m -      <SubType>Designer</SubType>[m
[31m -    </None>[m
[31m -    <None Include="loginformDataSet7.xss">[m
[31m -      <DependentUpon>loginformDataSet7.xsd</DependentUpon>[m
[31m -    </None>[m
[31m -    <None Include="Properties\Settings.settings">[m
[31m -      <Generator>SettingsSingleFileGenerator</Generator>[m
[31m -      <LastGenOutput>Settings.Designer.cs</LastGenOutput>[m
[31m -    </None>[m
[31m -    <Compile Include="Properties\Settings.Designer.cs">[m
[31m -      <AutoGen>True</AutoGen>[m
[31m -      <DependentUpon>Settings.settings</DependentUpon>[m
[31m -      <DesignTimeSharedInput>True</DesignTimeSharedInput>[m
[31m -    </Compile>[m
[31m -  </ItemGroup>[m
[31m -  <ItemGroup>[m
[31m -    <None Include="App.config" />[m
[31m -  </ItemGroup>[m
[31m -  <ItemGroup>[m
[31m -    <None Include="Resources\99425148_2402006923430298_415144967531397120_n.jpg" />[m
[31m -  </ItemGroup>[m
[31m -  <ItemGroup>[m
[31m -    <None Include="Resources\user %281%29.jpg" />[m
[31m -  </ItemGroup>[m
[31m -  <ItemGroup>[m
[31m -    <None Include="Resources\user %281%29 %281%29.png" />[m
[31m -  </ItemGroup>[m
[31m -  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />[m
[31m -  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. [m
[31m -       Other similar extension points exist, see Microsoft.Common.targets.[m
[31m -  <Target Name="BeforeBuild">[m
[31m -  </Target>[m
[31m -  <Target Name="AfterBuild">[m
[31m -  </Target>[m
[31m -  -->[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m +<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">[m
[32m +  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />[m
[32m +  <PropertyGroup>[m
[32m +    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>[m
[32m +    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>[m
[32m +    <ProjectGuid>{337388FF-7DDC-4339-A6A4-6A85072907D2}</ProjectGuid>[m
[32m +    <OutputType>WinExe</OutputType>[m
[32m +    <AppDesignerFolder>Properties</AppDesignerFolder>[m
[32m +    <RootNamespace>capstoneproject</RootNamespace>[m
[32m +    <AssemblyName>capstoneproject</AssemblyName>[m
[32m +    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>[m
[32m +    <FileAlignment>512</FileAlignment>[m
[32m +    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>[m
[32m +  </PropertyGroup>[m
[32m +  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">[m
[32m +    <PlatformTarget>AnyCPU</PlatformTarget>[m
[32m +    <DebugSymbols>true</DebugSymbols>[m
[32m +    <DebugType>full</DebugType>[m
[32m +    <Optimize>false</Optimize>[m
[32m +    <OutputPath>bin\Debug\</OutputPath>[m
[32m +    <DefineConstants>DEBUG;TRACE</DefineConstants>[m
[32m +    <ErrorReport>prompt</ErrorReport>[m
[32m +    <WarningLevel>4</WarningLevel>[m
[32m +  </PropertyGroup>[m
[32m +  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">[m
[32m +    <PlatformTarget>AnyCPU</PlatformTarget>[m
[32m +    <DebugType>pdbonly</DebugType>[m
[32m +    <Optimize>true</Optimize>[m
[32m +    <OutputPath>bin\Release\</OutputPath>[m
[32m +    <DefineConstants>TRACE</DefineConstants>[m
[32m +    <ErrorReport>prompt</ErrorReport>[m
[32m +    <WarningLevel>4</WarningLevel>[m
[32m +  </PropertyGroup>[m
[32m +  <ItemGroup>[m
[32m +    <Reference Include="System" />[m
[32m +    <Reference Include="System.Core" />[m
[32m +    <Reference Include="System.DirectoryServices" />[m
[32m +    <Reference Include="System.Xml.Linq" />[m
[32m +    <Reference Include="System.Data.DataSetExtensions" />[m
[32m +    <Reference Include="Microsoft.CSharp" />[m
[32m +    <Reference Include="System.Data" />[m
[32m +    <Reference Include="System.Deployment" />[m
[32m +    <Reference Include="System.Drawing" />[m
[32m +    <Reference Include="System.Net.Http" />[m
[32m +    <Reference Include="System.Windows.Forms" />[m
[32m +    <Reference Include="System.Xml" />[m
[32m +  </ItemGroup>[m
[32m +  <ItemGroup>[m
[32m +    <Compile Include="adduser.cs">[m
[32m +      <SubType>Form</SubType>[m
[32m +    </Compile>[m
[32m +    <Compile Include="adduser.Designer.cs">[m
[32m +      <DependentUpon>adduser.cs</DependentUpon>[m
[32m +    </Compile>[m
[32m +    <Compile Include="dashboard.cs">[m
[32m +      <SubType>Form</SubType>[m
[32m +    </Compile>[m
[32m +    <Compile Include="dashboard.Designer.cs">[m
[32m +      <DependentUpon>dashboard.cs</DependentUpon>[m
[32m +    </Compile>[m
[32m +    <Compile Include="Form1.cs">[m
[32m +      <SubType>Form</SubType>[m
[32m +    </Compile>[m
[32m +    <Compile Include="Form1.Designer.cs">[m
[32m +      <DependentUpon>Form1.cs</DependentUpon>[m
[32m +    </Compile>[m
[32m +    <Compile Include="loginformDataSet.Designer.cs">[m
[32m +      <AutoGen>True</AutoGen>[m
[32m +      <DesignTime>True</DesignTime>[m
[32m +      <DependentUpon>loginformDataSet.xsd</DependentUpon>[m
[32m +    </Compile>[m
[32m +    <Compile Include="loginformDataSet1.Designer.cs">[m
[32m +      <AutoGen>True</AutoGen>[m
[32m +      <DesignTime>True</DesignTime>[m
[32m +      <DependentUpon>loginformDataSet1.xsd</DependentUpon>[m
[32m +    </Compile>[m
[32m +    <Compile Include="loginformDataSet2.Designer.cs">[m
[32m +      <AutoGen>True</AutoGen>[m
[32m +      <DesignTime>True</DesignTime>[m
[32m +      <DependentUpon>loginformDataSet2.xsd</DependentUpon>[m
[32m +    </Compile>[m
[32m +    <Compile Include="loginformDataSet3.Designer.cs">[m
[32m +      <AutoGen>True</AutoGen>[m
[32m +      <DesignTime>True</DesignTime>[m
[32m +      <DependentUpon>loginformDataSet3.xsd</DependentUpon>[m
[32m +    </Compile>[m
[32m +    <Compile Include="loginformDataSet4.Designer.cs">[m
[32m +      <AutoGen>True</AutoGen>[m
[32m +      <DesignTime>True</DesignTime>[m
[32m +      <DependentUpon>loginformDataSet4.xsd</DependentUpon>[m
[32m +    </Compile>[m
[32m +    <Compile Include="loginformDataSet5.Designer.cs">[m
[32m +      <AutoGen>True</AutoGen>[m
[32m +      <DesignTime>True</DesignTime>[m
[32m +      <DependentUpon>loginformDataSet5.xsd</DependentUpon>[m
[32m +    </Compile>[m
[32m +    <Compile Include="loginformDataSet6.Designer.cs">[m
[32m +      <AutoGen>True</AutoGen>[m
[32m +      <DesignTime>True</DesignTime>[m
[32m +      <DependentUpon>loginformDataSet6.xsd</DependentUpon>[m
[32m +    </Compile>[m
[32m +    <Compile Include="loginformDataSet7.Designer.cs">[m
[32m +      <AutoGen>True</AutoGen>[m
[32m +      <DesignTime>True</DesignTime>[m
[32m +      <DependentUpon>loginformDataSet7.xsd</DependentUpon>[m
[32m +    </Compile>[m
[32m +    <Compile Include="Program.cs" />[m
[32m +    <Compile Include="Properties\AssemblyInfo.cs" />[m
[32m +    <Compile Include="Users.cs">[m
[32m +      <SubType>Form</SubType>[m
[32m +    </Compile>[m
[32m +    <Compile Include="Users.Designer.cs">[m
[32m +      <DependentUpon>Users.cs</DependentUpon>[m
[32m +    </Compile>[m
[32m +    <EmbeddedResource Include="adduser.resx">[m
[32m +      <DependentUpon>adduser.cs</DependentUpon>[m
[32m +    </EmbeddedResource>[m
[32m +    <EmbeddedResource Include="dashboard.resx">[m
[32m +      <DependentUpon>dashboard.cs</DependentUpon>[m
[32m +    </EmbeddedResource>[m
[32m +    <EmbeddedResource Include="Form1.resx">[m
[32m +      <DependentUpon>Form1.cs</DependentUpon>[m
[32m +    </EmbeddedResource>[m
[32m +    <EmbeddedResource Include="Properties\Resources.resx">[m
[32m +      <Generator>ResXFileCodeGenerator</Generator>[m
[32m +      <LastGenOutput>Resources.Designer.cs</LastGenOutput>[m
[32m +      <SubType>Designer</SubType>[m
[32m +    </EmbeddedResource>[m
[32m +    <Compile Include="Properties\Resources.Designer.cs">[m
[32m +      <AutoGen>True</AutoGen>[m
[32m +      <DependentUpon>Resources.resx</DependentUpon>[m
[32m +      <DesignTime>True</DesignTime>[m
[32m +    </Compile>[m
[32m +    <EmbeddedResource Include="Users.resx">[m
[32m +      <DependentUpon>Users.cs</DependentUpon>[m
[32m +    </EmbeddedResource>[m
[32m +    <None Include="loginformDataSet.xsc">[m
[32m +      <DependentUpon>loginformDataSet.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet.xsd">[m
[32m +      <Generator>MSDataSetGenerator</Generator>[m
[32m +      <LastGenOutput>loginformDataSet.Designer.cs</LastGenOutput>[m
[32m +      <SubType>Designer</SubType>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet.xss">[m
[32m +      <DependentUpon>loginformDataSet.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet1.xsc">[m
[32m +      <DependentUpon>loginformDataSet1.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet1.xsd">[m
[32m +      <Generator>MSDataSetGenerator</Generator>[m
[32m +      <LastGenOutput>loginformDataSet1.Designer.cs</LastGenOutput>[m
[32m +      <SubType>Designer</SubType>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet1.xss">[m
[32m +      <DependentUpon>loginformDataSet1.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet2.xsc">[m
[32m +      <DependentUpon>loginformDataSet2.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet2.xsd">[m
[32m +      <Generator>MSDataSetGenerator</Generator>[m
[32m +      <LastGenOutput>loginformDataSet2.Designer.cs</LastGenOutput>[m
[32m +      <SubType>Designer</SubType>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet2.xss">[m
[32m +      <DependentUpon>loginformDataSet2.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet3.xsc">[m
[32m +      <DependentUpon>loginformDataSet3.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet3.xsd">[m
[32m +      <Generator>MSDataSetGenerator</Generator>[m
[32m +      <LastGenOutput>loginformDataSet3.Designer.cs</LastGenOutput>[m
[32m +      <SubType>Designer</SubType>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet3.xss">[m
[32m +      <DependentUpon>loginformDataSet3.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet4.xsc">[m
[32m +      <DependentUpon>loginformDataSet4.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet4.xsd">[m
[32m +      <Generator>MSDataSetGenerator</Generator>[m
[32m +      <LastGenOutput>loginformDataSet4.Designer.cs</LastGenOutput>[m
[32m +      <SubType>Designer</SubType>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet4.xss">[m
[32m +      <DependentUpon>loginformDataSet4.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet5.xsc">[m
[32m +      <DependentUpon>loginformDataSet5.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet5.xsd">[m
[32m +      <Generator>MSDataSetGenerator</Generator>[m
[32m +      <LastGenOutput>loginformDataSet5.Designer.cs</LastGenOutput>[m
[32m +      <SubType>Designer</SubType>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet5.xss">[m
[32m +      <DependentUpon>loginformDataSet5.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet6.xsc">[m
[32m +      <DependentUpon>loginformDataSet6.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet6.xsd">[m
[32m +      <Generator>MSDataSetGenerator</Generator>[m
[32m +      <LastGenOutput>loginformDataSet6.Designer.cs</LastGenOutput>[m
[32m +      <SubType>Designer</SubType>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet6.xss">[m
[32m +      <DependentUpon>loginformDataSet6.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet7.xsc">[m
[32m +      <DependentUpon>loginformDataSet7.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet7.xsd">[m
[32m +      <Generator>MSDataSetGenerator</Generator>[m
[32m +      <LastGenOutput>loginformDataSet7.Designer.cs</LastGenOutput>[m
[32m +      <SubType>Designer</SubType>[m
[32m +    </None>[m
[32m +    <None Include="loginformDataSet7.xss">[m
[32m +      <DependentUpon>loginformDataSet7.xsd</DependentUpon>[m
[32m +    </None>[m
[32m +    <None Include="Properties\Settings.settings">[m
[32m +      <Generator>SettingsSingleFileGenerator</Generator>[m
[32m +      <LastGenOutput>Settings.Designer.cs</LastGenOutput>[m
[32m +    </None>[m
[32m +    <Compile Include="Properties\Settings.Designer.cs">[m
[32m +      <AutoGen>True</AutoGen>[m
[32m +      <DependentUpon>Settings.settings</DependentUpon>[m
[32m +      <DesignTimeSharedInput>True</DesignTimeSharedInput>[m
[32m +    </Compile>[m
[32m +  </ItemGroup>[m
[32m +  <ItemGroup>[m
[32m +    <None Include="App.config" />[m
[32m +  </ItemGroup>[m
[32m +  <ItemGroup>[m
[32m +    <None Include="Resources\99425148_2402006923430298_415144967531397120_n.jpg" />[m
[32m +  </ItemGroup>[m
[32m +  <ItemGroup>[m
[32m +    <None Include="Resources\user %281%29.jpg" />[m
[32m +  </ItemGroup>[m
[32m +  <ItemGroup>[m
[32m +    <None Include="Resources\user %281%29 %281%29.png" />[m
[32m +  </ItemGroup>[m
[32m +  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />[m
[32m +  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. [m
[32m +       Other similar extension points exist, see Microsoft.Common.targets.[m
[32m +  <Target Name="BeforeBuild">[m
[32m +  </Target>[m
[32m +  <Target Name="AfterBuild">[m
[32m +  </Target>[m
[32m +  -->[m
[32m++=======[m
[32m++ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m++<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">[m
[32m++  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />[m
[32m++  <PropertyGroup>[m
[32m++    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>[m
[32m++    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>[m
[32m++    <ProjectGuid>{337388FF-7DDC-4339-A6A4-6A85072907D2}</ProjectGuid>[m
[32m++    <OutputType>WinExe</OutputType>[m
[32m++    <AppDesignerFolder>Properties</AppDesignerFolder>[m
[32m++    <RootNamespace>capstoneproject</RootNamespace>[m
[32m++    <AssemblyName>capstoneproject</AssemblyName>[m
[32m++    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>[m
[32m++    <FileAlignment>512</FileAlignment>[m
[32m++    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>[m
[32m++  </PropertyGroup>[m
[32m++  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">[m
[32m++    <PlatformTarget>AnyCPU</PlatformTarget>[m
[32m++    <DebugSymbols>true</DebugSymbols>[m
[32m++    <DebugType>full</DebugType>[m
[32m++    <Optimize>false</Optimize>[m
[32m++    <OutputPath>bin\Debug\</OutputPath>[m
[32m++    <DefineConstants>DEBUG;TRACE</DefineConstants>[m
[32m++    <ErrorReport>prompt</ErrorReport>[m
[32m++    <WarningLevel>4</WarningLevel>[m
[32m++  </PropertyGroup>[m
[32m++  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">[m
[32m++    <PlatformTarget>AnyCPU</PlatformTarget>[m
[32m++    <DebugType>pdbonly</DebugType>[m
[32m++    <Optimize>true</Optimize>[m
[32m++    <OutputPath>bin\Release\</OutputPath>[m
[32m++    <DefineConstants>TRACE</DefineConstants>[m
[32m++    <ErrorReport>prompt</ErrorReport>[m
[32m++    <WarningLevel>4</WarningLevel>[m
[32m++  </PropertyGroup>[m
[32m++  <ItemGroup>[m
[32m++    <Reference Include="System" />[m
[32m++    <Reference Include="System.Core" />[m
[32m++    <Reference Include="System.Xml.Linq" />[m
[32m++    <Reference Include="System.Data.DataSetExtensions" />[m
[32m++    <Reference Include="Microsoft.CSharp" />[m
[32m++    <Reference Include="System.Data" />[m
[32m++    <Reference Include="System.Deployment" />[m
[32m++    <Reference Include="System.Drawing" />[m
[32m++    <Reference Include="System.Net.Http" />[m
[32m++    <Reference Include="System.Windows.Forms" />[m
[32m++    <Reference Include="System.Xml" />[m
[32m++  </ItemGroup>[m
[32m++  <ItemGroup>[m
[32m++    <Compile Include="adduser.cs">[m
[32m++      <SubType>Form</SubType>[m
[32m++    </Compile>[m
[32m++    <Compile Include="adduser.Designer.cs">[m
[32m++      <DependentUpon>adduser.cs</DependentUpon>[m
[32m++    </Compile>[m
[32m++    <Compile Include="dashboard.cs">[m
[32m++      <SubType>Form</SubType>[m
[32m++    </Compile>[m
[32m++    <Compile Include="dashboard.Designer.cs">[m
[32m++      <DependentUpon>dashboard.cs</DependentUpon>[m
[32m++    </Compile>[m
[32m++    <Compile Include="Form1.cs">[m
[32m++      <SubType>Form</SubType>[m
[32m++    </Compile>[m
[32m++    <Compile Include="Form1.Designer.cs">[m
[32m++      <DependentUpon>Form1.cs</DependentUpon>[m
[32m++    </Compile>[m
[32m++    <Compile Include="loginformDataSet.Designer.cs">[m
[32m++      <AutoGen>True</AutoGen>[m
[32m++      <DesignTime>True</DesignTime>[m
[32m++      <DependentUpon>loginformDataSet.xsd</DependentUpon>[m
[32m++    </Compile>[m
[32m++    <Compile Include="loginformDataSet1.Designer.cs">[m
[32m++      <AutoGen>True</AutoGen>[m
[32m++      <DesignTime>True</DesignTime>[m
[32m++      <DependentUpon>loginformDataSet1.xsd</DependentUpon>[m
[32m++    </Compile>[m
[32m++    <Compile Include="loginformDataSet2.Designer.cs">[m
[32m++      <AutoGen>True</AutoGen>[m
[32m++      <DesignTime>True</DesignTime>[m
[32m++      <DependentUpon>loginformDataSet2.xsd</DependentUpon>[m
[32m++    </Compile>[m
[32m++    <Compile Include="loginformDataSet3.Designer.cs">[m
[32m++      <AutoGen>True</AutoGen>[m
[32m++      <DesignTime>True</DesignTime>[m
[32m++      <DependentUpon>loginformDataSet3.xsd</DependentUpon>[m
[32m++    </Compile>[m
[32m++    <Compile Include="loginformDataSet4.Designer.cs">[m
[32m++      <AutoGen>True</AutoGen>[m
[32m++      <DesignTime>True</DesignTime>[m
[32m++      <DependentUpon>loginformDataSet4.xsd</DependentUpon>[m
[32m++    </Compile>[m
[32m++    <Compile Include="loginformDataSet5.Designer.cs">[m
[32m++      <AutoGen>True</AutoGen>[m
[32m++      <DesignTime>True</DesignTime>[m
[32m++      <DependentUpon>loginformDataSet5.xsd</DependentUpon>[m
[32m++    </Compile>[m
[32m++    <Compile Include="loginformDataSet6.Designer.cs">[m
[32m++      <AutoGen>True</AutoGen>[m
[32m++      <DesignTime>True</DesignTime>[m
[32m++      <DependentUpon>loginformDataSet6.xsd</DependentUpon>[m
[32m++    </Compile>[m
[32m++    <Compile Include="loginformDataSet7.Designer.cs">[m
[32m++      <AutoGen>True</AutoGen>[m
[32m++      <DesignTime>True</DesignTime>[m
[32m++      <DependentUpon>loginformDataSet7.xsd</DependentUpon>[m
[32m++    </Compile>[m
[32m++    <Compile Include="Program.cs" />[m
[32m++    <Compile Include="Properties\AssemblyInfo.cs" />[m
[32m++    <Compile Include="Users.cs">[m
[32m++      <SubType>Form</SubType>[m
[32m++    </Compile>[m
[32m++    <Compile Include="Users.Designer.cs">[m
[32m++      <DependentUpon>Users.cs</DependentUpon>[m
[32m++    </Compile>[m
[32m++    <EmbeddedResource Include="adduser.resx">[m
[32m++      <DependentUpon>adduser.cs</DependentUpon>[m
[32m++    </EmbeddedResource>[m
[32m++    <EmbeddedResource Include="dashboard.resx">[m
[32m++      <DependentUpon>dashboard.cs</DependentUpon>[m
[32m++    </EmbeddedResource>[m
[32m++    <EmbeddedResource Include="Form1.resx">[m
[32m++      <DependentUpon>Form1.cs</DependentUpon>[m
[32m++    </EmbeddedResource>[m
[32m++    <EmbeddedResource Include="Properties\Resources.resx">[m
[32m++      <Generator>ResXFileCodeGenerator</Generator>[m
[32m++      <LastGenOutput>Resources.Designer.cs</LastGenOutput>[m
[32m++      <SubType>Designer</SubType>[m
[32m++    </EmbeddedResource>[m
[32m++    <Compile Include="Properties\Resources.Designer.cs">[m
[32m++      <AutoGen>True</AutoGen>[m
[32m++      <DependentUpon>Resources.resx</DependentUpon>[m
[32m++      <DesignTime>True</DesignTime>[m
[32m++    </Compile>[m
[32m++    <EmbeddedResource Include="Users.resx">[m
[32m++      <DependentUpon>Users.cs</DependentUpon>[m
[32m++    </EmbeddedResource>[m
[32m++    <None Include="loginformDataSet.xsc">[m
[32m++      <DependentUpon>loginformDataSet.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet.xsd">[m
[32m++      <Generator>MSDataSetGenerator</Generator>[m
[32m++      <LastGenOutput>loginformDataSet.Designer.cs</LastGenOutput>[m
[32m++      <SubType>Designer</SubType>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet.xss">[m
[32m++      <DependentUpon>loginformDataSet.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet1.xsc">[m
[32m++      <DependentUpon>loginformDataSet1.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet1.xsd">[m
[32m++      <Generator>MSDataSetGenerator</Generator>[m
[32m++      <LastGenOutput>loginformDataSet1.Designer.cs</LastGenOutput>[m
[32m++      <SubType>Designer</SubType>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet1.xss">[m
[32m++      <DependentUpon>loginformDataSet1.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet2.xsc">[m
[32m++      <DependentUpon>loginformDataSet2.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet2.xsd">[m
[32m++      <Generator>MSDataSetGenerator</Generator>[m
[32m++      <LastGenOutput>loginformDataSet2.Designer.cs</LastGenOutput>[m
[32m++      <SubType>Designer</SubType>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet2.xss">[m
[32m++      <DependentUpon>loginformDataSet2.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet3.xsc">[m
[32m++      <DependentUpon>loginformDataSet3.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet3.xsd">[m
[32m++      <Generator>MSDataSetGenerator</Generator>[m
[32m++      <LastGenOutput>loginformDataSet3.Designer.cs</LastGenOutput>[m
[32m++      <SubType>Designer</SubType>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet3.xss">[m
[32m++      <DependentUpon>loginformDataSet3.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet4.xsc">[m
[32m++      <DependentUpon>loginformDataSet4.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet4.xsd">[m
[32m++      <Generator>MSDataSetGenerator</Generator>[m
[32m++      <LastGenOutput>loginformDataSet4.Designer.cs</LastGenOutput>[m
[32m++      <SubType>Designer</SubType>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet4.xss">[m
[32m++      <DependentUpon>loginformDataSet4.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet5.xsc">[m
[32m++      <DependentUpon>loginformDataSet5.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet5.xsd">[m
[32m++      <Generator>MSDataSetGenerator</Generator>[m
[32m++      <LastGenOutput>loginformDataSet5.Designer.cs</LastGenOutput>[m
[32m++      <SubType>Designer</SubType>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet5.xss">[m
[32m++      <DependentUpon>loginformDataSet5.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet6.xsc">[m
[32m++      <DependentUpon>loginformDataSet6.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet6.xsd">[m
[32m++      <Generator>MSDataSetGenerator</Generator>[m
[32m++      <LastGenOutput>loginformDataSet6.Designer.cs</LastGenOutput>[m
[32m++      <SubType>Designer</SubType>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet6.xss">[m
[32m++      <DependentUpon>loginformDataSet6.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet7.xsc">[mwarning: in the working copy of 'capstoneproject/dashboard.Designer.cs', LF will be replaced by CRLF the next time Git touches it

[32m++      <DependentUpon>loginformDataSet7.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet7.xsd">[m
[32m++      <Generator>MSDataSetGenerator</Generator>[m
[32m++      <LastGenOutput>loginformDataSet7.Designer.cs</LastGenOutput>[m
[32m++      <SubType>Designer</SubType>[m
[32m++    </None>[m
[32m++    <None Include="loginformDataSet7.xss">[m
[32m++      <DependentUpon>loginformDataSet7.xsd</DependentUpon>[m
[32m++    </None>[m
[32m++    <None Include="Properties\Settings.settings">[m
[32m++      <Generator>SettingsSingleFileGenerator</Generator>[m
[32m++      <LastGenOutput>Settings.Designer.cs</LastGenOutput>[m
[32m++    </None>[m
[32m++    <Compile Include="Properties\Settings.Designer.cs">[m
[32m++      <AutoGen>True</AutoGen>[m
[32m++      <DependentUpon>Settings.settings</DependentUpon>[m
[32m++      <DesignTimeSharedInput>True</DesignTimeSharedInput>[m
[32m++    </Compile>[m
[32m++  </ItemGroup>[m
[32m++  <ItemGroup>[m
[32m++    <None Include="App.config" />[m
[32m++  </ItemGroup>[m
[32m++  <ItemGroup>[m
[32m++    <None Include="Resources\99425148_2402006923430298_415144967531397120_n.jpg" />[m
[32m++  </ItemGroup>[m
[32m++  <ItemGroup>[m
[32m++    <None Include="Resources\user %281%29.jpg" />[m
[32m++  </ItemGroup>[m
[32m++  <ItemGroup>[m
[32m++    <None Include="Resources\user %281%29 %281%29.png" />[m
[32m++  </ItemGroup>[m
[32m++  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />[m
[32m++  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. [m
[32m++       Other similar extension points exist, see Microsoft.Common.targets.[m
[32m++  <Target Name="BeforeBuild">[m
[32m++  </Target>[m
[32m++  <Target Name="AfterBuild">[m
[32m++  </Target>[m
[32m++  -->[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  </Project>[m
[1mdiff --cc capstoneproject/dashboard.Designer.cs[m
[1mindex fa1742c,bfb97b2..0000000[m
[1m--- a/capstoneproject/dashboard.Designer.cs[m
[1m+++ b/capstoneproject/dashboard.Designer.cs[m
[36m@@@ -1,610 -1,311 +1,923 @@@[m
[31m -ï»¿namespace capstoneproject[m
[31m -{[m
[31m -    partial class dashboard[m
[31m -    {[m
[31m -        /// <summary>[m
[31m -        /// Required designer variable.[m
[31m -        /// </summary>[m
[31m -        private System.ComponentModel.IContainer components = null;[m
[31m -[m
[31m -        /// <summary>[m
[31m -        /// Clean up any resources being used.[m
[31m -        /// </summary>[m
[31m -        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>[m
[31m -        protected override void Dispose(bool disposing)[m
[31m -        {[m
[31m -            if (disposing && (components != null))[m
[31m -            {[m
[31m -                components.Dispose();[m
[31m -            }[m
[31m -            base.Dispose(disposing);[m
[31m -        }[m
[31m -[m
[31m -        #region Windows Form Designer generated code[m
[31m -[m
[31m -        /// <summary>[m
[31m -        /// Required method for Designer support - do not modify[m
[31m -        /// the contents of this method with the code editor.[m
[31m -        /// </summary>[m
[31m -        private void InitializeComponent()[m
[31m -        {[m
[31m -            this.components = new System.ComponentModel.Container();[m
[31m -            this.usersbtn = new System.Windows.Forms.Button();[m
[31m -            this.logoutbtn = new System.Windows.Forms.Button();[m
[31m -            this.pictureBox1 = new System.Windows.Forms.PictureBox();[m
[31m -            this.queuebtn = new System.Windows.Forms.Button();[m
[31m -            this.purposebtn = new System.Windows.Forms.Button();[m
[31m -            this.reportbtn = new System.Windows.Forms.Button();[m
[31m -            this.listBox1 = new System.Windows.Forms.ListBox();[m
[31m -            this.dataGridView1 = new System.Windows.Forms.DataGridView();[m
[31m -            this.nameDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[31m -            this.departmentDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[31m -            this.purposeDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[31m -            this.queueCodeDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[31m -            this.QueueDate = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[31m -            this.studataBindingSource = new System.Windows.Forms.BindingSource(this.components);[m
[31m -            this.loginformDataSet7 = new capstoneproject.loginformDataSet7();[m
[31m -            this.lbltime = new System.Windows.Forms.Label();[m
[31m -            this.lbldate = new System.Windows.Forms.Label();[m
[31m -            this.lblusername = new System.Windows.Forms.Label();[m
[31m -            this.lblshow = new System.Windows.Forms.Label();[m
[31m -            this.button1 = new System.Windows.Forms.Button();[m
[31m -            this.stu_dataTableAdapter = new capstoneproject.loginformDataSet7TableAdapters.stu_dataTableAdapter();[m
[31m -            this.timer1 = new System.Windows.Forms.Timer(this.components);[m
[31m -            ((System.ComponentModel.ISupportInitialize)(this.pictureBox1)).BeginInit();[m
[31m -            ((System.ComponentModel.ISupportInitialize)(this.dataGridView1)).BeginInit();[m
[31m -            ((System.ComponentModel.ISupportInitialize)(this.studataBindingSource)).BeginInit();[m
[31m -            ((System.ComponentModel.ISupportInitialize)(this.loginformDataSet7)).BeginInit();[m
[31m -            this.SuspendLayout();[m
[31m -            // [m
[31m -            // usersbtn[m
[31m -            // [m
[31m -            this.usersbtn.Location = new System.Drawing.Point(276, 101);[m
[31m -            this.usersbtn.Name = "usersbtn";[m
[31m -            this.usersbtn.Size = new System.Drawing.Size(82, 27);[m
[31m -            this.usersbtn.TabIndex = 0;[m
[31m -            this.usersbtn.Text = "USERS";[m
[31m -            this.usersbtn.UseVisualStyleBackColor = true;[m
[31m -            this.usersbtn.Click += new System.EventHandler(this.addbtn_Click_1);[m
[31m -            // [m
[31m -            // logoutbtn[m
[31m -            // [m
[31m -            this.logoutbtn.Location = new System.Drawing.Point(364, 101);[m
[31m -            this.logoutbtn.Name = "logoutbtn";[m
[31m -            this.logoutbtn.Size = new System.Drawing.Size(82, 27);[m
[31m -            this.logoutbtn.TabIndex = 1;[m
[31m -            this.logoutbtn.Text = "LOG OUT";[m
[31m -            this.logoutbtn.UseVisualStyleBackColor = true;[m
[31m -            this.logoutbtn.Click += new System.EventHandler(this.button1_Click);[m
[31m -            // [m
[31m -            // pictureBox1[m
[31m -            // [m
[31m -            this.pictureBox1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[31m -            | System.Windows.Forms.AnchorStyles.Left) [m
[31m -            | System.Windows.Forms.AnchorStyles.Right)));[m
[31m -            this.pictureBox1.Location = new System.Drawing.Point(12, 12);[m
[31m -            this.pictureBox1.Name = "pictureBox1";[m
[31m -            this.pictureBox1.Size = new System.Drawing.Size(68, 50);[m
[31m -            this.pictureBox1.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;[m
[31m -            this.pictureBox1.TabIndex = 2;[m
[31m -            this.pictureBox1.TabStop = false;[m
[31m -            // [m
[31m -            // queuebtn[m
[31m -            // [m
[31m -            this.queuebtn.Location = new System.Drawing.Point(12, 101);[m
[31m -            this.queuebtn.Name = "queuebtn";[m
[31m -            this.queuebtn.Size = new System.Drawing.Size(82, 27);[m
[31m -            this.queuebtn.TabIndex = 4;[m
[31m -            this.queuebtn.Text = "QUEUEING";[m
[31m -            this.queuebtn.UseVisualStyleBackColor = true;[m
[31m -            this.queuebtn.Click += new System.EventHandler(this.button3_Click);[m
[31m -            // [m
[31m -            // purposebtn[m
[31m -            // [m
[31m -            this.purposebtn.Location = new System.Drawing.Point(100, 101);[m
[31m -            this.purposebtn.Name = "purposebtn";[m
[31m -            this.purposebtn.Size = new System.Drawing.Size(82, 27);[m
[31m -            this.purposebtn.TabIndex = 5;[m
[31m -            this.purposebtn.Text = "PURPOSE";[m
[31m -            this.purposebtn.UseVisualStyleBackColor = true;[m
[31m -            this.purposebtn.Click += new System.EventHandler(this.button4_Click);[m
[31m -            // [m
[31m -            // reportbtn[m
[31m -            // [m
[31m -            this.reportbtn.Location = new System.Drawing.Point(188, 101);[m
[31m -            this.reportbtn.Name = "reportbtn";[m
[31m -            this.reportbtn.Size = new System.Drawing.Size(82, 27);[m
[31m -            this.reportbtn.TabIndex = 6;[m
[31m -            this.reportbtn.Text = "REPORT";[m
[31m -            this.reportbtn.UseVisualStyleBackColor = true;[m
[31m -            this.reportbtn.Click += new System.EventHandler(this.button5_Click);[m
[31m -            // [m
[31m -            // listBox1[m
[31m -            // [m
[31m -            this.listBox1.FormattingEnabled = true;[m
[31m -            this.listBox1.Location = new System.Drawing.Point(587, 280);[m
[31m -            this.listBox1.Name = "listBox1";[m
[31m -            this.listBox1.Size = new System.Drawing.Size(0, 4);[m
[31m -            this.listBox1.TabIndex = 7;[m
[31m -            // [m
[31m -            // dataGridView1[m
[31m -            // [m
[31m -            this.dataGridView1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[31m -            | System.Windows.Forms.AnchorStyles.Left) [m
[31m -            | System.Windows.Forms.AnchorStyles.Right)));[m
[31m -            this.dataGridView1.AutoGenerateColumns = false;[m
[31m -            this.dataGridView1.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;[m
[31m -            this.dataGridView1.Columns.AddRange(new System.Windows.Forms.DataGridViewColumn[] {[m
[31m -            this.nameDataGridViewTextBoxColumn,[m
[31m -            this.departmentDataGridViewTextBoxColumn,[m
[31m -            this.purposeDataGridViewTextBoxColumn,[m
[31m -            this.queueCodeDataGridViewTextBoxColumn,[m
[31m -            this.QueueDate});[m
[31m -            this.dataGridView1.DataSource = this.studataBindingSource;[m
[31m -            this.dataGridView1.Location = new System.Drawing.Point(12, 134);[m
[31m -            this.dataGridView1.Name = "dataGridView1";[m
[31m -            this.dataGridView1.Size = new System.Drawing.Size(541, 423);[m
[31m -            this.dataGridView1.TabIndex = 8;[m
[31m -            this.dataGridView1.CellContentClick += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridView1_CellContentClick);[m
[31m -            // [m
[31m -            // nameDataGridViewTextBoxColumn[m
[31m -            // [m
[31m -            this.nameDataGridViewTextBoxColumn.DataPropertyName = "Name";[m
[31m -            this.nameDataGridViewTextBoxColumn.HeaderText = "Name";[m
[31m -            this.nameDataGridViewTextBoxColumn.Name = "nameDataGridViewTextBoxColumn";[m
[31m -            // [m
[31m -            // departmentDataGridViewTextBoxColumn[m
[31m -            // [m
[31m -            this.departmentDataGridViewTextBoxColumn.DataPropertyName = "Department";[m
[31m -            this.departmentDataGridViewTextBoxColumn.HeaderText = "Department";[m
[31m -            this.departmentDataGridViewTextBoxColumn.Name = "departmentDataGridViewTextBoxColumn";[m
[31m -            // [m
[31m -            // purposeDataGridViewTextBoxColumn[m
[31m -            // [m
[31m -            this.purposeDataGridViewTextBoxColumn.DataPropertyName = "Purpose";[m
[31m -            this.purposeDataGridViewTextBoxColumn.HeaderText = "Purpose";[m
[31m -            this.purposeDataGridViewTextBoxColumn.Name = "purposeDataGridViewTextBoxColumn";[m
[31m -            // [m
[31m -            // queueCodeDataGridViewTextBoxColumn[m
[31m -            // [m
[31m -            this.queueCodeDataGridViewTextBoxColumn.DataPropertyName = "QueueCode";[m
[31m -            this.queueCodeDataGridViewTextBoxColumn.HeaderText = "QueueCode";[m
[31m -            this.queueCodeDataGridViewTextBoxColumn.Name = "queueCodeDataGridViewTextBoxColumn";[m
[31m -            // [m
[31m -            // QueueDate[m
[31m -            // [m
[31m -            this.QueueDate.DataPropertyName = "QueueDate";[m
[31m -            this.QueueDate.HeaderText = "QueueDate";[m
[31m -            this.QueueDate.Name = "QueueDate";[m
[31m -            // [m
[31m -            // studataBindingSource[m
[31m -            // [m
[31m -            this.studataBindingSource.DataMember = "stu_data";[m
[31m -            this.studataBindingSource.DataSource = this.loginformDataSet7;[m
[31m -            // [m
[31m -            // loginformDataSet7[m
[31m -            // [m
[31m -            this.loginformDataSet7.DataSetName = "loginformDataSet7";[m
[31m -            this.loginformDataSet7.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -            // [m
[31m -            // lbltime[m
[31m -            // [m
[31m -            this.lbltime.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[31m -            | System.Windows.Forms.AnchorStyles.Left) [m
[31m -            | System.Windows.Forms.AnchorStyles.Right)));[m
[31m -            this.lbltime.Font = new System.Drawing.Font("Arial", 15.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));[m
[31m -            this.lbltime.Location = new System.Drawing.Point(736, 9);[m
[31m -            this.lbltime.Name = "lbltime";[m
[31m -            this.lbltime.Size = new System.Drawing.Size(178, 40);[m
[31m -            this.lbltime.TabIndex = 10;[m
[31m -            this.lbltime.Text = "time";[m
[31m -            this.lbltime.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;[m
[31m -            // [m
[31m -            // lbldate[m
[31m -            // [m
[31m -            this.lbldate.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[31m -            | System.Windows.Forms.AnchorStyles.Left) [m
[31m -            | System.Windows.Forms.AnchorStyles.Right)));[m
[31m -            this.lbldate.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));[m
[31m -            this.lbldate.Location = new System.Drawing.Point(683, 49);[m
[31m -            this.lbldate.Name = "lbldate";[m
[31m -            this.lbldate.Size = new System.Drawing.Size(231, 29);[m
[31m -            this.lbldate.TabIndex = 11;[m
[31m -            this.lbldate.Text = "date";[m
[31m -            this.lbldate.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;[m
[31m -            this.lbldate.Click += new System.EventHandler(this.lbldate_Click);[m
[31m -            // [m
[31m -            // lblusername[m
[31m -            // [m
[31m -            this.lblusername.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[31m -            | System.Windows.Forms.AnchorStyles.Left) [m
[31m -            | System.Windows.Forms.AnchorStyles.Right)));[m
[31m -            this.lblusername.Location = new System.Drawing.Point(109, 25);[m
[31m -            this.lblusername.Name = "lblusername";[m
[31m -            this.lblusername.Size = new System.Drawing.Size(140, 13);[m
[31m -            this.lblusername.TabIndex = 12;[m
[31m -            this.lblusername.Text = "username";[m
[31m -            // [m
[31m -            // lblshow[m
[31m -            // [m
[31m -            this.lblshow.Location = new System.Drawing.Point(12, 75);[m
[31m -            this.lblshow.Name = "lblshow";[m
[31m -            this.lblshow.Size = new System.Drawing.Size(100, 23);[m
[31m -            this.lblshow.TabIndex = 13;[m
[31m -            this.lblshow.Text = "show";[m
[31m -            this.lblshow.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;[m
[31m -            // [m
[31m -            // button1[m
[31m -            // [m
[31m -            this.button1.Location = new System.Drawing.Point(478, 103);[m
[31m -            this.button1.Name = "button1";[m
[31m -            this.button1.Size = new System.Drawing.Size(75, 23);[m
[31m -            this.button1.TabIndex = 14;[m
[31m -            this.button1.Text = "REFRESH";[m
[31m -            this.button1.UseVisualStyleBackColor = true;[m
[31m -            this.button1.Click += new System.EventHandler(this.button1_Click_1);[m
[31m -            // [m
[31m -            // stu_dataTableAdapter[m
[31m -            // [m
[31m -            this.stu_dataTableAdapter.ClearBeforeFill = true;[m
[31m -            // [m
[31m -            // timer1[m
[31m -            // [m
[31m -            this.timer1.Tick += new System.EventHandler(this.timer1_Tick);[m
[31m -            // [m
[31m -            // dashboard[m
[31m -            // [m
[31m -            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);[m
[31m -            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;[m
[31m -            this.BackgroundImage = global::capstoneproject.Properties.Resources._99425148_2402006923430298_415144967531397120_n;[m
[31m -            this.ClientSize = new System.Drawing.Size(956, 572);[m
[31m -            this.Controls.Add(this.button1);[m
[31m -            this.Controls.Add(this.lblshow);[m
[31m -            this.Controls.Add(this.lblusername);[m
[31m -            this.Controls.Add(this.lbldate);[m
[31m -            this.Controls.Add(this.lbltime);[m
[31m -            this.Controls.Add(this.dataGridView1);[m
[31m -            this.Controls.Add(this.listBox1);[m
[31m -            this.Controls.Add(this.reportbtn);[m
[31m -            this.Controls.Add(this.purposebtn);[m
[31m -            this.Controls.Add(this.queuebtn);[m
[31m -            this.Controls.Add(this.pictureBox1);[m
[31m -            this.Controls.Add(this.logoutbtn);[m
[31m -            this.Controls.Add(this.usersbtn);[m
[31m -            this.Name = "dashboard";[m
[31m -            this.Text = "dashboard";[m
[31m -            this.Load += new System.EventHandler(this.dashboard_Load_1);[m
[31m -            this.Shown += new System.EventHandler(this.dashboard_Load);[m
[31m -            ((System.ComponentModel.ISupportInitialize)(this.pictureBox1)).EndInit();[m
[31m -            ((System.ComponentModel.ISupportInitialize)(this.dataGridView1)).EndInit();[m
[31m -            ((System.ComponentModel.ISupportInitialize)(this.studataBindingSource)).EndInit();[m
[31m -            ((System.ComponentModel.ISupportInitialize)(this.loginformDataSet7)).EndInit();[m
[31m -            this.ResumeLayout(false);[m
[31m -[m
[31m -        }[m
[31m -[m
[31m -        #endregion[m
[31m -[m
[31m -        private System.Windows.Forms.Button usersbtn;[m
[31m -        private System.Windows.Forms.Button logoutbtn;[m
[31m -        private System.Windows.Forms.PictureBox pictureBox1;[m
[31m -        private System.Windows.Forms.Button queuebtn;[m
[31m -        private System.Windows.Forms.Button purposebtn;[m
[31m -        private System.Windows.Forms.Button reportbtn;[m
[31m -        private System.Windows.Forms.ListBox listBox1;[m
[31m -        private System.Windows.Forms.DataGridView dataGridView1;[m
[31m -        private System.Windows.Forms.Label lbltime;[m
[31m -        private System.Windows.Forms.Label lbldate;[m
[31m -        private System.Windows.Forms.Label lblusername;[m
[31m -        private System.Windows.Forms.Label lblshow;[m
[31m -        private System.Windows.Forms.Button button1;[m
[31m -        private loginformDataSet7 loginformDataSet7;[m
[31m -        private System.Windows.Forms.BindingSource studataBindingSource;[m
[31m -        private loginformDataSet7TableAdapters.stu_dataTableAdapter stu_dataTableAdapter;[m
[31m -        private System.Windows.Forms.DataGridViewTextBoxColumn nameDataGridViewTextBoxColumn;[m
[31m -        private System.Windows.Forms.DataGridViewTextBoxColumn departmentDataGridViewTextBoxColumn;[m
[31m -        private System.Windows.Forms.DataGridViewTextBoxColumn purposeDataGridViewTextBoxColumn;[m
[31m -        private System.Windows.Forms.DataGridViewTextBoxColumn queueCodeDataGridViewTextBoxColumn;[m
[31m -        private System.Windows.Forms.DataGridViewTextBoxColumn QueueDate;[m
[31m -        private System.Windows.Forms.Timer timer1;[m
[31m -    }[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿namespace capstoneproject[m
[32m +{[m
[32m +    partial class dashboard[m
[32m +    {[m
[32m +        /// <summary>[m
[32m +        /// Required designer variable.[m
[32m +        /// </summary>[m
[32m +        private System.ComponentModel.IContainer components = null;[m
[32m +[m
[32m +        /// <summary>[m
[32m +        /// Clean up any resources being used.[m
[32m +        /// </summary>[m
[32m +        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>[m
[32m +        protected override void Dispose(bool disposing)[m
[32m +        {[m
[32m +            if (disposing && (components != null))[m
[32m +            {[m
[32m +                components.Dispose();[m
[32m +            }[m
[32m +            base.Dispose(disposing);[m
[32m +        }[m
[32m +[m
[32m +        #region Windows Form Designer generated code[m
[32m +[m
[32m +        /// <summary>[m
[32m +        /// Required method for Designer support - do not modify[m
[32m +        /// the contents of this method with the code editor.[m
[32m +        /// </summary>[m
[32m +        private void InitializeComponent()[m
[32m +        {[m
[32m +            this.components = new System.ComponentModel.Container();[m
[32m +            System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle3 = new System.Windows.Forms.DataGridViewCellStyle();[m
[32m +            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(dashboard));[m
[32m +            this.usersbtn = new System.Windows.Forms.Button();[m
[32m +            this.logoutbtn = new System.Windows.Forms.Button();[m
[32m +            this.pictureBox1 = new System.Windows.Forms.PictureBox();[m
[32m +            this.queuebtn = new System.Windows.Forms.Button();[m
[32m +            this.purposebtn = new System.Windows.Forms.Button();[m
[32m +            this.reportbtn = new System.Windows.Forms.Button();[m
[32m +            this.listBox1 = new System.Windows.Forms.ListBox();[m
[32m +            this.dataGridView1 = new System.Windows.Forms.DataGridView();[m
[32m +            this.nameDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[32m +            this.departmentDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[32m +            this.purposeDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[32m +            this.queueCodeDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[32m +            this.QueueDate = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[32m +            this.studataBindingSource = new System.Windows.Forms.BindingSource(this.components);[m
[32m +            this.loginformDataSet7 = new capstoneproject.loginformDataSet7();[m
[32m +            this.lbltime = new System.Windows.Forms.Label();[m
[32m +            this.lbldate = new System.Windows.Forms.Label();[m
[32m +            this.lblusername = new System.Windows.Forms.Label();[m
[32m +            this.lblshow = new System.Windows.Forms.Label();[m
[32m +            this.button1 = new System.Windows.Forms.Button();[m
[32m +            this.stu_dataTableAdapter = new capstoneproject.loginformDataSet7TableAdapters.stu_dataTableAdapter();[m
[32m +            this.timer1 = new System.Windows.Forms.Timer(this.components);[m
[32m +            this.panel2 = new System.Windows.Forms.Panel();[m
[32m +            this.panel1 = new System.Windows.Forms.Panel();[m
[32m +            this.pictureBox6 = new System.Windows.Forms.PictureBox();[m
[32m +            this.pictureBox5 = new System.Windows.Forms.PictureBox();[m
[32m +            this.panel3 = new System.Windows.Forms.Panel();[m
[32m +            this.pictureBox2 = new System.Windows.Forms.PictureBox();[m
[32m +            this.panel4 = new System.Windows.Forms.Panel();[m
[32m +            this.panel5 = new System.Windows.Forms.Panel();[m
[32m +            this.dateTimePicker = new System.Windows.Forms.DateTimePicker();[m
[32m +            this.pictureBox4 = new System.Windows.Forms.PictureBox();[m
[32m +            this.pictureBox3 = new System.Windows.Forms.PictureBox();[m
[32m +            this.txtsearch = new System.Windows.Forms.TextBox();[m
[32m +            this.panel6 = new System.Windows.Forms.Panel();[m
[32m +            this.label1 = new System.Windows.Forms.Label();[m
[32m +            this.label2 = new System.Windows.Forms.Label();[m
[32m +            this.label3 = new System.Windows.Forms.Label();[m
[32m +            this.label4 = new System.Windows.Forms.Label();[m
[32m +            this.label5 = new System.Windows.Forms.Label();[m
[32m +            this.loginformDataSet = new capstoneproject.loginformDataSet();[m
[32m +            this.tblloginBindingSource = new System.Windows.Forms.BindingSource(this.components);[m
[32m +            this.tbl_loginTableAdapter = new capstoneproject.loginformDataSetTableAdapters.tbl_loginTableAdapter();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.pictureBox1)).BeginInit();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.dataGridView1)).BeginInit();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.studataBindingSource)).BeginInit();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.loginformDataSet7)).BeginInit();[m
[32m +            this.panel1.SuspendLayout();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.pictureBox6)).BeginInit();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.pictureBox5)).BeginInit();[m
[32m +            this.panel3.SuspendLayout();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.pictureBox2)).BeginInit();[m
[32m +            this.panel4.SuspendLayout();[m
[32m +            this.panel5.SuspendLayout();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.pictureBox4)).BeginInit();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.pictureBox3)).BeginInit();[m
[32m +            this.panel6.SuspendLayout();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.loginformDataSet)).BeginInit();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.tblloginBindingSource)).BeginInit();[m
[32m +            this.SuspendLayout();[m
[32m +            // [m
[32m +            // usersbtn[m
[32m +            // [m
[32m +            this.usersbtn.Location = new System.Drawing.Point(273, 0);[m
[32m +            this.usersbtn.Name = "usersbtn";[m
[32m +            this.usersbtn.Size = new System.Drawing.Size(82, 27);[m
[32m +            this.usersbtn.TabIndex = 0;[m
[32m +            this.usersbtn.Text = "USERS";[m
[32m +            this.usersbtn.UseVisualStyleBackColor = true;[m
[32m +            this.usersbtn.Click += new System.EventHandler(this.addbtn_Click_1);[m
[32m +            // [m
[32m +            // logoutbtn[m
[32m +            // [m
[32m +            this.logoutbtn.Location = new System.Drawing.Point(361, 0);[m
[32m +            this.logoutbtn.Name = "logoutbtn";[m
[32m +            this.logoutbtn.Size = new System.Drawing.Size(82, 27);[m
[32m +            this.logoutbtn.TabIndex = 1;[m
[32m +            this.logoutbtn.Text = "LOG OUT";[m
[32m +            this.logoutbtn.UseVisualStyleBackColor = true;[m
[32m +            this.logoutbtn.Click += new System.EventHandler(this.button1_Click);[m
[32m +            // [m
[32m +            // pictureBox1[m
[32m +            // [m
[32m +            this.pictureBox1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[32m +            | System.Windows.Forms.AnchorStyles.Left) [m
[32m +            | System.Windows.Forms.AnchorStyles.Right)));[m
[32m +            this.pictureBox1.DataBindings.Add(new System.Windows.Forms.Binding("Image", this.tblloginBindingSource, "image", true));[m
[32m +            this.pictureBox1.Location = new System.Drawing.Point(12, 3);[m
[32m +            this.pictureBox1.Name = "pictureBox1";[m
[32m +            this.pictureBox1.Size = new System.Drawing.Size(68, 64);[m
[32m +            this.pictureBox1.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;[m
[32m +            this.pictureBox1.TabIndex = 2;[m
[32m +            this.pictureBox1.TabStop = false;[m
[32m +            this.pictureBox1.Click += new System.EventHandler(this.pictureBox1_Click);[m
[32m +            // [m
[32m +            // queuebtn[m
[32m +            // [m
[32m +            this.queuebtn.Location = new System.Drawing.Point(12, 0);[m
[32m +            this.queuebtn.Name = "queuebtn";[m
[32m +            this.queuebtn.Size = new System.Drawing.Size(82, 27);[m
[32m +            this.queuebtn.TabIndex = 4;[m
[32m +            this.queuebtn.Text = "QUEUEING";[m
[32m +            this.queuebtn.UseVisualStyleBackColor = true;[m
[32m +            this.queuebtn.Click += new System.EventHandler(this.button3_Click);[m
[32m +            // [m
[32m +            // purposebtn[m
[32m +            // [m
[32m +            this.purposebtn.Location = new System.Drawing.Point(97, 0);[m
[32m +            this.purposebtn.Name = "purposebtn";[m
[32m +            this.purposebtn.Size = new System.Drawing.Size(82, 27);[m
[32m +            this.purposebtn.TabIndex = 5;[m
[32m +            this.purposebtn.Text = "PURPOSE";[m
[32m +            this.purposebtn.UseVisualStyleBackColor = true;[m
[32m +            this.purposebtn.Click += new System.EventHandler(this.button4_Click);[m
[32m +            // [m
[32m +            // reportbtn[m
[32m +            // [m
[32m +            this.reportbtn.Location = new System.Drawing.Point(185, 0);[m
[32m +            this.reportbtn.Name = "reportbtn";[m
[32m +            this.reportbtn.Size = new System.Drawing.Size(82, 27);[m
[32m +            this.reportbtn.TabIndex = 6;[m
[32m +            this.reportbtn.Text = "REPORT";[m
[32m +            this.reportbtn.UseVisualStyleBackColor = true;[m
[32m +            this.reportbtn.Click += new System.EventHandler(this.button5_Click);[m
[32m +            // [m
[32m +            // listBox1[m
[32m +            // [m
[32m +            this.listBox1.FormattingEnabled = true;[m
[32m +            this.listBox1.Location = new System.Drawing.Point(587, 280);[m
[32m +            this.listBox1.Name = "listBox1";[m
[32m +            this.listBox1.Size = new System.Drawing.Size(0, 4);[m
[32m +            this.listBox1.TabIndex = 7;[m
[32m +            // [m
[32m +            // dataGridView1[m
[32m +            // [m
[32m +            this.dataGridView1.AllowUserToAddRows = false;[m
[32m +            this.dataGridView1.AllowUserToDeleteRows = false;[m
[32m +            this.dataGridView1.AllowUserToResizeColumns = false;[m
[32m +            this.dataGridView1.AllowUserToResizeRows = false;[m
[32m +            this.dataGridView1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[32m +            | System.Windows.Forms.AnchorStyles.Left) [m
[32m +            | System.Windows.Forms.AnchorStyles.Right)));[m
[32m +            this.dataGridView1.AutoGenerateColumns = false;[m
[32m +            this.dataGridView1.ColumnHeadersBorderStyle = System.Windows.Forms.DataGridViewHeaderBorderStyle.Single;[m
[32m +            this.dataGridView1.ColumnHeadersHeight = 30;[m
[32m +            this.dataGridView1.Columns.AddRange(new System.Windows.Forms.DataGridViewColumn[] {[m
[32m +            this.nameDataGridViewTextBoxColumn,[m
[32m +            this.departmentDataGridViewTextBoxColumn,[m
[32m +            this.purposeDataGridViewTextBoxColumn,[m
[32m +            this.queueCodeDataGridViewTextBoxColumn,[m
[32m +            this.QueueDate});[m
[32m +            this.dataGridView1.DataSource = this.studataBindingSource;[m
[32m +            dataGridViewCellStyle3.Alignment = System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft;[m
[32m +            dataGridViewCellStyle3.BackColor = System.Drawing.SystemColors.Window;[m
[32m +            dataGridViewCellStyle3.Font = new System.Drawing.Font("Microsoft Sans Serif", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));[m
[32m +            dataGridViewCellStyle3.ForeColor = System.Drawing.SystemColors.ControlDark;[m
[32m +            dataGridViewCellStyle3.SelectionBackColor = System.Drawing.Color.Maroon;[m
[32m +            dataGridViewCellStyle3.SelectionForeColor = System.Drawing.SystemColors.Highlight;[m
[32m +            dataGridViewCellStyle3.WrapMode = System.Windows.Forms.DataGridViewTriState.False;[m
[32m +            this.dataGridView1.DefaultCellStyle = dataGridViewCellStyle3;[m
[32m +            this.dataGridView1.GridColor = System.Drawing.Color.White;[m
[32m +            this.dataGridView1.Location = new System.Drawing.Point(12, 184);[m
[32m +            this.dataGridView1.Name = "dataGridView1";[m
[32m +            this.dataGridView1.RowHeadersVisible = false;[m
[32m +            this.dataGridView1.Size = new System.Drawing.Size(551, 413);[m
[32m +            this.dataGridView1.TabIndex = 8;[m
[32m +            this.dataGridView1.CellContentClick += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridView1_CellContentClick);[m
[32m +            // [m
[32m +            // nameDataGridViewTextBoxColumn[m
[32m +            // [m
[32m +            this.nameDataGridViewTextBoxColumn.AutoSizeMode = System.Windows.Forms.DataGridViewAutoSizeColumnMode.AllCells;[m
[32m +            this.nameDataGridViewTextBoxColumn.DataPropertyName = "Name";[m
[32m +            this.nameDataGridViewTextBoxColumn.HeaderText = "Name";[m
[32m +            this.nameDataGridViewTextBoxColumn.Name = "nameDataGridViewTextBoxColumn";[m
[32m +            this.nameDataGridViewTextBoxColumn.Width = 60;[m
[32m +            // [m
[32m +            // departmentDataGridViewTextBoxColumn[m
[32m +            // [m
[32m +            this.departmentDataGridViewTextBoxColumn.AutoSizeMode = System.Windows.Forms.DataGridViewAutoSizeColumnMode.AllCells;[m
[32m +            this.departmentDataGridViewTextBoxColumn.DataPropertyName = "Department";[m
[32m +            this.departmentDataGridViewTextBoxColumn.HeaderText = "Department";[m
[32m +            this.departmentDataGridViewTextBoxColumn.Name = "departmentDataGridViewTextBoxColumn";[m
[32m +            this.departmentDataGridViewTextBoxColumn.Width = 87;[m
[32m +            // [m
[32m +            // purposeDataGridViewTextBoxColumn[m
[32m +            // [m
[32m +            this.purposeDataGridViewTextBoxColumn.AutoSizeMode = System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill;[m
[32m +            this.purposeDataGridViewTextBoxColumn.DataPropertyName = "Purpose";[m
[32m +            this.purposeDataGridViewTextBoxColumn.HeaderText = "Purpose";[m
[32m +            this.purposeDataGridViewTextBoxColumn.Name = "purposeDataGridViewTextBoxColumn";[m
[32m +            // [m
[32m +            // queueCodeDataGridViewTextBoxColumn[m
[32m +            // [m
[32m +            this.queueCodeDataGridViewTextBoxColumn.AutoSizeMode = System.Windows.Forms.DataGridViewAutoSizeColumnMode.AllCells;[m
[32m +            this.queueCodeDataGridViewTextBoxColumn.DataPropertyName = "QueueCode";[m
[32m +            this.queueCodeDataGridViewTextBoxColumn.HeaderText = "QueueCode";[m
[32m +            this.queueCodeDataGridViewTextBoxColumn.Name = "queueCodeDataGridViewTextBoxColumn";[m
[32m +            this.queueCodeDataGridViewTextBoxColumn.Width = 89;[m
[32m +            // [m
[32m +            // QueueDate[m
[32m +            // [m
[32m +            this.QueueDate.AutoSizeMode = System.Windows.Forms.DataGridViewAutoSizeColumnMode.AllCells;[m
[32m +            this.QueueDate.DataPropertyName = "QueueDate";[m
[32m +            this.QueueDate.HeaderText = "QueueDate";[m
[32m +            this.QueueDate.Name = "QueueDate";[m
[32m +            this.QueueDate.Width = 87;[m
[32m +            // [m
[32m +            // studataBindingSource[m
[32m +            // [m
[32m +            this.studataBindingSource.DataMember = "stu_data";[m
[32m +            this.studataBindingSource.DataSource = this.loginformDataSet7;[m
[32m +            // [m
[32m +            // loginformDataSet7[m
[32m +            // [m
[32m +            this.loginformDataSet7.DataSetName = "loginformDataSet7";[m
[32m +            this.loginformDataSet7.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +            // [m
[32m +            // lbltime[m
[32m +            // [m
[32m +            this.lbltime.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[32m +            | System.Windows.Forms.AnchorStyles.Left) [m
[32m +            | System.Windows.Forms.AnchorStyles.Right)));[m
[32m +            this.lbltime.Font = new System.Drawing.Font("Arial", 15.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));[m
[32m +            this.lbltime.Location = new System.Drawing.Point(955, 156);[m
[32m +            this.lbltime.Name = "lbltime";[m
[32m +            this.lbltime.Size = new System.Drawing.Size(0, 0);[m
[32m +            this.lbltime.TabIndex = 10;[m
[32m +            this.lbltime.Text = "time";[m
[32m +            this.lbltime.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;[m
[32m +            // [m
[32m +            // lbldate[m
[32m +            // [m
[32m +            this.lbldate.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[32m +            | System.Windows.Forms.AnchorStyles.Left) [m
[32m +            | System.Windows.Forms.AnchorStyles.Right)));[m
[32m +            this.lbldate.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));[m
[32m +            this.lbldate.Location = new System.Drawing.Point(1085, 178);[m
[32m +            this.lbldate.Name = "lbldate";[m
[32m +            this.lbldate.Size = new System.Drawing.Size(0, 0);[m
[32m +            this.lbldate.TabIndex = 11;[m
[32m +            this.lbldate.Text = "date";[m
[32m +            this.lbldate.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;[m
[32m +            this.lbldate.Click += new System.EventHandler(this.lbldate_Click);[m
[32m +            // [m
[32m +            // lblusername[m
[32m +            // [m
[32m +            this.lblusername.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[32m +            | System.Windows.Forms.AnchorStyles.Left) [m
[32m +            | System.Windows.Forms.AnchorStyles.Right)));[m
[32m +            this.lblusername.Location = new System.Drawing.Point(94, 3);[m
[32m +            this.lblusername.Name = "lblusername";[m
[32m +            this.lblusername.Size = new System.Drawing.Size(71, 30);[m
[32m +            this.lblusername.TabIndex = 12;[m
[32m +            this.lblusername.Text = "username";[m
[32m +            this.lblusername.Click += new System.EventHandler(this.lblusername_Click);[m
[32m +            // [m
[32m +            // lblshow[m
[32m +            // [m
[32m +            this.lblshow.BackColor = System.Drawing.SystemColors.ActiveBorder;[m
[32m +            this.lblshow.Location = new System.Drawing.Point(9, 77);[m
[32m +            this.lblshow.Name = "lblshow";[m
[32m +            this.lblshow.Size = new System.Drawing.Size(145, 23);[m
[32m +            this.lblshow.TabIndex = 13;[m
[32m +            this.lblshow.Text = "show";[m
[32m +            this.lblshow.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;[m
[32m +            // [m
[32m +            // button1[m
[32m +            // [m
[32m +            this.button1.Location = new System.Drawing.Point(449, 0);[m
[32m +            this.button1.Name = "button1";[m
[32m +            this.button1.Size = new System.Drawing.Size(75, 23);[m
[32m +            this.button1.TabIndex = 14;[m
[32m +            this.button1.Text = "REFRESH";[m
[32m +            this.button1.UseVisualStyleBackColor = true;[m
[32m +            this.button1.Click += new System.EventHandler(this.button1_Click_1);[m
[32m +            // [m
[32m +            // stu_dataTableAdapter[m
[32m +            // [m
[32m +            this.stu_dataTableAdapter.ClearBeforeFill = true;[m
[32m +            // [m
[32m +            // timer1[m
[32m +            // [m
[32m +            this.timer1.Tick += new System.EventHandler(this.timer1_Tick);[m
[32m +            // [m
[32m +            // panel2[m
[32m +            // [m
[32m +            this.panel2.Location = new System.Drawing.Point(1284, 0);[m
[32m +            this.panel2.Name = "panel2";[m
[32m +            this.panel2.Size = new System.Drawing.Size(96, 721);[m
[32m +            this.panel2.TabIndex = 16;[m
[32m +            // [m
[32m +            // panel1[m
[32m +            // [m
[32m +            this.panel1.BackgroundImage = ((System.Drawing.Image)(resources.GetObject("panel1.BackgroundImage")));[m
[32m +            this.panel1.Controls.Add(this.pictureBox6);[m
[32m +            this.panel1.Controls.Add(this.pictureBox5);[m
[32m +            this.panel1.Controls.Add(this.pictureBox1);[m
[32m +            this.panel1.Controls.Add(this.lblusername);[m
[32m +            this.panel1.Controls.Add(this.lblshow);[m
[32m +            this.panel1.Location = new System.Drawing.Point(0, 0);[m
[32m +            this.panel1.Name = "panel1";[m
[32m +            this.panel1.Size = new System.Drawing.Size(928, 100);[m
[32m +            this.panel1.TabIndex = 17;[m
[32m +            // [m
[32m +            // pictureBox6[m
[32m +            // [m
[32m +            this.pictureBox6.BackColor = System.Drawing.Color.Transparent;[m
[32m +            this.pictureBox6.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox6.Image")));[m
[32m +            this.pictureBox6.Location = new System.Drawing.Point(202, 77);[m
[32m +            this.pictureBox6.Name = "pictureBox6";[m
[32m +            this.pictureBox6.Size = new System.Drawing.Size(36, 24);[m
[32m +            this.pictureBox6.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;[m
[32m +            this.pictureBox6.TabIndex = 15;[m
[32m +            this.pictureBox6.TabStop = false;[m
[32m +            // [m
[32m +            // pictureBox5[m
[32m +            // [m
[32m +            this.pictureBox5.BackColor = System.Drawing.Color.Transparent;[m
[32m +            this.pictureBox5.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox5.Image")));[m
[32m +            this.pictureBox5.Location = new System.Drawing.Point(160, 77);[m
[32m +            this.pictureBox5.Name = "pictureBox5";[m
[32m +            this.pictureBox5.Size = new System.Drawing.Size(36, 24);[m
[32m +            this.pictureBox5.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;[m
[32m +            this.pictureBox5.TabIndex = 14;[m
[32m +            this.pictureBox5.TabStop = false;[m
[32m +            // [m
[32m +            // panel3[m
[32m +            // [m
[32m +            this.panel3.Controls.Add(this.pictureBox2);[m
[32m +            this.panel3.Location = new System.Drawing.Point(925, 0);[m
[32m +            this.panel3.Name = "panel3";[m
[32m +            this.panel3.Size = new System.Drawing.Size(48, 608);[m
[32m +            this.panel3.TabIndex = 18;[m
[32m +            // [m
[32m +            // pictureBox2[m
[32m +            // [m
[32m +            this.pictureBox2.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Center;[m
[32m +            this.pictureBox2.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox2.Image")));[m
[32m +            this.pictureBox2.Location = new System.Drawing.Point(9, 12);[m
[32m +            this.pictureBox2.Name = "pictureBox2";[m
[32m +            this.pictureBox2.Size = new System.Drawing.Size(26, 21);[m
[32m +            this.pictureBox2.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;[m
[32m +            this.pictureBox2.TabIndex = 19;[m
[32m +            this.pictureBox2.TabStop = false;[m
[32m +            this.pictureBox2.Click += new System.EventHandler(this.pictureBox2_Click);[m
[32m +            // [m
[32m +            // panel4[m
[32m +            // [m
[32m +            this.panel4.BackColor = System.Drawing.Color.Maroon;[m
[32m +            this.panel4.Controls.Add(this.queuebtn);[m
[32m +            this.panel4.Controls.Add(this.purposebtn);[m
[32m +            this.panel4.Controls.Add(this.reportbtn);[m
[32m +            this.panel4.Controls.Add(this.usersbtn);[m
[32m +            this.panel4.Controls.Add(this.logoutbtn);[m
[32m +            this.panel4.Controls.Add(this.button1);[m
[32m +            this.panel4.Location = new System.Drawing.Point(0, 103);[m
[32m +            this.panel4.Name = "panel4";[m
[32m +            this.panel4.Size = new System.Drawing.Size(563, 36);[m
[32m +            this.panel4.TabIndex = 19;[m
[32m +            // [m
[32m +            // panel5[m
[32m +            // [m
[32m +            this.panel5.BackColor = System.Drawing.Color.Maroon;[m
[32m +            this.panel5.Controls.Add(this.dateTimePicker);[m
[32m +            this.panel5.Controls.Add(this.pictureBox4);[m
[32m +            this.panel5.Controls.Add(this.pictureBox3);[m
[32m +            this.panel5.Controls.Add(this.txtsearch);[m
[32m +            this.panel5.Location = new System.Drawing.Point(0, 139);[m
[32m +            this.panel5.Name = "panel5";[m
[32m +            this.panel5.Size = new System.Drawing.Size(563, 39);[m
[32m +            this.panel5.TabIndex = 20;[m
[32m +            // [m
[32m +            // dateTimePicker[m
[32m +            // [m
[32m +            this.dateTimePicker.Location = new System.Drawing.Point(12, 10);[m
[32m +            this.dateTimePicker.Name = "dateTimePicker";[m
[32m +            this.dateTimePicker.Size = new System.Drawing.Size(200, 20);[m
[32m +            this.dateTimePicker.TabIndex = 23;[m
[32m +            this.dateTimePicker.ValueChanged += new System.EventHandler(this.dateTimePicker1_ValueChanged);[m
[32m +            // [m
[32m +            // pictureBox4[m
[32m +            // [m
[32m +            this.pictureBox4.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Zoom;[m
[32m +            this.pictureBox4.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox4.Image")));[m
[32m +            this.pictureBox4.Location = new System.Drawing.Point(484, 6);[m
[32m +            this.pictureBox4.Name = "pictureBox4";[m
[32m +            this.pictureBox4.Size = new System.Drawing.Size(31, 24);[m
[32m +            this.pictureBox4.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;[m
[32m +            this.pictureBox4.TabIndex = 2;[m
[32m +            this.pictureBox4.TabStop = false;[m
[32m +            this.pictureBox4.Click += new System.EventHandler(this.pictureBox4_Click);[m
[32m +            // [m
[32m +            // pictureBox3[m
[32m +            // [m
[32m +            this.pictureBox3.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Zoom;[m
[32m +            this.pictureBox3.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox3.Image")));[m
[32m +            this.pictureBox3.Location = new System.Drawing.Point(311, 6);[m
[32m +            this.pictureBox3.Name = "pictureBox3";[m
[32m +            this.pictureBox3.Size = new System.Drawing.Size(26, 24);[m
[32m +            this.pictureBox3.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;[m
[32m +            this.pictureBox3.TabIndex = 1;[m
[32m +            this.pictureBox3.TabStop = false;[m
[32m +            this.pictureBox3.Click += new System.EventHandler(this.pictureBox3_Click);[m
[32m +            // [m
[32m +            // txtsearch[m
[32m +            // [m
[32m +            this.txtsearch.Location = new System.Drawing.Point(343, 10);[m
[32m +            this.txtsearch.Name = "txtsearch";[m
[32m +            this.txtsearch.Size = new System.Drawing.Size(133, 20);[m
[32m +            this.txtsearch.TabIndex = 0;[m
[32m +            this.txtsearch.TextChanged += new System.EventHandler(this.txtsearch_TextChanged);[m
[32m +            // [m
[32m +            // panel6[m
[32m +            // [m
[32m +            this.panel6.Controls.Add(this.label5);[m
[32m +            this.panel6.Controls.Add(this.label4);[m
[32m +            this.panel6.Controls.Add(this.label3);[m
[32m +            this.panel6.Controls.Add(this.label2);[m
[32m +            this.panel6.Controls.Add(this.label1);[m
[32m +            this.panel6.Location = new System.Drawing.Point(569, 103);[m
[32m +            this.panel6.Name = "panel6";[m
[32m +            this.panel6.Size = new System.Drawing.Size(350, 505);[m
[32m +            this.panel6.TabIndex = 21;[m
[32m +            this.panel6.Paint += new System.Windows.Forms.PaintEventHandler(this.panel6_Paint);[m
[32m +            // [m
[32m +            // label1[m
[32m +            // [m
[32m +            this.label1.AutoSize = true;[m
[32m +            this.label1.Location = new System.Drawing.Point(159, 52);[m
[32m +            this.label1.Name = "label1";[m
[32m +            this.label1.Size = new System.Drawing.Size(35, 13);[m
[32m +            this.label1.TabIndex = 0;[m
[32m +            this.label1.Text = "label1";[m
[32m +            this.label1.Click += new System.EventHandler(this.label1_Click_1);[m
[32m +            // [m
[32m +            // label2[m
[32m +            // [m
[32m +            this.label2.AutoSize = true;[m
[32m +            this.label2.Location = new System.Drawing.Point(159, 123);[m
[32m +            this.label2.Name = "label2";[m
[32m +            this.label2.Size = new System.Drawing.Size(35, 13);[m
[32m +            this.label2.TabIndex = 1;[m
[32m +            this.label2.Text = "label2";[m
[32m +            // [m
[32m +            // label3[m
[32m +            // [m
[32m +            this.label3.AutoSize = true;[m
[32m +            this.label3.Location = new System.Drawing.Point(159, 177);[m
[32m +            this.label3.Name = "label3";[m
[32m +            this.label3.Size = new System.Drawing.Size(35, 13);[m
[32m +            this.label3.TabIndex = 2;[m
[32m +            this.label3.Text = "label3";[m
[32m +            // [m
[32m +            // label4[m
[32m +            // [m
[32m +            this.label4.AutoSize = true;[m
[32m +            this.label4.Location = new System.Drawing.Point(159, 238);[m
[32m +            this.label4.Name = "label4";[m
[32m +            this.label4.Size = new System.Drawing.Size(35, 13);[m
[32m +            this.label4.TabIndex = 3;[m
[32m +            this.label4.Text = "label4";[m
[32m +            // [m
[32m +            // label5[m
[32m +            // [m
[32m +            this.label5.AutoSize = true;[m
[32m +            this.label5.Location = new System.Drawing.Point(159, 319);[m
[32m +            this.label5.Name = "label5";[m
[32m +            this.label5.Size = new System.Drawing.Size(35, 13);[m
[32m +            this.label5.TabIndex = 4;[m
[32m +            this.label5.Text = "label5";[m
[32m +            // [m
[32m +            // loginformDataSet[m
[32m +            // [m
[32m +            this.loginformDataSet.DataSetName = "loginformDataSet";[m
[32m +            this.loginformDataSet.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +            // [m
[32m +            // tblloginBindingSource[m
[32m +            // [m
[32m +            this.tblloginBindingSource.DataMember = "tbl_login";[m
[32m +            this.tblloginBindingSource.DataSource = this.loginformDataSet;[m
[32m +            // [m
[32m +            // tbl_loginTableAdapter[m
[32m +            // [m
[32m +            this.tbl_loginTableAdapter.ClearBeforeFill = true;[m
[32m +            // [m
[32m +            // dashboard[m
[32m +            // [m
[32m +            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);[m
[32m +            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;[m
[32m +            this.BackColor = System.Drawing.SystemColors.Window;[m
[32m +            this.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Stretch;[m
[32m +            this.ClientSize = new System.Drawing.Size(972, 609);[m
[32m +            this.Controls.Add(this.panel6);[m
[32m +            this.Controls.Add(this.panel5);[m
[32m +            this.Controls.Add(this.panel4);[m
[32m +            this.Controls.Add(this.panel3);[m
[32m +            this.Controls.Add(this.panel1);[m
[32m +            this.Controls.Add(this.panel2);[m
[32m +            this.Controls.Add(this.lbldate);[m
[32m +            this.Controls.Add(this.dataGridView1);[m
[32m +            this.Controls.Add(this.lbltime);[m
[32m +            this.Controls.Add(this.listBox1);[m
[32m +            this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.None;[m
[32m +            this.MinimumSize = new System.Drawing.Size(972, 609);[m
[32m +            this.Name = "dashboard";[m
[32m +            this.Text = "dashboard";[m
[32m +            this.Load += new System.EventHandler(this.dashboard_Load_1);[m
[32m +            this.Shown += new System.EventHandler(this.dashboard_Load);[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.pictureBox1)).EndInit();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.dataGridView1)).EndInit();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.studataBindingSource)).EndInit();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.loginformDataSet7)).EndInit();[m
[32m +            this.panel1.ResumeLayout(false);[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.pictureBox6)).EndInit();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.pictureBox5)).EndInit();[m
[32m +            this.panel3.ResumeLayout(false);[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.pictureBox2)).EndInit();[m
[32m +            this.panel4.ResumeLayout(false);[m
[32m +            this.panel5.ResumeLayout(false);[m
[32m +            this.panel5.PerformLayout();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.pictureBox4)).EndInit();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.pictureBox3)).EndInit();[m
[32m +            this.panel6.ResumeLayout(false);[m
[32m +            this.panel6.PerformLayout();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.loginformDataSet)).EndInit();[m
[32m +            ((System.ComponentModel.ISupportInitialize)(this.tblloginBindingSource)).EndInit();[m
[32m +            this.ResumeLayout(false);[m
[32m +[m
[32m +        }[m
[32m +[m
[32m +        #endregion[m
[32m +[m
[32m +        private System.Windows.Forms.Button usersbtn;[m
[32m +        private System.Windows.Forms.Button logoutbtn;[m
[32m +        private System.Windows.Forms.PictureBox pictureBox1;[m
[32m +        private System.Windows.Forms.Button queuebtn;[m
[32m +        private System.Windows.Forms.Button purposebtn;[m
[32m +        private System.Windows.Forms.Button reportbtn;[m
[32m +        private System.Windows.Forms.ListBox listBox1;[m
[32m +        private System.Windows.Forms.DataGridView dataGridView1;[m
[32m +        private System.Windows.Forms.Label lbltime;[m
[32m +        private System.Windows.Forms.Label lbldate;[m
[32m +        private System.Windows.Forms.Label lblusername;[m
[32m +        private System.Windows.Forms.Label lblshow;[m
[32m +        private System.Windows.Forms.Button button1;[m
[32m +        private loginformDataSet7 loginformDataSet7;[m
[32m +        private System.Windows.Forms.BindingSource studataBindingSource;[m
[32m +        private loginformDataSet7TableAdapters.stu_dataTableAdapter stu_dataTableAdapter;[m
[32m +        private System.Windows.Forms.Timer timer1;[m
[32m +        private System.Windows.Forms.Panel panel2;[m
[32m +        private System.Windows.Forms.Panel panel1;[m
[32m +        private System.Windows.Forms.Panel panel3;[m
[32m +        private System.Windows.Forms.PictureBox pictureBox2;[m
[32m +        private System.Windows.Forms.Panel panel4;[m
[32m +        private System.Windows.Forms.Panel panel5;[m
[32m +        private System.Windows.Forms.TextBox txtsearch;[m
[32m +        private System.Windows.Forms.PictureBox pictureBox3;[m
[32m +        private System.Windows.Forms.PictureBox pictureBox4;[m
[32m +        private System.Windows.Forms.DataGridViewTextBoxColumn nameDataGridViewTextBoxColumn;[m
[32m +        private System.Windows.Forms.DataGridViewTextBoxColumn departmentDataGridViewTextBoxColumn;[m
[32m +        private System.Windows.Forms.DataGridViewTextBoxColumn purposeDataGridViewTextBoxColumn;[m
[32m +        private System.Windows.Forms.DataGridViewTextBoxColumn queueCodeDataGridViewTextBoxColumn;[m
[32m +        private System.Windows.Forms.DataGridViewTextBoxColumn QueueDate;[m
[32m +        private System.Windows.Forms.PictureBox pictureBox6;[m
[32m +        private System.Windows.Forms.PictureBox pictureBox5;[m
[32m +        private System.Windows.Forms.Panel panel6;[m
[32m +        private System.Windows.Forms.DateTimePicker dateTimePicker;[m
[32m +        private System.Windows.Forms.Label label5;[m
[32m +        private System.Windows.Forms.Label label4;[m
[32m +        private System.Windows.Forms.Label label3;[m
[32m +        private System.Windows.Forms.Label label2;[m
[32m +        private System.Windows.Forms.Label label1;[m
[32m +        private loginformDataSet loginformDataSet;[m
[32m +        private System.Windows.Forms.BindingSource tblloginBindingSource;[m
[32m +        private loginformDataSetTableAdapters.tbl_loginTableAdapter tbl_loginTableAdapter;[m
[32m +    }[m
[32m++=======[m
[32m++ï»¿namespace capstoneproject[m
[32m++{[m
[32m++    partial class dashboard[m
[32m++    {[m
[32m++        /// <summary>[m
[32m++        /// Required designer variable.[m
[32m++        /// </summary>[m
[32m++        private System.ComponentModel.IContainer components = null;[m
[32m++[m
[32m++        /// <summary>[m
[32m++        /// Clean up any resources being used.[m
[32m++        /// </summary>[m
[32m++        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>[m
[32m++        protected override void Dispose(bool disposing)[m
[32m++        {[m
[32m++            if (disposing && (components != null))[m
[32m++            {[m
[32m++                components.Dispose();[m
[32m++            }[m
[32m++            base.Dispose(disposing);[m
[32m++        }[m
[32m++[m
[32m++        #region Windows Form Designer generated code[m
[32m++[m
[32m++        /// <summary>[m
[32m++        /// Required method for Designer support - do not modify[m
[32m++        /// the contents of this method with the code editor.[m
[32m++        /// </summary>[m
[32m++        private void InitializeComponent()[m
[32m++        {[m
[32m++            this.components = new System.ComponentModel.Container();[m
[32m++            this.usersbtn = new System.Windows.Forms.Button();[m
[32m++            this.logoutbtn = new System.Windows.Forms.Button();[m
[32m++            this.pictureBox1 = new System.Windows.Forms.PictureBox();[m
[32m++            this.queuebtn = new System.Windows.Forms.Button();[m
[32m++            this.purposebtn = new System.Windows.Forms.Button();[m
[32m++            this.reportbtn = new System.Windows.Forms.Button();[m
[32m++            this.listBox1 = new System.Windows.Forms.ListBox();[m
[32m++            this.dataGridView1 = new System.Windows.Forms.DataGridView();[m
[32m++            this.nameDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[32m++            this.departmentDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[32m++            this.purposeDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[32m++            this.queueCodeDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[32m++            this.QueueDate = new System.Windows.Forms.DataGridViewTextBoxColumn();[m
[32m++            this.studataBindingSource = new System.Windows.Forms.BindingSource(this.components);[m
[32m++            this.loginformDataSet7 = new capstoneproject.loginformDataSet7();[m
[32m++            this.lbltime = new System.Windows.Forms.Label();[m
[32m++            this.lbldate = new System.Windows.Forms.Label();[m
[32m++            this.lblusername = new System.Windows.Forms.Label();[m
[32m++            this.lblshow = new System.Windows.Forms.Label();[m
[32m++            this.button1 = new System.Windows.Forms.Button();[m
[32m++            this.stu_dataTableAdapter = new capstoneproject.loginformDataSet7TableAdapters.stu_dataTableAdapter();[m
[32m++            this.timer1 = new System.Windows.Forms.Timer(this.components);[m
[32m++            ((System.ComponentModel.ISupportInitialize)(this.pictureBox1)).BeginInit();[m
[32m++            ((System.ComponentModel.ISupportInitialize)(this.dataGridView1)).BeginInit();[m
[32m++            ((System.ComponentModel.ISupportInitialize)(this.studataBindingSource)).BeginInit();[m
[32m++            ((System.ComponentModel.ISupportInitialize)(this.loginformDataSet7)).BeginInit();[m
[32m++            this.SuspendLayout();[m
[32m++            // [m
[32m++            // usersbtn[m
[32m++            // [m
[32m++            this.usersbtn.Location = new System.Drawing.Point(276, 101);[m
[32m++            this.usersbtn.Name = "usersbtn";[m
[32m++            this.usersbtn.Size = new System.Drawing.Size(82, 27);[m
[32m++            this.usersbtn.TabIndex = 0;[m
[32m++            this.usersbtn.Text = "USERS";[m
[32m++            this.usersbtn.UseVisualStyleBackColor = true;[m
[32m++            this.usersbtn.Click += new System.EventHandler(this.addbtn_Click_1);[m
[32m++            // [m
[32m++            // logoutbtn[m
[32m++            // [m
[32m++            this.logoutbtn.Location = new System.Drawing.Point(364, 101);[m
[32m++            this.logoutbtn.Name = "logoutbtn";[m
[32m++            this.logoutbtn.Size = new System.Drawing.Size(82, 27);[m
[32m++            this.logoutbtn.TabIndex = 1;[m
[32m++            this.logoutbtn.Text = "LOG OUT";[m
[32m++            this.logoutbtn.UseVisualStyleBackColor = true;[m
[32m++            this.logoutbtn.Click += new System.EventHandler(this.button1_Click);[m
[32m++            // [m
[32m++            // pictureBox1[m
[32m++            // [m
[32m++            this.pictureBox1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[32m++            | System.Windows.Forms.AnchorStyles.Left) [m
[32m++            | System.Windows.Forms.AnchorStyles.Right)));[m
[32m++            this.pictureBox1.Location = new System.Drawing.Point(12, 12);[m
[32m++            this.pictureBox1.Name = "pictureBox1";[m
[32m++            this.pictureBox1.Size = new System.Drawing.Size(68, 50);[m
[32m++            this.pictureBox1.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;[m
[32m++            this.pictureBox1.TabIndex = 2;[m
[32m++            this.pictureBox1.TabStop = false;[m
[32m++            // [m
[32m++            // queuebtn[m
[32m++            // [m
[32m++            this.queuebtn.Location = new System.Drawing.Point(12, 101);[m
[32m++            this.queuebtn.Name = "queuebtn";[m
[32m++            this.queuebtn.Size = new System.Drawing.Size(82, 27);[m
[32m++            this.queuebtn.TabIndex = 4;[m
[32m++            this.queuebtn.Text = "QUEUEING";[m
[32m++            this.queuebtn.UseVisualStyleBackColor = true;[m
[32m++            this.queuebtn.Click += new System.EventHandler(this.button3_Click);[m
[32m++            // [m
[32m++            // purposebtn[m
[32m++            // [m
[32m++            this.purposebtn.Location = new System.Drawing.Point(100, 101);[m
[32m++            this.purposebtn.Name = "purposebtn";[m
[32m++            this.purposebtn.Size = new System.Drawing.Size(82, 27);[m
[32m++            this.purposebtn.TabIndex = 5;[m
[32m++            this.purposebtn.Text = "PURPOSE";[m
[32m++            this.purposebtn.UseVisualStyleBackColor = true;[m
[32m++            this.purposebtn.Click += new System.EventHandler(this.button4_Click);[m
[32m++            // [m
[32m++            // reportbtn[m
[32m++            // [m
[32m++            this.reportbtn.Location = new System.Drawing.Point(188, 101);[m
[32m++            this.reportbtn.Name = "reportbtn";[m
[32m++            this.reportbtn.Size = new System.Drawing.Size(82, 27);[m
[32m++            this.reportbtn.TabIndex = 6;[m
[32m++            this.reportbtn.Text = "REPORT";[m
[32m++            this.reportbtn.UseVisualStyleBackColor = true;[m
[32m++            this.reportbtn.Click += new System.EventHandler(this.button5_Click);[m
[32m++            // [m
[32m++            // listBox1[m
[32m++            // [m
[32m++            this.listBox1.FormattingEnabled = true;[m
[32m++            this.listBox1.Location = new System.Drawing.Point(587, 280);[m
[32m++            this.listBox1.Name = "listBox1";[m
[32m++            this.listBox1.Size = new System.Drawing.Size(0, 4);[m
[32m++            this.listBox1.TabIndex = 7;[m
[32m++            // [m
[32m++            // dataGridView1[m
[32m++            // [m
[32m++            this.dataGridView1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[32m++            | System.Windows.Forms.AnchorStyles.Left) [m
[32m++            | System.Windows.Forms.AnchorStyles.Right)));[m
[32m++            this.dataGridView1.AutoGenerateColumns = false;[m
[32m++            this.dataGridView1.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;[m
[32m++            this.dataGridView1.Columns.AddRange(new System.Windows.Forms.DataGridViewColumn[] {[m
[32m++            this.nameDataGridViewTextBoxColumn,[m
[32m++            this.departmentDataGridViewTextBoxColumn,[m
[32m++            this.purposeDataGridViewTextBoxColumn,[m
[32m++            this.queueCodeDataGridViewTextBoxColumn,[m
[32m++            this.QueueDate});[m
[32m++            this.dataGridView1.DataSource = this.studataBindingSource;[m
[32m++            this.dataGridView1.Location = new System.Drawing.Point(12, 134);[m
[32m++            this.dataGridView1.Name = "dataGridView1";[m
[32m++            this.dataGridView1.Size = new System.Drawing.Size(541, 423);[m
[32m++            this.dataGridView1.TabIndex = 8;[m
[32m++            this.dataGridView1.CellContentClick += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridView1_CellContentClick);[m
[32m++            // [m
[32m++            // nameDataGridViewTextBoxColumn[m
[32m++            // [m
[32m++            this.nameDataGridViewTextBoxColumn.DataPropertyName = "Name";[m
[32m++            this.nameDataGridViewTextBoxColumn.HeaderText = "Name";[m
[32m++            this.nameDataGridViewTextBoxColumn.Name = "nameDataGridViewTextBoxColumn";[m
[32m++            // [m
[32m++            // departmentDataGridViewTextBoxColumn[m
[32m++            // [m
[32m++            this.departmentDataGridViewTextBoxColumn.DataPropertyName = "Department";[m
[32m++            this.departmentDataGridViewTextBoxColumn.HeaderText = "Department";[m
[32m++            this.departmentDataGridViewTextBoxColumn.Name = "departmentDataGridViewTextBoxColumn";[m
[32m++            // [m
[32m++            // purposeDataGridViewTextBoxColumn[m
[32m++            // [m
[32m++            this.purposeDataGridViewTextBoxColumn.DataPropertyName = "Purpose";[m
[32m++            this.purposeDataGridViewTextBoxColumn.HeaderText = "Purpose";[m
[32m++            this.purposeDataGridViewTextBoxColumn.Name = "purposeDataGridViewTextBoxColumn";[m
[32m++            // [m
[32m++            // queueCodeDataGridViewTextBoxColumn[m
[32m++            // [m
[32m++            this.queueCodeDataGridViewTextBoxColumn.DataPropertyName = "QueueCode";[m
[32m++            this.queueCodeDataGridViewTextBoxColumn.HeaderText = "QueueCode";[m
[32m++            this.queueCodeDataGridViewTextBoxColumn.Name = "queueCodeDataGridViewTextBoxColumn";[m
[32m++            // [m
[32m++            // QueueDate[m
[32m++            // [m
[32m++            this.QueueDate.DataPropertyName = "QueueDate";[m
[32m++            this.QueueDate.HeaderText = "QueueDate";[m
[32m++            this.QueueDate.Name = "QueueDate";[m
[32m++            // [m
[32m++            // studataBindingSource[m
[32m++            // [m
[32m++            this.studataBindingSource.DataMember = "stu_data";[m
[32m++            this.studataBindingSource.DataSource = this.loginformDataSet7;[m
[32m++            // [m
[32m++            // loginformDataSet7[m
[32m++            // [m
[32m++            this.loginformDataSet7.DataSetName = "loginformDataSet7";[m
[32m++            this.loginformDataSet7.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++            // [m
[32m++            // lbltime[m
[32m++            // [m
[32m++            this.lbltime.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[32m++            | System.Windows.Forms.AnchorStyles.Left) [m
[32m++            | System.Windows.Forms.AnchorStyles.Right)));[m
[32m++            this.lbltime.Font = new System.Drawing.Font("Arial", 15.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));[m
[32m++            this.lbltime.Location = new System.Drawing.Point(736, 9);[m
[32m++            this.lbltime.Name = "lbltime";[m
[32m++            this.lbltime.Size = new System.Drawing.Size(178, 40);[m
[32m++            this.lbltime.TabIndex = 10;[m
[32m++            this.lbltime.Text = "time";[m
[32m++            this.lbltime.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;[m
[32m++            // [m
[32m++            // lbldate[m
[32m++            // [m
[32m++            this.lbldate.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[32m++            | System.Windows.Forms.AnchorStyles.Left) [m
[32m++            | System.Windows.Forms.AnchorStyles.Right)));[m
[32m++            this.lbldate.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));[m
[32m++            this.lbldate.Location = new System.Drawing.Point(683, 49);[m
[32m++            this.lbldate.Name = "lbldate";[m
[32m++            this.lbldate.Size = new System.Drawing.Size(231, 29);[m
[32m++            this.lbldate.TabIndex = 11;[m
[32m++            this.lbldate.Text = "date";[m
[32m++            this.lbldate.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;[m
[32m++            this.lbldate.Click += new System.EventHandler(this.lbldate_Click);[m
[32m++            // [m
[32m++            // lblusername[m
[32m++            // [m
[32m++            this.lblusername.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) [m
[32m++            | System.Windows.Forms.AnchorStyles.Left) [m
[32m++            | System.Windows.Forms.AnchorStyles.Right)));[m
[32m++            this.lblusername.Location = new System.Drawing.Point(109, 25);[m
[32m++            this.lblusername.Name = "lblusername";[m
[32m++            this.lblusername.Size = new System.Drawing.Size(140, 13);[m
[32m++            this.lblusername.TabIndex = 12;[m
[32m++            this.lblusername.Text = "username";[m
[32m++            // [m
[32m++            // lblshow[m
[32m++            // [m
[32m++            this.lblshow.Location = new System.Drawing.Point(12, 75);[m
[32m++            this.lblshow.Name = "lblshow";[m
[32m++            this.lblshow.Size = new System.Drawing.Size(100, 23);[m
[32m++            this.lblshow.TabIndex = 13;[m
[32m++            this.lblshow.Text = "show";[m
[32m++            this.lblshow.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;[m
[32m++            // [m
[32m++            // button1[m
[32m++            // [m
[32m++            this.button1.Location = new System.Drawing.Point(478, 103);[m
[32m++            this.button1.Name = "button1";[m
[32m++            this.button1.Size = new System.Drawing.Size(75, 23);[m
[32m++            this.button1.TabIndex = 14;[m
[32m++            this.button1.Text = "REFRESH";[m
[32m++            this.button1.UseVisualStyleBackColor = true;[m
[32m++            this.button1.Click += new System.EventHandler(this.button1_Click_1);[m
[32m++            // [m
[32m++            // stu_dataTableAdapter[m
[32m++            // [m
[32m++            this.stu_dataTableAdapter.ClearBeforeFill = true;[m
[32m++            // [m
[32m++            // timer1[m
[32m++            // [m
[32m++            this.timer1.Tick += new System.EventHandler(this.timer1_Tick);[m
[32m++            // [m
[32m++            // dashboard[m
[32m++            // [m
[32m++            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);[m
[32m++            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;[m
[32m++            this.BackgroundImage = global::capstoneproject.Properties.Resources._99425148_2402006923430298_415144967531397120_n;[m
[32m++            this.ClientSize = new System.Drawing.Size(956, 572);[m
[32m++            this.Controls.Add(this.button1);[m
[32m++            this.Controls.Add(this.lblshow);[m
[32m++            this.Controls.Add(this.lblusername);[m
[32m++            this.Controls.Add(this.lbldate);[m
[32m++            this.Controls.Add(this.lbltime);[m
[32m++            this.Controlswarning: in the working copy of 'capstoneproject/dashboard.cs', LF will be replaced by CRLF the next time Git touches it
.Add(this.dataGridView1);[m
[32m++            this.Controls.Add(this.listBox1);[m
[32m++            this.Controls.Add(this.reportbtn);[m
[32m++            this.Controls.Add(this.purposebtn);[m
[32m++            this.Controls.Add(this.queuebtn);[m
[32m++            this.Controls.Add(this.pictureBox1);[m
[32m++            this.Controls.Add(this.logoutbtn);[m
[32m++            this.Controls.Add(this.usersbtn);[m
[32m++            this.Name = "dashboard";[m
[32m++            this.Text = "dashboard";[m
[32m++            this.Load += new System.EventHandler(this.dashboard_Load_1);[m
[32m++            this.Shown += new System.EventHandler(this.dashboard_Load);[m
[32m++            ((System.ComponentModel.ISupportInitialize)(this.pictureBox1)).EndInit();[m
[32m++            ((System.ComponentModel.ISupportInitialize)(this.dataGridView1)).EndInit();[m
[32m++            ((System.ComponentModel.ISupportInitialize)(this.studataBindingSource)).EndInit();[m
[32m++            ((System.ComponentModel.ISupportInitialize)(this.loginformDataSet7)).EndInit();[m
[32m++            this.ResumeLayout(false);[m
[32m++[m
[32m++        }[m
[32m++[m
[32m++        #endregion[m
[32m++[m
[32m++        private System.Windows.Forms.Button usersbtn;[m
[32m++        private System.Windows.Forms.Button logoutbtn;[m
[32m++        private System.Windows.Forms.PictureBox pictureBox1;[m
[32m++        private System.Windows.Forms.Button queuebtn;[m
[32m++        private System.Windows.Forms.Button purposebtn;[m
[32m++        private System.Windows.Forms.Button reportbtn;[m
[32m++        private System.Windows.Forms.ListBox listBox1;[m
[32m++        private System.Windows.Forms.DataGridView dataGridView1;[m
[32m++        private System.Windows.Forms.Label lbltime;[m
[32m++        private System.Windows.Forms.Label lbldate;[m
[32m++        private System.Windows.Forms.Label lblusername;[m
[32m++        private System.Windows.Forms.Label lblshow;[m
[32m++        private System.Windows.Forms.Button button1;[m
[32m++        private loginformDataSet7 loginformDataSet7;[m
[32m++        private System.Windows.Forms.BindingSource studataBindingSource;[m
[32m++        private loginformDataSet7TableAdapters.stu_dataTableAdapter stu_dataTableAdapter;[m
[32m++        private System.Windows.Forms.DataGridViewTextBoxColumn nameDataGridViewTextBoxColumn;[m
[32m++        private System.Windows.Forms.DataGridViewTextBoxColumn departmentDataGridViewTextBoxColumn;[m
[32m++        private System.Windows.Forms.DataGridViewTextBoxColumn purposeDataGridViewTextBoxColumn;[m
[32m++        private System.Windows.Forms.DataGridViewTextBoxColumn queueCodeDataGridViewTextBoxColumn;[m
[32m++        private System.Windows.Forms.DataGridViewTextBoxColumn QueueDate;[m
[32m++        private System.Windows.Forms.Timer timer1;[m
[32m++    }[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  }[m
[1mdiff --cc capstoneproject/dashboard.cs[m
[1mindex 99501b8,c7a3c10..0000000[m
[1m--- a/capstoneproject/dashboard.cs[m
[1m+++ b/capstoneproject/dashboard.cs[m
[36m@@@ -1,231 -1,149 +1,382 @@@[m
[31m -ï»¿using System;[m
[31m -using System.Collections.Generic;[m
[31m -using System.ComponentModel;[m
[31m -using System.Data;[m
[31m -using System.Drawing;[m
[31m -using System.Linq;[m
[31m -using System.Text;[m
[31m -using System.Threading.Tasks;[m
[31m -using System.Windows.Forms;[m
[31m -using System.Data.SqlClient;[m
[31m -using System.IO;[m
[31m -[m
[31m -namespace capstoneproject[m
[31m -{[m
[31m -    public partial class dashboard : Form[m
[31m -    {[m
[31m -        public string username { get; set; }[m
[31m -[m
[31m -        private const string ConnectionString = "Data Source=reyn\\SQLEXPRESS;Initial Catalog=loginform;Integrated Security=True";[m
[31m -        public dashboard()[m
[31m -        {[m
[31m -            InitializeComponent();[m
[31m -[m
[31m -            [m
[31m -        }[m
[31m -        private void LoadTodayData()[m
[31m -        {[m
[31m -            using (SqlConnection connection = new SqlConnection(ConnectionString))[m
[31m -            {[m
[31m -                connection.Open();[m
[31m -[m
[31m -                // Create a SQL query to fetch today's data[m
[31m -                string query = "SELECT Name, Department, Purpose, QueueNumber,QueueCode, QueueDate FROM stu_data WHERE CONVERT(date, QueueDate) = @QueueDate";[m
[31m -[m
[31m -                using (SqlCommand command = new SqlCommand(query, connection))[m
[31m -                {[m
[31m -                    command.Parameters.AddWithValue("@QueueDate", DateTime.Today);[m
[31m -[m
[31m -                    using (SqlDataAdapter adapter = new SqlDataAdapter(command))[m
[31m -                    {[m
[31m -                        DataTable todayData = new DataTable();[m
[31m -                        adapter.Fill(todayData);[m
[31m -[m
[31m -                        // Bind the DataGridView to the filtered data[m
[31m -                        dataGridView1.DataSource = todayData;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        private void addbtn_Click(object sender, EventArgs e)[m
[31m -        {[m
[31m -            Users form3 = new Users();[m
[31m -            form3.Show();[m
[31m -            this.Hide();[m
[31m -        }[m
[31m -[m
[31m -        private void dashboard_Load(object sender, EventArgs e)[m
[31m -        {[m
[31m -            lblusername.Text = "Welcome, " + username;[m
[31m -           [m
[31m -        [m
[31m -            lbldate.Text = DateTime.Now.ToLongDateString();[m
[31m -            LoadTodayData();[m
[31m -            timer1.Start();[m
[31m -[m
[31m -        }[m
[31m -[m
[31m -        private void dashboard_Load_1(object sender, EventArgs e)[m
[31m -        {[m
[31m -            // TODO: This line of code loads data into the 'loginformDataSet7.stu_data' table. You can move, or remove it, as needed.[m
[31m -            this.stu_dataTableAdapter.Fill(this.loginformDataSet7.stu_data);[m
[31m -[m
[31m -[m
[31m -[m
[31m -            LoadTodayData();[m
[31m -[m
[31m -        }[m
[31m -[m
[31m -        private void button3_Click(object sender, EventArgs e)[m
[31m -        {[m
[31m -            Button clickedButton = sender as Button; // Cast the sender to a Button[m
[31m -[m
[31m -            if (clickedButton != null)[m
[31m -            {[m
[31m -                lblshow.Text = "" + clickedButton.Text;[m
[31m -            }[m
[31m -        }[m
[31m -[m
[31m -        private void button4_Click(object sender, EventArgs e)[m
[31m -        {[m
[31m -            Button clickedButton = sender as Button; // Cast the sender to a Button[m
[31m -[m
[31m -            if (clickedButton != null)[m
[31m -            {[m
[31m -                lblshow.Text = " " + clickedButton.Text;[m
[31m -            }[m
[31m -        }[m
[31m -[m
[31m -        private void button5_Click(object sender, EventArgs e)[m
[31m -        {[m
[31m -            Button clickedButton = sender as Button; // Cast the sender to a Button[m
[31m -[m
[31m -            if (clickedButton != null)[m
[31m -            {[m
[31m -                lblshow.Text = " " + clickedButton.Text;[m
[31m -            }[m
[31m -        }[m
[31m -[m
[31m -        private void addbtn_Click_1(object sender, EventArgs e)[m
[31m -        {[m
[31m -            Button clickedButton = sender as Button; // Cast the sender to a Button[m
[31m -[m
[31m -            Users form3 = new Users();[m
[31m -            form3.Show();[m
[31m -            this.Hide();[m
[31m -[m
[31m -            if (clickedButton != null)[m
[31m -            {[m
[31m -                lblshow.Text = "" + clickedButton.Text;[m
[31m -            }[m
[31m -        }[m
[31m -[m
[31m -        private void button1_Click(object sender, EventArgs e)[m
[31m -        {[m
[31m -[m
[31m -        }[m
[31m -[m
[31m -        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)[m
[31m -        {[m
[31m -[m
[31m -        }[m
[31m -[m
[31m -        private void button1_Click_1(object sender, EventArgs e)[m
[31m -        {[m
[31m -            LoadTodayData();[m
[31m -        }[m
[31m -[m
[31m -        private void timer1_Tick(object sender, EventArgs e)[m
[31m -        {[m
[31m -            lbltime.Text = DateTime.Now.ToLongTimeString();[m
[31m -        }[m
[31m -[m
[31m -        private void lbldate_Click(object sender, EventArgs e)[m
[31m -        {[m
[31m -[m
[31m -        }[m
[31m -    }[m
[31m -[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿using System;[m
[32m +using System.Collections.Generic;[m
[32m +using System.ComponentModel;[m
[32m +using System.Data;[m
[32m +using System.Drawing;[m
[32m +using System.Linq;[m
[32m +using System.Text;[m
[32m +using System.Threading.Tasks;[m
[32m +using System.Windows.Forms;[m
[32m +using System.Data.SqlClient;[m
[32m +using System.IO;[m
[32m +[m
[32m +namespace capstoneproject[m
[32m +{[m
[32m +    public partial class dashboard : Form[m
[32m +    {[m
[32m +        public string username { get; set; }[m
[32m +[m
[32m +        private const string ConnectionString = "Data Source=reyn\\SQLEXPRESS;Initial Catalog=loginform;Integrated Security=True";[m
[32m +        public dashboard()[m
[32m +        {[m
[32m +            InitializeComponent();[m
[32m +            dateTimePicker.ValueChanged += dateTimePicker1_ValueChanged;[m
[32m +[m
[32m +        }[m
[32m +        private void LoadTodayData()[m
[32m +        {[m
[32m +            using (SqlConnection connection = new SqlConnection(ConnectionString))[m
[32m +            {[m
[32m +                connection.Open();[m
[32m +[m
[32m +                // Create a SQL query to fetch today's data[m
[32m +                string query = "SELECT Name, Department, Purpose, QueueNumber,QueueCode, QueueDate FROM stu_data WHERE CONVERT(date, QueueDate) = @QueueDate";[m
[32m +[m
[32m +                using (SqlCommand command = new SqlCommand(query, connection))[m
[32m +                {[m
[32m +                    command.Parameters.AddWithValue("@QueueDate", DateTime.Today);[m
[32m +[m
[32m +                    using (SqlDataAdapter adapter = new SqlDataAdapter(command))[m
[32m +                    {[m
[32m +                        DataTable todayData = new DataTable();[m
[32m +                        adapter.Fill(todayData);[m
[32m +[m
[32m +                        // Bind the DataGridView to the filtered data[m
[32m +                        dataGridView1.DataSource = todayData;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        private void addbtn_Click(object sender, EventArgs e)[m
[32m +        {[m
[32m +            Users form3 = new Users();[m
[32m +            form3.Show();[m
[32m +            this.Hide();[m
[32m +        }[m
[32m +[m
[32m +        private void dashboard_Load(object sender, EventArgs e)[m
[32m +        {[m
[32m +            lblusername.Text = "Welcome, " + username;[m
[32m +[m
[32m +[m
[32m +            lbldate.Text = DateTime.Now.ToLongDateString();[m
[32m +            LoadTodayData();[m
[32m +            timer1.Start();[m
[32m +[m
[32m +        }[m
[32m +[m
[32m +        private void dashboard_Load_1(object sender, EventArgs e)[m
[32m +        {[m
[32m +            // TODO: This line of code loads data into the 'loginformDataSet.tbl_login' table. You can move, or remove it, as needed.[m
[32m +            this.tbl_loginTableAdapter.Fill(this.loginformDataSet.tbl_login);[m
[32m +            // TODO: This line of code loads data into the 'loginformDataSet7.stu_data' table. You can move, or remove it, as needed.[m
[32m +            this.stu_dataTableAdapter.Fill(this.loginformDataSet7.stu_data);[m
[32m +[m
[32m +[m
[32m +[m
[32m +            LoadTodayData();[m
[32m +[m
[32m +        }[m
[32m +[m
[32m +        private void button3_Click(object sender, EventArgs e)[m
[32m +        {[m
[32m +            Button clickedButton = sender as Button; // Cast the sender to a Button[m
[32m +[m
[32m +            if (clickedButton != null)[m
[32m +            {[m
[32m +                lblshow.Text = "" + clickedButton.Text;[m
[32m +            }[m
[32m +        }[m
[32m +[m
[32m +        private void button4_Click(object sender, EventArgs e)[m
[32m +        {[m
[32m +            Button clickedButton = sender as Button; // Cast the sender to a Button[m
[32m +[m
[32m +            if (clickedButton != null)[m
[32m +            {[m
[32m +                lblshow.Text = " " + clickedButton.Text;[m
[32m +            }[m
[32m +        }[m
[32m +[m
[32m +        private void button5_Click(object sender, EventArgs e)[m
[32m +        {[m
[32m +            Button clickedButton = sender as Button; // Cast the sender to a Button[m
[32m +[m
[32m +            if (clickedButton != null)[m
[32m +            {[m
[32m +                lblshow.Text = " " + clickedButton.Text;[m
[32m +            }[m
[32m +        }[m
[32m +[m
[32m +        private void addbtn_Click_1(object sender, EventArgs e)[m
[32m +        {[m
[32m +            Button clickedButton = sender as Button; // Cast the sender to a Button[m
[32m +[m
[32m +            Users form3 = new Users();[m
[32m +            form3.Show();[m
[32m +            this.Hide();[m
[32m +[m
[32m +            if (clickedButton != null)[m
[32m +            {[m
[32m +                lblshow.Text = "" + clickedButton.Text;[m
[32m +            }[m
[32m +        }[m
[32m +[m
[32m +        private void button1_Click(object sender, EventArgs e)[m
[32m +        {[m
[32m +[m
[32m +        }[m
[32m +[m
[32m +        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)[m
[32m +        {[m
[32m +[m
[32m +        }[m
[32m +[m
[32m +        private void button1_Click_1(object sender, EventArgs e)[m
[32m +        {[m
[32m +            LoadTodayData();[m
[32m +        }[m
[32m +[m
[32m +        private void timer1_Tick(object sender, EventArgs e)[m
[32m +        {[m
[32m +            lbltime.Text = DateTime.Now.ToLongTimeString();[m
[32m +        }[m
[32m +[m
[32m +        private void lbldate_Click(object sender, EventArgs e)[m
[32m +        {[m
[32m +[m
[32m +        }[m
[32m +[m
[32m +        private void panel1_Paint(object sender, PaintEventArgs e)[m
[32m +        {[m
[32m +[m
[32m +        }[m
[32m +[m
[32m +        private void pictureBox1_Click(object sender, EventArgs e)[m
[32m +        {[m
[32m +[m
[32m +        }[m
[32m +[m
[32m +        private void lblusername_Click(object sender, EventArgs e)[m
[32m +        {[m
[32m +[m
[32m +        }[m
[32m +[m
[32m +        private void pictureBox2_Click(object sender, EventArgs e)[m
[32m +        {[m
[32m +            DialogResult result = MessageBox.Show("Are you sure you want to exit?", "Exit Confirmation", MessageBoxButtons.YesNo, MessageBoxIcon.Question);[m
[32m +[m
[32m +            if (result == DialogResult.Yes)[m
[32m +            {[m
[32m +                // Close the application[m
[32m +                Application.Exit();[m
[32m +            }[m
[32m +        }[m
[32m +[m
[32m +        private void txtsearch_TextChanged(object sender, EventArgs e)[m
[32m +        {[m
[32m +            string searchText = txtsearch.Text;[m
[32m +            if (!string.IsNullOrEmpty(searchText))[m
[32m +            {[m
[32m +                ((DataTable)dataGridView1.DataSource).DefaultView.RowFilter = $"Name LIKE '%{searchText}%'";[m
[32m +            }[m
[32m +            else[m
[32m +            {[m
[32m +                ((DataTable)dataGridView1.DataSource).DefaultView.RowFilter = string.Empty;[m
[32m +            }[m
[32m +        }[m
[32m +[m
[32m +        private void pictureBox3_Click(object sender, EventArgs e)[m
[32m +        {[m
[32m +            LoadTodayData();[m
[32m +        }[m
[32m +[m
[32m +        private void pictureBox4_Click(object sender, EventArgs e)[m
[32m +        {[m
[32m +            string searchText = txtsearch.Text.Trim();[m
[32m +[m
[32m +            if (!string.IsNullOrEmpty(searchText))[m
[32m +            {[m
[32m +                // Filter the DataGridView based on the search text[m
[32m +                string filterExpression = $"Name LIKE '%{searchText}%' OR Department LIKE '%{searchText}%' OR Purpose LIKE '%{searchText}%'";[m
[32m +                ((DataTable)dataGridView1.DataSource).DefaultView.RowFilter = filterExpression;[m
[32m +            }[m
[32m +            else[m
[32m +            {[m
[32m +                // Clear the filter to display all data[m
[32m +                ((DataTable)dataGridView1.DataSource).DefaultView.RowFilter = string.Empty;[m
[32m +            }[m
[32m +        }[m
[32m +       [m
[32m +        private void label1_Click(object sender, EventArgs e)[m
[32m +        {[m
[32m +[m
[32m +        }[m
[32m +[m
[32m +        private void dateTimePicker1_ValueChanged(object sender, EventArgs e)[m
[32m +        {[m
[32m +            lbldate.Text = dateTimePicker.Value.ToLongDateString();[m
[32m +        }[m
[32m +[m
[32m +        private void panel6_Paint(object sender, PaintEventArgs e)[m
[32m +        {[m
[32m +[m
[32m +        }[m
[32m +[m
[32m +        private void label1_Click_1(object sender, EventArgs e)[m
[32m +        {[m
[32m +[m
[32m +        }[m
[32m +    }[m
[32m++=======[m
[32m++ï»¿using System;[m
[32m++using System.Collections.Generic;[m
[32m++using System.ComponentModel;[m
[32m++using System.Data;[m
[32m++using System.Drawing;[m
[32m++using System.Linq;[m
[32m++using System.Text;[m
[32m++using System.Threading.Tasks;[m
[32m++using System.Windows.Forms;[m
[32m++using System.Data.SqlClient;[m
[32m++using System.IO;[m
[32m++[m
[32m++namespace capstoneproject[m
[32m++{[m
[32m++    public partial class dashboard : Form[m
[32m++    {[m
[32m++        public string username { get; set; }[m
[32m++[m
[32m++        private const string ConnectionString = "Data Source=reyn\\SQLEXPRESS;Initial Catalog=loginform;Integrated Security=True";[m
[32m++        public dashboard()[m
[32m++        {[m
[32m++            InitializeComponent();[m
[32m++[m
[32m++            [m
[32m++        }[m
[32m++        private void LoadTodayData()[m
[32m++        {[m
[32m++            using (SqlConnection connection = new SqlConnection(ConnectionString))[m
[32m++            {[m
[32m++                connection.Open();[m
[32m++[m
[32m++                // Create a SQL query to fetch today's data[m
[32m++                string query = "SELECT Name, Department, Purpose, QueueNumber,QueueCode, QueueDate FROM stu_data WHERE CONVERT(date, QueueDate) = @QueueDate";[m
[32m++[m
[32m++                using (SqlCommand command = new SqlCommand(query, connection))[m
[32m++                {[m
[32m++                    command.Parameters.AddWithValue("@QueueDate", DateTime.Today);[m
[32m++[m
[32m++                    using (SqlDataAdapter adapter = new SqlDataAdapter(command))[m
[32m++                    {[m
[32m++                        DataTable todayData = new DataTable();[m
[32m++                        adapter.Fill(todayData);[m
[32m++[m
[32m++                        // Bind the DataGridView to the filtered data[m
[32m++                        dataGridView1.DataSource = todayData;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        private void addbtn_Click(object sender, EventArgs e)[m
[32m++        {[m
[32m++            Users form3 = new Users();[m
[32m++            form3.Show();[m
[32m++ warning: in the working copy of 'capstoneproject/dashboard.resx', LF will be replaced by CRLF the next time Git touches it
           this.Hide();[m
[32m++        }[m
[32m++[m
[32m++        private void dashboard_Load(object sender, EventArgs e)[m
[32m++        {[m
[32m++            lblusername.Text = "Welcome, " + username;[m
[32m++           [m
[32m++        [m
[32m++            lbldate.Text = DateTime.Now.ToLongDateString();[m
[32m++            LoadTodayData();[m
[32m++            timer1.Start();[m
[32m++[m
[32m++        }[m
[32m++[m
[32m++        private void dashboard_Load_1(object sender, EventArgs e)[m
[32m++        {[m
[32m++            // TODO: This line of code loads data into the 'loginformDataSet7.stu_data' table. You can move, or remove it, as needed.[m
[32m++            this.stu_dataTableAdapter.Fill(this.loginformDataSet7.stu_data);[m
[32m++[m
[32m++[m
[32m++[m
[32m++            LoadTodayData();[m
[32m++[m
[32m++        }[m
[32m++[m
[32m++        private void button3_Click(object sender, EventArgs e)[m
[32m++        {[m
[32m++            Button clickedButton = sender as Button; // Cast the sender to a Button[m
[32m++[m
[32m++            if (clickedButton != null)[m
[32m++            {[m
[32m++                lblshow.Text = "" + clickedButton.Text;[m
[32m++            }[m
[32m++        }[m
[32m++[m
[32m++        private void button4_Click(object sender, EventArgs e)[m
[32m++        {[m
[32m++            Button clickedButton = sender as Button; // Cast the sender to a Button[m
[32m++[m
[32m++            if (clickedButton != null)[m
[32m++            {[m
[32m++                lblshow.Text = " " + clickedButton.Text;[m
[32m++            }[m
[32m++        }[m
[32m++[m
[32m++        private void button5_Click(object sender, EventArgs e)[m
[32m++        {[m
[32m++            Button clickedButton = sender as Button; // Cast the sender to a Button[m
[32m++[m
[32m++            if (clickedButton != null)[m
[32m++            {[m
[32m++                lblshow.Text = " " + clickedButton.Text;[m
[32m++            }[m
[32m++        }[m
[32m++[m
[32m++        private void addbtn_Click_1(object sender, EventArgs e)[m
[32m++        {[m
[32m++            Button clickedButton = sender as Button; // Cast the sender to a Button[m
[32m++[m
[32m++            Users form3 = new Users();[m
[32m++            form3.Show();[m
[32m++            this.Hide();[m
[32m++[m
[32m++            if (clickedButton != null)[m
[32m++            {[m
[32m++                lblshow.Text = "" + clickedButton.Text;[m
[32m++            }[m
[32m++        }[m
[32m++[m
[32m++        private void button1_Click(object sender, EventArgs e)[m
[32m++        {[m
[32m++[m
[32m++        }[m
[32m++[m
[32m++        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)[m
[32m++        {[m
[32m++[m
[32m++        }[m
[32m++[m
[32m++        private void button1_Click_1(object sender, EventArgs e)[m
[32m++        {[m
[32m++            LoadTodayData();[m
[32m++        }[m
[32m++[m
[32m++        private void timer1_Tick(object sender, EventArgs e)[m
[32m++        {[m
[32m++            lbltime.Text = DateTime.Now.ToLongTimeString();[m
[32m++        }[m
[32m++[m
[32m++        private void lbldate_Click(object sender, EventArgs e)[m
[32m++        {[m
[32m++[m
[32m++        }[m
[32m++    }[m
[32m++[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  }[m
[1mdiff --cc capstoneproject/dashboard.resx[m
[1mindex 6c2be8b,0653be4..0000000[m
[1m--- a/capstoneproject/dashboard.resx[m
[1m+++ b/capstoneproject/dashboard.resx[m
[36m@@@ -1,2302 -1,135 +1,2439 @@@[m
[31m -ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[31m -<root>[m
[31m -  <!-- [m
[31m -    Microsoft ResX Schema [m
[31m -    [m
[31m -    Version 2.0[m
[31m -    [m
[31m -    The primary goals of this format is to allow a simple XML format [m
[31m -    that is mostly human readable. The generation and parsing of the [m
[31m -    various data types are done through the TypeConverter classes [m
[31m -    associated with the data types.[m
[31m -    [m
[31m -    Example:[m
[31m -    [m
[31m -    ... ado.net/XML headers & schema ...[m
[31m -    <resheader name="resmimetype">text/microsoft-resx</resheader>[m
[31m -    <resheader name="version">2.0</resheader>[m
[31m -    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>[m
[31m -    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>[m
[31m -    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>[m
[31m -    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>[m
[31m -    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">[m
[31m -        <value>[base64 mime encoded serialized .NET Framework object]</value>[m
[31m -    </data>[m
[31m -    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">[m
[31m -        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>[m
[31m -        <comment>This is a comment</comment>[m
[31m -    </data>[m
[31m -                [m
[31m -    There are any number of "resheader" rows that contain simple [m
[31m -    name/value pairs.[m
[31m -    [m
[31m -    Each data row contains a name, and value. The row also contains a [m
[31m -    type or mimetype. Type corresponds to a .NET class that support [m
[31m -    text/value conversion through the TypeConverter architecture. [m
[31m -    Classes that don't support this are serialized and stored with the [m
[31m -    mimetype set.[m
[31m -    [m
[31m -    The mimetype is used for serialized objects, and tells the [m
[31m -    ResXResourceReader how to depersist the object. This is currently not [m
[31m -    extensible. For a given mimetype the value must be set accordingly:[m
[31m -    [m
[31m -    Note - application/x-microsoft.net.object.binary.base64 is the format [m
[31m -    that the ResXResourceWriter will generate, however the reader can [m
[31m -    read any of the formats listed below.[m
[31m -    [m
[31m -    mimetype: application/x-microsoft.net.object.binary.base64[m
[31m -    value   : The object must be serialized with [m
[31m -            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter[m
[31m -            : and then encoded with base64 encoding.[m
[31m -    [m
[31m -    mimetype: application/x-microsoft.net.object.soap.base64[m
[31m -    value   : The object must be serialized with [m
[31m -            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter[m
[31m -            : and then encoded with base64 encoding.[m
[31m -[m
[31m -    mimetype: application/x-microsoft.net.object.bytearray.base64[m
[31m -    value   : The object must be serialized into a byte array [m
[31m -            : using a System.ComponentModel.TypeConverter[m
[31m -            : and then encoded with base64 encoding.[m
[31m -    -->[m
[31m -  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">[m
[31m -    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />[m
[31m -    <xsd:element name="root" msdata:IsDataSet="true">[m
[31m -      <xsd:complexType>[m
[31m -        <xsd:choice maxOccurs="unbounded">[m
[31m -          <xsd:element name="metadata">[m
[31m -            <xsd:complexType>[m
[31m -              <xsd:sequence>[m
[31m -                <xsd:element name="value" type="xsd:string" minOccurs="0" />[m
[31m -              </xsd:sequence>[m
[31m -              <xsd:attribute name="name" use="required" type="xsd:string" />[m
[31m -              <xsd:attribute name="type" type="xsd:string" />[m
[31m -              <xsd:attribute name="mimetype" type="xsd:string" />[m
[31m -              <xsd:attribute ref="xml:space" />[m
[31m -            </xsd:complexType>[m
[31m -          </xsd:element>[m
[31m -          <xsd:element name="assembly">[m
[31m -            <xsd:complexType>[m
[31m -              <xsd:attribute name="alias" type="xsd:string" />[m
[31m -              <xsd:attribute name="name" type="xsd:string" />[m
[31m -            </xsd:complexType>[m
[31m -          </xsd:element>[m
[31m -          <xsd:element name="data">[m
[31m -            <xsd:complexType>[m
[31m -              <xsd:sequence>[m
[31m -                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />[m
[31m -                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />[m
[31m -              </xsd:sequence>[m
[31m -              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />[m
[31m -              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />[m
[31m -              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />[m
[31m -              <xsd:attribute ref="xml:space" />[m
[31m -            </xsd:complexType>[m
[31m -          </xsd:element>[m
[31m -          <xsd:element name="resheader">[m
[31m -            <xsd:complexType>[m
[31m -              <xsd:sequence>[m
[31m -                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />[m
[31m -              </xsd:sequence>[m
[31m -              <xsd:attribute name="name" type="xsd:string" use="required" />[m
[31m -            </xsd:complexType>[m
[31m -          </xsd:element>[m
[31m -        </xsd:choice>[m
[31m -      </xsd:complexType>[m
[31m -    </xsd:element>[m
[31m -  </xsd:schema>[m
[31m -  <resheader name="resmimetype">[m
[31m -    <value>text/microsoft-resx</value>[m
[31m -  </resheader>[m
[31m -  <resheader name="version">[m
[31m -    <value>2.0</value>[m
[31m -  </resheader>[m
[31m -  <resheader name="reader">[m
[31m -    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>[m
[31m -  </resheader>[m
[31m -  <resheader name="writer">[m
[31m -    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>[m
[31m -  </resheader>[m
[31m -  <metadata name="QueueDate.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">[m
[31m -    <value>True</value>[m
[31m -  </metadata>[m
[31m -  <metadata name="studataBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[31m -    <value>171, 17</value>[m
[31m -  </metadata>[m
[31m -  <metadata name="loginformDataSet7.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[31m -    <value>17, 17</value>[m
[31m -  </metadata>[m
[31m -  <metadata name="stu_dataTableAdapter.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[31m -    <value>342, 17</value>[m
[31m -  </metadata>[m
[31m -  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[31m -    <value>512, 17</value>[m
[31m -  </metadata>[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m +<root>[m
[32m +  <!-- [m
[32m +    Microsoft ResX Schema [m
[32m +    [m
[32m +    Version 2.0[m
[32m +    [m
[32m +    The primary goals of this format is to allow a simple XML format [m
[32m +    that is mostly human readable. The generation and parsing of the [m
[32m +    various data types are done through the TypeConverter classes [m
[32m +    associated with the data types.[m
[32m +    [m
[32m +    Example:[m
[32m +    [m
[32m +    ... ado.net/XML headers & schema ...[m
[32m +    <resheader name="resmimetype">text/microsoft-resx</resheader>[m
[32m +    <resheader name="version">2.0</resheader>[m
[32m +    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>[m
[32m +    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>[m
[32m +    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>[m
[32m +    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>[m
[32m +    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">[m
[32m +        <value>[base64 mime encoded serialized .NET Framework object]</value>[m
[32m +    </data>[m
[32m +    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">[m
[32m +        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>[m
[32m +        <comment>This is a comment</comment>[m
[32m +    </data>[m
[32m +                [m
[32m +    There are any number of "resheader" rows that contain simple [m
[32m +    name/value pairs.[m
[32m +    [m
[32m +    Each data row contains a name, and value. The row also contains a [m
[32m +    type or mimetype. Type corresponds to a .NET class that support [m
[32m +    text/value conversion through the TypeConverter architecture. [m
[32m +    Classes that don't support this are serialized and stored with the [m
[32m +    mimetype set.[m
[32m +    [m
[32m +    The mimetype is used for serialized objects, and tells the [m
[32m +    ResXResourceReader how to depersist the object. This is currently not [m
[32m +    extensible. For a given mimetype the value must be set accordingly:[m
[32m +    [m
[32m +    Note - application/x-microsoft.net.object.binary.base64 is the format [m
[32m +    that the ResXResourceWriter will generate, however the reader can [m
[32m +    read any of the formats listed below.[m
[32m +    [m
[32m +    mimetype: application/x-microsoft.net.object.binary.base64[m
[32m +    value   : The object must be serialized with [m
[32m +            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter[m
[32m +            : and then encoded with base64 encoding.[m
[32m +    [m
[32m +    mimetype: application/x-microsoft.net.object.soap.base64[m
[32m +    value   : The object must be serialized with [m
[32m +            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter[m
[32m +            : and then encoded with base64 encoding.[m
[32m +[m
[32m +    mimetype: application/x-microsoft.net.object.bytearray.base64[m
[32m +    value   : The object must be serialized into a byte array [m
[32m +            : using a System.ComponentModel.TypeConverter[m
[32m +            : and then encoded with base64 encoding.[m
[32m +    -->[m
[32m +  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">[m
[32m +    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />[m
[32m +    <xsd:element name="root" msdata:IsDataSet="true">[m
[32m +      <xsd:complexType>[m
[32m +        <xsd:choice maxOccurs="unbounded">[m
[32m +          <xsd:element name="metadata">[m
[32m +            <xsd:complexType>[m
[32m +              <xsd:sequence>[m
[32m +                <xsd:element name="value" type="xsd:string" minOccurs="0" />[m
[32m +              </xsd:sequence>[m
[32m +              <xsd:attribute name="name" use="required" type="xsd:string" />[m
[32m +              <xsd:attribute name="type" type="xsd:string" />[m
[32m +              <xsd:attribute name="mimetype" type="xsd:string" />[m
[32m +              <xsd:attribute ref="xml:space" />[m
[32m +            </xsd:complexType>[m
[32m +          </xsd:element>[m
[32m +          <xsd:element name="assembly">[m
[32m +            <xsd:complexType>[m
[32m +              <xsd:attribute name="alias" type="xsd:string" />[m
[32m +              <xsd:attribute name="name" type="xsd:string" />[m
[32m +            </xsd:complexType>[m
[32m +          </xsd:element>[m
[32m +          <xsd:element name="data">[m
[32m +            <xsd:complexType>[m
[32m +              <xsd:sequence>[m
[32m +                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />[m
[32m +                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />[m
[32m +              </xsd:sequence>[m
[32m +              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />[m
[32m +              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />[m
[32m +              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />[m
[32m +              <xsd:attribute ref="xml:space" />[m
[32m +            </xsd:complexType>[m
[32m +          </xsd:element>[m
[32m +          <xsd:element name="resheader">[m
[32m +            <xsd:complexType>[m
[32m +              <xsd:sequence>[m
[32m +                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />[m
[32m +              </xsd:sequence>[m
[32m +              <xsd:attribute name="name" type="xsd:string" use="required" />[m
[32m +            </xsd:complexType>[m
[32m +          </xsd:element>[m
[32m +        </xsd:choice>[m
[32m +      </xsd:complexType>[m
[32m +    </xsd:element>[m
[32m +  </xsd:schema>[m
[32m +  <resheader name="resmimetype">[m
[32m +    <value>text/microsoft-resx</value>[m
[32m +  </resheader>[m
[32m +  <resheader name="version">[m
[32m +    <value>2.0</value>[m
[32m +  </resheader>[m
[32m +  <resheader name="reader">[m
[32m +    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>[m
[32m +  </resheader>[m
[32m +  <resheader name="writer">[m
[32m +    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>[m
[32m +  </resheader>[m
[32m +  <metadata name="tblloginBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[32m +    <value>747, 17</value>[m
[32m +  </metadata>[m
[32m +  <metadata name="QueueDate.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">[m
[32m +    <value>True</value>[m
[32m +  </metadata>[m
[32m +  <metadata name="studataBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[32m +    <value>171, 17</value>[m
[32m +  </metadata>[m
[32m +  <metadata name="loginformDataSet7.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[32m +    <value>17, 17</value>[m
[32m +  </metadata>[m
[32m +  <metadata name="loginformDataSet7.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[32m +    <value>17, 17</value>[m
[32m +  </metadata>[m
[32m +  <metadata name="stu_dataTableAdapter.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[32m +    <value>342, 17</value>[m
[32m +  </metadata>[m
[32m +  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[32m +    <value>512, 17</value>[m
[32m +  </metadata>[m
[32m +  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />[m
[32m +  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">[m
[32m +    <value>[m
[32m +        iVBORw0KGgoAAAANSUhEUgAAA6AAAABkCAYAAACYVF2OAAAABGdBTUEAALGPC/xhBQAA/8dJREFUeF7s[m
[32m +        vQWYHUX6xjtxHJZdYFllWWGBEDdCcIvbxN3d3d0IDiE+yUhskvGMxT0hPhl3d8u4Jnnv99Y5Nek5nIQA[m
[32m +        y/7v3js1z/tUd3VZV/c5U7/zldg4NG6Ne8mxSZtqshbnXnJq9N+XfaNWdyV12P5qc+xo2BJ7W74Ft/c7[m
[32m +        wbtDDxzs2BMeHbrDs3NPeHaxhWdXW7h07QmXbj3hKr5bF7ku8urUEwepzr3g1bnvz5Pkbyn3jj3g2r4r[m
[32m +        XN5rD1eRfau22N6sBeyaS11bNJfjJtjc6DXslPPDnbvg0qDBuDRgIK70H4QbQ4bj6oBBuD50SJWuDaEG[m
[32m +        Vylg2NB76vqw/qK+VQoY3q9KV0YOQsDkcQidNRVXJo7BiWED4NOvJ3wH2sJngLSTbTe4dOkA1y4d4dGt[m
[32m +        Mzy7d4FXj67wFrn37AwPWwnrJWG9u1b5B/t0kzx6wLd/Txwa1BvHpPzvJ43G9RkTcWXqeFybPkEdB8yc[m
[32m +        hOsi+oGzpyJozjQEzpmKq7Mn4/yUMTg0rB88+naDt9TlyIgBuDFvGryH2+LY+IG4OHsszk4biXMzRqlz[m
[32m +        ryHd4T24Ow4O7ArfIfL8BnaDe99OODyiDy7PHIvgRdMQvmwWwpbORMTy2YhcMeeuVlKzqhS1cnY1RS5n[m
[32m +        mpkIWzETwatmImT9XCTZrUOeyyZkeO1D6kEXpHkfQJqfK9L9XUQHqpTmd2/FuTggcp8d4lwdkeC+C4ke[m
[32m +        u5HstRdJnnuQcnBf1TGV6LFL+QxjXEsly7VUb2ek+0q5vvulPs4qD4almPNJ9NyNJAlL8ZEwUarES5X4[m
[32m +        1upG8V4yDrki87AbUuReUg5RLkg97KqUdsTNdCx++nEPpJ/wRMYJL3Wc4L8f4W72iPfdhyhPJ0R77ULM[m
[32m +        wd1Vfqz3HsT57EWM713FUn77qhTn5yJyrVK8v5vyY3z2I1LuI9z7rkLk/mIPuSH30nGURV5DTmIoshJC[m
[32m +        kR0fhty4COTFRaMgPhb5cXG4GR+FvIRo5CfGKBUkxaIwOQ5FKfEoSkuoppKMpB9RMkozRVkpKBZfq0TO[m
[32m +        jSrNTq9SWU46ynMzJE2aOi/PzfzZKsvPMigb5QX3VkVhTpXKC3NRVnizShXF+Q+syuLie6qkqBAlxYUo[m
[32m +        LSlCWWlxNZVUlKD0VhkqKspQWVqKjPgEBJ67gOsnz+DSkaMoz85EZnQUjnu44/Lxo6jMyUbQubO4dOwo[m
[32m +        wi9dRWxAEFLCIpEqyktMlut5uCUqKylGRVkpblWW47aIx1q3b1XcW5UVpjRyfOd25U/TrdtVwm3qTpXu[m
[32m +        3Pl1VONq3K/qbhnE1838ytGrFJXdQxWiGlfjalyNe1Bns0tA7T8hJ4G+X1sE251NTCJg8txRwNOkNtjd[m
[32m +        +A3Yv9YGO+R4mwDztpZvwOmdj+DSqTs8Ova6q069rQPjT1WXPj8ATKM8u/cWWJPyBGg9O/WAp8Cnx8dd[m
[32m +        saPlm9j8aiNsevkVuZdmsGvcBPbNmiufcnv7HZzt1UvAcwAuDxyodGXQQFwdPAhXBTKvGHRNwLKahg+q[m
[32m +        0vVhJgWIbogCBw9B8NDhuDF0GC5JXheHDcH3o4biqoBnsEBfwMzJODNmqIJGwqefgCePCZOu3QU+zXLr[m
[32m +        0VGgs1MVeHr06lAlz94d4d23C3wHCHz2FwgUHR5iizNjB+HylJG4NmMsrk4fI8A5DgGzBUJnieT4quj6[m
[32m +        7Anij0Xg3Em4PGMM/Ib3gmvfjjg6dgD8R/TG2SnDcXrSUFyZMx6nJg3G9zNG4vJsgeUJA3FwcFd4DOwM[m
[32m +        r0FStkCo1wAB4v6d4D2oK85NHoqQJVNN8LhsuvK1qgHmKgHTNdMRLopYPR3R4octmYDoFZNFkxCzfIqA[m
[32m +        62SErJ2NiA0rkey8BekCT8l++5FOUFPQZ5KCQAGkDIGnDHWNUOiMTMKoD4FwrwCnPcL3bEHY7s0IdvxO[m
[32m +        nSe4OyLe3UFA0wlJAmlGJXsJmAq0aVleZ/okT4kn11Ik/xSpG5UskJcqAJggAEilyHGGQGS6wGGan7MS[m
[32m +        jxnG4ySBvmR/Z4HM/Ug5LHB6RGDziNzT4QNIPiTh4qdJWPpRQqeEm5ViVtoxgdLjbgKh7gKg+xDhvhMx[m
[32m +        3rsEFh2rFO2zq5pifAVG/QRG/aVdLBQrdYuV+sRK2ZQK95NwSRfpI23ouxPB3jsRdmQfki4fQU7kVdyM[m
[32m +        CUJubIhAZ2QVaGpfQ6c+rgpLMECoBYBSxemJd2FTxOO74ckoI2RagU6jjABKlQh8alkDywdVdQCtrvsB[m
[32m +        aGmRCUBv5d8E8m7iTkEeKovyUFIiUFeYjzv5+SgW2MwrzUOBwGplrsS7WQgUFKGovAS3s0Q5hcgqTUMa[m
[32m +        MlBZXgok3EZJcjpu3SpGftANfP/lNzjsuBVuznbwWbYWu8ZPQ8rl8yguyxDI3Au7KdOAgECkRATgmzVr[m
[32m +        EHrmGpCRh9Uf9cHJOWuB1CwsGCHfDwc8kfH9Uaxq0xb+Gz9FkHy2JrVqhdyTx7FzxFjsGTwMZZFBAmkC[m
[32m +        uRkZiD98DgUh0SitEPAtK5BecomoAiXlFci9XYFCgWBIfW/LeaX0ru/kSxe6hDBZibI7ZcKTci8Sr0Ku[m
[32m +        lcs/SzmD5KB8njPcCKNCshIgvXazrMHjf0I1rsbVuBpX42rc/7qz2S0wdy9ZA817yRow/udlBM67MllA[m
[32m +        2yj43Cn+jiZtsavtu3D9uAu8BABdOhNABQbN8vwvAahbl+7w7Cbw2VXAs1M37H37A2xr1hpbGrfE5lca[m
[32m +        il5VwLmzaTNsb9RY+crqOXCQAOcgfN+vn0CngKbAJ895TIvn1aF3dT8AVRBKmUE0aNgwBA0fgRvDh+PK[m
[32m +        cAHPMSMRMnMKQmZPw8VJo3F4cF9ltfQf2EuBp7vApUu3u+B5LwB1t20vkGoCT0KnFsHz9JiBkvcIE3AS[m
[32m +        MmeMUxAaIOAZIMAZMGcCAudNUj4hlDo1bhDc+3SEx4AuCkIvzR6HQyP74IwAKCE0YMFknJs2DEfH9IXv[m
[32m +        MGlbAU+fYd3hPaQbPAVAXft8rODz7KQhCjIjV9DiKWC5bEY1+LQE0CgB0KhVMwREZyjfdDwdUQKikaun[m
[32m +        IWi1nH++GJlO36JQIC/HW0BOIFNZPH0FyAwAmibhBFDT+X4FnpkCUoRIgmLork0IctigfAJokOMGBZ8E[m
[32m +        z58LoEyTcpBWUwFOBZ8CZAKfiZIukddFBNGsI673BVATdMrxURcFmgRPdS7HSgxXEtCsOnZRYJosaQmg[m
[32m +        GSc9kC4QmijAGOFhj+iDTj8bQGPM4HlX+wUuDiBG4od6OyDEX/I45Y7csAu4GX0deQKemdHByImLqAFQ[m
[32m +        0f0AtKIgV2SyfpYWiS/wWS6qoARKy0sLUYQy5FUWopSQml+I4pws4TJBsZuE1jKUx6ci+IQ/Du78Fk7r[m
[32m +        1sPjM3vM7DkQEeGBcj0TXw0cjL2LFwJSHjJycWbGCix+vxOQmQbvjRsw+/X3UOJ7EsjOlTj5Aomi8hws[m
[32m +        7NIZpz7/AreLs5CTlyZlS3lRoVja6HUknTwKFAs4B4YAycmIdvfButffAmIjJX0Bzvv5Y9XwiUi6eB0V[m
[32m +        t0oFGgWay0Ulgo43BSEJ0bfK5b6zUFBRhLzbt1BRJgBZeVvAsgKCrAKhAte8TwkDLZza0kkxTFQDoDWu[m
[32m +        xtW4GlfjatxPdzZ7mr6Oe8kaaN5L1oHxP6tdrwkYW+juENw2cGgq4Nnqbbi/3xnenW2V1dGtU3c1rNYq[m
[32m +        QP5S/ZgFVMCTcvmoI5zavYMtTVthe1MB0EbN8d1LLyvopAihe19vi1O2vXBxwCBc6NdfQWeAAOP1oQKK[m
[32m +        CjwHm4bdWgKnpQzwqXVVi8A6fBgCRo9E0MRxCJ85VQ25PTNyMHz6djdbPk0WTwWWApl6aO39APRgX2lv[m
[32m +        s9XTb2B3HBrcU4HnlWmjlTWTFs/LU0fh2kwTeBJGbwh8XhfovD5vIgIXTMEVgczTE4bAa6CU3U86nnLs[m
[32m +        M7SnQGZ/XJo1FsfGDkDQ4mkKPi9LXK/BXeFJ8BzaXVk9eezarz3c+3eUtIMQvGgyolfNEX+KAs2Y1XMF[m
[32m +        KGf/AEKNABotipew2BUz5XgWQpZPQ+CKabguCl4/B5HbP0OuhyPyfQTa3JyQ4SXg5uWCTF9PZFgAaIbZ[m
[32m +        J4imcZir2eJJ2Ay0/1b8Tcr6GbJro7J+XrP7Ul3/JQBK6EwnUAp48rqGTkqDZir1IxZQk5XTDKECnLSE[m
[32m +        8jidYEnL5jE3Zf0kdDJMi+epZikrqIhAGuXpgEgv0S8AUCpaaT9ipC5RUtdIv/2IOOqGtIDTKIwNQFb4[m
[32m +        VYHMUOTGRyAjJhw5CVE1ACq6H4DezjMBaKHAXG7ZTdwsyUVxYS5u38xFUclNZJdky7GAY6lA251yFN4u[m
[32m +        RH5BFjzttmHLxEkoiolDzPkLmCzfX4GffgYkpQvoCSSFpUr0IvkXU4wzGzZgxTsfAdFxuHn1GjwGTEH+[m
[32m +        /kMAranZOcg9dhb2I6dg5tsf4+sRI1EUdFFANBnL23+AoytWCOjlo6BY6lBZgbRrVzD23y0RH3ID5fwr[m
[32m +        LkThnTLJJhtOXXrj8tat2Lp2FfZv3gpkFUj+ebjDgYO3BUoPHsDMPn3guGQljm7ejs0CxcdcneRqMXJv[m
[32m +        CWgSICvKUSr1LkOJwJ7cc3mxCTYrrKgGQGtcjatxNa7G1bif5Wz2NmuL6nq9SrsFLB9UuwiIDyhrcPkg[m
[32m +        2v1aK+xt2Bp7GrbBntfaKCB1pAigAp/73/oYvp16wbdLLxwUAPXu1hsHRWpOpzWA/KWyAqCeBN/OUp4c[m
[32m +        u3fsDOcPPsKONq9jM4faNhcAbdICm19trAD0u5f+ja0NX4PXBx/i+/4DBRCHKf+a+IRObfHUIowSQK8L[m
[32m +        RN5TwyS9GTyvjBiEy9TIQbgkujJ6OALGj0HY9MmInDMD1yaNxeGBveHXr6fZ6tmzar4mfd/+tsoi6tq9[m
[32m +        o0F3AZTw6dVboFPA07c//e44MrQXzo+X+gp0EjIvTRPwnD0eN+ZNMgGnhHHYbcCciQiQsGsCoGenDleW[m
[32m +        zgN92sN7SA8cHzdQwebhUX3VkNvr8yfh/PRRCjxpCaVllENuCZ6UW78OEtZJILUfAgU8I1bMUqBJ6fmc[m
[32m +        hE0Ovw1fLmECmFqWAJqwfBZiRZGE19VzEPL5YkRsXIPsA9uQIZCW4m2aT5np54psXw9k+3giy8tDgFPg[m
[32m +        TA23NYFoJo/F51zNOFcHROzdqmBTWTz3mIbc3tj5DQJ2fK10ectniN5vp6yg2hKqgPNeIoQazjn0Vokw[m
[32m +        qvzdavgtwTLzsECkQCfnohIyM+T8ngAqfpK/GUI5BFfE4bgchkv4zDrpgcwT7lUQqoBUS8LTRakCnhyK[m
[32m +        q/0oL4FOQqiAZ9RBJ0R5O5mg02d3lWJ991gF0Hj/fQKfosPOiCLMSj3CD7si6rgnUi8dR07oZeREByJb[m
[32m +        lBsXhvSoYGTFRyIjLgrZApVGAM2zAFAC5134/GkAatIvB1A1/9Os8pwMgUnKOmTeT5bQWZpn0g8B1ASe[m
[32m +        GkQ57JYAWkDYLM9FTrHEKeQw2zxUCJSiUiAyPBbBu1xw2sMVpbcE6orzUHzlGr7o01vuIVVZHAO3bsOy[m
[32m +        f76K4sNH4Om5H+u6D0d+ciLKb91EefANLGjYCmeXrcclDzcs6NADzmvXoyAvHTklmSjKyxAYzQaKCrBn[m
[32m +        /kJ8PqA/kJ6Ezzt3x4llayW8CCWFZWr8a5zHYaxs0h6VcVJupYCewG7xrUrhxlvI3miH8U2aI/XyZYkr[m
[32m +        8FgoEr+8pBDnBYJHt26BqIunJEzuKydTykjFlLfbIeCQlwBlMUrj43HY3gGJgQEoykyR9HmiAty6Uyls[m
[32m +        Wa4AWInzRm9z2K4cGwBUQWgNgNa4GlfjalyNq3E/6iwsoG2wu8nPkzWr6L1kCZYPKgWgAp6ETycBT3s5[m
[32m +        d5R6O7/xHtzf72haNEjAz7urAKhZHIKrZA0g7yHPTn3uqWpxLQDUg/M8BT7pc6Ehx3btsL1lS2xTCwy1[m
[32m +        FPhshi0NG2Hrq42w8d8vK/j0fP8DXBo4WC02dHnQEFwZMhRXRcaFhqovJCT+CAHJe+jaUAFQgdCrwwfi[m
[32m +        sujiiIG4MHIgrkwYjuCZkxE2dzoCpk7ASbnmP6CXAk/O9VTASd8skwW0s4JNl27t4dmLiwt1VcNyCZ8E[m
[32m +        TwIq03G47dFhvXFh4jA1vFYNtxXIJIBenD4al2eNxbW5ExAgIEmLJ62dPD83dQR8BTzd+ndWvv/I3jgz[m
[32m +        ZRhOTx6GgIVTcGK8QPOc8Tg3baSyhnoN6qZ0cHB3NfTWVcCT8Hl0bF81FzR0+XRECGwSMjWAUkbIfCCt[m
[32m +        nY/gNfMR8c0qJDttRLZAXabXHoEyF4ExV6SqIbcCXz7uyBLleAuQ+XCIrasCT1o9kzx2C1DuRPjurQjf[m
[32m +        s1VBJ62feugtraAaQJW/82tE7tumwDPBw1FBJYfSGi2e6twMm1XXzefaYqriee9Rc0Bp6dRwSQDlMSGT[m
[32m +        QEoxXMepBqG0YJpF8CSEqjmfApQaQDOPyz0b4VOkwjn0VnzOAaUIodG0eBI8RdraaSnCp1FVACrwGeG7[m
[32m +        C9FH9iOSMCt5x58/jJthV1DIeZ7RQciKDkZ2TCiyY8OQHR9hVqQS4VNLw6YWYVOBqEgd/yQApW/SLwJQ[m
[32m +        g2gFpc/FicoUjFqHTWuqDqDZAp+ZSjwnaGopABVVFuWq49sCnxyGWyBxOe+z6KaAWUUZkq9dx5FvNqPw[m
[32m +        4lVkCkBumD8fi9p3x51TAnd5AqGSdl33TsjJikfhHYHUjFSsfeNN7Jo2GYWF6Si+FqEsnDcunsTtpGh8[m
[32m +        16Mfjs9ZbhpGG5+MXXMXYFZv+Y7evhnLR4/Ejf0HBC69sW/OIpzduwdFyTFY0X8g7GbPR+bNbNCWWphy[m
[32m +        E7tmL8YnLTuhODzaBIMlFagQ8CvIuQn34WOwm/NJ86V+pRw6K9crKpAZH4fZL76G619vEF6Ue0W+XBcw[m
[32m +        vnQZE//9KuLcXIHMdCR4+mBUizYIP+gN/x128N64CaFHjsr9laC4vBAVpYW4VVaE27dKcQuVUidahc3A[m
[32m +        edusGgCtcTWuxtW4GlfjftTZ7BF4NMoaXD6IrIHmvWQNLh9EuwQ4nRq2goP4Do3bYG/bd+D6fgcc7NxD[m
[32m +        YNO0ei1Xta2CTooQShnB8UdkDTy1qsUVAPUQ6L0rAqgt9n/YCdtavYktzZpiu1rZthm2NWmCra81wjaR[m
[32m +        fZOmyt/+WmOc7SPwNHiIkoLPobRiCoBV04MDKBcbujp0AC6LLg4fgEtjhyBo5niEzpuC67Mm4dTYofAT[m
[32m +        6CRk0vfsbYZKM3DeFYfYdlLDb737Svv26QYPOeY5jw/24ZBdk+X0xMh+apht0NxJCjqD501GsBxT1+dO[m
[32m +        VFZOrasCnoTKI6P7waWfwG3/TvAV8Dw/czT8R/fF6WnDcXb6SFyRuBx2yyG4BE4TdNoqEKUF1LVve8mj[m
[32m +        Dy7NGo3wFaaVacMEPClaQDnvU8sqZJrFYbpakavnIHDdbASsn4eEnV8ix8MB2d77kMmhtN4HkOIvQEbA[m
[32m +        VFZODr11QbYoR5RFMPV2RrybI6KcdyBs1xYEO0oHVvyw3aahtgRPI3QSQjWMMoxW0kRPJyUFkwKXRgCt[m
[32m +        BpviE1SN0pDK4b5pZrBUQ25FPxdAlQifR03DbB8EQJVOeVaBaIy3k1qE6OcCaMzhfYg66oxY5htwSsDz[m
[32m +        BoriQ1EQH47cWAHPmBDkiE8LaK4agmuWnP9/FUArbgpYmlUuelAAJXwaAbSYUFqUBy7GkxEYhJTL1wQc[m
[32m +        85Bw+SpWde6DgzOXAMW5Ej8Lca4Hsf7Nzri0dacAWwq2DO6P9LgIATEOXS1GrIszRjZthJLICNwqLELy[m
[32m +        qfMY+FY7XDnsgQOLFmHfuGnIpHWyPBcoy0ZO4CXcjg1DSfgNICESiA4HUlMBaQfkJAAp8RIeK5CZjdtS[m
[32m +        XwhkliVJvBuhKMqS53FH6n1b4BCFuHDhFPaOH4fDn3xiyuNWGcqlXncqyxF//QZGPPsCys+dx+3b+Sit[m
[32m +        FADNy8e3g0diXU9bAeIYFJ85jdEvvYqUAx5SfpaUlYUrHu6wW70K5bc4DFeAtiAfd3JyFKCXcPXg28UC[m
[32m +        tBXCmtryebsGQGtcjatxNa7G1bgHcNVWwVXDaa3A5YPImM+PyRpcPogcRQ6NpI4t2sH1nY/g1bEbPLv0[m
[32m +        gHu3nnDrKr4AqIcAqKcBQKssoUZw/BFZA0+tanEVgHKBIZPcO3bH7nc+xtaWb2BTszawa0X4bIotjV/D[m
[32m +        loYNsbNpEzg1by5qUTX381zffgo8NXxeGzZcIFNAcviwKv1UAKUV9PqoIQicOAohMycgZO5kXJg0HL5D[m
[32m +        esNrYE8c7N8DPoN6waNPVxzo0QEHOLezh2l4rZYGUEImt08haBI+PWxNQOo3gOA5CBekjCroFBFCQ+ZP[m
[32m +        qTrmnM2r8yfi0pxx+H7WGJyYOBhuAzrDY1A3HBrTDz6jeuPoxEE4JwBK/4zAJ3Vq6nC49+8Mz4FdFXRy[m
[32m +        aC7Bk2FcEZfgSWsnwTOEQ2tXzkTkKq5kK+Kw2wcEUM4N1YpYK9q+Gtnu25Dj7YhM7z1IF6hM9SF4cpgt[m
[32m +        53YKpHFRIYrQxhVmvZwQ7+qgwJPAqUXrZ4gT53yawFPDpwJQ+7sAqsGUc0LV8FmDLAFUWUjNQ3QJnSqO[m
[32m +        2RpKyyfngXIOqJoLqgDTWS1G9HMBtGqYLYfcPiCAZp/2Qs6Zg6aFiCSMq9XG+uz+2QAae8QZWVf8URzx[m
[32m +        PW4lh6IkIRR5aluVcBN4xgbjZlwI8gU68+OCzQpU/v9XAbQyL7uaHhRAq1tAs1FQJhB3pxxIz8KJDXZY[m
[32m +        038EEJOohq5mXbmKWW99gMMrBeqKClFano2MjBgs79sf3mOmw3HQYKRevY4yYaLy8iKUhgfik569cHTR[m
[32m +        WnieOYKSS4FAcARQKkCXlSzH4Ug5eRohXgdwbNUK+I4YD7cu/fBVizexRv4vrHi5GZb/9WXMfuHvmPKP[m
[32m +        v2LdCy9g9bPPYeY//oz5L/0T6/7ZEKtat4XTa2/j0w8+xu6Jk3By9mIEfPkdCvZ4ofT8KYFYAdS8XBSU[m
[32m +        5CHvTplp/mdxGU5+swGOa1Yi4sZlpJ2/jJ2DJ+Pb3sNwOy0eeVHXMa1dG/jNX4ALX32NNaOG4aDTNkDa[m
[32m +        DkVcEKkUFcmp+HzyDKwYOhqnnPYiJzJKgahp65cS3KooN4BoDYDWuBpX42pcjatx93M21mDywWQdLq3K[m
[32m +        AiQtFxIyikOBnRq3gv1rLeAo2tWwpYS3FL8F7AQ+Hd/8CO6dbOHRuZcAZ28lN7Pcu/apkoeFvLoIhP4E[m
[32m +        0ZJJq6ZXx97w7tgXBwmgnaUMli1g69lDAI5++x5Krh92gn2bN7GjdRtRa2xr0VyB56ZXX8E28R1aNsdO[m
[32m +        gVEHCae/vXEj7GzeDKd798JVgUyjrg0fLOJcTpMCRg42aAiujRIQHSkgKro+YggChg8RUDXpoly7NmE0[m
[32m +        QmZMRuS8GQiZNRlnuchQb26JYhpme7Bvd7iY53JWyVbUWyC0Vwe49PxY+T6DeuDk2EEIFKD0HybpBAY9[m
[32m +        +3WGl0Dg2YlSj9njcJXDa0XXRYHzJiJk4WSELZ6GoPmTcG3mGDXMlnM63QUevWjJFJD0FPgkRJ6fPgJH[m
[32m +        x/VXW6pcWzARR8b0xTE59zKvZuszrIfE66WG2jrbfgjf4T1xec5YE3CumHFXK2cIjM6sUuSK2eKbFC6K[m
[32m +        XDMH4dTa2YhdOwMJqyYhctkESTsZ0Z/OQ/A6ifflUmTs2ShAuVspjfAp4JbpJ9ApMs393CvnBFCBUjlO[m
[32m +        ESiMddmhFhRSw2tF9GnxDN1lAs+AHQRPAuePK9jxW8mT0Mk5nJwDugvpvnulLAFPT84NtRfodDBdkzgM[m
[32m +        S5TjJKZhnf0Ikwb5V1e6v0DmIYHQwwLPApNpRzi/U/I/LAAqx1U6Sgg1yByWfkygVJR5yh1ZpzyQdlwA[m
[32m +        9YSrQQKiBgilFTRLFMf5naIwabMIAeRIqVuU316laEruMcHXAbHe9ojz24V4KStSYDjikBtSLhxDYdQN[m
[32m +        FMQEolBAszAuFIXx4aIIFCRECDSGC4hyu5UQgcxQpTyCaEKYunbToDyJn5dokAFGNXxWKcUEoYRLSwAt[m
[32m +        zRSYNMOn2vvToB8D0JKs1Cpx/mRpNqHTJFNYmsAnZdojtEo3BSY5p9OKykWVcv22gOmdnEzckrSV+RK/[m
[32m +        OAf5RZlqyGx5VhZuCoDG38lBFgePJsXjxopv4T51HgqOCLglSrzUbKT6HcbSPrYCcsGAlJt94TIGt3oD[m
[32m +        flt3KAjlfEzkleL6Lg90b/Q6Qo5fAAoFYItLBTJzBGSzgcAIlB50wbU5s7G1XTss/ceLmPPb32Lew09g[m
[32m +        Vt1HMKtePcyrUweLa9XBUps6WCJabNbSOjaYL5pbq66EP4oVtZ/AbAmfV9sGi+vZYGHtOlgu5wvEn1en[m
[32m +        LhZKvAW16dfDtAaPY8bjT2PeX/6GJY2bYNeQQYjZshE4d0bqFi/tGI9Egc30sCAgViA7s0gNFV7Zbwi2[m
[32m +        TZgM0LqZmwV/190oLkiXf4/FuFNZiNuoQGJhCgpuSRsVZODE2k8xQv4nOa1ah/iIKyhPjBdgv41bJbeQ[m
[32m +        WVHB9XZxm6Co9wRVe4QKnN7inFHuNSqweqfyB2D5oPo13a1bAs/irJVTXs7NZ+76jMP4xrr9mH6JM+Zz[m
[32m +        m3uump3xmE6fG30t7VjvB6n7/dyPxWVYZWUlKuSdoOjKyri9z916MA6vaZ+O7aufAx2v6boaHc+NsnQ/[m
[32m +        dk37lm1DZ6wLHctnmPHZW3MlJVy8y5QnfZ7T8ZhtQVdaWlqVXud3P8e4Rlk6y2tF8h2l78nYjnSWcR/U[m
[32m +        GdP91LQ1rsbVOOvu/wRA96iFhKyLQ2x3NZb8GwuICpCq4bbyz9655Vtw/6CLACcBsy/cBAbd5Ngoht9L[m
[32m +        xrmaDyI9l9OrYy8TgHYkgAqcCnS6dumO/Z27wrVzd3h16AmX9ztgZ6u22N6ilZrvuaVpE2xq8hq2NmqI[m
[32m +        7U0aw07OCZs7WzRTILqjeVNsa9II9nJ8pm8fXBk2VMDTKALogCoFjBxkIYFOrVFDJP4gyUNAVeCT8zvD[m
[32m +        5kwX8JyKq5PG4PjgfvDt3R2H+tnCu093ZcW8C56dquRq2wEHbD9W2t/zI/gNtcWZiUPx/bSRau7moeGS[m
[32m +        nov+DBAAHSgAOlkAdK4AqABh4LwJAqkTEbRgEoIXTFbnYYul/JmjcXzsALWYEAGUVkwOpaVVk2Gc73l8[m
[32m +        /ACcnToMpyYOUivaegzspLZTOSjiSrdc2ZbzPa9IWSFLpykLZ9TqOQKXhE6z1HYptIBqmS2hSrMEQGch[m
[32m +        wqyo1dMQs3qy+FMRsW4WQtbPQ6r9l8hzs0ehgJAaumpWBvf3NOzfyXOK8EkLJIfMcm6nXliIfrDTd8qi[m
[32m +        SSvn9R1fGaydX99ThM8gh28Q4rQB8WbITBawTJP6JAlkVsnLUQEqgTTNZ4+Ap8CnN+FT5CNhFsBpqXRK[m
[32m +        ADRdADT9GLdW4T6fAtZHuMiQ3JdZ1QGU5wYAFegkgFKWAJpxkuEeyleLER11UXNAY6V+EZ4OCJd6R0q9[m
[32m +        o+S+ov32VClG4DTezwHxh3Yh2n83QuU85uRBZN44j+KYYOTHhCA/NgwFcSIzfGrlcxiuQGmOKJdWUdFN[m
[32m +        UR6BUyCzOoCawv5vAfSuSrMpDaKEUtO5CUC5Ki4h1CwCaDUrp0EKQE3ikNwSAVBaO4tuZqCsiH4OyrIF[m
[32m +        DAuKkBcYgjsJiShLiceRg/sx+Z23sXvKdHzaeyC+6D8M/qvWI9xxN74bOhixR/wlTTFKzwdgeuN3cGL1[m
[32m +        17idlCz4WoKMSoG1aAGv8EhkHTkE93mz8Fmn9pj+9xcw/NFHMKV+HUytU1uAsw7m162H+Ta1BDBrYxkh[m
[32m +        08YGS2pZ1yK5tlSgch6BVIBzcV2GPYpFAphL5NhaGq3lNg0kLtPWxdza9TGr/kOYWKsWpjzUALN/+xzW[m
[32m +        NW6BvUNH4NKmjci/dkUtfJQbFgbvXY64dv40yksL5F8iO/rSaeXKt6XS0SQ3cijv7WKUJ0Vj55QpWPph[m
[32m +        J9yJjEFKTBQWtm2L8GN+avXg1IKbKCkqRVmuICg74Oz86m1bCKDmhYpu0/8FFtJfy7Gzzk47ocCyTMKD[m
[32m +        lu7Y63DLuL+WM5bBOmrI0ABnlI5Pxzrqe6PjMcN+qbNWpnYafHR7UTzW0o7pdH14bIxnrKeOZ3S6XC1L[m
[32m +        d79rdGxD/ax13vR1e/LY8hqdbvt75UvINqYlEOr7oSzv8ccc8zHK0lm7rvPW58bjn+OM+VuqxtW4Gvfz[m
[32m +        3P/rLKC7ucDQq61g/0oL2L3SHDulHJe3P8LB9l2VVdJVINClU68fwOevBaCenWyV9fNgp96qfM4zde/a[m
[32m +        A25duwoMd8Xet97H9uatBTxbid9SwLMxvmv0GjY1bgS7ZgTPpiYJfBI4HVu1gL0c0yrq1Lolzg3o95MA[m
[32m +        9IYocMQQ8Yfguogr3F4eIyA6eTTCZk1E+PyZCJwxGWdHD1Ur3Pr3t1XyshV4F9Dkvp5cVIjDa7nQkJar[m
[32m +        bUe49PpY1F7p+Jj+agGhSzPG4OrscTg8ohd8BgsYDhSQFDA8L9B4YwFXsh0vmoAQAU6uMsv9NkOXTMNl[m
[32m +        gc8jo6T84b3UyrVcPIhzOAmeeqXbC9NHKoun33AOse2m9vIkePJ4f+8PFZCek3KClggsciVbSqCSqgac[m
[32m +        qwUs1wiYVmlmNUWvnqEUI4paOxsha2chdP18xG/9BDddd6JAgDLXex9yfAWyOBTVLAWb3E/z4B41rJXg[m
[32m +        GSvxaeUMcdpotnpynidl2k5FzeekxdM85JZhCkodv72nAh2+lvTfIUREyFTWTg978bkdCy2eZvAkZCpI[m
[32m +        5lDb3VXgmcJzkTXoNMoIoIRKE3BWh89fBKC0gHLY7XE3016gZmsoj00LETkgxtsRsb5OiPHbVU2RAp/B[m
[32m +        vo6IlDyTLx9BXsRlFMVzKK3AJ8EzzgyeCXfhswZATaIFlOBZXJCF/KIs5BVnoVCOy7LTFWRxW5HiigJE[m
[32m +        nDuH9e374MzkZcoCmIkcVF67jG8GDUHsudPIz0jGZX9/7Jm9CF+/1RVjX2qOoIMCoXlFOG/vgNzvLwBS[m
[32m +        x4wrp3H8u8+w/d12WPDX5zHxifqY8nhtTGtggzkCiYvriC+wSYhcIDBJKFxiU0/Ak/79AXRZbUlj8xDm[m
[32m +        CzjaNbPB1/9iXg9Jut9ipQCptTRaqwRyqZUKdGtJGkIpy6yNr6TcDTYPy3WB47oPYdzvn8P0Fo3hMGUc[m
[32m +        gg96oCg5mT1rVJZLx1X6lGXSLy4XFZUDFeUlQGQCHPuOgcPAsUBaNiqLC5FVmo+ioO+BjFi4ffc1Fsv/[m
[32m +        mRzfswra05GHgtvlKK28hXLpcFdIR1WzqOLR29Y7sw+iX8ux0z5nzhy88847+OCDD6rpww8/xNChQ7Fu[m
[32m +        3TqEhISoDj1BRHfsH7R+lnHvJ0tnvEaImTZtGoYMGYKCAv5wcNcZ07J+8+bNw6BBg5CTk6PqzHsYPny4[m
[32m +        Omc+P9cZ62NN2p0+fRodO3ZE27Zt0atXL1WudozHOtJSeO3aNcTFxalzQiCfBduc11hPDX0/R5aOYYWF[m
[32m +        hVi1ahXee+89vP/++3j77beV/9FHH6FTp06YMGEC3N3dkZ2dXRV/9OjRqt2Li4vV+2Isg6IjgI4fP17F[m
[32m +        pbWT99OnTx+sX79e5UEg5XNbs2aNuk9r79AvEZ8x23n27NlVbcdwS2eZ7qfI6O53rcbVuBp3b/d/AqB3[m
[32m +        9+78ofY0fgMOr7SCY+O2cG77ATzad4Nbx+4Cnj1Etgo0PeQfvSV8UtbAU8saZN5PRgCl5VNvr+LWuZuU[m
[32m +        3w375Evaru3r2N6iJXa0ag27lq2wtVlTbBT4pLj4kGMruSZhBFBHgU0HgU/lC4hua9wQu15viQuDCKDc[m
[32m +        p3OwQdxG5d4AGszhtgKh10YJeE4YiZDZkxC+aDqCF0zBpSlj1TYqnKd5aHAftVIt9/UkcO7r+iFceraH[m
[32m +        W6+OyuLp3rtTlTj81q2PhPXtqPbhPDtpGK7MGqcUuGAyjozsDR/C4aAu8B3SHd9PG4GghZMVhN5YOAlB[m
[32m +        i6fg2vwJ+H7mKIHM3mqblEMjTfB5dOwANY/Td7itWnzIY2BXNQT3yOi+Kp63gCatnNxSxX1AJ7Wn5+nJ[m
[32m +        co/cUsU8z5PQqRcbYlgUoVNrzSxEC3hWae10RK+bZtJawqecryaIzhT4nIfQb1chVcAxz2s3cgQus3wF[m
[32m +        sLwJnAfUVitaCjoFQDnPMtZlZ9VWKoRPztek9HYqVbI3S47VfE+B0SCHbwVC7y1aP8P2CMTu/g7xbjsR[m
[32m +        777TZAXV0OkjcEnANIsWUFpIOew2Ra4TPlP9BEwtgNNSRgDV4Mnhtf8pAE077qosngRQDZ8cgpt12gsx[m
[32m +        AqCxXnaI896JOB9HxAmExvrq+aB7cEPqE3nWC5mh51GUEIibsTeQEyt+QqhAZpjAZriER6AoMbIGQC1k[m
[32m +        AtAc6dzlCBTlIFN0U8JRXITKmERcPnwIZSX5KK3IBySf459/g8869UKR91E1zLYiMhgrxo9GwOEjQH6x[m
[32m +        AJQAV0YO8oKCkBoRDBQK1N64iMPLFuPzxs2wss6TAnL11FDZRQKFy+qbLJcrBQLXiP+JaFWtegoCCZtL[m
[32m +        BQAJgXdlHSCpBZJmUZ3HsOL3Nsjd1BDnJj+MufWZ5hkstxK/miTf5aKVZq0wS53XlnqKv0x81mm5lLNC[m
[32m +        oHS1TX0srP0Ylv3xX3Ds3h8Jzm64k5KGSukUExOSK8tw8dQxLGjfHT4zlqthyncq2akWMr1ZjMSYS/hq[m
[32m +        1FB816UXcOaStFuatF+WvJtRKC0pEoAtRSmBQoCzUvqmdwH053eAfy1HoPj444/x3HPP4fjx4wgICKjS[m
[32m +        5cuX4ebmhrfeegtPPfUUTp48qeLTWdaP4feSBqkHkaUzlsHrb775Jv75z3/i5s2b1crQQENHwOnatSte[m
[32m +        fPFFZGRkKDg6ceIE9u/fr2DImM5SzOd+zrI+RjEtQYgA9te//hWNGjVCcHAwIiMjq+XLtIzn7e2N+vXr[m
[32m +        Y+/evSoNwwiGvD+eU6yTZTn3q4PxmqVjuzDP7t274/HHH8eOHTvw/fff48qVK7hw4QLOnj2LtWvX4skn[m
[32m +        n1RgSsgniLZo0QLt2rVTbUcItVYmw52dneHq6qrKYJuzDTRM8/557ciRIyqNtfuylPFe7neNjmFOTk7w[m
[32m +        8PBQ5bM8XYZ+tg9SplHGMqj75VPjalyNezBnAaDVwbE6NP40GfOxBFDTsFqzBDopbqliOm+LPS3fhdu7[m
[32m +        neHV0VbNuXQRINzf1RYH5J+8a+feDyQ9VFeL8HgvWQNQLU+Rh5LE7dZT6tMFu999B9tat8K2Vs1h16qZ[m
[32m +        wGZTbG7SSAGo1nb5oqbVk0Nv7Zo2VvBJyycB1BTWEHvbtcSlof1xbeRgXB9VXdWgc9QgXB/BuaA8HiLH[m
[32m +        gxV8hk4bh8j509SiP9fmjMdRgbuD/XrAj/t4DuoFr74C7rYcXmuSybpJK6dJBE5XkVsfE3R6D+oOT87V[m
[32m +        HNAV56cMlzwnqL06CaFHR/WB39Ae8BFg9B/WExemDsdlgc0b8ycieOk0NURWQSSvj7TFwSECoAKiBE6u[m
[32m +        ZksL6GE55jktoByGe3AwraI91NxOgictnyfGD8B1AVlCJoFTK4JDaauG1XIY7v0AlOA5DZFrpiFMFLV+[m
[32m +        HkIkPOLThUgUKMxwc8RNn/3I9N6HDPG5d2eanytSfA8g65CLEq2dXOwn5gDneJosnnetnZvk/DsFl1pV[m
[32m +        4HkP0coZ5EiL6LdqqC0tnmF7NirwjNhHSyrPNyH6wHakCFjS6kkRQNMFLjM4f5OQ6btXwkwQyrmfHIJL[m
[32m +        CKUV1CpsmqUBNUOOOQc05bAZQAUsLQE05dA+NTQ3Q4CyOowKhFbB5gEkCzSmHDWK193V/E89B1TPA432[m
[32m +        ckC8wGfswZ0Cow4KPDkUN1yUcMILSQFnkBN9XYAyGLkxgQKFIQo+b3Iup0AmLaBaRgDlPFANmgo+DcBp[m
[32m +        KUsA1YsPUcZjdZ4ci8LUhCrQ1CCqAdQSPLVMAGqUNfC8C5kaPnWY8fh+AFpyMwPc57M8P1sANFsANBd5[m
[32m +        uZnCjzdRUlmMytIi5MXGY+fq9RjV8k1c3LQTyM6FREZhaTrSAy7i2y69ceC7TwRCkwWs0vBJv2HYt2gF[m
[32m +        CqLD5F9DHvJzonF8x3dY+sYbmPHQbwTkHsY6Ac81Am7LBSQX1TLN31wmx7Q6rlTWRwP0mY8JfsrqSVkD[m
[32m +        R4MIoLMa2MBneD3g+9cQs+X3+KrJo1hc9xEs/pH0CwSIqYWcLypi2FIRy58tkDxb8l1Q11SndaLPRV+J[m
[32m +        vhCtFhGi50lnfNYLL8Bu2FAUfH9W4DsXudcuYf+KlcgPD0e5/EkLq0Wagr/djWXN2+G7/oPwvYsjyu9k[m
[32m +        ogK5SP3+DOa/0gbfzF2A3LRk3C4rRTG3hpG+aXERhy8K7N2q3qH9Kfq1HDvrhLXf//73SE5OroIUOnas[m
[32m +        CQ9Xr15VoLRw4cKqcNaJkDp9+nQ0a9YMrVu3xrhx41QYO/8EEEIJLY9bt25VsEXwadiwobKE0ULIcpgP[m
[32m +        4y9YsABfffWVKl87lk0L2hdffKHCWS4B9JVXXsHBgweVhZOQZ2trC39/f1Wmzq9Lly7429/+piyPPN+0[m
[32m +        aZOyLhKidHtGRERg/vz5qu6E7FmzZiEmJkZdZ3lMx2OWy2O6xMRE2NnZVd0LrYa7d+9Gfn6+AhNCHOvz[m
[32m +        xBNP4Pnnn1cA5unpWZWejnn6+fmpMh955BG8++67qh6s6xvyufvTn/6EixcvYuzYsWjVqpUqg7CorZL6[m
[32m +        PsPCwhQw0srKZ8D2P3XqlLqmIYzHRsfz3r17q/pdunRJ5aXrxrbh8ZIlS1C7dm34+Pgo0G/cuDE6dOig[m
[32m +        2rxHjx4KSGnddHFxUW1Dx2f92Wef4fPPP1fgynzZ/rSIsl1oAWW+Dg4OqgzeC9uGPwps2bJFWWFbtmyJ[m
[32m +        uXPn4vr161WQl5ubq96N7du3w9HRUT3Xl156SVlkWX/jPS5evBhff/21qgthns+TdeaPKHxebEveO+ut[m
[32m +        20i/g7RE04LLe+P7xbry/aDTAJ2QkIDvvvsO7du3x2uvvabqcuDAgWrvlK53jatxNc66+9UA9H6yN8gE[m
[32m +        oPRbYW+LN+H8dnt4dBCAEWh07dRTYPLnAahpYaK71lFr4KllDTy1uKquR3dbuHXtjv0dOsK+XTtsly+v[m
[32m +        bZzL2aaFAGgjbGn2KrY2b4RtLZpgm8Al54HSImrfornSjmZN1NBbWj6dBFwZZidpnN9qhSvDCaBctVYg[m
[32m +        06DqACpQOsJsEZXzwCljEDl3CqIWTEfovMk4P2Eo/IcKLAtE+gy0hQ/38ezTFS49O8KtV+cqufYV4Ozb[m
[32m +        vkru/eV6/w5qwZ+Dg7oq8CSMegssXpg6Qm2hcmP+ZFwVuD02ui/8CItDuqv5oLSAEj4DBBaPjOuHo+P7[m
[32m +        4/DYvjg4rDv8R/dWvp/4pyYOwYkJg9TcT4InFyKiz+G4h0b2VmW7ST0UeC6YqCydMevmKwA1ygifVDXg[m
[32m +        tNTKqYhdMxMx6+ci4rMFCJD8ord9hiwOt/V3QY4AZ6aveYit+Gn0/QW8/ATKBDyTPJ0Q5bzdDJoCnuLT[m
[32m +        +lltfqfdV9UAk1bO+6k6eHLO6CaEm0X4JHjSqskht7R8EkKTDzrdF0BpAeUQXGsWUEsAVWH6WHQ/ADVZ[m
[32m +        R52ReYIr31a/Tqtn8pF9SOLcUblmaQGl5VNZPc3wqSyh4nMrligvAVC/XWreZ5jPXkQf80LKxZMoighA[m
[32m +        oQBhgQAiYTMvzgSdWkb4/F8A0EKJq2UNQjVg/hIA5Qq3nOfJ48KsNBRzjmexgFGZdNrzC4EK6UhWVLIX[m
[32m +        BIRE4etO/bCpc39UXAsQOM1AQVkqirJjYT9pEiJdXaXHmYP0jGhJk4PsC8fgOWkcFj39rEDjQ1ha51Es[m
[32m +        qE2LJxf/qW0CPoE1LvyzWIB0mWi52V9sY1oUSFkbzTJZQe/KCI2WWlS/Nlb8ywblJ55D8bWn5HPzPC4s[m
[32m +        eBULHxeoFDi1lkZrIeHTDKCLLEQQXS5la6voMjln+Nx6NpgjmitgukDOF5rruKxufTWMeEeTFogQ6OFW[m
[32m +        LSgvQE5hBq5cPIu5fQbgy+4DgUAJL8xDwFlfuH27Do7Tp2LWex/iuoeHPA95DtmZiPv+PHAzD5UCobdK[m
[32m +        uQiRyQLKzqkWO60Pql/LMW8Ov3zmmWeU9ejMmTNVItRt3LgRr776Kl5++WUFogQLwhlB4bHHHlPDOdlR[m
[32m +        JwwR8mg9Y+ddQxLhhZBFYAkKClLWwM2bN+Ohhx7C5MmTFShQhBUCGY+1IxwQrjgUmHnxGmGNcMS4hFjm[m
[32m +        ScvX008/jcGDB6s4hAVLAO3fvz/+/e9/K/Bh/VnvevXqKWgKDw9HamoqVq9ejUcffRT29vZVIMxyecy6[m
[32m +        aIslIYzW4qioKGXRo7WQFmRCTGZmprImsj0ZTpBMSUlRddCOedIy+80338BG3rsvv/wSN27cUO8EAfTh[m
[32m +        hx9WZRAmaUGlZVGXqxfb+fbbb1X9ly1bpoZHE4wJtS+88IK6V8Yzwpl2PCeE8Zkwf23VZL1jY2MVLP/5[m
[32m +        z39WkJeenq7aq0mTJup5TZLvDVrF+bz5o0DdunXVUGeWxTwIb4zL+hFC2f6jRo2qehdoEe3Xr58Cuqys[m
[32m +        LNSqVUvlS/jmc4yOjlY/WPAZ8LnwWTKv3/3ud8piO3XqVHWvfF78YYLv36efflr1zvA95bvMc4LzH//4[m
[32m +        RyUOy2W9Kb6bLJfpmDfbiOD5m9/8Btu2bVPvOJ8rwZ5txHIYj+3AtuU7xvIZhz820FrNe2Qb1MBnjatx[m
[32m +        P+5+NQB1fK1llZwaUXevGQF0J8OatoXbmx/C90MuMtQbzgKazgKeB/gLvchFgFLLGmw+iKyBp5Y18NRy[m
[32m +        79IDLl27Yc9HH2Nzq9bYTKBsI/Vu3QJbmzXCpqYvYWuLV7CjdROzNbR51bBcWj0dWrZQQ3AJnoTQXa9L[m
[32m +        uIRtb/oK9r/TGtdGDRSoFPgS/66qA+jVYf2VHzp+BMKnjkX44hkIWzgNV6aNxrHhHGbbDX4DBPgGdINX[m
[32m +        /x44IOBJuQuEuhnk3r8T3AYIdJrlLvIaIm0+sKOCU1pBOQT34MBupsWH5k1C4IIpAqITcHxMPwHPnsoK[m
[32m +        yvmgF6ePVPM9Of/zgORzbOJA+I3pDffBXXBoXF94De8O39G9cGz8QGUB9R3eqwo8/UYIoCoraBccHdtP[m
[32m +        DeENF8iMWiPAuMo6cPJatEExa+dUKZoyAGiKAGcs81gzD5Ffr0SawGO2gGay2lJFwMq8sBChLuOQQJX/[m
[32m +        XiQKIMV52Cvw5LBagiehk/AZ5GjaKoXzO6uG1ooCBSy1VJx7iNZSbeEkcNLyGbF3M6L3b0OMy3Y1v7Nq[m
[32m +        XidXtRVl+O2rGoJ7LwBNoU/LpwV8WgNQWj0VfEp4qtzv/QDUtOrtfmRzMaFjLipulZTVU+Ip+BSQP+lW[m
[32m +        JbUIkXnYLeeC6vmfBNB4qWOMgGeE3E+E/wHEn/ZHbvA1FMYIUMZEIjda4FCO82MFKkWFcVr/ewBanCnx[m
[32m +        zbKEz/8UgOqtVkokvFSOCZuFMYnw+norPp8wCzGnLwowVaD8tnTISvOAvCwc32mHyW++jXNff4PK4AAE[m
[32m +        n/LBjoXzgawMURoiD/vgq362mP375zBPOsOfimgpJGzScjhbQI3DbgmVhDgFduZjWjsZTvgjzNHXILjY[m
[32m +        DIgK7ET3g9D5D9kIcD4CRNkgJ+RhXD/wT0TYvYJtr0teNvWtptEyzf80aYWIQ4BNw4BrYZF0NFkPlk8Q[m
[32m +        ZR1oLaVldIbc12yp8yIRh/kyDu+ZbbCkTl3MFKieI8DiLVCCyFggPA6ndu5ATlwwCu6UAiUClucvYYP8[m
[32m +        //IYPxW3BKwqaCVNS8S5jRswXL7z7VcsR4JAiRAMKsvKVQeVHV4tdsofVL+WY97stBN6aGkjvHAuHUGC[m
[32m +        gEPLF2GLHXo63sOhQ4cUBNKCxWs89/X1xbFjxxTcEAwIpMz773//O5o2baoAjlZC3jeBjh18QgWHgBJQ[m
[32m +        CGyESw0rdEzTpk0bNSyVHXuKUMdOPwFOgwfT0MpVp04dBaUswxJAeU//+Mc/1H2Ehoaq+hNoeI35siy6[m
[32m +        wMBABXN0On/Wh8eEYcIQYUQ/P7YH4Y3WTlpSCSIsg0BKqxvvVdddO6ZjuJeXlwJQWjd1GZx7S2s0IY11[m
[32m +        YjyWxbx434xDUGQb0wpHKyWHRh8+fFj9YEArL9tBWyd1W2rHcz4jxmF7EDT54wLhnADHe5g4caIqg+n5[m
[32m +        zPgu0HpIqGS9CJu8R1pqCcWsH4GSaRmX15n2L3/5C0aOHKnqzHYiwPXt27eqzQiatL7re2Q8HjMO805L[m
[32m +        S0NeXp5qS74DumzGo8/3j+0eHx+v7ovlsf34DBj3t7/9rUrHuDod25TPkPViHL4vfBcIlvyBgVDOd5nH[m
[32m +        PXv2VJ8BAifjsg3+9a9/YcaMGQr2CbT84YL58h3kPejnXeNqXI2z7gRAWyvwtCYjNFqXad7mD8U9O1uY[m
[32m +        ZN5OxUmOneiLdkic7Q0F0gR6nVq9Bbf3OsC7o8CJmuPZG25dTVZLgiNXu3U3y60zLaC0iv64XDpVl4eA[m
[32m +        pBpG2/WH8uoqsNm1Fzx5XamHlNdVrnWDm/wjdnznTWwRuNzcogm2t24m0PkaNjV5FdtaNFLwub3Va6JG[m
[32m +        AqByvaWAaMtm2NmmJRxat4S9gOpOLj70eit17sTOiITtaN4QLu+9roDz2ggBUFpBBUQD5JyweX24nI8Q[m
[32m +        +JTwgPHDETx1DKLnTkHcklkKCk9PGKKsnn5DesJ3YHd49+8CN1vTAkKuaj5nJ4HJzvCg+nWBJzWoM7xE[m
[32m +        3kO7ChBKe4vcB3SAS9+PcaD3RwpC3fp1hOeAzrhAC+cCzvGchOsCmSfGDcChEVLesB5qbufFmaMQvnym[m
[32m +        soB6DumKk5MH49Do3kpHBCp9R0i9JD63UuFwXC4uxOG2HGZLq+cxiXNl7hiELJsi0DkDkVwgiENp1wpE[m
[32m +        rhV4VHM2CZtzJFwAVMIj1wmcfjJTNEOF39VsAVEOy5U0aznPcz4ivhTwdNyIPM7x9CGU7UeSgE/qoQPI[m
[32m +        PuSC7MMuAqH7BP52I9ZtByL2bUGogGH4ns1K3FolWOAxkBZOtaiQQKdasdZs9XTgsFqCpwE+nUzSiw6F[m
[32m +        7OawXZMInYRPQifneNLSaVpYiPt3mhYXIkxyZVsuQpQuAMpjDq+9C6ByHxpCtdXTDJ8KOM3QqYbZmsGT[m
[32m +        Yfq6glOJnyKqmgNKmDRbPLX0cNuM4y4qTrJ5SC6vpct51nFXBaeZ4meeoNXTZAHVixDplXAzTrkj9YTk[m
[32m +        c8oNsYf2ItD3ACJOeCMj4AIKo4JQJIBJ2MyPEYCkHx+JPAnLixUQNQCn0RqqLKICnVr5ZpgkYHIuqFXo[m
[32m +        1Eq0BNAogU3uB/pD5ScJkKbEV837LBKYqAJSM2hSpQKUxYRSs28NOI0yAuYPAJTDagU2SxjObVgELrXK[m
[32m +        8tJRViDXCjNQWJAhHats5BFMCwUGSgV2MnOxeflqpAWFAfkluFMgHT/cQe6tUtyuzEMh/+5IZywuEQF2[m
[32m +        e3FqwyaEXTimFtBJOuiGb9//CAsfe1bg61FlaVxat7ba+mSOdIqXCaitqV1LDVNdJSLAEfiMVkUCqA7X[m
[32m +        VketKgClJM4iyc9kOX1YWSJX0Gpp8whmy7WvW9L6+UcgwgalwU8idN/zCN/xF9xY/nfM/Y2kteGw33qS[m
[32m +        l/iSlkNtVTm16v4AQDnPU0PoAqn/QhHT6DrTV0BsrpfWClpzxF/QoA6mic/Ve2c//CjGNHgM8/74T1xd[m
[32m +        sAoIDoI8cAQnhmL7wiWY0eIdhOynJTkLd+Q9id2xG8tatoXXkoUojA6UdyUBh3bvht82J3lWxUBeCSql[m
[32m +        s3pLOqiV8qQEfaTjLJ1V6bhS7ETfS7+WY8eZi+X84Q9/UBYvdqI1DHBuIjv4r7/+etUiRIQHwh475uy0[m
[32m +        c0giraQbNmxQVjmec8gtrX6Myw4742mLHDvn1M6dO0GrHgGWcEDoYjkEBN4vO/Ls9BNeCci6XhyCS0sb[m
[32m +        0zAey2A4QYxAwyGdzL9bt24KSAhKvBdaYDknVFsoab1btGiRusb0ukymZZvQ1+3OMlgerbkEasZnmE7D[m
[32m +        c0IcAYxgzLgEKAKMvl+dF52uN4eHEkB1nZkPLaCEQrYDz3V9eD9sS+ZNCyTbjvVh29OiTGsq25+WQ4YR[m
[32m +        pHUdtdNtRQAl/NM6y3PG0eWzLMajT0cA5TMg+Os25zU+T1o0CfpMR0sqfyxgXB2H7U/rINuI56w/f+Bg[m
[32m +        fD4HPgMO0eW5biOKFlFaJHmfLJPv4MCBA6t+JKDjc6P1lxZ3Do3lOX9wIHAyHuvHdCxP3zfj8J3ijx3D[m
[32m +        hg1T9eJ7SIsoYZbtx3bU7cnhvDzmu8w8+cMDQZ9tzGfLYc+0vBNmeY35s/41rsbVuHu7+y5C9EPgNMoa[m
[32m +        eN6VQ6PmVXJqLBAqcnpNzl9tiu1y3b5FOzi//THcPxbQ62SCQw535V6bntxz04rcBVBdBQ5/jjiE1r2b[m
[32m +        lNNdyrGQJ/fzFHl0ZT0EkOQL/mCPbnD++AM4vNlaYLKpwGVjpa3NXzUPuW2ozre1EPhsSfg0XeeQXPpM[m
[32m +        Yy/QSUsp5cBjQqnZ3yHp3D9op6ydHILLYbaBIvrc7/PacMLnYAHPsQidNRFRAp5hi6fj8syxODKyL/yG[m
[32m +        9oT/MK5MK3Xu11mgU0BSzetsL+BJa2ZHePQXmOzfSW2dolavHSQgaF5EiFZMDqX1HdpdrW5LMOT8TW6D[m
[32m +        Qv/ctOEIXDwFAQsnqqGxJyYMVOBJaD00qpdabCh02XQEyDUuJHRaAJQr2vIa4xEyuZiQ1+DO8B9B2BWY[m
[32m +        7/8x/Ef2xMVZIxG6fJqA53TRVIHNaQKZ0y1EyDQDqABplIBn5HqJ/+lUhH86BTGrBFRXm8R5oDGfzEHM[m
[32m +        +nkCqQKjO79Fkou9aY6nr0AVFxMSgEsWpR0ybaWS6OmEGJcdAoemYbZcXIjHYbu5yJCApAJMWjnpmxQg[m
[32m +        50YFcgGhXQKcu79DoOM3Ap/fIljOQ2jt5LzOvZsU1FK0eMa57lDWTeOCQsryaRChM4FzPwUS9fxOQqO2[m
[32m +        Xt5P2tKZeeQAMsU3Wj2NShWZgFKuEzSPCYwfMy04RMhMUhbSfQo8eWwCUBOwZh9xQe5RV+RyrudxNwWh[m
[32m +        nCuqh+HyOIPWUC5UdNYDSSeckXLaFYlnPBF98TSyIm7gZnSIQGao2lpFyxIcjTJCo6UIoBTj5VgDUENc[m
[32m +        a8pPikRBchQKRfS1TAAahyKBCW39LEw1ASlBs0hUTAgVqOSxyeeQW+vgqVUNOHPugqhSnmloLed3Fgtc[m
[32m +        Gi2e5QKg5XmpKM6jJSBNOoOZQIV0wjjUVmCzICgEc9v3QEmAAGhlOfJQAem2ClXcRkV2Oi4fPSrtkSrx[m
[32m +        pVNUVi4qRuqlc9jRozsmPfIIFj78uIKuFTYcPltbQZ2GtZ8jpr2XFtYj1D0iZT2uFi4iBM61eQqzHrPB[m
[32m +        96vqCXw+hzshT6L88rOI3P0bRO58WT7TLbCjpwk2l9d7DAukjstYR4FXhi2o1cBqWVrW6vggYt1MllOC[m
[32m +        rIBK7YcxSbT4n/9GjHRMIc8x6+L3uObuibLIGJy1d8Kizp2xe/w4ZLm6w+OTVTjt7yrPPhmBPofx9dT5[m
[32m +        KIhPk2ck8FFShlLpVJffqZRTIijhUy7c/r8BUHbIOadNW5yMZfGYQ3EJp7SWcc4dO+20OBE+2Nln559h[m
[32m +        nKvHTvqUKVOUtZHzSdkhp0WMFixCnwYixmUHntcIvUxH6ycBgtZHXQemIURwCC7TElI49JbQQcspw2iV[m
[32m +        Yx4ENA4d1fnRmktYpIWK+RFEmD/vkeXT4kfY0xYsgg6teAznvFaGEZoopmfZXCGW4H3u3DkVxjgEG1rD[m
[32m +        OJSUcxUZj9BG2NXWPsrSMR0tlgTQffv2qTiEJoIeQU2DLR3LogWUkMs4vGfCOp8LIU3H5TUOGeVzYdtp[m
[32m +        qNOOcVgO68VFpTjclPdAx7hGMR3Fspo3b67aXd8HfVom2d58dxif98w6EYpZH+arLaCMz7L5PDhvl8cE[m
[32m +        NrYl5/By6C3jsDzCHgGcPxjwmTBfQh7nZdIqq58J5+ry/WH52jLLdmP7EYZZPt87givj0zF/HtMyOmLE[m
[32m +        CJWO7y/zZz60ljMO3x8CMiGV9eV7wXmpfEc5TJ1xWB7b+5NPPlH3QSu0fl41rsbVuHu7XzAE94fQadRO[m
[32m +        gc0qCYTueK0ZdjRsBofGLbG33Qdw/1CAqGNPeNE6aQZQzx8BUI/O3H6l58/TfQDUqxstoFxwqLuIls8u[m
[32m +        cP7oA9i1bY1trZqq4bWEzM1NXxG9XAWYd6GzMXa0aaLCGJeyf73ZfQF0u0CsV/t3cG20wOZok6Xz6iiR[m
[32m +        +FcESm9MGoXw2ZMRMX8aIhfPwPU5tEIOxEGBR98hHAordVZzNgmetHpyBVtaPU3waQLPTgo4CZjUEQFD[m
[32m +        DqEljBJKVRyBRAIp54By25OTEwcJLPbE+ekjELxkqlqJlkNkOUfz8OjeyopJwDQCKFexPSmAemR0H5UH[m
[32m +        V7Pl1io89hP4JHj6DOuqwDOM4Gneu5MAquFTrVZbTTNN1k2zRTRGzmPXTRdNE5nneHKbFbkevm6u2lYl[m
[32m +        /MtlyNmzGTkH9yLb9wCy/Q6YhtoKcKb7C1z5CVx571Er2nIFW7WNyi5Cp2mRIdN8Tc7npJWT8FkdQAmc[m
[32m +        Rmn4DBHA1D6hk/DJYypy/1bEue2sAk9aO2nJNMoIh1xMKJGWT8YllBI+zdcIqMa4lqoGoGZpCDXqh3NA[m
[32m +        5dwMm4l+Uq7AJ4GUFtC7YGpS1lEX5BxzRY4ZQDV8pikLqJR5XMo/KelOuyNJIDSBK9teO4bi6GsCnsEC[m
[32m +        m6HIiyF8/r8bQAtSOAQ3Xonw+esAaPVhtvcD0AoJL8/JkHSMmw0UFQM5BbjhdRQorhCwzMOpT7/G8pfe[m
[32m +        QKHDQSBP4PRWGQpvS7yiUqwbMQEnd+zBnZs3cUvKPbx8BRY9+jxm1nsYM+rUw0IBOK5Wu9K8qBCthQQv[m
[32m +        I4z9FFmDQKOW2TRQVlNaVJdy25X69bDpDRvcvvAnVMTUR2VsfZQEP4Ebe+shZPeL8hltiMBvGmLV7wQI[m
[32m +        FcA2kHIokwVTra5rUYZRlvX7KWI9ubovhyOvUuD7MGbVfghTGjyCb1q/gZQj0t7lN3F9mwM2vtsTuBSA[m
[32m +        orI03E5NxBGHnTjt5aa2w+E8UFSW4SaKUXK7BMgv4q75KC7Iw607Ag4EUK5UpKyhPwRPrV/LMW/CG+GM[m
[32m +        1jsNCxpC2JHnEETCA+fT0bLGaxzGSmskIYRbuHAlXUIsgYJWTV1nnj/77LMKThiPHX1CXmcBduar4xGG[m
[32m +        CBm0hBKgGJcrr9KqRgsoy2S9CEIcKkoo0sNzWS/mT0igI7jQqksgIYwwHYGGYEPooAiiBDECLkGUZRBs[m
[32m +        CRyEUsKFdqwjoYr5cogry+O9855pBSMI0urIttLxGMZ21WBlzREeCZUEIEI2oZ3gzHqy3nTMk+kJQ4Ra[m
[32m +        1ovnBHVCNa2+tAhz6Cnbj21Dy7UGNWPZrBsd8+IQ3vPnz6vrbFtLp9MRxGjVZP30M6AjGHJILduAjpZm[m
[32m +        DlFlexDkCGj8kYJlsVzWhecDBgxQbcJ8WQe+MwRJ5s97YNtyuxz9LvJ+abFkWrYV47GNOByZ9894LIv1[m
[32m +        JfCyPmwz1ofPluUZAZTXWCafM+vFMP6YwUWQ+O5xmDXrwXvjM+Y8TwIpnwfnj7J+HPrM947tzuest5Zh[m
[32m +        fa21ZY2rcTXurrMxztU0zde0BpvWZB08tXYIeNqJtou2CXxub9wCu9q0g8cHXGRIQK+zgJ9IweeDAmiX[m
[32m +        XgKRtj9L9wfQnjjYtQe8aP3s0gX2b7bF1lbNsLV1M9gJVNLaSfjc0vxV2LWuDpsKPsXnuVEObZsLgAp8[m
[32m +        thEAFzm0bWnyXzf5WwRkfbt8gGtjBuOq6MrYwbg4agCuTRyO4FnjETp/CkIXTEXgvEk4O3k4Do3uC69h[m
[32m +        HNbaSwEoYVNDJxcOou/Zv4sBPk1WT26dQisnh84SSP0Jl1OGqQWEDgtIMh739eSenUfG9MWZyUMEGm1x[m
[32m +        YcZIhCydpqygGkCPju2rANTfAkA5zJbAyWG2TEvRKkpLqu+w7go8I9R+nTMRvnK6iMNtTWCp4TNmnQCl[m
[32m +        QdEiZfkUEUbjRPFrZiDRrBiBUVpFw9cLfH6+GCmOG5DvvQ83fQSCfATEKPNcTy4slOi5C9EH7EzQSUun[m
[32m +        gCrhkyCqFxbicFu9NycXDTJZQa0DqLJ2GqBTg2e48xZEiDislyCp9ukUcc4m53Nybqeae2pQNTgUkNQA[m
[32m +        agRLgqiyhprDrInxNIBmUQKLGkKN4jYsnNtJoCR4JvrtNoGnHKthtmb4VNuvSBwFoua5opmSZ5YZQNUi[m
[32m +        RWb4TD1JEJXrJ6QOJyXuGU+kXjyE/MirKIwPQXFypILOnKgg3IwJqQaf/28E0MLUuCoA1RD6awBohcCm[m
[32m +        1v0AtCQvG4W5vJ4rvWqBy+x8HNuxFxM+6I7ltoMR47QLiI5C6aWLWNK+C+a0+wDOi5fhe1dXnP5iC47u[m
[32m +        sJcebDES/H3xScu2mGlTH2tqPYr5AlXLatdX0Lnapq7AlgCWTS0s+hUBdJnNY1gh5RA+ORR2jo0A8DM2[m
[32m +        iNv0mPTEBT4TbHAr3gb5N+ohcH9d+Wz9FSGO/0CMY0N42j6KOQ/TKtnAZEGV+2B5at6mlbK0LOv3U8Q6[m
[32m +        cvgxAfQzBegSXqse5kk7cTjwDIEVt8njgZgwlIYGwmH1CgQe9kec93FkXBZIKxPgvFOMcghI3OYCUQVA[m
[32m +        Wiq8vt2I6/6H5bwct0rl+q1SiVMp+r+xgDJvdtDZMaeM8MnOv4YOHa477bQ00menm8cUoYRxdF50DRs2[m
[32m +        VJYj5kWrWVJSUhUQ0Ol7o88yCBTMS0MF86fFko5gw/yZnj7PCTJ6mK22SjGdrgcdz3mNdWcZPNf3rOtP[m
[32m +        +GM44ZFxeZ15aafhgteZjuXSMkYwYXxe02IZDNOWOF2mpdP1YF66rZmOZTANy2QchuvrGnSYjtd47wRm[m
[32m +        PV+SsMRwxtHPSjtdD9aL13nOfBjvXo7xmafOW4fR8Vy3C32e63bWYv68puPrcFo6Oe+YgMhzPktKt7l+[m
[32m +        Nrw/Qh9/kGC5fH8o7XQ7sFz6zIv1odiO+lzXmccsQ9ebddLx+f7SIsrnwR8p2D4MZz5Mz2PWh9Zb7t3K[m
[32m +        dmccfV+Mo1XjalyNs+5sfgiWd3V/OK0OnI4NW8H+1ZaiFrBvKJDVuDW2N2qJrY1aYHuzNtj79gfw7NgV[m
[32m +        7iK3zpxjeVdq+K3AKKHUo1MveHTsXaVqAEoLaFdaM+8twqZHd8njB7oLnJ49bOHVsxc8uwvwitw7doZP[m
[32m +        t+5wa99eALOVSOos8LmtVRNsFvjkkFs9zJZDbhWEmuHTZOm8KyOAmiC0mfId32hRJYZtavwSfLt9hKsC[m
[32m +        nlfGDcGlcYMRNHOsgOckBC+YjOBFU3Ft9viqbUv8RvaB93ABaYFK194mi6cGT4rDcAmgBE5t4aSvht4K[m
[32m +        CBI2z04agutzx6stVM5MGqysolxciFB6TPxTEwfh/LThSpdmjVaASfjk/p68dlQAldZRWjwvzhqF4KVT[m
[32m +        leWTlk4NoRQtoIx3afYYhK+YoSyekQpABSgNIlhague9lPDpHMSvm424NbMQv3Y2Ij6bg1AJS9y+DrkC[m
[32m +        e7kCmWpLlUMeAnUCXpzv6bMXCR6OiNy3TYFm+K7NCKMEQrnQkHERobuqDp0KRp02IGTXhqphttrySehU[m
[32m +        lk455tBbgme8p0OV5VJLDaE1g2cmhwBbAGgVGJpBk8Nwk713VQElRcC0BFBdjj5nfJ3GCJ/6WA/LpYzz[m
[32m +        OhVomud9WpPa/1N8AiiH63LYbRbneHKo7WkPJHFLlhMCqacEagVA0856ID/4DMoTQ1CUHIGClGiBt1gB[m
[32m +        0XAFoQWcxxkXVjXHk/qp4GgpprnXIkS8rkDTDJtaVeEETtbRIG0BLU4XuMwQ0CRkagl4Ej6NIlxy0SHT[m
[32m +        yrd3gbM812IxofuoJJdbq2RWQWjpTdMxV7vNket5JXnSa6pAfEgIQk6dBQqk855TgJtXr2PfsgVY16Ej[m
[32m +        fBYsRPqN75GTGYPsy98D/ueBxARA7sNx1hTMfOY5gbYGAlR11KJChEwCFudPUpw7qRftWSK+NSB7EFmD[m
[32m +        QK2lNk+arJ91CI51MK9BHWz72Aa4/gcgqo7oMdwOewx3Al9A5J7nEenQGFE7myN6RyOEfvYvrHjRtIDQ[m
[32m +        SgHQVXIvCj5/pExrdXwQMW+urMu5prS08pzzRNlupvmttbBe7mGRwPs8+Z8QcN4bt/NSEbnbFQlHuPot[m
[32m +        VyYWsKwsEv7PQkFwAI4sXYF18n9q8/SZcPv8S1w56A2UFKG4KA+FAqGCDVUdV/qW+l9yxnrTSkTrEjvp[m
[32m +        hAp24mvc/38dnz9hjZBHAOXcS4ZpSDU6wh3hT881ZRwNhTWuxtW4/033Awvog4uAelcOAp+7GrXBrsZt[m
[32m +        4ChAuk3O7eR4D4fbtudiPt3h0qkbnAVAXbr0qFIVjGpL6H8BQD24nyfne4rPc++uUq9334N9m9ZqiOyO[m
[32m +        1tzfU+BTDbl9RYGmBkuCqLZ43h1qew8AfaMp7Ns2keOmAp7NqsSwLc1eVgBKy+fVycMFPCcjdPFUhHDY[m
[32m +        6/xJAotD4ctVY4f0xKHhvdQ+mq59O+KAwCeH3Zqgk1ZPgmdnAc6uApuUCToJl7R6csgtrZtnJg5W8Hl5[m
[32m +        5ihcmjFK7evJRYXOTR6qLKKXBRYJnsfH9VfWyzNThqohuIGLJuPq3HE4PXmImuPJPT451Paw5Mn5oIxL[m
[32m +        iygB1HuoyQLKfAivkasFFFdyD08zfHIxIYPU0ForsGnSDDXcNuaT6Yj+RAD2k1mIWD8L4evnIEwUvmkl[m
[32m +        0p03Id/HCTk+e9SCQumHXJDi76q2U4kT8Azft1VgcxNCnTYi3GkTIpwEPsXngkFc0Zb7d1oCqLaAaqnt[m
[32m +        UwQuuX0K53ISOAmfVJgAKC2eHGabIOBJcOQw2aoFfzQYmofaagDNpK8lwEhA1JDJxYM49zPBy/FHAZTl[m
[32m +        6H09CZdGAM2mpdIMnvSryhBg5SJEhE8OwzWteGsdPLWMAMpjDrvNPOWOtFNuSDnlitTTbkgS+EygFfTS[m
[32m +        YZREXkZFYjCKk8IE5moA1BpsWpMlgFK0fhblpKGk+KaCmIrCm/Db7YTvFsyH3eLFCPbyRCkXTkIaEBmO[m
[32m +        nK93wqF9Xyzt3B2nfN2QfzsHCVHf48uuHbFAYG2dgBLhifDJ1Wr1QkJahE+C5xKBKh4br/0UWYNAraUC[m
[32m +        jgRG7uu5oPZDmPG0DdJc/o3yiGdwK1FAVHQr2gYVofUResAG4XufQsS+pxC57zeIdGoCzxF/wYwGkpfU[m
[32m +        j/CsIPFHyrRWxwcRYXO+tBNX/1V7jIrUokdmTePKuTa1lXWUizfN/9OfcWnD10BmKrIr8pGbk4XboXGI[m
[32m +        cnDDNwNGYkq7d+Ayb6FAdjSQkgJkZWHZsGHIj47BbYHQovISFFRU37dRA5zW/6IjKHDILufrER7+l++l[m
[32m +        xv1nHN9x/Z5zKxO94rAlVOp3heHcW5bvkP4BowZAa1yN+991Ng4NW+BesoTO6td5flfaArrzlRbYKb5T[m
[32m +        87fh9q5A0sc94NqhB5w7dMNegdB9AonO3XpgvwDgAREh1FXC3Tp2h7vovwKgtHz2MIXt79hZoLMtHAmf[m
[32m +        rblSbQtsb94Imxu/jB0Cmw6vEyhNoKmtnjslzBI8tR4UQLc2fwVH+3ZB6KzxCF8wBSGLpihoOz9zJA6P[m
[32m +        7osjw3vDX+DTZ2A3eHF7lF4CnaKDfU2WTsoEnbR4doP3IC4m1ENZQAmfXGDo2Ji+arsUDre9OnssTo4b[m
[32m +        oBYfInTS8snrQQsnqzi0cNKS6dqvvbJgnps2DEFqEaJJahEiowVUze0Un3NBlcWTQ23FvzB9hBq2G76C[m
[32m +        wMnVaecichVXtJ2lVqpV26UYFLPu/gAat26qAOg0RK6fgdBPZyLg01kI3rAQiU6fI9NnH7IFNAlxJuBz[m
[32m +        RrJAXqyXE0KctyJ472aECHxWWT4dBB53CFTuMK9iu9MkSwCltdMoBZ+ETTN8EkIVeO7bjGhXOzVcltCn[m
[32m +        rJEGi6ReiVaJdTQAaJaAYDWZAZGqykvy4TDa+wEopYHTEkCZlwozx0sUoKVVVS9opC2fpjme95cRQLkP[m
[32m +        KIfdppsBNPmkCxJPHkDmRW8UhF1ASUIoypIF7OKCUZRMAA0XRaAoVSCvBkDvK0sAJXwWSB48R2kBUFII[m
[32m +        FIqfkSXgkg3EJyD72GEcXr0SPpNmI9zNTcAnCXeS4nHD2VXiFCDu6EmsbtZYreZKSFKgJOBEoOKczyW0[m
[32m +        4pmhiuGEU4InLZNcRdYalD2IrEGg1uJaArcCbgtt6mGKzUNw6vUoKgL/Ke/GX5AT+1fkxT+F3OjfIDfs[m
[32m +        RVxxfx5X9/9L9Ddc2f8XXNvbHFc/fwfrX6mrVuldJGURPhfUeshqWVrW6vig0lu6aDjXq+USfBfXNq2Y[m
[32m +        y3jr5do6m4cx4/HfwmniBJSX3URi0A2s7NYP+6ctQt7Fa0BqCo7v2AmnhQvhsXYlJn/wPhb17Q8kC4xW[m
[32m +        CJhJh7qozDSMT3eudQdc63/JGSGBQyTp/lfvpcb9Z51+/nw/eEzfmlXT+GMMj41DXC3j1rgaV+P+d5yN[m
[32m +        /avNBRytyxJAq19vIRLg1BII3fqyAFeTNtj/xgfw+qg7PAU+PToIGHIrlC49BThtsU/8agDaWdSxG1xF[m
[32m +        bgKpBFB3gzw6C4ia5d7lZwJoNwFZgc276qG0v0MHbG/XTiCzDexbcWXaprBr0Rhbm74KJwLk69xShRZP[m
[32m +        DrltjO0tX1O+g4CmQ1sCJ0G0ugirBFBHBaBy3LYx7MW3byfXqTebYscbjeH0TktcHDcIcctmIWzhFAWC[m
[32m +        /qOkrkO6wHdYT9P2KgKVnn06KnnR790BHiKvAbRyckVbgieBkwsT0VraQ+3VeXJcf2XpDBRwvDp7DK7M[m
[32m +        Gi0QOgHX5o5D0KLJoik4N2WYsoyeFRgltHoN6qqsl1ztlro6bwKClkzFdYFXzgM9JvBKSyfneR6SdP4C[m
[32m +        sqZVczvj5MSBCFk2FVFr5ghETzMtHiQyWT1N4mJCMVyh1qBoAdDoT2YqCydF6NTigkNx6ySvT6YjXOAz[m
[32m +        8PM5iNq+BukeW5F7iHMrnQXURAKhKQJ3CQKCYc6bEbRbQFKAMcR5C0K5tcqujQgS0Ayx/xah9gKV4mvY[m
[32m +        VJZQA3xSIbskrYVM26hsUkNso122I97D3jRMVoCQ1koNoZS2OGpwVPoBgEqcKu1Xi/pwL9J4T3tEuWxT[m
[32m +        fqof54DulfQESs4N1XNACbgmpfjuropHpR8ikEo5Ej9TYDHVf4/Uz0ntcZouYUaZ5nqaAJS+aRiulgFA[m
[32m +        zXEYrqD1uMRXiwy5IUWUKMq7cRy3466gMkngUm2PEo7S1GgUJYULhIajOCUMJbSECnhy9Vv6+QKgxq1V[m
[32m +        rEHjTxHT/DoAKkApUFfC+Z1acv6rAOjNdIFNAU8OvxUYLcpMQUV+DlBZglKByk9Hj8aUt97Fyg5d8Umn[m
[32m +        7ljw7vtY0PFjzPzwPcx/5yPMfP1dLLTtg9SoYIGZfCR4+WL60//AdwKTqwWO5hA0BcYIoZ+ICKDcEoXS[m
[32m +        lj0NoLTq6a1KrInX9N6fGvJ4zHmda81hhDTGJbwtljrMF1ibU7cepnPfzUca4LN/NINjh/eAC6OA/HYC[m
[32m +        2W9LvccKaM8CiucAReuBpI1AjCNuR2xFZeQ6VEROAq4vQMRn/fF102ex8g9PYNajDTDt4UdNYCv1NtXd[m
[32m +        BI28H+5HyrqYhhqbFhTinE7WTdXdfGxNTLNW6r5GxAWIOEeWeesFlOgzjHNp50o5C+vVFb8BZtV6FBu6[m
[32m +        9QJiE4CEJJTfzEEFylFcKM+zpETCY1EacBW3AgOA7GwgMRm7PvkU5zkn9NZtlKr5gtK5Zr+bfezbpg63[m
[32m +        dMXVP+7/FadBgeBAx/l52mkgrXH//3UESA2g+j2xBpX6/TG+SzwmjNa4Glfj/jfdfeeA2hvk8ForAU1C[m
[32m +        p0mETjvRVjneKEC6qUlr2LV9B7s/6oh9Hbv+YBuUBxa3WjHIjdCpJYDp2q27hXrAXaBSicdmefXoDa+e[m
[32m +        fUzq0RfePXvCx7an+N3h1b0z9nz4Nra/0QLb2pqslXYtXsO2Zq8qq+fOVk3g0EY6R7Rq0vqpoFNgsrXA[m
[32m +        aMuGVef2bQRMXxe1lWu0dlIMl3OndgKgbwnUir+9XTNse7M5tgl0OnZ4E3u7v4+9Pd5XW52ELJuO72eM[m
[32m +        VENa/QUAucgPxW1MXPp8rOTWrwPc+neE+4BO8KDU9iYCoAKDOj7h8fDoPjg/eTCuzxmDwPnjlX95xggE[m
[32m +        zB2L4IUTcW3BBAQumYIbiyfL8UQcHd8fhyTNwaHdcUSg9ZTA6Dmpy/kZo3BdgDhI6nZRANZ/VB/4DLeF[m
[32m +        38je8JFy3DnMd2gPiT9ExbNcydZoyby7qu0Pr3ERoYj11Axl5SRsRq2R/KjVUxC6diZC1s9F7GYBT+et[m
[32m +        yPHeg1SvvUg+KFAmQJci8BfvthNR+znHc5MCxXAuCCTHeqgs52tWk9O3aguV6/ZfKelwvbiQcWEhNc9T[m
[32m +        jgmeUQe2IU7AUy0q5EuwM22Roq2eGjY1gGYLVGrRkmm0TtIqymNeI0RGu25B2L4NShEHNgrQ7pRyHJDk[m
[32m +        Yy/XORR3NzKO7BFw3C0SX85T/Z3uhsl5mv8uqYdTlZ/k54hEf0ckCaynHJH4R6WeFko7JtB6fJ/yjUo+[m
[32m +        KlAv4JkqsJl2QoCUOiZwK3FTTzoj8YTEOeuGjMuHkB9xEaWJwSgV0CxKFNhMiqhSSXJklbgIEQHwpkCi[m
[32m +        Bsb7SYPlj0ktQiT58thaPpSKZwVA841KEQhN5dYrAqDiF6URQMVPjxXojK+uzOqQqcVFhQihGkiNiw2V[m
[32m +        C2ByoSH691JZfipKcpNwOy8dlVmpqMhIEyCTDlZZudxnLBIvnMbpzZvhOH4aLn6xCQgIB1IzpFdfKsCW[m
[32m +        h5LyfJRwkZuSXATv2IqZv336Fw1NJVBS+pwwpkXwIsQR3ubVqYVFD9VTELZO4OwbgTUFdcpCWQvz6z+K[m
[32m +        ZX/+Bza+3xGXVn2CUhcnxH27C24zJ+Ca6/vIj34fRdEfoDj2ZRTH/w6lCc+jPOGPKAz9O67vfw5Xd72C[m
[32m +        67sa4cbepriy93UEe7yPELdB8FwyGCeXrUa6/W4kbF6P06PGY2vz17H8N7/HPJsGcu/1sfKhx9VepoRq[m
[32m +        guSnIsI368l7WkBoFFlrG0pD9L1kLY3W4noNsKlzBxTKO5N3uxyVZZXybMpRlhYPZKWh8PsrOP75F1jR[m
[32m +        uQvW2sr36/pPcGnvXiA3D8UVt3Cr8g4qi8vlHRDovGWCz/JfEUC1dYm+noenjznkkdfoExy5EI0Op9MA[m
[32m +        Qd3PWcbRsGEtnY5LMZ4RPCzFa/StOR1HO2uAo52OyziW8Yx56Lrcy+l8jPkZ0+tw47E16eHKD+J0Gt1W[m
[32m +        lL4P5qPb6F753euaMdyyTSwdy9FxdDpjes7/1W1nec2a0/dhjGssQ7sfy+enOOajy9XOOCLhx5yuC9Mz[m
[32m +        He9ZL5DEPPgjDD83+jNlrd5Mq8vTi13xXEs/Tx3HWF+G6TpYy1vXg0772lmmude5DtPHrJ/xGu9X1+d+[m
[32m +        jnG1r4+10/enr1le57nx82FsC8u4lk6314/FMzrGNZZl2XbWnE5jWY7lOZ0OM6bR+jH3IHWxdMa2pdML[m
[32m +        aP2cvH6ue2AApXY0bFElOwFPwue2Rq0F2N7Evvc7KCvmgc7dsefjTtbh8kHUWSDTILcuhFCzfgRA9aJC[m
[32m +        FBcZ8upJCDXJu6dAWm+Bpy4d4fRuO9gJfNq9IVAosMh5ndtbCFxyUSEOoW0tAEorpxlACZtVwCkQymNH[m
[32m +        AVfC5k4NnwKZSuZjx7cE1N9uBTsBTzs53vFea+zr8h48uWdnn47Y0/09BYynuRiQACQX9uHQVsIlgdO1[m
[32m +        b3u49BX47N8B7mb45L6anoNM8Mn4nHPJ/TtpkTw7Zaiaq0noDFo4QQFnkADnDQFRiueEz8vzxuHsdK6q[m
[32m +        2wf+o3vDb1QvAcnBaujvmalDq/zvZ40WKO0HbwLuSFtlnSWoUielztckv8g1cxAhUvt2rhUAVdbLu4Cp[m
[32m +        JJBZTZbXzeKqt+FrpyGC8z0/m4WIz2cj5NvFSHL6ArmeO5DrvRs5vvvUQkOpAqAJHg6IVBbO78C9Owme[m
[32m +        VT4hVKQWB7ICoVxMSO/laVxUSO/fqaWG2bpsVxZODl01WRmdTfMoDfBZNRRWxGGvhFAjgFIMM0Io54wS[m
[32m +        bEP2cDGjbxHlshnJvg6Idd9mAk8BSMInlSHQmX2MwMr0u1U8BaAaRgU4GY++glWGH5G6CkwSNK0BqA6z[m
[32m +        hE8qhXF4TDg9LnloX8I41zP1og/yQs+gLC4AZclhApu0ckahWECuBkB/PoBWFnAlXMlDVJqfiTuFN2km[m
[32m +        guvGrYi79L1ASxKQly3KR/mlABz95BvsnDQHZ761w3UPb+TkcJ/PAgRv3obZtR7DWgG/OfWsw5GWJVA9[m
[32m +        qAhm8ziHVHxaFD8V2ONw2GmS5+SH62FqvSex/J8v4+DE0Yh1kM/Vd+vgMqA7Fv/pGSxrIIBY52ks/qcN[m
[32m +        so88jltxdVAe9zRKY55CeexTuBP7e9yKehZF1/6EkL3PINTpZYQ6vIoQp3/KZ/sFhDj+EVF2r8FnxD8w[m
[32m +        4yEOwX0Ya2s/jqVvtoL/0tlq3vfV79Zia+f3sejp32BVrYcEPrnSb11MlzpOf6QuZtY31f1TES3C1tqG[m
[32m +        +iUAukCuT2/wENa37yj3lAgUlsJl0zZ8NWMWZnWzxRejx+HMpk3Yv2QhkJ4sz5V7uxYiNSYSZVl5uCXx[m
[32m +        K8srUCEdpYo7AhUi6TKY/3X/5x07ZFxVlBvyc4P9efPmYfHixVi+fLnadmLRokXqfMWKFdi/f7/a6oQd[m
[32m +        TXZYtDXzQTtljGfZwTRe02HWdK/rxvSWTl+n09eNYdrxmlF0xrzpjOEPKqahb+l0+L3E69aA617OmM6Y[m
[32m +        j9aPOWvp6IxpeXyv/HU9rV3Xz1vfj/GapTNeu590eXQ6z5/imMYyD11Pfa4hx6gHcUzH1Xy3b9+OL7/8[m
[32m +        EitXrsSyZcvUZ+mLL75Qe8YSLrXT+dInCHCP2S1btqh03FeWn8OvvvoKx44dU9eN9TTWkeH6mLJ0xmuW[m
[32m +        143nltd1WTpMX7cmff1+jtd1exvT6GNe0+fWZLxudPpcX7MWR9/Lz3FMq8vW+Vjmb+ksy7tXfRhu+fx+[m
[32m +        TNpZu2ZZz3s5xtHv04PE/0+5+wKog0jD506R3WsCbaLtom2vtcSOZm2x580P4Na+K9y5yJAA6H4zhFqF[m
[32m +        ywcS096VW9ce1XRfAO3BuZ0mefXU6gkv2x7w7NIZBz7+EA5vtcW2Ns2ws53ch8DjllYNsaXFq6Z5nQKk[m
[32m +        21s3hh0XGeIQW9FOgqZApQPhUo5p8aw6F1/Dp4OApsNbzbHzTUkjvsO7LWH3rrSZaG+nd+DZpxO8B3St[m
[32m +        mr9JmCRIEjo5f5JzKQmanIOpLJ4iZe00Wj0Hdamab0mrJwGWVlQuIHRF4PPS7NG4Nm8sbtDSuUiAU0D0[m
[32m +        +vxxCFk6BUGLJ+HCzBE4MravAsuDw7rj2PgB8B7eQ4BzGM7NGIFTUwaLPxyHx/aB19CuAqi9BFR7CYQK[m
[32m +        6A7vjqPj+yFA8o1YM1spivM41883WTcJklYgM/aTWdVkvBa/diYS1sxCHLdaWTcbkZ/OQZDECflyPiI2[m
[32m +        r0CyxxZkH3JCpt8uZArspXg6IcHVAeFOW9ScTMJm+F4BRVo8BUSDBSYJpMEiBZq0anLlWgN8crVa+jck[m
[32m +        nNeU1VPOCawEzoj9WxHtuh1x7jvVMFsFmmbIJHjyWMOmmk8p4eqYEGo+JmBaAijDOA8zVvIl3BI+Ccox[m
[32m +        bnairQo8afWkr2BSAFNDKKEyU4CSYMlwDZxJEp9pNHzyeubRfSpu+hGBy6NSX/GtAWjy4V33hNDUowLc[m
[32m +        x3Yj7YRcOyFAKvCZJPEyzrgiN+g0CqOvoiwpBMWJoSgU0FRAxyGrydE1APoLALQil+CZjjyCaEW+/Fcq[m
[32m +        RWZwMA6s+hTbRk/C5z374ovBw3Bmxw6kX7nCDfeA7BzEnD6Hs3tcgNJi3HDeh/m/+wu+FCgjXBESrcGR[m
[32m +        liVQ3Uu0hBLGKKbjcN25ArcaQDkMdcmjj2P8U49h54AeCLGzw9VPP8U3776Lec88i/l166shrIw726YO[m
[32m +        Jj1sg2NzXsOt4PdRFNsCRUkfojS1IyoyugE5/eXeBgJpo5F3fRLyLi9FzrnFSD81A/GHhyDM/UNE7Hsb[m
[32m +        MVs64qsWT2Cq5LnYhpbO+pgr9z2r/mNY+eKL8BjUByk7vsXpVXOw6rVXMPXJxzG5fj3MrFtbWT55T7Ti[m
[32m +        0qJr2S5avwRAV0j7EMrnSZ0ceg0CUlKRERYO/w12ApxZ8u9XOp8lOQg66IpT332DHOlY+q3/AjPbd8Om[m
[32m +        WUtQmZGD8spy5N8pR+EdAVEBULVV6K/k2InVnWbuh8iVSevWrav2W+QCQtyrk51fdoL/8Y9/VO07eeTI[m
[32m +        EZXe2CHWTndmtHQYO9CEVkp3pisr71qD6FsTnTUgYJiGYGuOcXQddHkMs3TGeEbpa0yrj+/neN0oYzpj[m
[32m +        ftq/l3hP9Ol4j0bHcGv1pK/vj+VaXqdjXsZzXZ41ZyzXGI9lWDqWp611Oq4W4+v7YTzjNUtnTG+Zl7E+[m
[32m +        +v4YTmeMp+Ma79PodBo6HY91ZJ4Uw3hO6WPGuVd+2umy9f1ShMmnnnoKNvJ9wD1Gue8rt3fRlkNLx7S0[m
[32m +        lHKbnNWrV6N+/fpqBWBusaMtqLo+dKwvy9H103WwlreOo+/ZGJdhOg2vsQzKeE0/O53W+Ay0dBydj6Xj[m
[32m +        NearnT7X6ZlG52GUpbNWNh3bx+iM1yldFh3v68cc47Ic3R4Uy6bVkOH3ukedTp8by9Xp9HX+GKHPdVod[m
[32m +        935OP0edj9HpdrB2jXkzra4T4+i8/lvu/hZQLjDUqDUcmrSBfZPW2CrgublhM9g1fx172r0Plw8EjLh4[m
[32m +        UCcBQwFPF7XSbXcc6NQNroTQe8kAnG5dBLy62t6VQOW95CawWU1m8HTvQZ+Wz144aNsbPr36iE8Q7Sbw[m
[32m +        2U3idoDTW2/AjntwviH39GZLbGkp4NnqVdi1bYQdbzSrpu20dr7ZQiC1uVznnE2BTIJlOx4LnBI+zcDp[m
[32m +        aAZRnu+QOHZvNsX2t8V/twUcO76ltkpR26OYFwnyHyZQxwWGhttWgSeH3nI1WULpXeA0WTwJpXpPTVo7[m
[32m +        GZ/iSrTcq/PqvHG4PEcAdM5YtVhQ0JLJCFgwHlfnjpFrY/G9QOcFQqWApO8ISWu2eNIngBJET00ZIuA5[m
[32m +        DD4jusFzSCf4juwuECp1GtYF7oM7SNweuLpwLEJXThPwnIEogUWjqlk+BUBj1wtsmhW3fnY1VQNQSRu3[m
[32m +        ahYiVnGV27m48ckcRG1dgwyXLcgRqEojKB3ahXgve0Qe2CqgKeC2Zwsi92xFpAAcwZOr1N6w/wqBDtzH[m
[32m +        k6vaiiRMwydFy6baLsUsWjt5XVs/eV3lL3ly9Vm9d2e1YbYEYJGyhGqZgVMt9CPnvE44JXByXmcVeArI[m
[32m +        cggv82d5US7bVd5cxIjzPZO87dWwW0JkwsEdUocdCjQJl2pILaFTpIfXEjgJpzxPM1s8CZ1aamiuGTzZ[m
[32m +        fho2jSKYKhFIxSd4coht+jFaO3cj/aTkc/oA0k67qIWGsi76oCz8HErjg1CUGGae38m5kwJtqbECbnEK[m
[32m +        QEsE8qpkAaCcW6nB0RooGqXj/SRZyUfn9aAAWphqAtDCNN6X6bg4PQ6lmfFVKslKqgaed0GT/t0wDZ5V[m
[32m +        gHnTAjjlXEMp45Zmp6FAIDS/MBOVd4qRl5YoIJanFhOCwAhiovH55Ak4tW8XNi1ZjOnynbewWx9ccnSW[m
[32m +        /8QlyPQ/iuX/aiTQ+YhaYXaFQBCHylqDIy0jTFmKYEZfwycXLOIcUg61XVLHdI0L8Mx/7CFMffwhnBo7[m
[32m +        EiU7tuHwqBH45M9/wfxa9bGu9uOSTz0sEDic8dDjmPnnP2Fb9/a49tVoIHoJkDcDt7OHozytF8qS2qMo[m
[32m +        pR3yMpsiL70xUsKb4trhpgjw/wCB/h8h0K8Tog5NRdqFySgJnQZELkSu/zx4T+6PJQ1bY/ZD3Ne0Adba[m
[32m +        PCqwWx9LBPxmP/IEvm7bGgGfLEeh0w5sbNYMC+s2kPupg+X162K23A/nv3I1YIrtZmyfXwKg8+ub5omu[m
[32m +        F/Ce3uAxOM6WOhfkiqTTGSnPNiERwQf2Y+OYUZjQpjXsZ81EgIurtEsCkJiFW0mpKCkuQCEqUCAAKt0E[m
[32m +        ec4/7Ez9pxw7Hrojwk4JO8y1a9fGkCFDqnX02Enhfpk9e/ZErVq1FIgePnxYdYB5jaJjXN254VYbp0+f[m
[32m +        xoQJE9CjRw907doVHTt2xEcffaT2dfz4448xfvx4ODnJ91tKisrL2DnX+TDv48ePY86cOejTpw969eql[m
[32m +        8qK1dsOGDT/oeDLdjh07MHbsWHTv3l1p8ODBCpqNdaVj/rxHAjghu3///ujWrRvGjBmjLMJXr17FW2+9[m
[32m +        pbaS6d27t7p/W+ln9O3bV90TfYazPqwXy+I5tw1hXO4Vqcs5e/assmr169dPpWU5vB+mYVqGMU379vJZ[m
[32m +        uXZN1VO3Pzu9ul10J50rw7LOvDe25QcffID33nsPb7/9Nt544w3lcw9W5s1n4OLiotqGYptxH1Pe49y5[m
[32m +        c9U9sWzez8KFC1W9WQZlbC+uSDt79myMHj1axaWmT5+OjRs3/gCGWA7Tsuxp06ap90HXXT9b7XhOx7R8[m
[32m +        Z2h5532xfdgetAjSUq/rw447rYxTpkypakM+b4Ibn6Wx7XTevGeWT5g7ceKEug+2Dd9JPl+2V7t27dS7[m
[32m +        +eabb6rwYcOGqfbg+/mgjmVS/LwQPPl54o833GfUeM/WnL4//ujDH4Jat26t6q3bS6fnvdE6ynvXz4qO[m
[32m +        74l2lmXx2dEay3eb9813lPfGvU+Ncb28vNTz4nV+Hvg+cxREXFycqltYWJh6HnyufGfY9gMHDlR5c4QE[m
[32m +        66bbXDuG8fmvXbtWpWH5/I5h+VwNmddPnjypPh+DBg1S5erPGMUyeK887tSpkypH15nPlC44OFg9U+bL[m
[32m +        uPx88R0aNWqUOmf41KlTsW3bNgX1TM96smxLxzDe65UrV1SaDh06qM8X34tWrVrh9ddfV3Xhu2bp+J3B[m
[32m +        z5T+PNOfOXOm+r5kecyXLiQkRP2Yx/dNf/5029BnnXnM9Pq7R3+38N3kPfj4+GDcuHEqHtuL30Oenp5V[m
[32m +        8+71+6DL5A8gHO3CfNim/BzzmXCvZd2Ov7a7L4Cq/T05xFaO7binZ2OBtzZvYf8H7eEuwEnoVCvYdhaY[m
[32m +        JHwKXGoZIdNSXCjo3rIOnyYROu/Ko6ftXfUQ+OzZF6YVbnvAu3dPePbsjP2d38c2wmMbwqLcS5um2NL8[m
[32m +        VWxv3VDAsZGENRYoFfAU2NSyo/XzrZYKQu0ELndw8SBt3RQRNnnu+LZApgCo01st4CDHO99pga1vNYXd[m
[32m +        B63gbPuB2rPTc1A3gcmuApy9cGRkHxwW+Dw6oq8JOgUoObeTw20JmkbLpxpua7Z6EkAJnZwnSp2aNFhZ[m
[32m +        PQmf1+aNV1ulcKEg7td5dcE4BC2bgouzR+Lo+L7wGd5dgLKHwKVA5Rgpf2xfNcT2kByfmDRI+YRRwqff[m
[32m +        6G44Mt4WXsM6Cnh+DP/R3fH9nGGI+2wuwlZNEfichnDO9xR45PxNLSNUEkCNwGkpozU0WhS5fg4iP1+A[m
[32m +        8K+XIm3vd8gRWMvx24fkg46IOWiPMJdtCBLQDN+/DRHOAnHcWkVANISr1BI0uV+ngKdx6xRaNykCJmGT[m
[32m +        ijTP4ST8EUKVNVTCaYXkNUIipaDTDJt6vidBk5ZPQihhk5Cph91yfifnfOYcd0PuCXfkiq9Xs6UVlZZO[m
[32m +        gictrDECnLSAcq9Q5hXrtsO8mJEDEr13KqAkjMZ72glgmgHUPOSWgKohVVs8GV8PuTUCqILQowLIBkvn[m
[32m +        DwCU4GkQATTjhMA053me2Y+kk85IEvhMueCNvJAzKI8PQFlCIAoTQlGYKPCZFCEAGl1NHIJrhE6jCKBF[m
[32m +        AqC0WBIIrYGiUdXA8ifoXnk9OIDeFa2hhFBaQUszE+7qHgB6V9YB1FJ3ATRNwWtJfjYK87LkP16ZmtP5[m
[32m +        9dLFmCn/HG44HwDSUnF2lz0uuwpslhQBhYXyH6QYcX7HgOR0lEg9v273ngDTI5hbuxYmPmqDWQ1MQ0yt[m
[32m +        wZEWIepe0vM9NYByPumiurXUnMq5ojUCVZPq1MJu244o89iFPb27YPJDDbCw3iP4Qq4T5mY+Uh9DH28A[m
[32m +        h8H9kL7fGRHbd8J+UDvc2PoKEPtHlMc+jNLI+rgdVlv+Cz8BhD8v4c8qlQc+j5C9jyHU6U+iPyN01x9w[m
[32m +        3e55BO16Qb4T/oaIA40Q4dQeruM+woW5K5G3dzsiv16DOa+8gHFPP4Ep9R8WQK4v91AfS+s/jpV/+AMS[m
[32m +        10m8nRux9OUXMfepxzFJ6riqLmHVevv8EgDlVjf0OcR3gTyTYc88iQs7twI383FiqwOGN2mNoO32wJXr[m
[32m +        QFy86ceGjCwknz4HjzWfYMj77yErIQYV8j7kCYgqJ/0jdpaM+k85y3yffPJJBZgaQHVZugNMKw7hs06d[m
[32m +        Opg0aZKCDt3Z1CDIsFWrVuGxxx5THaUzZ84oYNBl6LzYof32229VJ53WHna0mD8d89IdQ90xYhpCKC1K[m
[32m +        FAGMYSzP6Jg/w9jhX7NmjQIA1tfe3l6FM42Ox2OKx+vWrUO9evVUh4xwxjmv7NCtX79eWYIZxs4+YYTW[m
[32m +        rWeffRYNGjRQnfObN28iOztbdeYJjx4eHnjhhReQkZFRlb8uk8DGNn766afVdXYO2WFk55DwxfZgfnS8[m
[32m +        d915pM/0Fy5cUJ3WP8i7vXnzZtWB1/elpdOxo8424H0RPJhe56fjEuxYH7YpO/7G8uh03XU787l8/fXX[m
[32m +        VWk4NJv58Dqv6Xx5zA4wYZjx/vSnP8HZ2VmF8161Y1w6y7R79uxRZdAazzDWg+EsR9+vttrz+fKdY511[m
[32m +        vRmXjukodrI5lPy5555TeRLI+SwZj2JddRlsEz5DAinrHhoaqvJ6UMe68Rn++c9/Vu/fv/71L2XZZPj9[m
[32m +        nL7OH1wIoG3btlX3o+9FX2c9CX2sG98jPg/W33gP2vGcjmFMz7zZZm3atFFh+nNuTMP3mO8X8x8wYIC6[m
[32m +        znjGehQVFanPN58RvzcIXgzXwGx0On/6zJeWXQIx41H6HnmdQPXQQw+pNuN3BL87WDYBlhDXpEmTKmhm[m
[32m +        WvoU82A8Dndmnf72t78hOjpa5cvvAn6GCZNsV36Hff755yq98b61Y178EYTP7rvvvlM/JugyGJ+f/+ef[m
[32m +        f16FW3OsB384YVm8D757GgaZnp/34cOHq2HZhFxuR0Sg5PdBfHy8eqb8zBLQ+b1C0E1OTsaNGzcUYL74[m
[32m +        4osqjG3De9i6dauKz/vmj0osg3Wg075uK37nMh5/QND3pb+7/xvOZnfj1riXuL0KFx4igNo3bwvndz6C[m
[32m +        e4cu8ODQWDNMqv08rQCncWVaj27VV6X17NH7Puoh4Nj9HpK8DNDpaSt5afXsrQD0oG0fgc9ecO/eGQ7v[m
[32m +        tRX4bCpqDKe2LbGteUOlna1fg8PrjbDrTS4W1FhgUu5RgFPLTiCU8zfVHE4BTFo27QmYb0u4QKaSnBNC[m
[32m +        1WJDEseuXRPsfLcldnV6U0Gkp0Cjq2i/wKTXsB7wF/g8MqofTowZAL9BAuH9Oqo5ngd6fyS+dKJEhFEC[m
[32m +        Jy2dhFN9zO1OfIZ1V9ugcMEiWjqvzTeDp+g653ounKS2cQlYOgmX5o3BsUkD4DNKQFzA87gcew3vqhYd[m
[32m +        OjZhgGkOqICnHopL+Y3uKX5HeAxpD/8x3XFp7nBErJ0umobAZRMEOmn5nIFwgVB1/DMB1Kjwz+cg8Kv5[m
[32m +        iLZbi5veDsj24XBbgU/vfYhxcxDQ3IrQ3QJwe7cJKG4RYNyEG07fIYDgqaydAplyTBA1bp1C8CSAEjQJ[m
[32m +        nARBWjYJmIRAvcCQtohyH09uUaKhU1s4ea6H3OohuHqILcPUUFuBTeMiQ8wnRsBS7xlKKyfDOJeUdaAI[m
[32m +        ucyHQJwkoE3gjPPcroCTivOQY4FOgiahU1s7NXRa+tYgNIOLBnE4rRk27weg2vqZeXK/gtDo4wKf572Q[m
[32m +        G3wGJXHXUZwYgoLEMBPEJYSZFxsKE7DkMNsIlAqMUiUWw26NqgHQH8oSQDNzJLxM4LJM/jnl5SM/4Aby[m
[32m +        A2/A7duv8OnI4Zjasi3sx07ChQ1bUBYUgviAayguY+e0GPunjMPU2oQtAUaBHu6TyfmftMBZgpFRhKh7[m
[32m +        yQigjLtQNEe0+NH6mC4gOu/Pf0XWBvksLlmA6c//VuCzLuY3qKuspCOefgQLW76K4C2fIWHPFuwb1BtT[m
[32m +        H3kM820exoa2TwKXWuF2hGnPz4rYWrgTK8c8D/4L7oQ0AUIbo/J6K8S5NEbsnrcQ5dgWEQ6NELL7r7hh[m
[32m +        /3f5zP8Dkbv+hmSnpgha8RZmP2uDqfKP9JNX/4krK+chdb8d9o0bgrHPPYPxj9AKK8Bcux4mPFIHy95o[m
[32m +        hCznHTg0eiQWP/08FtQyASiBeanFgkS/yAJau64CTz4PPodFdWpjkgBF/sWLuHMzB0FnTyDz6vcIc3HG[m
[32m +        9tFjsFb+j37SrS88l6zBDW93lESHA1nSqeH7UCqdAunHcRSu7mRp/aecZb73A1B2athJYgeecfjrOztk[m
[32m +        Oi2Pg4KC0LJlS9XBc3d3V+nYudFxjJ09hrNjSJ8dQ8IcLbC7du1SZTOuLl+7b775RnWKGZedJ91xYtna[m
[32m +        6XT0Gc56EhbZ6ab1g+HsAOq8GYedMl6nNZYdaw1TtKrovDWAsSPJDvDjjz+uOpiEGn1/upPHtBflmes2[m
[32m +        1GXx/JNPPlHtw/tgnsxftxOP2QGlY5i+xvwYl1bfRx55BJ07d1Ydct22dNrXTteFPi2UhHfem86PTj8D[m
[32m +        /ljAzvbEiRNVGl7Xceh0G/AaxXYi9DEN21eHU9rxmHkQQPm8WAbT0IKl75Ftybx1Ou0zHS3GfM8I27ou[m
[32m +        xusUoYfPgW3p4OBQ7Z61Y/60NjVv3lyBDeMxLctmm/Jd0PkzLs/5nOizk0+LF9/7n+JYB8IBQeGXACjb[m
[32m +        Tt8TnfYZNnToUNWeTzzxRBVQ8scP1p2OcfVz045h/Izq+DrMeP9sEwL43//+d9X+tN7pcrVj+Xx3YmNj[m
[32m +        FegRfgjbGugt49Mx3xkzZqg679u3r+q567J1Or6n/EGKoKp/qNDfB1RkZGS1MuhTzI/iZ5ltzvT8jtBt[m
[32m +        wGfJetNSy+ts34MHD1aBodHxxy1+FzEPgh/rTtGxLH6O+H7St3T6edEqyXIIzPwxy1hf1onQyfvQbclj[m
[32m +        3ieP+VlhG/DHLX3fRp06darqvpiGeRw9ehS/+93vVFr+aGa8L9adcTgyhPnSZ3qGMz86Xb9f29nsbtIG[m
[32m +        99KeJq9jT7M34NruA/i0Fyjq1B0eCja7wYXzMbvbKgDlnE8jcFJGq6Zn997w6sHVaE06aEtQNEug0XjN[m
[32m +        q2cPUXerMgGoQKxZXr0kXy2Cp21/ePfqg/2dOmDH269jyxtNsP2tJgKgr8GuBRcaEvBs0wS7CY2vvwb7[m
[32m +        Nq/CsW1DE4C+LfBplt2bLeDwTmsBzVYCn82xg3M632mpwNPxvVZqfqeCUIZzuO4bTbGv/Zvw6P0xPAQi[m
[32m +        PYd0FeiU+o4SEB4qcDeqD3xH9ILfMFscHNAVHn06CaTene+ph9vqBYUImn4jelZZP4+P649zU4epRYYC[m
[32m +        BD4DuKCQGT4vzhqtwjkE9/TkwTg8vi/8x/WG31gpb4ytgGh/XJg7CscnD1QASp2eOhR+I22lTrZm62dP[m
[32m +        NfSWFlCCJyEzfM1UBZeEUNNWKQKX62epMB7/XACN/3ROlWI2LUWK2wbkHXFEho89kr3sEXHADkF7tyNs[m
[32m +        3w7E7LZD9B453iXw6bQRgbsEPs3i/pzKCiqir7dMoWjVVFZPM1gat0whHHIOJuGQIMq4hFReN1o8ldXT[m
[32m +        fKyBk9ZPvcgQw7TPNLRs0pJK8KRo3eScTwIs4+jFjFgHinkRhjkEl9BJy2faIYFggU0CKM8JmITLnOMC[m
[32m +        ugKFBEuea+i0tIQaATRTr1prBswfA9BMAc+sUwcUhGbeOI6i6EsoSwpGYWIobhLsUmKRlRSHfAWgoSgR[m
[32m +        IC1NDkV5EhWiVKqgtAZAfy6AZhfnyj8A+UeSno0Dy9bAZekqIDlR/qtIx7wwFbdvpiDz8gWc37gFa3v0[m
[32m +        x5GvNgEFhYj09sHq3/1egKe2Aim93ycBaW6dulbhSItx7iVCG4fw8pjbmcwTza9fS+0p6tzxA0S77cO3[m
[32m +        0vmdXP9RyeshgbXaWNygNr7+x/O48skGpHyxDRv/1VLSP2wailqvFtY+YoPIjX+T+3oWpWmPIi9pCArT[m
[32m +        v0VJ/qcoK1yL0vxVKM6fg+KbM1CQvgBJgUuRGvgNskI2Ijt8E7Kj5HMQ5IjYUwsR7P4+opxfQqqAqWNX[m
[32m +        qVs9AT6bOlhR62GsaPAkzg4Zjpu77LFt7BAsfvJhkyVX4sysXQdTn3gKVxcvRfTWbVgmHcPldWqZLLwi[m
[32m +        Y/v8EgBdbvOQQHs9LKhjg88k7gbR4tqP4JMePdR80PxzFzHro49x0W4rbl45D+QmS8+rEBVluShLi8LN[m
[32m +        sBs4uGkj0q5eV6vnVlLSL2DnwKj/lLPM934Ays4Wh28RgNj5ZUdJd37YiWEnnZ18drrmz5+vwniNefBY[m
[32m +        l8FjpmUHiGJHiee06LAjyw7q+fPnVZjOW6ezs7NTHUfWUc+nYx46Dp2OS+lO1qFDhxQ4E1Y4dJPXmJbX[m
[32m +        aOFgR9PX11fdD9MwD33/rIOxDB4ToH7zm9+oe+VQSMbV13Wd6ejrc90Wn376qeoEEoZ4D7o8nYbxtHS5[m
[32m +        FOGbbU/LKi1Dukw6ptdimD6m433y2dC6rO+PYYzHMghG7GyzThzSSnDSedDXZRjbw9XVVUElnwPblmE6[m
[32m +        jdExjABJ6+fly5eV5ZHlPPPMM8rSzLKNZehj5kfrJvPnkG2dvxbLYX04T1lb5Pnjgi5f+0xHUOePIqwv[m
[32m +        h5by/nWHnO1gTKOPGc7rhFDWg8c/xTEf3tsvBVBaYHm/2unrrA8/g/y80pLI4ZmESr5T/JGCz5v3qd8t[m
[32m +        nYZ5cQitBlCG8TrFuHRsG1ri+J7x8zh58uSqONoZnwVhkm3L50pYZZ58NkbHMP4gw3JZb7arLo9O508R[m
[32m +        UnnvtJLqlbcZrsvjufZ1Wn0fDOfiT/xBgp93bSllXIrl8kcL3hfrS+u9Tmt0hFWWz/ePw3hpSdWfGf2j[m
[32m +        ibV0xrJoOWb6Ro0aVRsBYoyn3z8tthvD+DlnG/B7VIfT123AsnU9eM774nPju/rHP/5RpWc78J1jXKbn[m
[32m +        dzdHV+zevVvFZX50vK7133A2+5q3xd5mr8O56es40LQtnBu3wb7XWmN/I/Hfeh9uHQSCCJECmV4Cm/Q9[m
[32m +        OnWDu5q72fveUuBpsnZWA0zR/QHUvHCQFXn06gW3PpJ3bwFQDrHt0wPefXvCh36vrvDt0Qmu7d/DzrYC[m
[32m +        iJzr2U4A8vXm2CLwubnVywKTTQQkOXyWw2obVx1TDm83U/rBudnqySG2XNmWiw05CsBy6C3Pt37YCvts[m
[32m +        3zcNm1WLBHVRq9P6C+CpIbNcbVaOudgQLZzcVmV/rw/luD3cBxA+afVk2k5qnubpyYNwefYoSdNTILQH[m
[32m +        Dg7pjPPTh+La/LECnhPUvM7riybgivgBiyfi4pxRAo2jBSoFPsf2xqExvZR/bEI/5fPahVkj1PnR8b3g[m
[32m +        O0rqN9wEm5TX0A7KPzdjEIKXTvjBIkIU53hGcYsUs2LWz0DMp3JNa/08kwQqoz6jZiPy89lqJduUdVOQ[m
[32m +        umYyErmn56ezEPblAgR9uwRJezcgx98EZwQ/AhphkHDIIaumFWI3Vm2boofMaqn5m1pyjX7VokK8LmFc[m
[32m +        UIgQqOGTABjnbifhtE5+I/G+lvI4J3Nz1YI/hEG90I+Guizzwj4phwX+aC2kZVHALUnixR7cgWDnDQjY[m
[32m +        8xVC9n+HeAHpKI9t4u9ErPcOZYFkumjP7Yj22o54X3vEeNmpBYJ4nijlJvg6KMVJGg6ZjfTYqvLn/M2k[m
[32m +        Qw4Ch7ROEiZ3SRi3VnGQeNxmxb7qOOWIkxLjcAGhFIHPJIHJZFGiwGiSeTEhKu24E7IPbZO2t5N7cVQL[m
[32m +        DSWfPID0C94oCjmDwiorJ62aAo/iW1tYyFLFKQKZqVH3VHGaAF1yBHLjQ6p0MyFUAJELEz24mMddVYdK[m
[32m +        SyCtBpkWUoBpEKGzyLz4kKW4+JAJPkXZiSgxqDQnqZo0mGrQNKoiL1mUivJ8AdS8dLXabYGAaIGAaHF5[m
[32m +        MZBXiFTf4zi9dTtK89KQe6cA0rVG3p0S5KECMRGh2Dl5AQLcvZBYKemzE7DutRYKeDivcanNowJhD2Nu[m
[32m +        rbqYWtcG0x7jPpb1RXXVgjsEqqW1GmBRrd8KHP1Zzh8T0Kyn9rnkNiWrbDg/kpbK32CGwObCuvXwuc2T[m
[32m +        aijv7EdtMPSJf8Bv8mpU7tqHrc+3xUr5x632wKz7JOb9rinOzluB4O0r8PWbtpj+kA0+r2+Db+X6Gpun[m
[32m +        MKVBPWwZ8neUZ8wRmP4MyLADYmcAcS2AyEeAkIdwJ+IhlMfVRXnsY8gL+D2C9j8nn+l/4Ybjiwh3/Csy[m
[32m +        dryKRPu3kewxCLnn56I87DMUh2zAWYfJWPzXxzG5noBfg4cEJH+DebWlA/Z8fZycPgpJDv5Y/34rTH2K[m
[32m +        q9MKKEt9Zsj1A136I8/pINa/0wxTpa0I3Bw+/GltyUfab2Htp7BQ7mERh9OaF3RiG9KqSQBdbfOspHlK[m
[32m +        wkyrAHNo8hyJN6e+dNYayLkA92I5X2VOt7RefcxuUAexjltwS55tRGgQcv1OI9/dE84blmPjzBlw6Doa[m
[32m +        dl0HwWXsDPit+ATXD7gLgJYCRQXS87/bWfhPO+ZrlBFA2UnhsFNaNTjsk3PsOPdp7969qsOjOyz02Wmi[m
[32m +        JZCdbf4Cz6GfuoN1P8cydSeKw+s0XNLCxzBLR1gkbLAcDmvTaS2d5X2xjv7+/vjLX/6iOsuEOaaltZUd[m
[32m +        TcKnvg9jOmuO6WghIcyyrhz6aa0O1hzj0TrB+rMDTDhiJ5EdXsIo21pbVli+7niyI/7SSy+pdJyTymfD[m
[32m +        uho7jfeqL8MZz7KtGE6xXD53dto574xWNEKNFof9EfS0Ll26pIYOsh2ZhnNrmQ/z1nkaRdBh/hySyveG[m
[32m +        z5BAyufIOXCc+8d70dCiO+HsTPN++S5Yu0/6rBs726wHh1jreLpsntNaS+AgqPKHA90O9O/ndB5aP8Ux[m
[32m +        Pi3LhCDWjc9OW/Puly/PWWfOUWX7EkD5rPU1HZ9xCHL8vPCdIeDwXX755ZfVO0mrJEcg6M8p0+nno4fR[m
[32m +        87Os8zM6xqflkADKunOeNtMa3x06XR/Wj/Ms+axojeUwcubB9tVl8/3mjw8Ecr4HOq2W0RG6mBffEVof[m
[32m +        +TnXnw+CNd8/wpe1943l8d1kev6oxM8p4zKc7xTryu8vthuH/OshrJb5MC5/BODcXb6nv/3tb9UQdn42[m
[32m +        mAfv7X51oM+53nwW2gL6Y06nZ558PkzLYcAM+zGny+Vnh9/V//znP9U7z+851pegzSHDbm5uKj7v70Hy[m
[32m +        /TWcjQLP5m/gQIt22NdMYFTOXdu8jUMfdsYR237w69kH3gKTB7v2rPIViHa1hUe33veWmotJmOR2KNVF[m
[32m +        K2WVbAmkvQ3iQkJSjhV59hb4FAD16CNg28dW4NMWfv0IoAJSPTti73tvKOAkeBJAt7duim2tmsCuDed4[m
[32m +        NsZOAVDC5U5Kjh0VgJqg814A6shhtgKaep4nrZ4ckuvI1W07tFMWTFopuS0KfQ6V9R8pEKjAs5caPktL[m
[32m +        JofbunKOp3lbFQInRfikvId2VYsFXZ0nL/b8cZLeVkGoz7CuuDhrpFrJlivbEkCvLRyPswKlBMvjE/vD[m
[32m +        X+JyjiePNXiemDQAZ6YNwY0lkxSkEky9h3fG4XE9cWhsDzXU1ndUV5ybKeC5fKJpISENn59UX632BwD6[m
[32m +        qQWAClhqRX9GSRqzUgRIE9ab5nuGfjYPcdvXI9fTHrm+e5AicKjnZKpVYQU+CaE8J0RqoLSETw2YWlzF[m
[32m +        Vm+5ordf0XMuCZ7VANRjh9prk1ufEEItAZSiRbFqaCsX9BGAJJBmcJEeUYKfAyLdtyLIWeBYwDPMdZOC[m
[32m +        xhgBSkKpJYBykZ+Yg3YKOBlmCt+j4FUBqVxTAOq9U8WP8tymANS0SNAu8aUuAo4KQuWYEEroNMIn49En[m
[32m +        fKYf36OgMk3iUynHCaRSD7PSjsv9HbWXtJJe4qaf80B+4ElUxklHUc3zrAFQS/1aAFqSl4ECCS8pzEEx[m
[32m +        V5ipLEXgfjccWLIcSEsGygRKc/MFPjgMU47zi3D2KzuctnNEWXmOsp7NbfA7Aaq6CoKWUbVr4Zu/Pop9[m
[32m +        7zwHuzfqYtvHNtjyvg22v/sYHD54BjveeRgOcu74kQ3sPrTBjg9s4PBebex6pzac3q2FnXJtm1zb9HEd[m
[32m +        bHn3Iex562E4vfcoPvvg9zj3xXSUntyELzo+ju0fPoyN79XHlo+fwb4BrXHLbxPCd07H6l7PYPdHD8FO[m
[32m +        8tz6/pPY9MHLcOr7IdL3zgMilqI8vBcKo19GXryNvBM2KEy0QWmSDcpElRyKG1VHAWnF1WcR6vAEoh3+[m
[32m +        IcD2d0Q5/gGhzs8g8MBzuOr8Ii7vbY7LTq8jzKUdSi51Ba5swLEFU2DXowX2DqqP/UNs4NTnKewe/Az2[m
[32m +        r/gjELgZ19dNwIGBz2FvfxvsGSp1G2SDk1+3lWt74SLfo/t7vSb/Zx6FV5868r+mgXxnN8CBfvVFDeDS[m
[32m +        72H5Hn8Ern0fhmsfOe5TX67byHe6DdwHiAbawGNgLbkucXs/Bu8eL+FAu7/hs6cF7AVAVwj4LrCphdn1[m
[32m +        amPDm28A8bHyziZjcbd+OL1yNYL9naVNwuS5Z6Gi9KY835sov12IMpSi8E4JSlCJnMqiH3T+/lOOnRCj[m
[32m +        jADK4XW0FrIDz/ly7LgSjNj5YkdHd77oM4yWLkIV5y9xXiLD2MG7n9PlskNEGCO8suPNoWQaSIzu5wIo[m
[32m +        47AMdo7ZOaeliBYKlkMwZWeS1y3TWnMs85cCKNPxHmgxJqD9+9//VvWi9YLz/njvxnqz4822JRBwaJ+2[m
[32m +        qLDTqZ1lffU9WIZrp6+xY892Z4eVoMSOM63R9xLnrnFxI/0c7gegdAQdWr7YCddWG4IsrXZsBwIkAYaw[m
[32m +        wfvR+XBuHMsgKFi7T/o3fgRAmRfvh/nwHvX7y045r/0aTteP96sXIeJwVj6ze7WR0fHZczgl07Gdje+4[m
[32m +        js/75AJJvC9a+RiHYXxPOIya4XxfONyZw2l5Tb/fnAtJizcXXrLmGPdBAFSHsS05nJTvLz+7zZo1U59l[m
[32m +        PmvWl/fDeYl8ToQ6OuP963vSjnPL+S4SErkIU+PGjfHqq68qGGS9uRAQ66g/I0YxXAMo4Z8/hOkfPmjV[m
[32m +        5XBxQjDBjj+u6e8Y3ocxH57z+TEtP98cws/68D3mQl/a6n+vOtD/bwKodjo9Pzuvvfaaege40BDhk3NH[m
[32m +        eZ3vAeOwnv8Xzsa9+ZvY37Stgk/nVm/C492PcURA83CP3vAT+dIXCD3Uq5869ukuIEMQve9cTl6TOAKb[m
[32m +        hMpqwCny6d23Sr5UH8m7Sn3g21fKtSJvkafIq6/UoW9PeNp2lfgc/vuRwGFrAc/mcHyT1s/m2NrqNYHP[m
[32m +        19QCQ7vkmr3ApAZQDZpO73KorckKei8AdXqzOXa/eRdAd7zTArsEPF16faTAksNmafHkXp6EzWNj++HY[m
[32m +        uP5qKC2vHehjmufJfTzdB3SUDop5O5VBnZV102dYN/gJPPoO744rc8fg+oLxonE4OrYPjo6RtpdrBNJg[m
[32m +        AVCuaHtRoJNAScAkeBI2udiQXmiI4Tynf3yCCUh5jQB6bIK0n4An53qenT4QISsnCVCaAFINq10zXW2p[m
[32m +        wqGy9wPQWIHMuM9nVyn6s2lKMZ8JnIpiP52OOKUZCF03C8HrBTy3rEOOwGaBn0CRpxMi920TUJQOq4Cn[m
[32m +        HrpqCZdqqxSzRdNShFSjlOVUxNVmOcw2Xs2vNA29NQJovAAogZPgSQi1BFBl+RTgNFo/KZ4TIAP3fYPr[m
[32m +        u780WTsFHmnxZDitlzyntZMAaQRQWjIJpbR8Jvo7miydh6QukpZxEgVoOSyW5/TD3TareDxW1kwBS0Jl[m
[32m +        9qn9pvPDcl8Cnkb41PHSju1B1klniSv1PsljAUwC5zGz5JgQmnBiP+JOHEDmlcMojriIioQg3EoRwEwI[m
[32m +        qQFQC/ikfl0ATRPgyMfNO5xDIh2DvJs49u03mCAdjpX9h+DU19uRdfgsko+fwVn7vdg4cTaQki5gmo61[m
[32m +        bd7AIoHOxcpySQCtjaV1bJTVbltTGyQseQs5J19E3pmXEO/+HKL3PCtA9wfE7HgBMdv+jnCnvyHM6e+I[m
[32m +        tG+IaLtmiNvRFDH2ryLK6UWBycaIcmiMCMe/IdDxQ2ScWY+y0HW4bN8cUXteQdDu5xHg8AZivcYCcV8i[m
[32m +        wrMzrjk0R+iu15Gx4feI2NwSIa6jcDNiI0oTv8LVAx8gyOFVFF/7PZD4MMoSBD5j6iE/8hUURXfEnfTB[m
[32m +        QOEwAe2BAt4jpB2moSxuOUrDv0bejfXIvbIcUd4jEODeEtc8/oYr+/6B67tYj+eQduQxxAW1QllGZ+m1[m
[32m +        jQfSe0m6v+NO+CNA2NMojn0M2XIdcYuBnCWoiHwbxWF/QUXcUyiMexz5UR8K5G9DSeQAlMT+CbejnxZY[m
[32m +        flxAmED8mFlPyPmT4v9W9KzoeSChAe5EP4RbQY/izuVnUXL4Dyj2/AfiNz8Hr65/wifPmYb1cnjv6jom[m
[32m +        a/Es0fz6jyLqi++kzCIc3LQFed6+cr/puFOUgWJBzUKBzhJ5F4oFPIsrBDDU6kMCPGV3V8Gk+ykdkh9z[m
[32m +        zMsoI4Cyk0LHDgs77vpcw49R7AATFJiWnTQu0qE7Oj/mGIedWHZamZadXkKLNfdzAVQ7xuW8L3aUCaEc[m
[32m +        Pst6Mh/trKUzOsb9pQDKDjaBSA+Ro1gPWv1mzZql4uk6sJPLttHPpmnTpqoOlLETea/66nwsr+swAih/[m
[32m +        NGC76+GWLFNLl6WlLSrskDPNjwEo5zHyedGKpcMZl4DC90RbpelzeCCvsxzOVWQ7ccVOa/dJ/0EAlENS[m
[32m +        2W4Uf4DQ6VnGr+VYDz5bwg7biT8scDEZOl03LaPjOevFRWXYZvyRhO+F8b7oeE4A5X1zeKh2Gog4zJTD[m
[32m +        fnnPbFsuUsRw5sV3l3BGiyTjWzrm/SAASqffCYplsiym4TvO+MyfQ6/57nIxLNaBMEjfKKMjgDIPzikl[m
[32m +        uBnj8UcwzuHUP2wZr1GsuwZQlmlra6sW1uIqtnwWzJfgzc+TTq/bzCgdpn804DnnTerPCd/LkSNHKoi1[m
[32m +        TMs60P+/AFA6Hd/b27vq+5TDmvX3Nt2v+e7/mLNxbSEA2vwNeL39EQ536YnDPQV6BBp9e/eBf6++ONy7[m
[32m +        P470GYBD4vvb9lUwShD1Vov+cOVZKzJbMb172Qpk9hIJuBqkINMgv76Sr1n+/aTcfr2r5Kcl4OnTT/I1[m
[32m +        wyfl17cHnD9+27R4kIAmh8du476eLV9V8zI5RNaJVktulSJQSQAlVO56r2WVb7KCEjg5z/OHQ3J3SR4E[m
[32m +        UObl+F5r7Ov2LtwEJD0FHN2HmACUe3ISPikOu+WKtZzX6dzrQzXkllZSWj1N4GkSh94elPT+AodHCIfj[m
[32m +        +qghtrRyBiwcj+Pj+qqwQ6NscXnOaAWn56cNxdX5Y3FqyiD4jeqpoPKIxKEImtxK5eTkgeqYYYxDSGU8[m
[32m +        6uDwTjg5pR9uLB2vwDNSwDL2szmIVhbKmQKMpnmaRvhUkmvR62dUyRJAYz6fYtJnU80QarKQqiG3365E[m
[32m +        gtMG5Hg4IctLIE7AUy0q5Gwn8CngabZYUho4lVVTzo1bpWhLpxFA1XxLSU8RZAmfXHBIzd302yswufeH[m
[32m +        AOq5E1GuAqDOAqACn9YAlODJRX0IohySG+3KVWy/VfBJaydBkVbQJIFIwqQCUAFJHhMaaQnlsT4nhCoL[m
[32m +        qIAp4xFUaSllHgpKpWwCJ62oTBNy4DvlE1xTjpjgMuOEwLCAZcZxLixksnbymoZPgiePGS/79H7knNqL[m
[32m +        3JNO4u9C5om74ElLaOIJZ8Rf8MPNsO9RGh+I4oRgFAoMEjwJkkX3A1BL/UQALRRovKnAUyR+3n8YQNW+[m
[32m +        oGb9dACNFgAV4KT+SwBafDMdhTczcKu8UP6xFeH696cRdMwfSE0QiEpB0fUAnLBzgOfq9Ti4Yi2uOrup[m
[32m +        VVRRUoho9wMYW7uesqwtln9QnIO5zKaOgpw1j9XCAi5E9LDoXzY4u+j3KD70LyDkz6i88SRyLzyNlGN/[m
[32m +        QKhnPYS610ew89Py+eJqsy+KBEp3/RlhDv+Wz8nfcGb3Ewg/PhRIc0GwZ0eE73sBkU5/xpX9f0HMoUEC[m
[32m +        YVsR4tMLp3c+h5B9zyHG8QVcdWqO5JMCkdnymT1hi3OuL+PGgX8ieAf955Fy/t+4EyfQlzlcQHqmxBuL[m
[32m +        WwnvIz+2KXLiGiMjsiGSrrfA6b2v4eyud3HZuSOCXHsh99hSAcqVQPhK+cxOR5T7ICScbISiuIeRG/Go[m
[32m +        PPPHkBbzooDsOAG6GSiNa4NCWlTT6+BmtI28o38FMkZLecPlHf89CmJscCvVBnkClCXJUt+KRUhJaoKc[m
[32m +        pLq4RWtsZF3cYRw5rlR+HRSH10NOQH2kX66P6KNPI8zztwh2+iNCN76C68ubYn+332PuMwKZ0vZLHjIt[m
[32m +        bkQtl2dDEOUqwkvrNIDd+x0EhjOQm5KAhR+1x84+/fD9PidU3CoEsnKApDTkXQtGzJEz2DR3ubwT0nG5[m
[32m +        aRqeyI6J7qT8p5zOT4tQxM4bLV0EDR1Hd4Dp9LFOQ8f6cXgXf3EnIHIoJwGD4XQ6Hp3xmB1iOt6bTk8w[m
[32m +        5DAyfc3oNm3apOrHMtihZ12MdaNjXlrGOur8uKIp07ODx/z0fTK+7jwa0xkdw9h5o3WYAMq6cOsPptXX[m
[32m +        7+V4jfE4B5QdWHYMWSeWT59tpTuG+r4YX9ebHV6mYRuxc0mn60t3r/pSzJsytpW+RlCihYd5c2VM3Q7a[m
[32m +        12VoMZyr2bIebENag3S4MY72CaC8Xw1g2vE675cAzO0zCAxsT1rtOMeVljq+C3yXmI92ugw6Aig766w7[m
[32m +        57jpeLp81p3Axfm6jEOrEK1a+r6MTudJp9OyfvSN5T+I08+SK6GyXJav5+Dq+msZHcthOkIf25Ygx3Nd[m
[32m +        vo7PcwIo43BRHh2m74uQR+DgSq+08jMef9Qh1GtrJbfusfYZY3qu9qyBjavS6nyNTteJPu+Ln3cumkPg[m
[32m +        5o8CHCpL8KJFn1ui8Dkb78OyDfQx3wWWS2g3/mhBp+uh662vaTF/Wlv5+eYQXN4HP19Mw/rRGsh3iu8a[m
[32m +        h/yzbRnOdMZ8GF/fl75v5sNh1RzWynef7yrvV8e1TEvwZT04B5TpeO1+jukYh2k1gHIVXJ2vlqWzdo15[m
[32m +        sY34gwDrwB/J9DtJx7gs5//C2Rxo+w58PuqMY91744itwJ+Ap498yA/2Ffjp018BqFG0hBJEfZU1k9ZN[m
[32m +        a+olYGlbJcIjIdK/v+Q5oG919RfwNICmf3+qVzX59ZN8CJ19esCPYQO4ym0H7Hr/DYHK5tj9XhvYvd4I[m
[32m +        21o3VLJv11TAs7kaPqtFmCRsUrR8al+DpuM7Aqv63HBtxxuN5VpLuHR9Dwf7d4LPkO7wGtoNbkO7wnVI[m
[32m +        52rwyZVrOReUK9ru7/1R1XBbvcgQ9/I8OMS0nyeH11Kc93lMYJPDbAMXT8L1+eMENkfj+Ph+CkKPjOmN[m
[32m +        GwKmpycNxNkpg3FUwFJbPbWlk8DJ4bbnBUAPC2hq8GQ8HtMCSmgNXDpBQadeUIi+Fs/1QkGWUnt6CnTe[m
[32m +        S/ECnnGfT0PMFzMQ+cUsBAt8hnwxF2kOnyLN3R6JbgJa++0QtpsWyp0CfdsRtHsrAnfdtXpqqDTKeM10[m
[32m +        /bsq6ORQXYZxnidXk9Wry3JBILV3pxlAecwwXlM66KAANNz5O6UwUeSBTQo+KQ695Qq0XAiI1wmenDPK[m
[32m +        VWoJnpHuW6qGzdJySXBU1k0555BaQqO2iHJYLS2ihFCCJ+MQWjm8lmG0gkYJdDJ+hNtmhAp4Ej6D92+4[m
[32m +        C68ClRQtoFmnBEAFMAmgOpzwyWuUglSJk3P6gEgAVODz5pl9yD57AOkCpUkCnqnnPJBz/Shyo68JcAaj[m
[32m +        QEngU8CuKFmgU6DOCJWWMsIoVZoSVaUSkSVwWqooNdIMkg8OnvlJXEhIjgVWeWwE0EKpE/cX1TLCqALS[m
[32m +        +8gSQE0Qat0K+lMA1Lgg0Q8BNEkkcKogNB1FXICoKFf+S5QosPx0xjSEnz4swBSPGx77cXK3A1IjgpEf[m
[32m +        Hoz9ixYJiMwX9sxDZVEOvpPv1Zl16ygL2yLzXpbLBUKXK2voIxL+OObX4gqwfxbwkX88f7DBnp42yHR5[m
[32m +        DpXXnsXtKFrzHsOdwPoCpY+h4OJjyD71hIDd44hxeQhRu38nn9M/4YpnU5TFrUek33hc2/kPxO75EyLs[m
[32m +        X0OkV18gZhPivSfiqsPrCNtPeH0e0Y4vITLoSxREf44b+99H+O4XEeX0O0Q4vIgwxzcReaiXQOt6FAcu[m
[32m +        QnmELUpinhFQtEFppA3uREq9wp/HnfDnUHZVgHj3bxQIRzpIeU6vChi/ggD7f8nn8g2p6yggWcAsfwoy[m
[32m +        E9sJlD4GCCgWJ9ggN+4ZVKYPEwhdKM/zdVTIfRIiixNtkB/zkgDoDIG8ySgM/SsqBUwrBC7zYl7Anbwp[m
[32m +        uF04GjnxT6EyqgHKvv8Dis7/GTknnpHvhyelXZ6QOvwWEQLq4Q4vI3KHtMe2xjg588/Y1K4W5j1lg9l8[m
[32m +        FvVrYbH4i82r6vLHAc7RXaJ+LLDBwjq1MOsPzyP5zClUlhfC9+sv5f/AFGzoOxAz5P/iStv++HzgSOya[m
[32m +        uQhHv92GvZ99jfigYFSUFKtOku6IWuuE/FLHDoseismOFTuMGoz09fs5xmN8/mLPDg87PrR4sM66E8d6[m
[32m +        6w647gzxmOloSeA+jPzFnnNJeZ/6frVjXO77SZhh54zDfBnGvBmPPvPlsbZcMG+dVvtchIXpmQ8tQ8Zy[m
[32m +        jOVZc0zP+Oz0E0DZUeZiOnqunY6jy9OOaehYPwIoO+lsZ0KZrjPT0Gdc1ps+86T4/Am9nBPIdOzg0xqs[m
[32m +        75PiM9Dl8pz50tGnxefAgQOqnnTMk/Hps5PPuXvsmHMoLMN1fSxFx3rRAqqtXdyuhE6noU/HY+bPIZPs[m
[32m +        UBMGmJbXjfkzjPfH4ZK0yvHZcKgl91LkYkUcqqvz1E6n45w8vjNMQwA1toF2rAN/aGAdeI8EIj4/huvr[m
[32m +        lC5D14/tRnHoIoe5/hSn68C0fE/4vGnZ5vNinrps/Yzp6POc7yfhi5DI+Z36ORnrx3h6CC5/ULG8zjIY[m
[32m +        h/UgyBPiee9sA8IthwTTKsg4lo5hHK7K8vmuca4pw4xtS1+Xpx3DOCqBQ8pZLw4fJkxy6CxXk+Z1LUun[m
[32m +        60+fq+CyXIKzHnmhrzMt68H6WANHinvjsr35owo/M3SMy3R8/2ldZt6ESC66xTL0543txni0lLPtjeH6[m
[32m +        mNdpmWZ67lmqv5vpWE/WgfWiBZSfD1pACaAM0854rB3zYVq+I/pHFX6fGkef6Pu9n2NddTx+T7At+J3D[m
[32m +        ulF0D5LPr+VsfLsJBPWmpZNQKcBitkT6ig73HaCsn0ZpCPVTQ2dpzbQuv34Ex+oiXB4aQAitrsMDpSyz[m
[32m +        DglcHhpgW03+/XtK+h7iE0S59ctHsH+njdqz07QoUFNsafFvbH/9VTlvAse3m/5APwVAeY1zRumreZ69[m
[32m +        PhbwNA2z9RneA54CoFzl1mck52n2UgsMETA5x1PN81RzPU3DbT0HmcGT80O5Iu5wgmcvHBktEDm2D85N[m
[32m +        G4obiyYgdPlUBaAcbst5nvcDUFo3CZ60dlLaCkrgpAifBE+KcMq9QaPWzUHY6mmING+tEvfZnGpzN2Np[m
[32m +        /byPrIGnVvx6ye/TGYgQ8Az6bDai7dYh3X0b4tVQ180I2bsFofu2COxtQ/CezQgS8LzhuAGBXMW2GmBW[m
[32m +        B1Br0vCp9vV032naPoWQaQZNBZ60gPrfXcn2fgBKuKRo6SR80voZK3XXixTROppkXqU2QcCTw2tpuSRQ[m
[32m +        GgGUQ24Jppy3ybmcvKaH1HLRIqahCKhcaIhxuDARFzBSEugkfFoCKIfbUgRNzgF9UADNPbMfOWcEWE/t[m
[32m +        Q/JJZ6Sd80L2taMojrikhtsWJgnMET4Tg1Ekx1RJSpgo3Cp4VolWT4NqAPSnAWj5zURRMkqV0lCYI3GK[m
[32m +        b8p/AfmneD0Efl9+LWCUrBS0ywFuy1cAGakCp+lAaAjs5ixEWXEBChPjsOjFl7C8bi0secQEoKaVVznX[m
[32m +        sK74DwvsPCYQ+qRaEXeNaAmto3VtMPc3NrD7yAaxX/8JOPciEMz5kXWA+FqAgCCi6+JOmABb4G+Rca4h[m
[32m +        boZOx63kVQjxfAlRznUQtudpBOxqDURsQfaJMQjb3RghDn9BiNM/1RDc0uuTkRW+Fef3tUf4/lcQZf8n[m
[32m +        RO14BdH7P0RZ0AzcCl2I684dcXlfK4T6/wXZgc+jJOpfUvZHQOpwIGesQOVoue8JArgLcSv4cxR+vw5Z[m
[32m +        J2cg2rsNrux+DhF+DyP7RgOB3D+gPEmANucbqf8EVIT/WWCyNirjn0BexF9xO6O3tN0nqAxvh/KwP6Ai[m
[32m +        3gYlVNh7kmYDkDQB5aH/VMN0cwR4s68NADK/QeLpjghz/5N8Dwhs7iV0PoKoXU8gesfvkLjjJaTZvSHf[m
[32m +        d61xfMjf8OlLNpj5sLQrFyoSETSXUQRPEZ/LEnkmlAlEbTBHwHTyw/Vxevla6eWVI+zSaWTtdQauBMp9[m
[32m +        xAHpafIOZEtdckTZuJWWjJAbl1B4y7Taq7Fz859yzE93RNjp1J15gg47Prymy72f43V20GhN4xA4Dp8j[m
[32m +        oLATxvlI7Pix3uwc6bx4znCueMvyXnnlFQU27MwxL91Z0j7D+Es+O2bsoOqFgxhfp6HPYZ3c1oVlUTo9[m
[32m +        y6VoNWMHmffJjpkON9btXo51Zn7sULOTyHzYodd5GMsyOn2NZRBECL+8B3aQ+Wz1M+U9sN1pPSEY6jpR[m
[32m +        jMcwdpoJZmxfQjvbjEMmGZf5aNExjJDLobWEAV0/XmeeLI9gqGGaQ6+N9aGzvBfWjyvOsv0oWq5ZjrVO[m
[32m +        OMV5rrxfWt90uTqOpWgxIyjroavMn9Z4XW86xqNjGIcs6846LV+sA6/r+Loc3uexY8cUDPCZcQgq3xFa[m
[32m +        6Xi/+vOl68xjhvHd5IIunFv5UxzTEyToc+VmWkD5vLjAjt6CRrezfm78AYjgwzmUnPPIzw3rzuvMx9i+[m
[32m +        jM+5uPy80pLHczrdNnQ8ZhqK909LNa1xBFHCEy3NOk+jY704H5fzV9muLIfpje1qzfGzTLFNCXiEH4rW[m
[32m +        cpaj630vx2uMx88T3xcOd9XvNZ1+jqwbF0RjPXlN37POn/uA8rPFzwh/aGA8XXd9H3yufC/5TOhzhV4C[m
[32m +        IOvPOtDqy+2S+H3G+MxX14/vKD93/NFGf1/pOtDXnwXuIcx3jQtDMR/mTXevNmA43xnWg+3Gd5+Aq+Pz[m
[32m +        Ph7EsQ4snz8GsI6sA9873T70GUfX+b/tbHwENH369oFvv74CeP3hL/8kDpl1tN9AHO1bXRpC/fsQUgU2[m
[32m +        reqHFkyKx4cGEEKryxj38KAf6tBASTuAFtBu2NfhPWx7owW2vyGg+HZL7GjbCHatGwqENhH4FGh8iwDa[m
[32m +        BE4KPE3H1E8BUA7V3fNBa3h2ew9eXDBomMAnV7IVeQuA+nH7Ejmmb1zdVg+1VSviCnwSOmkVZRwNnxyi[m
[32m +        e3RsP5yfNgyXZo9C0JJJiFg1E2HLp8nxZDUMl3NA7wegtHxywSG96JBxmK0vV84d1lXF4Qq4EWsEEj+d[m
[32m +        L+BJiJyDhC/mqSG3BE6eaxFIEz6ba1XxKk516DQqeR2tpwKi3y5FksMXSHIhbG5E4IHNCBZQDNm/FYEC[m
[32m +        j9f1nE6nbxCy++7CQfcCUD28VkMnFyriarkETwIn99IkZBIsCaJV4CkQqvfl5Pn9ADTShcN3v1MAynme[m
[32m +        nO+Z4MWtWjaoYbqEUV7jfpwcNktrpZrHaYZMDaCEUwImV8kliGrY1IsJ8TqH23LxIg7jDdr3rYJNLmRE[m
[32m +        P9RlowoPPbCxGoByoSGKsEnAfGAAPeeKjNPOSD7hjOzL/igKu4DSmBsoiw9BiYBcQRL39iSABqE4OQSl[m
[32m +        orKUEJSnCohaQqdBRuC0VA2A/jiAluVKeolTkpuE4twUZQFFZRFuVxThyjYnzPqoA+b27YHltl2xuMXr[m
[32m +        sOvWH64zF+LEd9/i+Lq1CLEXSCksQrCnF5Y9+qxa2XYW53zWql0FoFzJVe8HukRAR1nhRCvqPoLltR7F[m
[32m +        itoNsEpAaZmEfdLIBhdXPIOiEy+gLPQhVCbaoDyhFipiH0dZbG0UxjUSGPwOBQmjURr1KO6E2iDj4l+R[m
[32m +        GzEYdxI3I8j9X4hxt0HUHhv5bL+M+FMT5DltQuyu9gjd9Vdc2/UYAvY1QqDrEFTGfYv462Pls9wYMc5/[m
[32m +        wzWn3yDA9R/IuioAWbRANBGFSR/J+9kMBTH/D3tvAZ7VsbV/P2gL1Hvanuo57emp0xatC8Xd3d0hCRDc[m
[32m +        KVC8uDuBkOAQSIK7E3fFPQnxIPe37nmywuZpQmnfnvf9/udi9VrX7D17fO/Q+T1rZs37uHzmXZze8Db8[m
[32m +        PL5AkGc5BG6sgMSoIcDZWbgd3BNpwe9IG23yXRfG3ZgvcC/NGbjeE6nBX+FuVBHcjrdJ+r/h9mUB2gRX[m
[32m +        ZESXQEqkxIXacCPwVZw//SOQOAVRvuUR6fkMAta+LFD8AVLPDEfWmcU4vvJbnPZ8Sv4t+DfC3f6FiGX/[m
[32m +        QtyiT+E/+mOsqfsCBr1pw0AZQ8L/0AKFMMhWCCMKPCWgWRhD5X2op9xhtnwPACjjeDTL4HwFsOYn6Xti[m
[32m +        MuKvRmLlUFfsHzceM3p2w/QOrTFV/p88uU59jK9eByNq1MEAHt+SeD1nkkPNawLzZ4RlsWw6hSHYKFQQ[m
[32m +        SLh8j944OeHSSWBewjIoLI8TJU7YaV3kZJrL3ejchntECUHDhw83v+wTTjn5q1mzJnisB6102j+1BlA4[m
[32m +        YeLknMBJZz1sH+GEkMtlhLRG0ErDyRodhHDiyb2EOnFXYbk8D3LQoEE5EMvloSzXak19mLBvsbGxOZNc[m
[32m +        toWwxPbTgqeTO8fJok5uN2/ebECb7Wd+wg2hr7HMyXjcA/vDvXccGy1Hx5b3+h2wvRxfnlHJ8eWEn5Ym[m
[32m +        eozlUl1O0BmyPMIWnZAQDPTbYTs5PoQh7oNlPzhRpdVr+fLlxgrHuqzvnfWyH/wmWA/HkABEaznHkBNe[m
[32m +        a78J1/Q4yqWQLJ/vZ/v27caypO1Q0fawDk7CaTHijw2ciBNItN9U5uWEnm3ksR9qEafljZ5fueSW6Sja[m
[32m +        B207v2X+QME9cbQy0tLKseHyVI4/YYuWRX5T/DbZP8YTXP6IsI36LfEHAFpQ+fdFqGOdhBNaeGnt5/fI[m
[32m +        75d/I/QKzOMz2E4tQ/tN5b060/nkk0/MO2BZhHa10mq9zM88HANesw/88YDLemkB5Tenaa3CpcL8tghn[m
[32m +        HFd+P7Tk8ocblpWXsC4KvwHWwXfH96N1q/DeURjHceLfh54/SkgmiNPpFt8H28u+0rJJj7Rsu7Wv/Pvi[m
[32m +        ++eRO8zP9tOaSkDXHwP4LVB5zfrYT34HbCuBnPfc08wfbFg/x5h1cakt/91iOwjx/HeDPxYo0Krwmku8[m
[32m +        eTQNy+XfFL9PrpKgYym2UftvzUfh2PLvkRZc/tvAd0tPwPwb4v5aCvPmNn5WYbkEbz3vlOXw2+K/ifwR[m
[32m +        iM/1b+L/Qmw+TRrBqr5NG2MnVf7nt7OpwE4eynTezQRU81TLMlsH9WneMG9tSRWYaiHQSfBsXs9cezWt[m
[32m +        g4W0dv5QGm4/fWGW2S744mMB0OJY/l0JrBSAVKjk3s4V5eywqbrqu5J2/aEU3KSMVeXKSFn2vaErK32J[m
[32m +        5RW/wOLypTDvx8+xtkF5rG9WBRtbVsfm1jUN1FE3taxhvNV6E0Zb1xborCTQWUWgs6pAJ8FTYLV5dYFO[m
[32m +        HsVSC1sJrm0FPLncllZJCQmGpwZ2QeDQbgga1g0RY5wQOqIHgod3R4ho4NCuODWoI3y7C5x3k/53qYfT[m
[32m +        w7pgn3Nz7HES6OzVBDu7ce+nPOtUB17tCZsNjG5uU00guQZODmwvwOmEiPHOApvcv2lXR3C07uM0OsUe[m
[32m +        xlEnClBmayytmpI+clIfREx0RviE3oic7IzoqS6ImuKEkzNGIXTJFEQKVIaJhrtzj+VcBK+RCaqApep9[m
[32m +        yGQo99zbaXEyRDhV4AxcSQdBhMTZRuM3CwBuFajbxqWyPPuS52Hmrpe9BcZ8Vhtr5mUfWkW5NHeF0fPb[m
[32m +        CYzzBPRmGg31nGU0biuPJHHD1d3uiN2yGIGrpxsYDBNA5TJawiaXz4ZvmGcsmFxeaz9iZaWxisZu4x7Q[m
[32m +        RcYx0NkdPFJlkcChm7mPkbIjpM5A9+kCl9KvdTIGHjPMPTVE6g+TuMA1v8Jv1RTTnvjttKauxFkCKJ0N[m
[32m +        GQdCApoEUIFO483W7Psk4HKZL5f2rsC1/Wtw7cBqXDiwHuePeONGwCGkx/ojNT4At+JEebbn+RCkCoA6[m
[32m +        aprEp18ggHIvaO6afiEsT027GCbwdl9TL4ff10sRBkDTRJMvEELzBtAkUStk3pL0twRcH1WTLoQj8XwY[m
[32m +        Es5JWXKdlz4AnxfvX5t9oJcFQi2aejUOadnwaQBUrlNFM26e/w2AMs7EX38wnpqVcBF3b1zEnRuXkJJw[m
[32m +        CYmp15F1O1VmCjK5u5GAjLMCp4k3kZou/5NMz0DGlRu4HBSOCN9dWDRiOIJPyv98ZPJ0QCa9tGgSQLmc[m
[32m +        k2dcUgk3hE8qr6nm2JBs1ThNQwdGQ4oWwsCXbNjQ6ikkbf4ciCiOzCABuNhnkHqlidTXH+kxryIx7m/I[m
[32m +        isuPzMjXcDd5OtLO1bY7+Ql4BukBNkTt/wm4ugghh0rK364N/muexZF1+XB8wzdA9EbEe/fAqVXFEbq8[m
[32m +        qPzdf4JTa9oAF+Ygzb8X/N2+woU9H+OOlH07rICkFwgOfgYh7k8jcPnbZt/pySVPI9bnY6SFfSUg1gtI[m
[32m +        HYWL0Z8jRUATUVxa+4LE/YzMi0NwPVrglBbd0NcB/++A82MQH+qMsC2v4OIqm4D86wh1K4Gsc+MQcrS3[m
[32m +        /Pv0kfx79KL82/M2zq+XdqV7Y9eGari+/B3ELnwLFxeUwvF+H2HG5wXRn9ZOgcvBhEpCvipB03JP6yfH[m
[32m +        3v7MruYoFlHuBeV7mPDqu9LXSFy/k4Dpk8Yi8tABXI6UvwP/IHjIBEg+BgHzG8CtBCwZOw63Y+xeLDnx[m
[32m +        4KThr544cMLICT2VE1RVToJpcdNf7h9V2E5OplRZPoGUgMYjNzhxowWRwMKJkDWt9s/aT5bHMpiebWLb[m
[32m +        CBNUgiknkoRXq+pEzaocQ+ZlHms/WS77zjqY7mHCMpiW7WDIiS3LU0+bnJDmVgb7wr4yveM4M7+17SyL[m
[32m +        fWMex7I0TlXbzPYQvDhR3bdvn1FaeXiMCi2cOvG1KtvD+lmftT1Uptey9V2ocryZR/vP9DqGmp4h3yfj[m
[32m +        VAmVbCf7xueOYq1D87MdzGt9RuV70LpZHq9ZPtthbbujWL81KseAQMdlrNx3rONGixhhgO1lGuqfFc2v[m
[32m +        yvr4XugMi9ZBAhKXyeoyTatahf3WMWFaHRte831wDJgmN7GWyTTMy76xPEexvk9e6/ujPkz03ajS+y7z[m
[32m +        sw7HvjgKn/Nvh38L7Afbp2r926CybUyjfbEqn2kZLI9jw+X9LMdR9BvQMWVepmU/+Z4Yxx9R+C0cOHDA[m
[32m +        fBcEO8f36Sj8HvXvg9ccA441y9c25yaM139LmEfHg/8G85rtzCuvVZiGdbNOjgPL4jiwHP27UP2/EJtv[m
[32m +        k4ZQ3SkA+iBoSlwe6ivPfQQ0/4z6thCAzUN3tpKQEJpt/fQV3d26MdbVroxlP5Y1ezuXfPMZFn7J5bYl[m
[32m +        sFwAknFmz+cDAGoHUtXVAq9u30tI+JS0K+U5rZxMu+SnUlgk8Lmy5rfY2NQOnlva1saWDgKe3EMpEEmo[m
[32m +        5Lmc9Eq7RUB0XZPKWNuwAhzP81TPtszDJbBcEqvLYw+5tEHg8J4IGe2MoBHdETC0C0JGCXzKddjoXvAb[m
[32m +        0snoqSEd4dNDALR7A+zoVg9+o7pjX5/m2NmrMXx7yJh0lTZ1qCkAWlvKrWvO9WR4anAHhI/rnQOXDK3H[m
[32m +        pVjhU9M8AJ/ZAKp5TZpsjRb4jJ7cV4BToHTmQERM7YtggdCI6f0FFu1nbnJZLJ0BUQmUdCqkcKlqtXBa[m
[32m +        4widLINLdu2eceeb5a/ce8m9mbRCUnlNR0F6VEpuqsen2AGU+0EJn/Y9nucFJCM3CYB6csmrAK+Eoevo[m
[32m +        9McOjJd3rTHLa2mhpCWSSidB5ogUgT06CiKI0nstrZzGKiptJGjSGkkHQARHlhe9eYGBzUD3X40GE3ql[m
[32m +        PmrYeumzhIwPWDNN6pku5cw3IElHQ7RoGpjlUSkClgY4BT6pFxRAd0pfdxJEeS9t3++Os3J9fq/A9wlv[m
[32m +        3Ao/hYx4Acu4QCTHB1oA9LfweR9ACZqE0NyVz/PStIuhAm/3NfUyIVSVEPonATQXyHyYEi7/CgC9ZdHk[m
[32m +        K7FIEQhNvUYV+My+Tr/xWwtoDoDKswzLvYlLJIBeEgCl86FLSEijM47buHMzAUMryL8lroNx44RAZhat[m
[32m +        B/xFV/6ndkcANTVJYIQHtcj/dJISsbZlS+PYZlz+ghhR+MkcsPyjOsxGy11+DCpsQ+8nbejzmg2LG9gQ[m
[32m +        u+xV3Dkp4HjjZ9y53B73YmxIiC8sgCywd+59aZY7UuK+FFgtBIQ8h9ToQsi62g1ImIDUiHdxL+RFJJ55[m
[32m +        FVGH/oGrfp1wO3SqwGcJhKz5GwLcCsh3XxV3o5fg3MEO8F9ZBoFL3xXYfA6X9z4FhD2Nu6EFken/nPzb[m
[32m +        UMxYUkNXv4ire58TQC0gYGzDrcj3kHmlt4DZIKSEl5U2vIysoFdww68pkDwDkce/RPB2m3BvIYQJWEZt[m
[32m +        a46b5xfjxIqSuLj0OYSseB+hSz/F5SNOSDg7A34rP0PU2pcQ4fYGopfUwK3ra3BiZzvcnFwGezu/homf[m
[32m +        2NDvaRmf/BJy7AoU/g1w/hEdIGUQRAcUfhYJxw5Bpu8yphl0KwtkpMg7TsW6EeOwZ9g4RM1YjE19h2Jo[m
[32m +        45byPhL/owBqFS1f62D4sElTXmIth2233mtcbvF5qXWyZI23ijVeJ1iqjmJN+0fFsS0qf6Yslbzak9u9[m
[32m +        Y7+s+XK7tsblJY5prelze2ZVq1jjHd+vVRzvKda0uaV3fGZNk9e1o2h+VRXHeEfN7Rv6s5Lbd6/x1nf7[m
[32m +        e3Va81olt7g/Uq5VtI686rKKY1pH/bOSVxnWeOtzx3uK9Volt3RWsT7XNHmldRRremsejn1eZTimdcz3[m
[32m +        sLy5iabVcqlajur/hdh2NW0Mq+4WQMzR5nLfvFGuukue+bYgTP5x3dmycZ66q7WU3aqBgKiAVsv6JvSo[m
[32m +        WR6LfhBQ5BmcXHL7VXEBzpLG6rmS0En4NMtoHwKgtJz+WAary5XBKnm+qkJZLCd8lpNyqn0Nz/rlsdk4[m
[32m +        CxKQFIg0ANqutsBdbQOe9FZL8NzQrAo8G1c0AMpzPDdmwyevafUkeNqdC91fFsszO88M6YbAEb0QIADK[m
[32m +        MGRUTwSPtINn0PBuOD2wA84M6mig9PTQTgKbAq0GQusjYEwPA6C+PRtih4HPWsb6ub1jLXOu5zHXNggb[m
[32m +        29ssrb0Pm3bgjBVoVFWozIFLK4BaNEZAlLB5X6Usgc2oSS4Il+sAKf/0JFcEzx6JuBXTzPEnhEY6CKJF[m
[32m +        Uz3ZGiunBT4VNlWZnktrmZ/La1kGQ57feXazAKOAn8KmAuTvwSf1oQC6YzmiNnMZrN3y6QighEwuoeW+[m
[32m +        TLMs1nOO3eIpsEk4pbWTS2t1f+elnauzr1fi7I6lknexKY/lEioJnYTN8A3STwkJvazXf7UdOgnDXGLL[m
[32m +        /Z1cPsuQEKtnfp6jt1taP/cIYApYWgH0iu9yXN25HFf2SDv2rcXZfR64cGQrEkP2Iz32DNJiApASQ+tn[m
[32m +        IFIsAJryGECN/hEAtUNojECoHURTDJDGIu26fUltXgCaKWFmwoUcTb51UcJLyLopAJp4GbfSbsj/UbJw[m
[32m +        9/I1zK5dFzGzZuEsz1ncugURu3wRf2A3rh/dh2sH9uLg+vVISL4FpCRjeqWKApD5zHJbOhjKDS4fRUdz[m
[32m +        aW4Bm0CowJCA0UCB0L5FBLKes2Hqj08i5eRcILIPEFQI6VH5cTc2H3D+W2TdWobUKAHRqOdwN7IYEi6+[m
[32m +        jNsprsDNNgKlL+BeaDFkxtmQEsG9lrNwJ74VkoLeRMrpZxB75FWkhU1EUnB/nNlQTEDwFUSuKoIAd5v8[m
[32m +        3TyLs9sL4U7gc7gX/BpC3Ysi0uMVpBx9C/fCngWkTB6NkhFUFNdOfQ1cmIqskJ8RsFYAcuVLOLX6QySH[m
[32m +        DUCCvyv813yM8LUvIHTlywK9FZFxZRNCN7dD+PJ/4LTH6/JvzxsI39gMdy+tROCqLxC8+DnEu/0DcXMr[m
[32m +        4XrEYvgsbo0pr8v4ypgMKlgAA/M9gSH56dzJ7viJzoRyg8tH0cEy7iPz54Oz7UnE7diGVHq+TRbwvJmE[m
[32m +        O7du4GbGdYHRG7hycC9OL12M4C3rcV2+zetZN3ImpzqR+KvEOjFxlL+qHv5yr5NuFdbnGEfR9lg1N3GM[m
[32m +        /708f/ZZbqJp9X3kJrnFaz7rdW5qfc/Uh4n1uTWPtQxeU3MTTZOX6HOrPkys9eSW9mH5rXVY9VGe5SUP[m
[32m +        e0bRcaJomaoa91eLtXwV3uf1jqyieTW9tZxHya9iLeevEmuZWu6jlu+YzyrWZ1THb8yqVtF7x/hHkdzK[m
[32m +        0n+DHyZMZ63XsRzKw+I1dOyjSl55rZJX3v+/yIMA2qwx9jRvalG5b5G77hJ1hMdHVQOZeeieNg2xp3UD[m
[32m +        7G5VD7tb1oN7le+w+LuSWPy96LefYymdA8m1m8Cj3QIq4En9HQClxdOAZ/myWFnxC6PLK5aFe60fsLVF[m
[32m +        DWxtySNVauZYMAmdPFdzu4Cnl0AoQVOtnSbMVoXPzQKn2wU+vQU+eawKHQzR8ywdABE4rfAZNLI3QgQ8[m
[32m +        Q8b0NEei8GgUWjX9hnWRZ91xckhHA6C+PQmhDczS222dpE2SxkeAdEdHuRYIPdy3FcJ+7o3IX3g8St8c[m
[32m +        AI2b4ipKK2afB8HyEQCU8EmNnNLXKL3aRk6h9dMZIROdcGa8MwKmD0XE0smIJjiummOslgRKc1yKwKcC[m
[32m +        piN8/gZACZ+EzmzradwmWjkJjHbvtQRHVSuMEjAdodOqDwPQCwKg0VsWGBhUULQCKKGSy23VGVDw2lk4[m
[32m +        xz2f2+wWUAIoQ+PNVupgeu4LjdrMva7cz2m3qlK5rJZlq7WTlk4DoBJHWL26x+5USIGTIfXGAQ8Do7SG[m
[32m +        qvWT8EmHQg8CqJSxa7k8W4MLB9fjRsBupMWdEZgMQmK0H1JjA5BxXkAwXqCTjocEQFPOBv0GPFUVMB2h[m
[32m +        06qO0GnV/2YATZI4O4QKeIqapbkSmmW5DwPQhPPm2BXVhJSLSEu6JPGXkXRTrjMS5f8St5EZex4TO7bG[m
[32m +        mbUrcGTNKvgsWgzv2QvgM2EavIePw1rXQRjr1BupmRm4c/MGxn3zNUYXKGiW0XL/YW5w+Sg6WmBIl+YO[m
[32m +        tz0h108LXBUz4cC/PY1bPp6Y0/xD7HYSmNxbHPD7DDjXAmkJk5AVUwyIfRJpMTZcOPuy/B9uLLIuCnCG[m
[32m +        8szMJ3H7PPdn1hKQWiXfXglkyv2dSBuun/83kOaOW1GNkREuQHn8DWQdKIhLewsgYuNbiFz3FKI2SX3H[m
[32m +        /oaYjc8g5dD7SDv5PBKO5cMFn3/gwgaJX2tDkMeziPBqL+1ZjMPuHyBm3kc4s+JtnDvYCQhbg5BV9RHm[m
[32m +        9qbRoJVf4PaVDQjb1kf+nfo3Tm17UdLmQ7RnHeDiFoQuq4u4BSVwZvRbWFTpKWyf3Qfr5d/nn20FZSye[m
[32m +        lHF+WsanGIbK9XBbIWN9HuIAlX9EB3MPqJThkq8IQtatRUZWMvx37cVMZ1e4jR2P3aMnYfOIkVgzbCA2[m
[32m +        jh8Jj6GDML9tR8QuWPMfB1DrtVVZp9b7R8RahoreW/vxe2oVx3wqjulyE2sevXZU7evDRKE5L/090TS/[m
[32m +        l+9hz6yiY2IN9VqVbeaPAPrMUa1pVa3yKM+1HIZWseaxam6SVxrHeOszyu89t0peaR3HgmIN9fqvkNzK[m
[32m +        e5Q68spjzeuY5s8Iy3iU78JR8kqv4cPEmsaa3zEv7x3f1aOqo+SWxqpaT24/lD1MmNbx32stT0WfWcWx[m
[32m +        LmvePyosy7GOP1POf0Jse1s0g1UfANAWTR6Azr0tm+TonlZNsLvNfd3VmmB5X63P9lDbSnk5KqCZo1Ju[m
[32m +        O6YnfDbCAbneK+DpVb+KwOKXZs8nz+hc+PVnWCagqcttf6MW+DSQmR3q9fLydl1avjSWiLrV+BYbG1fG[m
[32m +        lubVsbVNLWPp9BLg3EFrp2qbOvASGPVsXMlAJ2GTR6bQwklIpdJiuq11LQOcPLOT4YGeLczZnf7DeuRA[m
[32m +        Z/AoJwSN6G3i6BgoUmBxn3MzbO1QEzt7NMTBvi1xZngXoycEQHc7NYFXl7rY2qmWgGddAc8G5n5j22o4[m
[32m +        4NRMyuyGyPEu5viU6In9LHp/qa0BSgtwOqoVPOMFWqkxch09tZ+xdIYKeIb/KtfT++P4aAHjcU4Imzsa[m
[32m +        8atnIWr1XIS4zYf/qvkPQiYhVFRhU6/V2knQvL/MdgGi1i1C3MaldounF/drrjZ6wYtebbOhUTQHLgUo[m
[32m +        eUYnnQWpXt252oSEzkveK43HWuqN3WsNjCq4shwuwaWVUi2SCqExWxfi8m6pV8qnxZPwyWNRzJ5PKZN7[m
[32m +        PelgiEep2CF1ubF8EkhpJeVeTlo27VbO7CW2EuryW62DjoO4vFaBk7Cp4Em9ts8KoFLvrpX25bbZFtAr[m
[32m +        Es/ltoTQuB0CxQKkCae2ITXsEFJjTiEp1g83BTYT4gLl2t8OndkW0DQB0Yyzwcg4Z98D+ntA+Uc1zez7[m
[32m +        vK8KoWkCn2lXIiSMNhCaejHyvmMhi6qDIQLqHwHQ5EuRDyjjcgPO36hxRGR3RuTodOhWDnDaQVPhU5fe[m
[32m +        2i2hduWeUAVNq7WTapbhCozqs8TUS0hLvCRxl3Ar4SJupd4AMtJwLSAUzUqUxeaJvwJXkiRO/nXOkv95[m
[32m +        pGbhXko6cCtZ4i8j/XYWsq5fxagyZTAyX35jAeW5n45g+aiqe0FHGWtqIYyxFRZlWAAjX3oB6Tu8MKJE[m
[32m +        CYx4zoa+b9qwvMETSPFpi7tJvyAzqCAQKAAZ/wQuxbyGe2ljkXG+GhD+Au6F50fWWRvSoisCyfPkeysh[m
[32m +        35+kjbPhytlXgcxFuBVXA1mMC3rRDq1hLyDz9Fe4dfDfOOddSP7G8iN207M47/UywjfaELzBJv+evI2I[m
[32m +        Za/Kvz9PIMD9dQRtJIAuwQnPzxC78H0ErH4fkb4dIf+wIGhFfYSv+heClr2JUPcy8r0vR/zOvghd8W8c[m
[32m +        X/s8otc8jxg3AdDwHfB2rorxn9kw4BUb+j9lw5axQ7Fh8HAZk+fMPtsxonbnTvazVunplg6FcoPLR9Gh[m
[32m +        Be1W594y3n5uK5GWmYSooydwbLUnrp7xQ8Zpfywb0B/xPluB4DO4ffoEApfJv0uL3H4zofmrRMuzlslr[m
[32m +        1kfh3iPuY9L9TnxGmOEeI50s5bYPivHcb6TX1tBR2C/uUeJ+J16rOKa33rNu3c/E+q35rMI0LFeF6dgf[m
[32m +        lqV9VGFaxudWrz5j3zWOomVoGn3OvVcU1sc4Pte01jiN12sKQ6bR+4eJpmF67llzc3Mzx0zQCcqyZcvM[m
[32m +        8SOzZ882XmsZLl261Ox15FmQzKvtoDBkW1iW3lOYRuMo1nFjGu0PlWNAsaan6LejdajwXtug+bUMipav[m
[32m +        omPFtLl9dxQ+cxTmoXA/HK/1/VCsbaNYQ8d+qFj7rKLpNb/1ucbxHfFvSkXjVXjP75PlsK86VrmlYxpt[m
[32m +        B0XvKXxuVWucil4zv46Hjj2f6VhT2CYqhXUwniHT6L2mpei1PreqxlE0nea3lvFY/jvFtq9lc+Sl+1tT[m
[32m +        m+XogTbNc3RfG4HVtgRLu+5uQ4i8r9Zne9s1ddBGObqvvT3c07ahCfe3roetdcqb5bW0cHKpLR0NeVb5[m
[32m +        xqh92W0uKvD5MABdXK4kllYoA7fq38KjfnlsbVnDvrezdU37Utv2dOjDpbb1cuBzW/MaWN+oklluS2+0[m
[32m +        R1za4tSATjjQq4W5P9i7pQFO7v0knDLvvh7NEDCkO8JGORtLp6paQAmfx1w7YEv7mmZJ7a7ejbHPpTmO[m
[32m +        DmpnltqeGdkNhwe0MUtvt3WuA1+BU1o+CZ5MG/RzTwOdcVMGCETyKBUrfP4WQB9ZmZ7Hsaj181dXBE9x[m
[32m +        wdExneE7qDXO/DocsSumI3b1bIStFLhcNQf+K2fjzAr7eZyOSg+3tHDymvDJZbYR2ZbOSM+FiFm/2Fg8[m
[32m +        z22hddLuvZZea6/6rBXAJDiuMeCoSpA0lk2BT1o2FTpVCZiEzrhNiwRuZyF6w3wDoAZKs+GV5XAJ7sMA[m
[32m +        VK2awQKgYevn2i2eLEPgk8r9nmHr5j6wRJfea8M3zM0u016uWju53JeWTOOdVsDSCp43D3oi4dC6BwCU[m
[32m +        yniGF3cKhDsAKC2gahW9cnQr0sIO4k78aaRGn0BK3Bkkxfsj4WyAqABofACS6eX2bJCBz3TRzPhgo48B[m
[32m +        VPRPAuhvPN/+AQBNTb6ErIRLyLxxCQnXzyM1MxH3bqcjJf4ctgwYAxzwB27KRCP5HtIy7iABd3EdMrFP[m
[32m +        SZD4G8i4KxPAhJsYWbo0xhQsZKyXQ/Pz2JXcAfP3lV5Z7Z5Z78OoXQc+VxTXPT0w/euqAmF/R/8ni6G7[m
[32m +        gNP61t8hZOdghC15BTj6HuD3KVLDPpIZ3STcu9YdKeHPANGFkBFrQ2psSYkfheSImsiMeR1ZYQWQHPuu[m
[32m +        zMqnICGqLa4FPY+Evc/hulchRK8TwFz1JPxX2eRvxobkYy8g3KMYbu75t0Dq28gMeAY3D78sfxcFELbl[m
[32m +        SZzcWAoXjg0EIn+B38riiHR/CkeWFccN/zFID/0F/m5lELryLYQuewenl32NrCurELOpLS4sLI5Yt68R[m
[32m +        MPHfODhOIPjoNvR97Wn0KSzwSa+2hZ7F/mlTsaRHdxkHeg2WcRJo5JjYx4xOnzj2T+QKl4+ig0W5B7SH[m
[32m +        rSAC1q5G2j2Z9HFSl56JO/KuM5CGrSsWCQj/LGAeCUREYtHPY7DB838HQDkR1bIJhDoxZ92858SZcbwn[m
[32m +        1DHU9FqGik4wdTKt9xqqMI9CwR8FUK2fMGyFFhX2h+3VMpmWyjiCgF7zuZbNchzz6QRf61CA0OeaXx3W[m
[32m +        8LmWp+KYVkXLprB8totx7NsfEe0Lx5JnY9J7Jj1w0ovojh07TBwd3tATK896pddPHn2zb9++nLZZReNY[m
[32m +        po41hfVY28Z71sn0bLeGTMNrvafomFM5RvpclXGaVuvkmOi7oDJO+6ppcxPmYzqKtpfp+T2yHRSmYZla[m
[32m +        HsVaPkXL0HT6jPcqzKPPrfcMrT9EaBotm6JlOop+Q1StS9NpPNvPPvE5+6Tt0nqsStFxsNbPtBwTLY/C[m
[32m +        a03La6a3hhrPNDqmDPUZhdeM179/za/vmKG1Xoaqj+W/W2z7W7WAVa3WUEcAPdi2RY7ubytp2hEu7UpL[m
[32m +        plWtz/a1b4r9Vu3QOEcJoHvaNpB0AlpNa8Cz6jdY+u2nWF2+jMBnCawqVwqba/4Avx6tsLlWOeO9NlcV[m
[32m +        yHwYgC6r/AU86v1kltvSYrmtrX1/5+Y2tYyzoa2i2zvWgzf3bgqA+rQVCG0l6VrWxP6eLcDzOr071BPo[m
[32m +        bGXAk9ZPgqpvxwbYKhC7uWV17OL5nN2awl8AlMeqWMGTod/Q7vajUgR0d/ZsJKDZ1sDmqeFdcHxIB5wc[m
[32m +        1gl7nJsKeNaGl8DnpvY1sKUjQbURzozoas7ZDBnnZLd8Cmzy6JTYydT+OWoFUOPN1izHzV0dATReQlpA[m
[32m +        QyY44eToLtg5oDmO/9Idl9ZORYTbfJnMzUXwSoFK0cBVs436W6AzBz6zl9fS0mmgU5TLbLm/U49QIWzS[m
[32m +        0snjU7jslhCqAEolgNKaqUrwVPgkcBIueU2oJHhGeNCJ0WxEraNldY45SiVhn+cD4GqsoL8DoNzTeWmn[m
[32m +        m4FLAmj4+nlmT2jMlsX2Jbke9FhL4JxnnhNGzbEqFmdCLDPea4kAq9RN50Ci1/etRcLBdUg8vN4AplWt[m
[32m +        8EkwJZQypFdeK4CqEyJaQdPPeCEj+hRSY/wELAOQcYHLbP0FOP1xSzTpXIAoz/u0wyatnrR+ZsYJiMYK[m
[32m +        lD4G0P8TAM1MumR3QnT9EpJuXEBi+k3iJRLOnsXKn4dj66+TsWzkSBxYKd//sdPA+Uu4FxOLpFOncHTL[m
[32m +        ZqRmyWQk8SamVShvLKCEomEFC2eD0R/XEQJT6pnVnFkpsMVjW6g9izyNwFkzsKtjB/Oc0OSarwAWfVsN[m
[32m +        aSeOotc/8mFySRv8+76F1L0lgYtjBZLHIeHCU7gXLgAa8RKS498EbrTDnajBuHyoFK4dLIbo7S/jypH2[m
[32m +        8u1OxuGNJRDo8QYil7+J6JV/R+TaJ3Ft35PGipp2kk6IiiB41Uvyd/sC7gb/HXcjnzJHryRE/RtXIjsK[m
[32m +        yI5BWlglXN/xN0TusOH0xkrAlRUI2lMVpz2el3+zXpGyP5C/41a4e20rIlfUR+yID7Gwysvo/6YNC5tW[m
[32m +        wDnPFejzVGEMyfckhtiexoh8L+PCFneMaPCVWWo7NJ/d2RDH4L6nYY59gd+A5aMql++yLC7Bjd6+FSmQ[m
[32m +        CdhtgZmUZNxOTcS9hEQZt5s4vdINvzRqhvGNWmDnjAXA9ZScSe1fPUmzTvx0Mktvibt378a8efPQsWNH[m
[32m +        c+QGjyig8kiKWbNmmTMF6V2VeTiB1PapMJ5gwmMVeA7ijBkzTD5HpVWOVjqeU8fz/axlOPbTes/6eJwG[m
[32m +        D9jnMRY8uoBlUWfOnPnAPetWSyCVx8vwDEhCtUIIvV16enqavEzD/LQk8kgGinWSrPf0islzAKdPn56T[m
[32m +        h2Om1kWKTrh5XiWtkmwH09MiyXYxPevkWPAICB7NQZiwAsCjiLaNwEP98ccfzREipUqVMmUR0tkOlk2t[m
[32m +        V6+eOQqGMMrjISh8zrT0wsnjUhYvXmzaRmXbePQHIULbRmGdHD96cSXgzp071/SFY7Fw4UJjbaUoiFDo[m
[32m +        RXfjxo0534SOA8+9ZNmsg21h2SyXx1AwjY4T07Itju9ERethGSyT4872Mz/bxe+RY8R0zMt0/FZ51AiP[m
[32m +        qmAavie+f6Zln6hLliwxZ4nyCBy+VwrbyzIYsl88E5XvlnWxDF5rGbxeuXKl+dvi+Zaal8q2UOkhl2PD[m
[32m +        tPrtsh38AYHptc1UjinfK4+OYbvYJuuYWJXCvHz3/NGBY6pjz3byaB3m53OmYx95tBDboGOh3znHku+A[m
[32m +        +fm3Rw/CzGvtD6/ZNnoSpiW+e/fuqFq1qjkWqHz58uaYIB43w/5a20l9LP/dYtvTSkDSortbNMlRLrPd[m
[32m +        00qAMlv3thagVG1rB0vVve0lzqpcSput+zpIWovu7dQI+zpmawdaPutjW6MqWFXpS6z4sQTWVCiNZd8W[m
[32m +        x+qfSmF/y1o42bkJTnVthnUCp6t+ImSWErCk1bOkqFzzXuLdfiwt4FoWbhXKYkWFMlguuqxiGayu+R3W[m
[32m +        N66Eba1qmiW16qXWHJFCL7cdCaACpO0EOKltamJ7WwlbVcfBXjx/szk2Nq8C3071ccSlNY73bSsQWwM7[m
[32m +        5X5vt8bwobdcybOrS0PsFg0a1h3R4/oicJTA56ieOD6oIw64tMSOLvWxvXM9nBzS2Vg9/UZ1w6H+rY31[m
[32m +        k3s+vbrUMV5vvQignWphZ/cGODW0I8J/cUbEBBdzFEo0IZHWSgm5z9MOkLy3a/QUWjGzdao8c1CNi5sm[m
[32m +        ACph9BQBVkkbNakPQsc74ciwjvAe0Ap7x3RD6KIxOCdgFbF8MgJWzYHfilnG6mngUyAzwG2W0aDVM+V+[m
[32m +        Ro6GuAvcecyVcDaC18xCuOc8RG9cjNgtS3HBW4DMd43Ri3JNveQjYCXKa8Zf8tFnK3CRS199BSAFChle[m
[32m +        3S3PJC5280JErBcYXjNdQgFFgcBQgcNIuQ5xn4HoTQtwY58HrtByKfkuM7/ku+CzwsBhxEa7xVJBlABq[m
[32m +        dwLkbkCUFk1aM0MFRCMMbNqtm+Za6qLSw23AGgHP1b/K9UxEb5mHC750KORmjkMx4b7VuHmI1k7C5Vpz[m
[32m +        feOAu8DmGvuRKfL8Ou+z9YakSzjsiRuH1gp4rsD53ctxfq8AuqQ9t1/ynvRGZsQx3I05g/SzhM4gu3Oh[m
[32m +        OH+kEDjP0urpbyyhSWcDjcOhFAIoj1ARAE2JkbTRfmYvqAHQizxC5bcw+aiaIflVfw9A069EyXWk0VvS[m
[32m +        niSB4kRpE9UOn9kAaoVP3guQ5qn/EwDlvk9VAqdVBZYNdFoglMtt7Utw443zITuI2pXOhrISLxh9EEDt[m
[32m +        e0L12e1Egc+bl3D75mWkJlxCcsoN+Z+8TGB4DEvyWSAxHlnhgVg7ZAQG/lgZc5u1wapOnTGvXXsMb98R[m
[32m +        9+gp9eYNLGvaAgPyFcTogvnMOZSEmbzUETqtSqiyghEd61CHCHT1LfgsVnXphHMrZxqnOzxGZGD+fBjx[m
[32m +        9w+BwwEYV7YKXItK2idEP7BhSe9vgZhlSA6qjLSDz8vfkQDgrqLw3/4dcHYF/NfVhP/613B8bT4c83gP[m
[32m +        CWeG4k74JPn3oTYCFpRA3Np3cOvw80BUMdEnkHbmKYQKkEa4v4awNc8gakthXAt9Hokx/0LqubpA2mBk[m
[32m +        XqyGrIgXgZD8uBH3Ou5ddhVwG49zJ/6NC4fzI37H84jc+DYS/SbLvxO/Yv6Xr2F8ERt6FbKhw9M2RC1Y[m
[32m +        DI9u3dBX7seZ/Z3PYNRbHyHz1E70Kfmq6fNQnuvJI1cEOhVCH0Udx9aqg7OX4PYv8DSSjx9B1p0UHF7t[m
[32m +        gaU9+sJn2nQcnzYPgcvcELbWExGi5zfvkH+DPZF8KuA3k8+/SliWlsvJfo8ePczB6R06dDBn6vHYAR6n[m
[32m +        QDjkOYM8SmXs2LEoUaKEOSieZzsePHgwB260bYQICiehBDUefs8z6WiB42SZx7Fw0svzIydOnGgO6udk[m
[32m +        lG1Rcewn71WZjmW1a9fOAAMhg+0lABCEeAA7zwLkGYJbt2418UzDSTPhk3DGYxEUuth2QgnPDaTlkH3j[m
[32m +        RJ1xTMP6dJx4z5AWW0I4z/JkXTyjlGPFybi2U/MScHiEBM+q5Dhw/AilBFzWQ+hg3TwjlGDBNmmf/4gw[m
[32m +        H+usWLGiqeeLL74w9Ws/tT2EZJ5Jyb7yDEpNw/rYfraXQM4zBJlmypQpJl7za/+0fdq/cuXKmTx83+wf[m
[32m +        +6LlWtvA4y54JizT8l3waB7tN9OqtY1AxbQ8C5RpebYjoVLbouNkFebTctiuEydOmLMjCdz169d/AD4Z[m
[32m +        si4qwZvfJK3D7DPPA42KijLH2xCk+X5Yzosvvmie6bEa2lYdNwIXvwfWxyNWCHMsh5Zo/r2wDzxbk+ev[m
[32m +        KjDq+LMs/gDUtGlTk59nhvJoHabjc+vYsy6mZXlM16VLF3PGqraHaa3p9e+T3y3fFc/UZB0Eb31PHDcq[m
[32m +        +8KynZyccsad3wO/Vf7t8gcAwmvx4sVN+5jfWhfL+vnnn803RkjlOcP894PKI5j4N69/g+yH5qM+lv9u[m
[32m +        sRmnQAKa1N2tm+ZcG21Nx0ANc5T7NFX3EC47CHjmqXyeu+7uKGV1aIA9Ap+72tbDulo/YgWtlD+Wglt5[m
[32m +        err9CBtrfovjnRsLeDbFqW7NcKJLE3hW+wory5eUtCWwqkIpLC/3ublmHPOtFhh1ExBdLmC68MfPsKrm[m
[32m +        N/BsUgGbWlUzToLoZIgOhehgiPs1uWSWILqpVVVsaFkZ61tUMqFH05/M9brmFXGsXxscdm4h6WrgsFNz[m
[32m +        AdCWJvQRYN3XQ+C6eyMpp5YAaHXs6Sp96tYQITxWhV5ux/bGbqem2NKxlllue0JgkhZPHqvC8OSwzg9Y[m
[32m +        PHd0q2+snjt7CHgObocIAUJaNB01ZrJLnho9TSA0D439VQBUNHqqlCMaOYXneLogaGw3HBvaHt4uzeAt[m
[32m +        9Z6cO0wmPtMRvHo6gpZPl4nQdPitmpmj/m5UgVGjAp88ssTdbh3k2ZlcvkrnPTyyhPsk6dTn7I7l5uxM[m
[32m +        7qekEx9aGhk+oAKKutSVy2BpOaSTHu6bpDWRlks6EOJeS1oczT5Lz5k5Fk3G06ssLZBc+kqg5JEmmp8h[m
[32m +        jzZhep7LqRDKclgu05/3Xo6YLQtNuVaHQrym8hxPVTod0iW2VwUSbx5cI4DpLuWsEpBcnaMar3r9gMRn[m
[32m +        q7k+tCZHbx4WUD0saeT66gE3nN/vhjgp+8qJrUgJP4JMgc3U2GCkxgt4xQeb41VUb0adlsm5nwHSBAkT[m
[32m +        os8Y0CQoXgs/geuRp3BT4piGFlDGp1lg8s+oFUDTHwqg4Ui/KhCarckXQ5B0PsgsF04UcLYCp6PmCp6q[m
[32m +        vwOgaiXNFUoFNPNSwqdVjefbbNWjWKyWUEImgdPRCppx88FnWQKgWYmXkZl4BRmi6UnXZaaYieSEG5je[m
[32m +        sAnmNmiOX9t2xlH39fKe44DURITv3oYtv4zHjl9nAUkJMpNPwu6RP8P5iaIYKSAzIn/ukKOaG3iqPgyS[m
[32m +        BuV7AsM/+wz3jvtizLtv4WdbAbPftIsA735XFxz6ZSqcixYyVlhCcKtiNhz8tQPS/cchYOW/Eez+kvz7[m
[32m +        8CLCPX7A+R1OwLmZOLThewR5vIrA5f+A3+LvcXm7E+4FT0CSXzdcDaiJlMjiyIp6EZnhLwls/RMR6/6J[m
[32m +        oBUfy79B70uZ3N9ZE7gwFEjog7SzXyEl7llkxRQw0Jp6pTuQ0QOZUd8gPex53DlrQ3JkUdyJryez4qWY[m
[32m +        XO0dc/zJeFs+DHpK4O/DV5G8cQeGfvQpXCR+ar5n4Gp7Cp4dOiLOYwl6PFPI7PvMbWxUcxtT1YeN7UB5[m
[32m +        Z0O4h/TlN3HnYiwSkIKj27Ygfrs3grdvRMQmT5xyX4GjK5Zg19Rp8J40FVP79cGxQ75mUmid4P1Vwsk4[m
[32m +        J5vLly83k+Lvv//eHPDPySrjtS6GWj9DPqNV5NlnnzUTdkKdTqAZWvPQ2sM0nMjSiqLQwOeaniDKMple[m
[32m +        RetW4b1VCSI6MdeJs7aNkEAIGDZsmImz1sn0tEppfbyn8prWUYIbAZTWm4cJyyRgcxLOw+Y///xzM5nW[m
[32m +        PjC0Kuum9Yft4vJX1s/+8xnr5z1hmXEsW/v5R0T7QgDleJcsWdKUp+NMJSzwvZcuXdqABUFIx07rZDr+[m
[32m +        +KAH2bNdWn5uwvysgzDLPE8//bQBR2v/qZqW5SjgFitWzACxtc+qzMN4wg7LZVoudXYs0yqOZfAM2jff[m
[32m +        fNPUxR8stExrGsaxTXznBCO+I37TjOdzpuffBK2X/DthWwihjNeyVPiDC/MzDeFV20nl2NPyR8DlN0Mo[m
[32m +        tb5vCu979uxp8vM7JqRRtK2qbC/HguXQkl24cGG88847xnLN96tpWLa1DVT+3bD9bAfh2ppO+8RrWjw5[m
[32m +        bqwjPDzclKltYRn88YnfPNNrPJU/ZvFHIP7QwufsN+O1rxxL/vvBvx/Gsy6Gj+W/Xx4KoPb9nPeh07qs[m
[32m +        1lg5LcC5R+7va2NRgdRs/S2ANsC+Tg2xrWkVrK72NZb9VFIgkktoS2Hpd8Wxr2VNA56nuzeDX88W8OvR[m
[32m +        AicERj2qfvkAgCp88tqtYmlzvVKuV1f7EusalBPgFPBsXQ2b2lQTgKwl4FlbYFFAT9S7A/d7Cny2qIb1[m
[32m +        ApqEzQ0CnZtbV8Um0c1t7EoAPdCrKfb3aoITrm3h06kudnWtL2XVxLqm5bFJgHVvj0bmGJXDLlyq2xxh[m
[32m +        Y3rhZP922NyhhrFqHujXyjgW4hJb7u20awMDnoROOhkipNLh0KnhnRFJyJxEb7YP7um0ax/ETslbcwNP[m
[32m +        VcImAZQgqgB6Ymhb7HFpBN8+TXFUgDfWbQrC10xDwJrpCHCfLaA1X0BrgQU472vgmjkCnnMljf28TF2i[m
[32m +        yn2TPLaEsEkPsnTgQ+c+xnOsgOaVPQRDWhrXPKAET43nNQGU+yDjty9B+Po5Bi4jNsyVMpcZMOXyVXPe[m
[32m +        pgAjz9AkSP4egBIW7wOo6lwDmQwNWApoKphS1VIa5M5jVWYgUvLQi63u62Rbru6j1fO+WoHzd/XI2hy9[m
[32m +        un9VDnzGeS9E9C53JAXtRXrkcWTEClDSsVB8EJLiCJ9BDwAoYZOOh24IiF6POGmgk9eEUcbfkjS69FaX[m
[32m +        36by2gEq/4g+BtA/D6DpCVfM3s67mWlGD8xZggz/cIGoO7iemgKZNsj/xWVSdV0gNeosVvYZhJvRUbh7[m
[32m +        6yaiNm5Aj2efM5AzQTQ3yFHNDY5UHwZJrgJJ/QsVRsyUX7BxWB+4FngaY21PwuUJG7oXtuGK72ZM/74i[m
[32m +        htmeNW0Y+ZwNu8Z/gZvXRyDqtCsOLP8CkSvfRcz8vyN66UeI86mPuzem4bxnI0TO/w7hq0ri9Nq3EbDr[m
[32m +        Xdy8WEEmSvWku61wJ6MVMpNbIflKN0Sf6IkrAb8gJepXIHaqzOgGIGZDBZw/9BGSz76BazHPC4SWBa50[m
[32m +        FjifiLSor5FKIL1sQ1rsk8g4+63ED5G4ajg+/R30ecaGPgLSvYo+j4sCQHt6OcGpMJfeSl8LCzy98ArS[m
[32m +        3NdiToVycC6UzwBrbmOjmtuYqj5sbAfI2PYtUBC//lgO8gHhcupVLBs+GqEzFyNl7z5Ehx1F0vVoocIr[m
[32m +        wA1RmVzeu3Qet9P+s8ewcGkhJ6+ELkKHWmW0HobWCaJeMyTIcRLLCTetJYxzbCdBhODACTUntJyEUtgn[m
[32m +        puEE1WrhUdH8KlqmKoX5mEfzMp5xf/vb30x9BFBNS2GdnAyzDVqOTr55TQDlhJuQYV1Km5swH8vhJJt5[m
[32m +        CHRqZXIUjSMYcqy+/vrr37SD0MB26CRd4/+IsE1UK4CyLArL5VgzJGixj5988olZOqpjp8I0XJbMd8ty[m
[32m +        uExX8+clzO/s7GzS8wcHlpuXMC2XeHIsCKu0HFvfvYqOAZd9Mi3LVSDLSzSPKi3r//znP027uKScouPr[m
[32m +        KLT0sw7W5eLikh17//0x5DJ0WnhpXdYfMXSMKcePHzf5WR/HkONGYV79XtX6zCXc2m8+ZzlUtTzyO1ZI[m
[32m +        y03VAsp+DR8+3FxT+QMH69b3yjL1msI2cRksLaC0VFufW5WQyHYQQGnJtbZVvwd+xxR9xrI4juwj/wbH[m
[32m +        jx+f87fCvw+GVC3DsW2P5b9bHgqgdidC9j2djvs6HQF0dzsByxxthJ1t6ueoI4Tubl8P6+v/hBUVy2B5[m
[32m +        9nLaJd99inXVvsWxTgJz3ZrhVLemCOjVSgC0pbGAHulQH+6Vyz4AoFb4XF2pNJZX+BzLRFfVKIt1jX7E[m
[32m +        NgHIbe2qw6tjDQOc3h0InnUMiG5pRcdBlbGhWSVsVOun6KZWVQyQEkR9OtdFyOieONqvNfb1boqdAp7U[m
[32m +        A87NzFEoW9pWx+7uDY1H2uDRPRAq4Hmsf1tzRIpXh5oyVxK4c24qANoSu3o1hrfAJqHUs5XU1VaguItA[m
[32m +        cNd65ogVQmroL84Cif0NgBI8uaT2/jLb+xo3VeLz0NzAUzV2uqsB0JDxPQWG22FvH3n3vetjX1+B67E9[m
[32m +        ECfwGb16GsLdad2bDf+183B6zVyc5HLb1feVVk+GhM8QDwIqvb/ORczWxXbwzAZOWjGNxdPXbuG0WzW5[m
[32m +        NJXeXgluDhC6i8eSCDSKEkAJl/Qoy72VtHgSHgmjXCZLCL0mIWGScbRgKqQ+DEAZMi9hk+kInIRM+x5O[m
[32m +        LqWdJWq/J5RyTyevCarmqBYBYvteTU+zr5MASr15SK4PrjGacJjLaC3qAJyMY7qr+2Q89qzAdblWTTgq[m
[32m +        ZR0WsGU6uU4KOIT0iFNIDD6K1Fg/JMf5IzFOgPJcAG6dvQ+f1BuRp4yVk+B5jQAqyntaRPmcYaKAKIHU[m
[32m +        LMHNBSj/qD4G0D8PoJmJV5F49QLuZaXJ/7GzcB3puHQnEZl3M2U2fVvASSawNxKQfPkSEBqFUzMX4eC6[m
[32m +        9ZI2A6nRoej34QcGnH4RzQ1yVHODI9WHQdIQgaTx8nzsm2/j7O7tcPl3cYyyFTUWz0GFbJhW60fcct+J[m
[32m +        EW99bdqxp0YRxCwrgd2+X+JG/DycPzwQgUu/F/h8CxHLn5N/Lz7C6Q11cTdmDlJDh+HMjhIIPfAskmKe[m
[32m +        RvrZIgKJRXEr7BlkRryCezH/RGbQJ4hY9x7CV5dFyMrPEbTiHQS4PSt/l6/jtPubiNpZCjjbTgB9qMwW[m
[32m +        f0Zq2OdIiy4i0GkTYLUhI6yRgOhspFxojfS4wkDgG/i1ug2dny0C39b9cXfpBjg/W9T0dahAaaunCmN1[m
[32m +        x9a4PGM6hhZ5BoNk4jj0Cfv+z7w0tzFVfdjYjspXEP0KPImdI4ch/fZNnM26jqDTR4GYKNw5fRKX1m2E[m
[32m +        /7yF2DFwJJY17IBhxb/HiO+qA9EXfjNB/KuEE1hOFDkR5cSaZbMuCuvTSaWKtoETSoZczvfZZ5+ZSS8n[m
[32m +        5bSeMt6ajxZQWmg44aYFVAGXZbAuhgQix3y8twrvrUrR/MynY8QJsVpAhw4d+sAzq7AMx2dcasp8r7/+[m
[32m +        upnAs38PUy5lJIgwjwIoy3KsS6VSpUpmUv7NN9+YtGyrtp/jQiuTTsqt/XxUYVlUK4CyXIVdLjPlct9/[m
[32m +        /OMf6Natm2k/xbEepuWyUbaV75bWSgIlf0zIbRwISSyby0A5FnzfjqCodWi/HAE0r74ynnsq+f0wLffu[m
[32m +        Pky0fFUC6FtvvWXGo3379iaN4/thOsaxHWoBJUxrGXzGceXfC+GOS14Jmtb3p0KgY34qLaDMz/fJ98CQ[m
[32m +        +zlfffVVA//6XEXr4fJytpffMa2c2g5H5TthOgIof8AIDAzEd999Z/rAv8fRo0ebd8YyWbcK3y8tvPy7[m
[32m +        P3bsmKmX5VH074H3VgtocHBwzjP2hfCpkMtvWfPqeHCZLd8Xf9ziDwDc18r2Mm9e9T2W/34xAGpV3xYC[m
[32m +        j9lQavdmawfPfaJWGKU+CJ1WvQ+gvq3rYVfbBkYJnz5yv7bm11hWXiCyUhljsVz+4+fYXr88znRtBn8B[m
[32m +        TkLnA9qjBY52bGAAlMCpSvBUXVWxFFZUKYGVVUtiedUSWFzpU7jX+xpebavAu301Y7H07sDlt3QYVCVH[m
[32m +        1zetgL09G2Nb+5oGKGn1JJBua1/DnLMZ+nNvnB7ayRyVsr1zHRwb2M7oPqdm2C1Qyfjgn3vhxKD2Zs/m[m
[32m +        FsnHZ/ucmhqPtrRw0tpJT7bc37mpvYCvQDEtnhvaVjVLcwmekZNdc1T3ear+xoFQLuCpSssmLZ1RXGab[m
[32m +        DZ4x0/ohYrIzQif0wtFBrbHbqQH29ZF3KuC5UwB0e7daWNdV2tOvBU7OHIKQZZMRuHyqsXKeXj0H/p4L[m
[32m +        DGgGrhEwWyP3AqDG8ikaKs9iBTxp3bQ78FltAJRK6NQ4wmUOgO7huZeiEl7bS8+waw2wMh3Lidgw38Cg[m
[32m +        sUpuoCdaWhyXGYDUo0wIkrQ80hIZu82+NJf7NgmehEimI6gSEplWAfSctx0+FSx1aa2qeq9VZ0IxW3k+[m
[32m +        6CoDszwihV5s1ZMtLbB0GERNPOyBxCME0ewltgKTXGJ7Ze9K+xLcbL2ebR2llfSqPAvymIoLu5cZq2e0[m
[32m +        1zyEbxYA3jgDIet/RdjGmYjduxk3z+xHQtBhJEeeQGKUaIwAKSGU+z65D/ScfSkurZq85hJbQuiV0GPG[m
[32m +        8pl6PthYOrlEl8tyTbo/CaDGesprC3jmBaCOSvBUJZQqgN6S9v0h6LRqLgBqVSuAOmrChUgkXqRG5Qqh[m
[32m +        3PdpHBDJtRVAzV5QgVA7eJ7LAVGFTTto2vXOrUvm+f09otYluFeRlngNdzJSZLaYgcQDhzGzdhN41G2N[m
[32m +        VT/Vx6KK9TC+Zl2M6dwO852csbxHX2xftET+Ly0THSljSqM6cM1fEBNlUpAb5KjmBkeqD4MkPX5kQIEi[m
[32m +        2NjDGSeXL8WoIq9gJvMVs6GfQKhX98EIWbgGw754GeFjP8HZJf/C6TX/kr+jmkD4JKQEjMGh1d/j6Op/[m
[32m +        Idj9HYQv/Rj71/yEU7vqCvG4AImdgQu1gMjvcCewFO4GvglE8BzR55F14u8IX/E8opa+g5gV7yLS7T0c[m
[32m +        W/sDQjbWR9LhfpJmLO6caYHMwBK4G/k3JEflR8Z5gc9w7iGVcq9OwJ1L9XEp7k2kCZBmhhXE6RXvY1Gr[m
[32m +        75C1fBuGv/IxXAUwR9Iame8JOBV/F8k7PDGteHEZG3oGzoeBhf86AKVDI4bDpb6xtsIY/szfcXPfLtzJ[m
[32m +        SkLWXXrAvQVclO/q+FFEzF+GRZ26Y2Kj5lja1RkBy9yRHBaJO5n3l3VS/sqJmr+/v4EMTjJHjBjxG4uE[m
[32m +        Va3Ce05AaQHi/jzCAcvh3jDmt6bnpFMB9O233zagRqWDHOpLL71klkb+TyaizKN5OcGlNZcAoBbQh5XL[m
[32m +        Z9pvWto4Fpy8V6lSxYBcXkqYZMhJNify7EteFlCVChUqmPJpES5btizKlCljlKBIiyT3/lnH/o8KJ/9U[m
[32m +        tov9Z9mEWoI4LXoM+Y4InkyXVx18RjjiO6PSYksHMrmNCcehWrVqxsnMe++9Z8aC75tAmpdwrAnCHAvC[m
[32m +        XF4OqBgynnt3+X3ROvl7AOoo/AFEAZR7mym5feO8p9VbAZRWSPaB329sbKzZY8wl6hwD/t1oGVqOCgFU[m
[32m +        /6YIaARIQjDzEKS5VJuOg7hfk2VYheVw7LkEl/kJoAR8fWYV1sv2cby5t5X3LI/1cVUDvyfCH0GXS311[m
[32m +        yTeVaYcMGWL6qs6fGEfhtY4H97Pyb4HjwR9a9O+W3y73PrMv/PGBonmoBHOWw72fbBv/RjgmXLJPsOd4[m
[32m +        sh1sk1qRHfv3WP475eEA2jp7vychlNDJ62zd/TsASuC0AqhPq7rY2qQ6Vlb5BsvLfybAWBJLvv9YQLIE[m
[32m +        9rWsjjPdmiCgezMECHD69/qtHu3QAGsEWK3Q+aAKyFb4FKsqC9gKhLqJrqpSEmtrfYGtjcthu4DfltZV[m
[32m +        sKF5eXg2+VGuK2NnlzrYLYBICyYtmb5d62OPwCghlAB6pF9rhI1zMstiCYq0WAaN7WUgMWbaAAT+3NNA[m
[32m +        5l7nZmZZLb3Vcpnt6RFdDHSa5bWSh8/ug6cAsJRNNd5tR3YVYHR9QAmgVsdCfwxA7dBJACWIRk52QcCY[m
[32m +        LjjUv4Wxdu51kffoLH3tWVfaJ0Au4OnVRdpECO1eR7Q+9kmfQuaPlQkfHQpxn+U8gcwVCDXWzrkIXM0z[m
[32m +        LuchevMyE2/g0SyZtS+dVaUlk9ZPXXLL8JrA5vX9tB56GvhkPMGUnmbpUZbeZelx9pz3cilPAFbgjxZO[m
[32m +        gib3b9oBlOmXmOexAoiETu7bZMjlsQRIWisJiYRF3ffJ57R26p7O3ABUnzEdoZb1sW7WxXbwPmrzAlMe[m
[32m +        oZSASxC9cfC+hVMB9LzvEoRtmIELO5dK31cgasscnPVeZODzgjzjdaiAZvimWYjdscAAZ8h6AV8B0KB1[m
[32m +        0+DnPgl+66Q/Mh7nD27CrZCDSAw9jISwo7gRfsyAJq2ZDKm6B5RwSdDkPcGU12b/Z/ZzA6W6B1SA0hEy[m
[32m +        H6aPAfQvBtCEa8hKlUmFAGj65Rgc3OqGq/EnkXwzBLeuBeFK9AnEHN+FcwIqWf6BMoO/CWQIrGQlw89j[m
[32m +        BboVLSKw85+x0nFZLaFpUP5CGPrUKzg191cE9R8g8FTQOPGZIhDV+cmiWDuwE84fmoxAj1oIXVwcZ5d+[m
[32m +        gKiFHyBo1XeIPdQNKecnInhPM5xZ9Slilr2O2A02pJ0qhqzgd3E78gdknauPezdlMpjaA2miCandcTOp[m
[32m +        Jy5d7I/g08MReXo2zgYvxNXQRQK0K3Hz2BhEbmqMELevcWbxK/K3X0DKKoDrcTZkxFYSoJ0tM80JuHu+[m
[32m +        FBJibfId2HAv/kncinhN4hvj9rERGPPR2+hf6DkMLMCltwXQ56VXcG3VIni0bow+BQtJ3wsbq+6gvxBA[m
[32m +        R+S3l2XGVMZw9k/S1huXgJu3kLL5IBbUbotxxb/Dom+qwefnifJv1wEgJlZA+jpkdonEzETEww56OjH8[m
[32m +        K4WTYk5SOYnlnjAK68hNrcJJMieNnETSksbJJSez9EzLOGt6Tr4JJJzE0oERAYLwyokrn3HZK71yMs+f[m
[32m +        nYha8/5PAZT56BSJMMJneSnHgMpJOWHhjwAonRERAgkLOg70GksLLMtmGQ8rJy/RNimAsk3aN5bHZ7xm[m
[32m +        HQzzEqZTAGV76UyHwjKsY6BKYd/pWIj1cv8frYV5CeumBZRlE0oIY1oORfuu9RHc+I0RZBR4HlWsAGq1[m
[32m +        gLJsqzLOCqAEdrZx3LhxxhJIiFNw0vzWclQUQDl2tEiy7SyD75f7Q7knleOrVkOrsBw+UwDlElwFUEdh[m
[32m +        3bQy0zpJh0LMp397DOnwh3ty+WMH/8bpYIxOs3SpN//umPdhAMol9kyjoMq28O+XVlU6JCJMMj3r1jHQ[m
[32m +        srQcwqifn59Z8su/K44tV13wRwW2haLj+Fj+++WhALqrlTofamiHTl6r8j5X+KTKs/Z2K6h3yzomXF+v[m
[32m +        IlZU/hpLK3yBZT99iqXlimNz3e9wonMDgc7mCO7VEoE9miGwdysEWJTwGdC7NQ63r4/VApprKpfJUUcA[m
[32m +        XV3pM6wV8PQQ9RRdX72MUXeJn1/pU6yu/40B0M2tKmF/L4HFAW1wtG8LhI/tjZ3dBBg71sau7g2MNZRL[m
[32m +        aLmcNmJCHwHKrsZLLZfLRkwSOPx1oHEktNelmbFqUgmehEl6tSWsMo4QyiW3tHQSQHXvJyF0Y7tq2O3U[m
[32m +        BGETCIkCnVP752is6G+g06oO0GlVs89TAJQWz+DxPXBscGuzx9NYPEV39qoHr67Svy41TLije21496iD[m
[32m +        bV1rYFs37lkVIJV+evVojMDpQ3HOczauCGBe9HEXQFxowDNkLT3BLhDw5FLY1Ti7fbmxXnJZLeFSl9PS[m
[32m +        sknovLF/nUAcIXCpfR9o9pJcWkm5bJdHnvi7TTNHnvCZsYgKlHK5K0GPenb7UrMEl9e0fNJTLeGSVkrC[m
[32m +        ou7jpOVS7wmhGq/pGDpCp1VDPO3HsjAtlUuAGU8HR1q+puW+0Eu73MwS3IRD9uW2urTWgKiAJqEzVKAy[m
[32m +        TNTPbYLA62zpw3xEb50rgDsHkXJP4Axe9yv81042GixQGrVN2i9QGrpxGgLXT0OwpAvZthiXj21HVswZ[m
[32m +        3Dkr0CYwaZbdRpw0cHk1/Li5JnRyqS2X3Jo9oZKGIcGUllDrESzm2gKYv6ePAfSvBdDUm1eQnpyAe1kC[m
[32m +        lbdEBUYyjxzDqg6dMenrClhXqy1OdRqFgz//Cvdfp2Du0OGIOnFKAFT+Z305Fj9/VVoAqvADoOOoucGR[m
[32m +        6sMAdLQtv1maOkwmHbQI/sy9cAt+xZaeXdC18FOSl0tUbRhVshAitvRF1uUFCNzWEIFLiiNs+cfwX/4G[m
[32m +        /NzfQ4BnJaT6jcSdiKG4fLI6MgJfRlZIYWRFFURadD75Xp/E9ehncS32ddyKfgeZ4f9CVtgHSD1dGnGb[m
[32m +        v0S0R2WEr/oBwSu+RsDq7wRk/yH/XrwE/2X/Esj9HkeXfo0o32q4d6u+APpYpEZ3QVLc60g9a8Pd+Py4[m
[32m +        F2VDeuCPQEpHILkF4raUx6A3pI8F88FV+tXrpb/hwuKF2NWtM3pKX4cVEODOHpdBDmPiqLmNqepvATT7[m
[32m +        WuIHFi6K4zOmIQOJQEYaUgOicCk+EgGxJ+F/1BvBazywf+FibJw4FauGjoFzzfqIPHUKKffScwD0rxZO[m
[32m +        KOl5lZNMWltoseFEUCePVnUUThqZnzBFgNU9cZpXhaClVkI6k+GElHk5aeUEVJcm8v7PTkSZR/P+TwCU[m
[32m +        HnUJDsxPKGKehyn7Quslx++PACgtaWr50b7ruGhbH1ZOXsJyqARQ1vPpp5+acq3laZ0PE5ZhBVAey6J5[m
[32m +        tCyrMj2f6x5Q/uDwewBKz8RMy29DYV+FZWrIeHVClNfSXh03axkqVgBVJ0SaTtuvZVgBlH3ht6R943OG[m
[32m +        /FYYp2UwZH4VQqaOG/+eWAafax6WwWuqNR9F01ktoHlZklkOx4JwSSs0vyctj++c7eQPPfQ6TQ/NHLvX[m
[32m +        XnsNK1asMN8pf+zg8uqHASiPj+FY8B3pcmFVtpM/BjBUsY6FlsGQY8B+EIAJomwzx5l7YPlvgDXfY/nv[m
[32m +        FtvOVgKeqi0bwadFQxPuknvflvUlvr5AaAMDoQxz9DcAynuLZgPojpa1sbbWj1hWoSyWli+DxT8RFEvC[m
[32m +        p2lF+Ds1F8AU6OwlANq7JcKcWmUDaGuLtkKQc1sB0HoCoKUEPAmhdnWrWDJHV1csYWBzQ42yWF+tNDYy[m
[32m +        rFoa7j8Vx4pv38fCCh9jbrkPsLJmaexoWwUnXVviaJ+mCBreEZHjnLCnR0P4dK4D3y71sF1A1KtDLZwY[m
[32m +        2B5RApwEy10EUIFKAmP0VFcDpHQexCNU/EZ3x2lJQyDd0qkWfHmkijxb36aKcSzEdD49BXC722F1Wxc6[m
[32m +        H6qHXb0bI3SCsx08p93XGCk/Lk/9vT2gfRA2sReOD6NzoYZG9/aVd9u7HrZ2ri5tqCVtqYMdPaSPAp2E[m
[32m +        0O3deNZobWzvUhW+AqE+AqH7pC9HRnSG//QBuLBuJi55uyHcYy7CBEDDBT7DBUYv7/REvJfApPdyc0wK[m
[32m +        lcedXM5edmusngKjCYfWC2zSARH3T3qYkFbEEIE7/9XTBMymCtjNQOSm+QY0afW0OyBaIaBHeLMvqTXO[m
[32m +        iAT6CKEXfJcLzC6V/FPNEt3wDQKxq6dIOfYjUWjdZFzUZvueUAXKyE08XoV7P+1LbBUm76u9Ppah53qG[m
[32m +        eNJaOs3EhcozlhHntQjnpQ1sy6VdK43V89r+VcbaGbd9gQFMwifvY70E2gUwgzymIGyDlCfXBM9wAU/e[m
[32m +        n9u5BJFb55jltyEbfkWg5xSESnzMdoKqAKjHLwjbLBC8ZS4CZYwifNYgKeAAbkWdwo2IEwKYhM4AE14J[m
[32m +        O2Y83dLqmSQAekPSJAiwpl3g8lwu1xUIzbZ+Urlk949YQf9vAJT3eaiAZG7gqZobeKomSNl2AI0U4CSE[m
[32m +        WvU/CaCXBEAFQpOuIIXHsSRdEwBNxZW0W7h+9Qq6Va6By167ZLZ0HcjMwE1kCahkCCFcA24kYZpTX9xN[m
[32m +        lYlX5g0cnTQOvZ8s8gDo8DxPwo9qbnCkak3nqPTSOq7w08YRz0gpk0t9O7/+LKK2ucn/D7qh75MvYkgR[m
[32m +        G3Y2/xsCF1TGsS2tgYRZuHK4NY6v/QpHV7yCsDUvIXTxhwheUgUR2xsg81pbILW/gGAvAcTySIl5G+mx[m
[32m +        RYHYgkBEftwOK4i7MXIf9RSSjxdD1LqiiFj9BkJWvoXAFa8hdO0rCFzzIvxW/hNB7lVwYU8/4Pxs3Iob[m
[32m +        jqDt3RFy5B3cuGTDtXgb0s4WRmbIu0BYY6lzksBpF/l7KQOc+Ra72z5ljl4Z8tLrSHFfDy/nnuhetDD6[m
[32m +        m74WFlh8wpzVyeWyuY2Nam5jqsozVvk+uJfWvBeJow6RCelYehe+HAdBT5zcuA1DPq+IQ+NnyL+n24Bz[m
[32m +        scDNq9JmgdPUJLmWdy3fwl2Z4AmW5EwOKX/lRI2TVno4VStJ3bp1zeTUCi2qjsK8dE7DyTYnypxcctLr[m
[32m +        OJkkAPA5J7ITJkwwZVM0nSrv/+xEVPMz/J8AqFpAedwG90Bqm3JTlsd8hDwuU/wjAMolrRw/FU7iWaZ6[m
[32m +        jmUZDysnL2E5VLWAckksx1uhQoXtfpiwDCuA8ggbirX/qhrPPAqgBBu+97yE7eHxH0xLMNK9hCraVoaM[m
[32m +        VwDlOPM7s4q2Q9VRrADKpa/WdDrOWo/jElz2iWJ9V5per60hRS2gVJZnfabC/lO0fBWmZZwVQPWbcBSm[m
[32m +        UydEfN98p1qXpmcc285vYNSoUTnOwHimL70f82/+YQBKKyXbwaXPCqAqfK55NJ55qXRYxKXLFO0ThW3h[m
[32m +        c/4Aw3L598k2shxr2Y/lv1dsvgKTeWu9B5RAeV8FUts0sWtbQmdDUQHTdpKubT3s7tQYW5pVx4oqX2BF[m
[32m +        5bJYXqEklvzwCTbUpqOhBgYs6WgoMBs689Ig59YIdmmLg23rwL2ygGblT+FWqbg9rFwca6p8Co/qAp+1[m
[32m +        ysKjmgBo7a+wrsYXEl8Sy8t9gsXff4ClP3yElT98CLefPsGaSp9hfe0vcFyA0L9/S5z9pTfCR3XBgZ71[m
[32m +        sV/iDggU0gq6s0djnB7G5bH9cUae+/Soj91OjRAxiUeY9MMe58YCb3UE7ppjX78W2CaQ6SVQubVLHWzm[m
[32m +        MlvRrQJy27oK2HWvK8An8Cnq1V2ed66BrQJ+u/s0QtgkJ0T/2g9Rv/a9r7qENlt1L6dq3Iz+xpMtnQpp[m
[32m +        yHQhv/TE4cHNsKdvAym7Pva5NsROl7rw7i0Q3LMGtvdw1OomfkcvgVBzXQ2+zrWwp5+8bwlPjGyF4Ild[m
[32m +        EDSlB0KXjEbsmqmIWSsQtkpg0XMRLvmsExDcgAQBsUSByiSBzaS9HkjY44nruz1wdZf9/EsuOY0XKCN0[m
[32m +        GYsfl5mKEsQiNtI6KdC1dgoiNhE059qfeU4z1kIuYWUahkzHZ+FyTeU991AGSV5aGFlesORzVKZhaOrN[m
[32m +        rpNgyGWwvGb+YEkTsGaSCVkW0/Ga+Vgu80ZsEWgUSAz0lPj1Uvc6KVs0bNNMxEr/YgQ0uYyWS2cZT6tm[m
[32m +        gEBnrIBkuABktNccxO6YJ/knC3By2a39mtAZtmm6xM2WOmYi3kfGSp4zLni91L9hmsl/YfcSmfzPlrip[m
[32m +        Jl3U3rW4FXFEJvCnkR7vh6yLIbgV64ebkadxjZZRAc+kc4FIo8MfczboGXNGaNr5QBigJDRKSMuoesk1[m
[32m +        IClxDDMvhSNDVAFVn1lV4dM8y3Y2pOoIoI7P6IiIDoiMng3N0aRzoQ4wGmrSqtK50X2NQMrlqBzNDUDV[m
[32m +        6ZAjgCbyGdNIPkclhOYFoBpPR0QETyohkwB639nQfQAllKYTQhPOIzNZ4NNB0xLP4276NSRL2juXzmGR[m
[32m +        sytw9aZAZiIy76TI/6lTcPfaBdwLDsCe/sOxsGNX3M66gST5D7HxGPXBFxgmkweCzogCdvihoyAqLZdW[m
[32m +        OHVUR2iyKo8gYThIyhxYUNJL+bQIDn3leQSOHIbjE6djZLnnETDz34hY8hRi174O/+WlcevoAGSdH4/Q[m
[32m +        PS1wYFUpnFjzFi7ufhkIeV5g0IaUoFeQGVVeZoN9gMSxQMoAIKk5cK2ifFPfIf38j8iI+BYJh0siaM27[m
[32m +        CN3wA0K2NZTvvT2uHmuFO9HjcCd2Ia6dnIIo32444/EdTqz+J0KXv41Ty4ogfvfTSI/5l0CpwGZCR9y7[m
[32m +        MRJJV77C9aiiuBdhkza8gFubPsLon57CLa89WFyzA3rKRGxgUfvxKMNtAqC2Z+3nfsq947g8qv5sK4Sh[m
[32m +        +fKjX2EZOxnDcYzPXxCdnyiCI3PmC4TLRDYtE6vGjANOB+DWNh8cGjcewytXRtdvfkD/CpUwv1NHrBzg[m
[32m +        iugDB3AnPQPJMsfTiR7lr5yocUJIC4S3t7c5qoKT06+++so4SlHrJK2cnEDqJJGQxXw8b5NLBGn5pIMS[m
[32m +        nWhygknhPfMQGAgZhBk6RdFJKsv+q4R1aX2c+LJdrI97/thWtkufW8eSov1ie+ixk9ZM7ktUANX+sByK[m
[32m +        5tcyFW54fqo6jNG0KloGHcRwjOm4iWlYlpbDcWWdgwcP/k3+hwnzUrWt7D8BlxD1xhtvmPfI5+yfpqU+[m
[32m +        TNgPnvnKsaDlmstHdemrjpcKr1kHQULPr6RyX6c1nUIv49jOOXPmmPLVusY4Tc+0Oi6M55mSHGMCqDrD[m
[32m +        4XNtC0M6wOKyWf0++ZxCB8sfRGMAANhVSURBVFe0/PF7qF27thkHlm+tj8JrgjC/Vbafjn1YBtOzTKsw[m
[32m +        rVVZP8tkWp7tyvyEO55Bqm2k8vnvCceSS4X5nXDJKr8J7YtVWC7/NlkP3zevtR4Va9sIoTwehft1CZQE[m
[32m +        VwVQzaf1aBn8QYbtYH+4XJ9lcdxYHseYcN+3b98cZ1ZaV8OGDc1eY/aX6RnSGstnHEtabAn6/PGLS3p1[m
[32m +        jB7Lf7/8DoDa93CqqjMhuyqACrC1FdBpUw972gv4tJc8berAs155LK/ypYHPJT99jmU/fYYdTSrgdE9C[m
[32m +        Z0uj/r2aI6RPW4FMgmbuynQMD7SpidUVP8OqSp8YJXiuqfKZwGdJgc/SomWwrqaC58dY+uNHoh9iWbmP[m
[32m +        sKJ8cbMMd23lz+Be5XOB1C9wWMBwX6caOCjhAYHCfaIHewlEEyTbC5B1qoNTQzojZuoA+I3uCl+B090C[m
[32m +        nZGT+yBu+gDs6t0Q3t3rGfDc0aOB0U054FlHoLO+QGYtA5wET28BXO9e9eW6rgHThwFotCgdB6k6AqgB[m
[32m +        T3q05f3Uvmap7dFBrezLbPs3wt5+8u6cBHwJlTkqoNmz5gPqJfHeAp++TnWkLXWxu29d7OojY+HaAMeG[m
[32m +        NYff2PYImdQVIQKg/tP6YPew9jg9YyCiVk1G/IZ5uLbLHZd8V+PqzjXm+uYeAc69niZM2LdOIHQtznvT[m
[32m +        aikQKXCp8Ejr4NkdC42lUCFTQZPpwiXkM4VABU9eE1QNGKoaQBSVkM8IjwqeOWpNL0ogZX0Ey0D3yQY8[m
[32m +        mY9ts5dnr49hjko8l8rSUhmyYXoOfHKp7FnfxcaBULzPIrNslpAaIf0igDIPLZoESgJo6MZsC6eEjCNM[m
[32m +        BngQWKfkgCiBk/G8JmgyrV7zGaGV6r9hFiJ9VuLqCS/cjj0lMHociREncStGJrNxtHaGCHyGCXgG4kb0[m
[32m +        GWMNNftABVK5PJdgSejkEl2zTJdxAntW4KQ+cJ8NpTmanYaaTlglhGarI4BawZHPUy4SNIONJfTWubAc[m
[32m +        TRK1AmniuaD7oCqafEFAVFXqdYROq/7/GkDlmQJoVspl8OCVrJQkxO85iJVDRmFWX1dM7tINExs0x4Ba[m
[32m +        9dG3RSscWbMeWZevIvVOuqSWiWz6HQSuWo+exYrAtXBBjMqfzzgPGkvYESUA5Qaeqo7QZFUCLC12BNDB[m
[32m +        hFsBMloH+xYshM5PFYZH55rAwdm4vrkzQlZ8L/D3iXzzJXF81YcIWlYHd04KYIb1BKLqIyPqUyTFFJV3[m
[32m +        ZsPdC/kEEJ9AUuQLSIx+E8nR7yIjpoSkqw6cbwpcbIfrB9rj0JT6ODq5HS5sGYpL++Xfu+1tcXl5E0Qt[m
[32m +        KofQpZ8gZOUbiFz9N8SteQHnVr+AgwK/J1ZXQdSW9rgdMFTKcZLyfkBq9EtID30SWWeL4Ma5J3Eh/H2Z[m
[32m +        ifYHjq/EmA8+gVOBFzGsyLNwZZ95rqrtCdGnzPgMzQb6P6OjbQVl/PKZHwYI8wRQZ3kfc2rWkLadxd20[m
[32m +        VJw7ehJThw5CQuZV3My4gHP7fTC/ZRvcCw8Hzp7Ftf178WvP7gLSibidlo602/ZJpMpfOVHjhJCTTk4O[m
[32m +        qdyrxsksoYCWvT59+mDlypXGAcvmzZvNeaFcQkforFOnjplsMx8nlSyHyrZqewmfhAdOdglEPLKEFiJ6[m
[32m +        G+XE1Nqv/6mwL7Q4sb1q6SHw8axC1kfRibZVdELNiT4tScxHMOK+PzpRIRBQtK3Mz2suKaQFmLBKOKIz[m
[32m +        Je6VJCBxPLQehoQ3toPeZwlCLL9Vq1amDi5zJIzRQRDPFKVliu3RvL8nTKNt4h5FNzc303+ON4GNy2fZ[m
[32m +        D+4z5fthf6m5ibUceknlWLC99erVMz9KcF8hnzu2izBCb6pc6sn0rJd9IvCoxVvrZVqW9fHHH5vymZaW[m
[32m +        8aAg+f+XfEv6DbEOggtBmN8ix4zjTAc4/fv3N+XzmBCGPIKEznb0Bw7Nz2XU/B4IlRwPOs7hEllCKeuh[m
[32m +        MC2V3w7fhQI0l5bzWyVIOwrLtirfF0OOW5MmTcz3znEYMGCA2Qeqy5G1TkfRcjhW9K77/vvv57SD1l/u[m
[32m +        oeRYMI0KrYxcwkqQ47dHizLjtA4tU5Xjwm+Z40845NJxjv2pU6dM//XbYFrWxW+GP0bxHamVddKkSWbM[m
[32m +        OU78u/7pp5+Mcyr2n+UyL8vhSgpab/mN03rOb3DLli3GCzb/JrlvmvtrWQ/z6vt6LP/9YjMgmadagVMA[m
[32m +        zFg57Wp/bofPXW0JqnWws20deDWvinX1fsQKgc+lFUphZeUycK/2Bfa2qWGW3Aa6tBCgbIlgFztgBvRu[m
[32m +        Lte0cuaufB4o6fe3rm72eK4W8HSv+hk8a5QS4CyNjXW+EKAsg7XVSmBVxeJY8sP7oh9g+U8fYWWFT+DG[m
[32m +        PJU/h0c10eqfS74S2FCnDHa2rgCvZt9jfd0y2NW+Cg72IIQKfLapBO8ONbCvV2MEjeqBuGkD4T+mG3YK[m
[32m +        nO51aYLAn7vj5LAOBj63dyNcNjAQur5dNQOe3gKqPr0awVvivejkR8okfPr0lnhR7571DJg+HEAFPC3q[m
[32m +        CKDUiEnO8BvVGYf6NzfHqZh9nn2bGKDckW3tJGBaLZ/evWo9oLtcBDr71BPwrG8AdF//Bnar54TOCJvc[m
[32m +        HaGTuyFsSndzHTXVCceGt4avaxMcHNsFgQuG4YrA1vVdS3BxF/d9rsO1vetxQ8Dz2m53nPdaiuj1cxC8[m
[32m +        VgBSYI7LUQmVV/auwHmfxYgU0GScWkAJnUazIZDxBFU+IzASFKl8xjS0WqoSPAPkmYJlDnhaVMsggDJk[m
[32m +        m7gHk+l5z3L8aQHNTst61RJK+GQ+WjMJlYF8zuWz0kZaQo01VNLwOa2jBFPjSIj5JH2Ah5QvgEmoVHik[m
[32m +        0qpJsGQYupHWTpbLvaATTfqgdXY4pTIdnxFAtawIqSN6y1wB28UI27YUV0/6Iin0KBLDTgqInjYgmhjl[m
[32m +        jxvhZ3A94gyuMYz0x81oLte1w6jCJ5fscu+o2SfqsCzXCqC0ilrVCqBplx6ETEcAtcJp+pUIE3frQrDR[m
[32m +        B5bVGsunPMvWJGlPkkCoquaxq6SxQOX/SwCaceuiCdMTLyA96QISkYH0uzJhSJFJ2mWZpASG4er6rbix[m
[32m +        xB0ZPgeB60nITJdJAyTNHZkAZ8gEMUNCARPPrh3RXUBhoADPRFFzLqfogAJ/HkCpTEMAHZqvgEBUIQNV[m
[32m +        AyXs87TAaRkbzq7oIO2ciuTTw3F6XXWcdC+BM2v/hYgV7yLa4wOkHS8PxNYHEtsCyR2QcaUZMqM/R1b0[m
[32m +        20iLfgHJUQKjcTbcO/sEUv1fQszSF+FRj0tjbegv9Q4qWBTDX7DBrWIxBIz6GAGLSiNwxQc44/Yq/D3e[m
[32m +        wumVHyNoRQ2c9eyJa6e64E7EcKT5DUbEltoI3/Yhbp5+DnfjbUD4M0gOLo6kqy2Rea8r0hNqI8H3B8z4[m
[32m +        lEuNqYUwpoAAvIzdKGMBfQJDBRyH/A8A1AC7lEdPwvxRYOQTRdH9by/hxm5f3LuTjMyUJESt2IhtvYfi[m
[32m +        jPtagcyLuLBvJ07NmourZ04IgMbi5MZ1OOAhz7LknWfeRmbWfw5AdbKpE0fWQ+sXJ7I8dJ+H2hOSuF9s[m
[32m +        3rx5ZtJI0KAjFablpFMnvLzXdnJSyXIJINyDRlDbs2ePsbQeOHDAWFM0318hCgCEGIIe66GTFAIy6+Vk[m
[32m +        Oq/6mJfAyP6yrczHcP/+/SY/LYo65hqyLI4B09E5DcGTyjJ4sD9BgmPB9AwJwHTQxLK1XIbcB0mw5+Sc[m
[32m +        AEGLEPf1WSfzvydMp/Wwn3v37jX955izTN6zXsKYTvb1PTkKAYR1EvqYX8dB3yHHV/ulwjy0vrF/BA3W[m
[32m +        x3fM9MxL65jWx3EhBPEd6TehIZVjze9G6+C3qPWzD7QoMj3HjxDF/tGbLsfPy8vLgL6OG5UegNkevhfm[m
[32m +        YzqWxe9P3xGVfeC3ynfI9Aw5hrymZZXjZhUdc1W+L5bBNrIu5ucYaL38cYPP8xK2ge3lODIf28gydGx4[m
[32m +        z76xDK2TlkvG6/fEdARmptPxU9E8jNe/WdbFMeT74Zhr+xhybPh3zufsE9uk7eGY8wcpfqt83+ybWohZ[m
[32m +        PoV/G3zHhE9aUan8oYCrJvj3wffKOnXcHNv7WP57xbazDa2X95WWT4a5AeiDyjTMQ4tnXQnrYHuLalhZ[m
[32m +        rQyWVCiB5ZVKY0m5z7C1UXmc6N5Y4LOZwGRTgc6mCO5DAG2BkL4tRQV4eJ+H+vVsjDDXNvBpXA6e1UoJ[m
[32m +        QNotnhvrlMWmel+a0L3q51hRnhbP97G03AfmevlPHxoLKcF0ZYWP4Vnrc2ysVwYb6kreeqWxr11F+Lk0[m
[32m +        wGmnejjp3AD+rs1wwqUxjglknujXAvt7NkTAsM6IneqKoHE9sat3I/gISG7vWlvgU0C1S21sbF8VWzpz[m
[32m +        mS2toLRuEjCpDY3q0ltaPn16NYAvraZSxjYBU0cAjaFFM1t5z2W2Z2cOMBbOs7MG2pfjTnFBvMT7G6+2[m
[32m +        zQ1w7u/X9P5xKlLmtu7V4NW9uoFQwqgdSCXkMlwB0p3OdbGnXwPsEeikEkAPDmyCkyNbI/CXTgKb3Qx4[m
[32m +        hhM8RSOm9hDg7YVz03rj5FCpUyDVu6+872HNEbZsCK5vnyEA6o6rAp4XfNwQt1XgUsAznHs6zd7LbMum[m
[32m +        aOy2eWYpLjXWaz7OeS8yEEi4I1TS0mgsoLwWeKMayJTnjGcZtFYagMwGQwOfEmesltnK9MzHcs19dhlq[m
[32m +        /VTAZH5jfc0GTRMv1yafhJHZbdHnCpwMQyWelk5e0+p5cfdynN+5VCa+dqdCEfJMl+lGe8011k6CJMGR[m
[32m +        EOnnPsEAJcGScRpPK6jeU+0gagdOhoRZLsvl8t2be5fhgtccREk7Q7m31WsZorjsOWAfksOP42bIMdET[m
[32m +        SAg/jQQBz2vhPAM0BDei7F5yb2R7xVUQZUjLqDomIngap0XneR9i4gyECkBmXY74jQWUAJqarblZQK1L[m
[32m +        cLkPNOOaQOLFULslM2e/Z26qaexKy6kqLaBWqLQux9UludbnD+jl3OGTyn2eD+p9AE01oQCohARLAqgd[m
[32m +        Ps8LdF7A7aSLOWogNMkOob+1gNoBlEoAvXkrEcIXuJuZwXVvWDxkKFx+Ko9tQ4fi4Jhf4D5oCO6kXsPt[m
[32m +        9JvGG26w23rcu3Ydd+6l4W54MEZ++y36PfkMxgk8EXhovXTN9ryal+YGTlY1y24JoAKeY6XcsbYCGCTx[m
[32m +        rs/YcGjIG4hY+h1O0kGQT11kxfRDelAPhHpWRJTvy0gK+TsyzhZBUowN18OKISm8DO7FtwO4DzSZ1knR[m
[32m +        c32B4K44PusrDCtvQ7e/2+Bc2Ia++Z+Gq+119Lf9A33zvYS+hZ9E7xcFSqs+if1zauOsb3fcOjMIKSEj[m
[32m +        BGgn4PyxAYjd/AMCVn+E06vfwPE1z+Hk+udxctPLOHf0c9w+9wOQ5IS7l4bgRuyXSCaURj+NkyOeMEtv[m
[32m +        R0ifCNfjbEVNyPv/MYDmz2/g9mcB0SFSZvuCT+CUAJzZ3ykTw71zFmHL5F8RKBM3JF8H0m4IASUJiF4x[m
[32m +        aY4IfM4dO0a+48u4ly7fxG2ZOMq8UCeQqn+V5FaWYz3Wa51gOj7PLbROKhmqqmhZf5VY20bhvYJpbvVb[m
[32m +        RSffuaXTa8e8ucVb+5RXPopjHr23tsMa/0eEeVTzus9LHNNRreNq7Z9VcsvnqCqO99rPRy3bKpovt3gV[m
[32m +        x7xM/7A81nbk1abcxApwLMual/eO9VlFn2sax7zW0CrWOF5rvx6WVtNZr631UbQMVY3LrV2M075TrP23[m
[32m +        5lXhtVUd634s/91i82klcGTRRwdQpuNeUIGRtnWwuXFFLK1UAquql8GqqqWxSgB0d+saON1LwFPgM1A0[m
[32m +        WOAz1FnCPs0fWYNcmL4Ztjf8Dutrlsb62mWM1ZNLbj1rlsLqysWx7CdaPD8Q0PwQKyt+hNVVPpFnJeBe[m
[32m +        7VMB0M8EVMvCs25JbKhfGvs7VUZA30Y41asOQvo1QXDfxjglEBo8sAWO9qyDIwKLXq0rYr+AY8iorjg3[m
[32m +        fSBODu+IHd0EsAmfEr+5QzVsbFcFWzsL8GUvwSVw7qCXWwlpAfXpZQHQbAuor7GA3gfQPVJ3+GRnO4DO[m
[32m +        EPjM1liBTGP9nCbwmQ2htHrS4klLJ/WAAPO+Po3NcSre3elQSNrSJXtfZ/ZyW7ul0w6hXJK7t1/DbOgk[m
[32m +        fDbAwUFNETC+M0IndUfQL50RPKGL3eJJ8JzWE+ECn5ESRv/aC3FyfXxIE+xzrYsDQxph58D6CJrZC2Hz[m
[32m +        +yJSgDBs9UREe05HuPtUXPJejIveS3HRZ5nApn2pLfd2MrQ75ZlvgJIWUO4JVSulgiSBj/e8NvBIyHQX[m
[32m +        8DThZBOvFlOTxgKWqrpUl+DIPLzXZwRPXWLLkJDJsgij9FCry38NpIqqVZRASSsnAVMtnGfWTDQWUS7L[m
[32m +        JYzyub+01V/qVI+2kQKlUdvoZIj57IBJmNR7hgRPAigtoYRSVcYrqNrT0dJqX7Ibs20Wru5dKjDMMukt[m
[32m +        dwb81ks/6CDp8EbcCj2EVJ4dGi4gGnEK18IENKMDcVVg1Gr1tFo3DUgKdFrBUi2hVLV8Mo3uGVXNAVAH[m
[32m +        2LRCp1UzrwvoPQqAGtDkclu7Wq2syRcftGw6AuhDIVSe5aWO0GlVOiDS6/sASsC0Wz9vC3CqEkjv3Lps[m
[32m +        h09HABXl0lsqraEZNxOQkZqKTGThdmYyejVrbJZqIkXA5OY1XN2wHjMH9sL0wU7o8tWX6FqyDHyXzJd/[m
[32m +        xlPk//RZuL7/AHq+/g/0K1DEvn9RYHGgAFBu4KmaGzipmiW4koYAOiRfQbOncXwBno1pw+wviyJ8/nsI[m
[32m +        Wf6OfI9vYf+Kl3DC8wNE7agiUDlS2tsfafE1cDP6Ldw6m894pL0aaEN6lA2JEU8hM6oUUg43gfeQb7G+[m
[32m +        8484O3s47q53A3z3AHsOiu4U3Qrs2wbs9wV4JMnOvUheOBXHXLpifsUvsLHDD4hYVBfBbp/jtPtLODPr[m
[32m +        74hc+QFCVhXHyeUlEbhB6j89GPfi5iHlfHvciquAtPB/AJGET9GAJ5Fy4FNM+dqGwdJHOg0aaiygci39[m
[32m +        NgD6O2P0MDV587HMAuj+RDEs79JZxkVA8+4dnPcPxIpfxuPebe6lSzPxXqPHo0vZr9GnWjW0+/E7RB3Y[m
[32m +        L682FVlpPLPvDu4KgELmZ46TtsfycLFOiK3CseMznSQ/lsfyWB7LY/nfE5t3SwEkiz4qgHLP5+52PGal[m
[32m +        JtxrfYNlAp8rq5XGkgrFsbJqSRzoWBcBXGbbR9RJYJLw6dIUYaLBfeX+ETXAqTFCaZFsUxlb6n2FzfW+[m
[32m +        xKa6X2JdrdLG8knr5sqKH2NN1U8lfF/0AwHQjwQ8iwuEfoYNdUphY91S8Gn7A071rYfAAY1x2qkO/Jzq[m
[32m +        InxAU0QNbI7Yke1woncdrKtXBuvql4Vv+8oIGtoefoPb4Vj/VthJ66WAI48o2dS+GrZ2EtATGN1hltc2[m
[32m +        FLBsbKCTVlArgBI2jfXTwCfT3QfQbd1qCRA2QcRUlwfg0wDodFfEC3jGzxiA8ElO8B/d2QDnbueGODSg[m
[32m +        hVlya45OIXBKOQRQH7k3MNq7ltRXG77Ocp+tdETEfaG0dtIx0YkRbQQ2uwpcOkn9vRAysZsB0NBJXQ10[m
[32m +        GvAU6CSERv3aG9EznBAzywUnRrXC/kGNsHeAQKxrHYRO64bo2U44NK4Ntg9piJDFg3Bl6ywk7FmOy77L[m
[32m +        EL15Ps77LDFLbgmghE3CnVl6KwCq+zAN4BEYs8HQWDtFDVwSHLPhkZBoLJGSTwGVIeHSqo4AyvSETFpQ[m
[32m +        1QutsXRyuSzTyHWk1EflMwVWY/kUzWkj931mhwRQQieX3FIDBDbN3tDsJbh0RMR9oOd3LcWlvcsR5z3f[m
[32m +        gKTdyknHRVxSa4dMWjPVARGf/cYCKqHmYxlMxzyh22bDX+KifAWad85H0IbJCNsyTZ5LGwVWI3evxJXT[m
[32m +        25EUfhA3w4/gOr3kRpwUALVbPNXa+YBX3LNBSD5rh1LrMlveEzoJrLSKqgOjhwGoI3DS4qmafjXyLwHQ[m
[32m +        FGmfdcnt/8sAeu/GVdxKFOVe0HupCNjpi/n9B2FqHxc416qJEY0awnPKBJw/eQS4cQ1IT5M6biA5Q3Jw[m
[32m +        iWZGBgIWL0aXF19A/yefNDBFaMwNPFVzAydVBbFB+fOJFjAW1VFP2jDgeRuCx5ZD8Kp3EbrqLUSs+Tti[m
[32m +        N76M06sK4dqRd5ESInAZ8y1wqR1wZZQA6Rjci26H1MjiSIzKJ3+Hb2JxuwLo8Q8bejxnQ3cB2t60ehaT[m
[32m +        sp98AgMKFsIg1kMtInAoOqhwQQygRbGQzUD1IAG7IUUF7l61YVH1p+H/S1kELKmA4OXVccOnOxA0AXfP[m
[32m +        jMZFufZzq4cTqz6Sv5HncTtEwJOOiKKK4a7/S3L9Nk5PeBr9n5I+S/1DZMzY5/tHpvAImt+OzaPoqCfy[m
[32m +        YbgAu0uBwphSrSoyLsThNv/jj/yXb2KVc3/MrNcCi+u2xrhyteA1fgqQKICafEPa7oflo8YAt+j85y7S[m
[32m +        swhSBNAH4fMxOD2aWC0wuUEnrx9bXx7LY3ksj+V/T3J1QvRIFtB2DbC5cWWsqFIWyyqXlrCUhJ9hW/Py[m
[32m +        OOHUBAF0IET4dGkh8NnMWD7D+jRFZJ9mApaE0EfToD5NcLhjNXg3+Q6b6pQxHm8JnW6VPjFLbdUhkbsA[m
[32m +        KMHTwGf14lhfu4QBz50tf8DJnrVxyrU+zrg2QED/Rgjs1xABfeojvH8TBPaui50tvsW6OiWwp115nHJp[m
[32m +        iMM962Fnh2rwaCDA26aSAc8tHWtgW+eadujsUU+Ar142gGZbP3s0MI6HHgBQy9LbnU6NHgBQL4HGfa4y[m
[32m +        HlP7IHZm/wcBVDRyigvOjOpkgJPLbA+6NsdeF+4tpSVWJitdawp41jHgyTgfgU/fXvWMpVOhk8BJq+d+[m
[32m +        ge4jQ5rj5Mg2CBjHZbY9BS5752i4QCitoFx6S+g04Dm9t4FQhtECn1EL+uPw6DbY1V++j351pcyGOD5c[m
[32m +        3uvEzjg1VvrWvxp8BtfD4SndEOY2HrFb5iLWawnOei/OsXoSQAmihEtd2qrLYgl6vCfsURVOFUAJhMZK[m
[32m +        mQ2FCqt2QBQ4I5BmqyOAKqya9NmhKZvpBDb1OfPqNUNVLY/Lbul0iBBKqyctnLR4EjrV2sl43QdKh0Vx[m
[32m +        3gsRvplLdwWgCYUC6ARIXnOPJy2jdhi1WzmtkKowquBpfcb405tm4ITk8d86EwGbpB0bJyB00zgZ37EI[m
[32m +        3jQJfvL8zOY5iD7kgaSoI0iMI4AeM95xCZoGHAXgCKC0ZmqcsYxmQ2gOeNJTbrbjIqYxYJoNp6qOAGoF[m
[32m +        TiqBUzXjLwPQ3K2eVv1/BUDv3LyI5LQruHTnGu4aq1gytg+fhBu+h4HriQInSQInGQKet5Elk2XazhJw[m
[32m +        j75wBVmB2wKkSLiG4xN+Ru+nimFkwSfM/kNH6LRqbuCkql5wB9LqKUpnOtyXubLq84hbXBVn3N9G2Kr3[m
[32m +        ELPsXzjv9nfcPvYqbkfnl3dmw73YYsiILoj0uKJIi3sfGbEtcfHoOIRuXSP/NrXBoh9KY+Z7H2Pc089j[m
[32m +        fCFaVwtKW5+XOovYwdeA3zNy/4KERc2SWFoohxT6O4YUeAmjir2KUS++iZklv4Jb3YY4M+ZnxPnyh5nh[m
[32m +        uLirC4LXfo0gN2nfypcRveoFxM97GfFLXkPc+peRFvgWMmOK4Z5Zhiu6/59Y8K0A8BO0hOY3y47pTZjj[m
[32m +        M9z2RM54/FHlUmUeYbPwqy+BwDNIu3ML15CFrDvcvpuJtNs3kHkuFglnI3Au6zKuyhtNj4tB5ILVWNC+[m
[32m +        ExKOnQaSMpCecU/SQt65vOTHAPqnhdBJBzA8yoLLcbn3jXsQuceN14/H8rE8lsfyWP73xLaldW1sby/g[m
[32m +        1L4BdrSrD18BS186FRL1bl1H7gXGTLzAjejuDgJRbepgU4MKWFv1S6yuVEa0NNyrfIGD7erCr3cr+DsJ[m
[32m +        ePZ9RCWkShjcr7UAZ2sE9Wsm9wKfrs1wikDV/AdsrkdHQ6XM0tqVFT/EKlGGa6oWl2dlBTLLwbPG51hf[m
[32m +        q6TA52cm/d62FXGkc3WcljL8nASWXGrjmFMt+A0QAB3UBCdcBNza/gCP+p9jS/MvcbR3TRx1qom9XSph[m
[32m +        U9Mv4NmgBNzrfIpVNT+FW+0y2NTyJ/h0qymQKRDqXBfbJP/mXjXhJQC7XXRHLwl7CQj2lvFyljF0ovWz[m
[32m +        rrnnNeOoPr3rC3wK0HapggMDmyB8Sk9ETxfAm+6MmJl9jDWSFsqDA5uavZq0XNKqyT2d3N+5tWsVKbe6[m
[32m +        1Md9ntVM6N27Bnyk7T4S0ovtXoFtKvdrHhnaDH4/tzN7O4MndUXo1B4IMmF3REzvZTT8V0Jnd2lHd8TN[m
[32m +        7IW4Wb1wdraTgHFPo1HTuyF2bg+cHtccu1yrGfXpU1nGoSJ8+1bBbpeK2CPh3kG1sGdYfRwa1xIBc3vj[m
[32m +        wrqfZSI4BWEb5yCcexQlpIasny3QNlOgTkBOANBYPwXczNJYgT9CJi2VQWsnCfxxWa48Ew3fSOuogBud[m
[32m +        +mRrsOcUeUadaq5Ds8NgTy7VpVMiAidBknGiEkfwoydadQ70oNotnFTCpVUDN0g+i4ZsEuDkdbalklZM[m
[32m +        QiLhkDBJUKSzoVC5Dpb4oOw8IXIfsW0WwrbMQIDkYxlBG6WN2c8YBst9yGYZAwlVGccymIflMV2Q1ME4[m
[32m +        Uz7zSFyo5AvbLGO5ScZnk5QtgBq+aykunNqChPD9uBF5GNcEOBMIfgKLSReCcCPmFK5HH0fS2TPmHFHj[m
[32m +        LTfGz0CpWj4Zmv2dFutm2hX7mZ5mn2c2fFotoARNR/g0AJoNpUxj38t5HzB/C5kP12SLpkjd91XadSXa[m
[32m +        AKg6IVJLqYFSC3AmXyF0xjygycwr6hifes3ugEhVHQwRPgmhVgC9nQ2kBFFCKmE0L81MuYD01IuiV2Ri[m
[32m +        fAO372QKrNyRUCbGPIlBKDPlzl1kpibjXliMQGkKkm5nwvhlzJQ06YBwDdLTbmHb7MlwLlYE8wSAxhR+[m
[32m +        AkMLFMDg/PmMEuTGik4SJew5QqmqOX6FIGagsAhGFrJh1Bs2BE/4J2JWvo6QFc8gdM3T8jdZFCmBryMp[m
[32m +        /GmkXaCn23zIiBOwiy2C5D1vY9+AlzDpUwG8wjb88sLrmPZZaSyvXgNHnOXfvUkT5d+amYicId/plF9w[m
[32m +        YsxI7BvYH95OveXf057Y0bsXdvXtg2MjhiFg0ngEzJ6A0DmTEDFjIvxHDYFX6xYCsz9g9L/+hfFPFsKw[m
[32m +        J22Y9p4NPm3+gZBJnyF25efSzrcRtOJ1hK15EyFrXka45zNIOvqKjOFLuBv+pEBofkTOfwr9itHqmw/j[m
[32m +        pe9jROn5t7/0ObexUSVo0uHTJFFeM/0g6SevxwtQTy/9ExLDg5F0h86j7iEj6x5SBSSTIC8qMxEIDccZ[m
[32m +        tzXISrmOFIm7J0CUEBSd45nT6oTlPw2cBDQ6BaEjHToUoUMcOhuh0oEKHZ2wPWwD06ozFrZP28g4Ap2m[m
[32m +        YR9UGMd06hVWlaJlUJiPSrGms5bHe6bPbXw0P+PZHiqdsdB5UuvWrXO8ddKDL8+qpPMWlqvt1jqsbVfR[m
[32m +        clVVmM8q+ox1O7bJUZlGnzGk6DhbneNQtCyGGse0bKu1HlXG8RnT6jXD3xOm0aMy6AiJ3liXLl1qPMzS[m
[32m +        66yrq6vx0EvHVHT4Q4dHWr+2V+vR+qnWb8P67hhqe1X0hwG2gaJlU5hOlfGaRvMzHfM6Ch3daEjHO8xL[m
[32m +        T8UeHh7Gk+uQIUOMt1oqPc7yb4GOd+g4inWwTOahWO+prJtx1rapUqx9za19fMZyGK/PqdZyqBrHNEyv[m
[32m +        5TLe2jbGUfQ5RdNTKYxnnH5vjNdvjmUwnqJt0vTadwrj9fqxPJY/IjYemeLdSgBH1Ftg1Ecg0lvUp309[m
[32m +        A5o7BTp3CaBqyHRr65aDW9UvBEDLYGWFz7Gpznc41YPWyjZGg/tKaIFMgmWeasCzFQJcWiDQpSVCXFsI[m
[32m +        MDbAoY7VsKXBlwYwPQQuV1X6CMvKvWfCNQKia6t9KsBZCid71DGQSfBcJwDKtPvaVUJg3yYI6NM4Jzzc[m
[32m +        qwaChkgbRfd1rYwNjctgW8tvcETA039gY+zqWB5bW3yNdQ0FYut9htW1i8Ot5sdwr10CnvW+xPpG32JD[m
[32m +        sx/g3bUGvHvKWPWuA69etQ145mjPRwdQ7s+khTLqV4JeHwOix4e3wn4eo+LKvZqS3oVlWvZ1Zu/nzAFO[m
[32m +        0Z3OtSVdbUlv92J7cFBjY508OrQ5/Md1MM6EaMXkvs5QUcJmyJRuJuSy2qgZTgKhvRHxaw9J1x2xs3vh[m
[32m +        3HwXXFjYD+fmuQgUM11PxM/vhTPjW+Dg0LrYP7g29g+pg0PD6hndLTC6f0B17B4g7eov4zOwNrYNqI19[m
[32m +        Y1vBb/EQhK2dgGC3XxAhYBm+YZZA4Cz4ewiAetgtmWqdpJWR1ka1PAa4TzQAqgDJkBAaRiugQKRCJ2GT[m
[32m +        oQKpNW2EqBVAea2WxJwlrg+oHT6purw2Rwmb2aogSIg0IEngJQxKHPdoah28J4CGbranI6wGridAEhyl[m
[32m +        j+sEgtkWpie0CjxaAdSA5gNKyJQx2DIzGzyZl2XZIdQOsYRQGZ+Nk3Buz0JE71oE/y1zcEo0dO9qXPT3[m
[32m +        xo3oY0iIPSnhCVwTvR4rABp3GtcERAmetIjybFBaQ82RLdnLbQmbdq+1IQYu6c2WR6lQFR4fA+hDAFSu[m
[32m +        89K0pHNIvXUOKbcuIlmA9HYW7ZryP33+Sy3zBYYZ8t+lKD90KP4RPDt0Qvrp47iXfl1iJZ3MPe6Kcpkn[m
[32m +        Uq8jbOFsDHj2OWOJ435Qgie9stKayOW0uQGVVbkHkjrCVljSF4GrXHvUfQWRCz+F/5K/I2D56zjv/RKy[m
[32m +        gp9GVrgA54UCuB2eH/cin0OS53tY29KGAf+wwYVLawsKlOUvhJ9txTAgfxEMKfYcBhR9Bt3zFUSvIkXR[m
[32m +        54UXMPj11zDiH//EuH+/j0kffYLx732AiR9+bK7HvPMuBr36Kvq8/DycX3gavYo9id5PFBaofQKDixZD[m
[32m +        H1t+jMonoFyoEFylrj5S59C3bVhRt4gA85c4t7wUope+h7BFryPa/W8IX5sPiUcKA5FFkBkqbT/zvkBx[m
[32m +        AfSXPtJqbCzHtkIYLO3LbWxUebQKQZ1nfY6SvBPMGBeAU9HCmPhTVSAmFukZieDOXr6gO0lp5l3i2lXs[m
[32m +        GDkKvd79FAO+KQ+kJCEB6UilAyqZS3PiZ52gW/U/JZx4EjZmzpxpzgTksQuETnrTpNdKHgfx97//3Vxz[m
[32m +        Aq+TeW0TJ6XMzzZbIVOF18zDZzqhdbRAMk4ntI75dTw4AWY8rZksT9NZlflZLiGD1/S0yWNg2EbG86xJ[m
[32m +        emplHMtjOUzHkHXoESAqLJP1My/PKmTIdCp8TtH2855pWDbLYj959AnbQ++uFKbhc4rmobJ8zcfxpGg6[m
[32m +        lknhM16zP2wzn/OayrpYHuN5zTKZXsvXMnITPqewHB73UaNGDXPkxqpVq8yPEzymgx5iIyIijFdYejT9[m
[32m +        5ptvzLEo7B/LZhn6Xgj+1jayXbRAcywZx5Bt02vmZxpeMy/LYD7e833wGe8Zr8p4Ptd0VAqfWYV5KWwP[m
[32m +        30G/fv3MESA9evQwfSNkE0bZP3r+9fT0RIsWLczRJt27dzflan3aBoYcY/aB5WubrErRUPvBNmh7rOL4[m
[32m +        zbFc1mHtM9Pwb0jHWMdX82gahjoeqtbyKWwD46isQ/82tRzeM55xfB/6d8SQ9VIpTPtYHssfFdvqcqWw[m
[32m +        pfaP2NGkCryaVsH2VgI7bWtiR3uB0Ta1sEtgdI/A6G4Jt8lzt2pfYXmlMnCrXAYrfvoUPk0rwt+5Jfx4[m
[32m +        XIqLgKRch/RrK+DZIkdD+rUSsMxdg+WZPV1LgdBmONFDoKvJd9hYpzS21P/CWD2Xlvu31Md9nsWNYyFC[m
[32m +        Jp0MEU5PC9CdlDwbJP2GemXgLiC6r31lBPRrgjPODeHXpxECXZsibHhLA6Fbmn0J97qfYn+3KjjZR/rW[m
[32m +        qQI2N/0CHvVLCHyWglutT0Q/NgDKuI0Ny2KTgPB6actalt+gLLa0pTW0OrxFfQRCVb17SihgutOZ0Ckg[m
[32m +        /xAA3dy5ijn+JHRyDwHFTgKQ9QU+GxuLJ49HIXRu7VrVLKdVp0I+vWtJWVIHwVOgc3efOtjTr56xehJA[m
[32m +        Dw5shBMjZPwndTXLaAmfXEZL+Iyc1gvhEhcpwGkPCZ12CyivI6cLZM51FvDsK8+7wn98G4HR3oib0xvn[m
[32m +        FrggYkZnA54+fSsbq6e3SyXsEeA8MaYJTo3iMt8aJt6nX1X4DKgJLwHRza7VsaFvdewd1wZRq0YiiiDq[m
[32m +        PglBntMRtH6OwJlAVDZw6pJYYwnlclhCoLFy3reAGngUpVWTMKlxvKfynmHkZh7hMttYSxU6rQCaN3w+[m
[32m +        CKCO6gigBL+o7XNwfs9ShGfv31QLKK+1npgdcxHnu8CkvQ+JdigNFSg19wKbvKb10gqgDyito9nxDAME[m
[32m +        ZNWiSqg18SYvAVTau34Corxn4/IRN8TsXY5Q38U4s20+TvLoloPuSI7cj9Q4AdGY40g8ewYJ5wJxTWCT[m
[32m +        4EnoVKX1U73l3oz1E0g9LcB6RvIE4ma8vznHU73Z8pgUQuFjAM0dQJkmT02W/ClUmcilXBMIlYmaQOid[m
[32m +        O1nIvCMTCPkv6c41ICkeY6v8iNYCPK5vvw6EnsStuzR/yoSGGwy5FFfSIzMVZzZuwMjXXkdvA5yFBax4[m
[32m +        1IgdLGmt47La3MCKyr2Q9uWw+e17QF+zIWTK9whc+Sb81hXB5X0v4l7oi0BEQSD2KYG413F20cuYVdmG[m
[32m +        wU/Y0Ffy/vzEkwJkRTDW9hR+sRUVLYQphZ6SdhTAUHluPwIlHwZLHYOljmEFCmNY/sJyXxDDCz6JsUWf[m
[32m +        xdB8hdBP0rG8EQUKmjyE6jEFC2FM/oIYLWX9UuhJgWTuey0oeWnplf4JiNLqOvQFG+b9YMOpwe/j+pIf[m
[32m +        ELfofcStehnha2y4vq8Q7kW/gLSQYrjs+TL6Pi/pbS9Iv7n8l8uAi+Q6NqoT2S7pazcCr8DqBNsT0tZi[m
[32m +        mN2sIe6lJpp3Jm9PZnoZyIqLB64nGMdC+6f9inaFn0bb/M9hi9Ng4FYKbgmZclk153KcGOpk3lH/U8KJ[m
[32m +        JieUPMaBk26eAcoJqE5eaQXi2ZQ8R5ETds3DtnICzEk9z34cM2aMeaYTZBVe87xMnsXIMxh5AD6tkYSc[m
[32m +        UqVKmbKbNWuWc9i+TrpVWI9O2ml5++c//5lznIiOjaoKD/FnP2hRVtFJN0Om5TmUY8eONeedVq9eHTxy[m
[32m +        QsFN02jI8zC///77nAPzVTSNCu95bAX7995778HJycnU0bNnT3Pm5SuvvII2bdqY8yaZVvsQExODqVOn[m
[32m +        4m9/+5s5c5FnJeq5kZqOUELrNMtmm/mDAMeV9fNIEVryOLZUnl/J+j766CNzPiStlXkBKMvnuLB8HrfD[m
[32m +        cyEJntp3ivaR6fhNUAgjfHd83yyb+XkcyrvvvmvORW3QoEHO2ZUEPPaL7595PvvsM7zxxhumrTwrknFv[m
[32m +        v/023nrrLXN25rRp04zF9ZlnnjH5+G5Yj7ZJ4Yh1PPvss2ac+YOJgpGjMJ7HsfAMVoI1v1mWxTIoLI+i[m
[32m +        /WWbed4t35uOj8br99mpUydzjiav9ZtX1fFiyPQ8m5Q/7PCdalmOoj8gjB8/3vxtsC6WpW3jsUi0PvPd[m
[32m +        v/DCC+Y7atq0qfnOX331VXPP80qZjyA9ceJEM748D5ZnrPKoFYq2jfXxKBX+DfJ9caUA3yHbx2dcJcA2[m
[32m +        cwwGDRpkzvXk98njWPLqw2N5LI8itrkfvo6Fn7+NVd8Vx9oqZbGqSmmsqiFh7S+xtta32FivHDbU/RHr[m
[32m +        6/yA1VW/xKrK8kx0fe1vcbRLPWPB9OvdFIF9aL20Wz5DXFtnQ2U2gLrymRU8798H92th9Exvga82VbC5[m
[32m +        /pfY2uAr47mWXm253JYQ6k74FF1Xs6SBz3WihE5/F3q0rYeNdctgQ/2y8KxdCoe71jBebQ2ECoCeEBCk[m
[32m +        ddOzQUns7PATTvathyNcrirXngKZutyWFs+19T7Hhkalc+I3NiiDLQ2+EAgtK+VLHQ0FROsL7Db9Ct4d[m
[32m +        KsK3e03sEvDcSfgU9RUA9XUW+HSqkyuAGstoT8ZLHoFLeqRV50Bm/2b2Hk7CJq2k27pVtVs96dGWDobk[m
[32m +        uR0+eZxKPYHWBjg0qDFOj25jgNM4DJrpjCiBS+NUSOLiZvcxSuCMmukksNnbHgp4Moyb2xcxs50QOKkD[m
[32m +        Dg5tCJ8+1U0YNUtAdVYPRM/uaZbf7htUC4eH18+xfB4Z0QBHRzbEIQHTQ0Pq4oA83+VaFbsGVsfOgTXg[m
[32m +        PaA6DgwXIB9UA9sESk/M6ImINeMQyuWsXH7rIRDFY1W4BNdiCTVLcEUJi4TQwLV2KygtmgqTCqaETAVN[m
[32m +        LtllHNNFbaGX3VkP5DGaDZpcgsvlsY4AGqyw6SmAKe3hvk5Vu/XSDp92q+U0+HtOMtZIAijzq9XTCqGE[m
[32m +        SqYnJOpSWgOSxpI5w4CjWTYrZfCeEMn0OZCarXzGpbvhW2cZyHQEUObntX0prozDVhlP0UifuYjauRAh[m
[32m +        O+YhYNsc0dmI2bUI5w+54ZrfNiRFHkBC9DFjBSVcJtLyKcCpy24ZclkuYfRmnD9uxAmMSkglhBIgCZ6M[m
[32m +        TxSI5b0dQAUyFUCvPQigvDcQKs//xwB6+b7mBaBmz+cfBNCUq4RPO4CmXrPqgwCqZ4BmCXwSRO3QaVeC[m
[32m +        pYaZ2QCqz6zpTBrLsSwZyVeQeusK0lKu487tVJkRySSJE5w7ApfpNxG30QN93/sXOj5fFJ7d2gnA3MTu[m
[32m +        pUsxp3tvZJ0OFMiRiVDmbSRJnswDuzD6my/RWSBtcAECYX4Dlr9nBeUe0LGiBMX+AlibW72BsCX/RtjW[m
[32m +        J3DpeH4gXKAz6GVk7XkLp0YUwcTiNvQR4BtcyH6O5hjb01JHUamLwMkwP3g8DMukhZFtYB16zWWr9r2e[m
[32m +        9murqtWWeZmHyrKYl8+Yn8tn7Xl5/qb93NLhcj1Crl0Ftl2K2DBV2nioxweIm14a55d+iKglf0Pc9qeR[m
[32m +        HlUICC4Gj6Y2DCjAPaeEZtYjUGwdF4mj0jswQ7aBMO9aIB9cCxZF32dehc/gEcaRUJYApdmXe/U6dv8y[m
[32m +        GW3+9T6Sdu1GVnAg+n33Ffq98zaWNGoGnL8mM+O7SLp7j6uoZVJnhzedGDO0Tmr/U8LJOSe5nFjy0Pty[m
[32m +        5crlQLBOgrt06WLglBNbto3KPGzjsGHDzMSUsMDzCBmnYEXR9nNS++OPPxrAoLVJ+8pD+jmhZn4e4q8T[m
[32m +        fM1LYTt4/iTT8ED8evXqGUi2jhFFJ+sEUIIULbqEOd3/qelVCFGse8GCBTlWO+0X07Fewg8hiSBEyNNy[m
[32m +        KEyj6Wkd/Pbbb1GnTh1zBqKm0/6w/wQfHsxPMOCYqqWWaWlJfP311w0wMB3zaPl8zrawPBcXF7z88ssG[m
[32m +        PimM4zPCMS2S/DFAx4Zl0+rLtLzOTVgHnxFGbPJdd+zY0dTH96PPNdQyGFIJmOyDto9aokQJ5MuXD25u[m
[32m +        buae6XiOJuGIgKP9+uWXX0x9Cnmalj9yEBZZJpeB8/18/vnnuHz58gP184zOTz75xFhkNS9VvwGrsG5a[m
[32m +        8j/88EMDgXwXWqdV9H2x7xwz/lDAe1XGM+QSXbaL3wSXJ7Ne5qWyXIZaHvM0btzY/G1169Yt54cApqOw[m
[32m +        PG0Lz9fkt8EfL/g98D1SWA7r4Bjwu+aPMGqRZzzP5mQ8YZTfDuP5zRPOCacsi/VwTCm81r9xguubb75p[m
[32m +        ytP+jRgxwnxjfG+MYx1MyzHnu+H4UbQPj+Wx/BGxzX3/Zcyhfvwq5pd8C6t++gRrqpaEW5USApnfGNBc[m
[32m +        XYUWz9ImXFWpFLaZsz0bws+psYBnc6MKm3ZtLlB5X7ms1qoRg1ojbEBLSdcMAS6NcaRzDfg0+8HAJwGT[m
[32m +        y2vdKn1sltvS8knw9Kj+GTxr2MGT4Y6m3+FQx6oIHdDCWEC5XJdwyCWzR3vVQfDgljjhXB/bW/yATY2/[m
[32m +        wr4ulXCwR1Wz15MQurnZF8biScgkdLrX/cyE6wRSTTwtonK9sVEZbG4kANqwrIFRWkTXNyorzwRS5X5z[m
[32m +        yx/g06kydvesCd8ePHtT1ElgkWoAtD52uTTEbh6f0rcx9vVriv2uzYy1c1//RgY8jdVTIJRLbnMgVNQO[m
[32m +        oXb4JHjSMkpYJXjq/s4zP7dD8MQuxltt7CwX0OJJL7ZcdsuQQEr4jBeNme1iHApReU3lUtxTP7fFnoH1[m
[32m +        4dOvBvYOqY/AqZ0QNK0zYuY5I2xGN8TOF6Cd1RWnxjbDIQHQvQNlDPtVNRZQAujR4Q2wu1810arY7VoF[m
[32m +        R0bWxeGRAuL9K0naypKukkBodfgOrQ+voY1wap4rYtZNRrixWApcCWzS+ml1JETVfZ66tJZWzUgBMUKm[m
[32m +        Ki2ehMyQbMAkjNICyqW3jkt1jfWTMCpwSFUA1eWyhNKwTXQQNMtAqKMqgBIQCYQEPVpDDUyyLlGWx3IN[m
[32m +        eEq5xrGQqIHK7PR2a6ZAbXacfWkty5wu0EiIJFQKOHrNtls0H1EJxiwjesdcyTtL6hEI9ZLx8J6N8B2z[m
[32m +        EeolkLxFxnqzjJmX1LVd4n0WIP6QOy777UBi5EEkRh8x8EmlJZTwSfDUZbmp2bBJ+Ew4G2CsngYaJSQM[m
[32m +        muW3An7G+plt5VS1AmjWjWgTx9BA5J8F0AeA01HtAOroiIjXjPt9AL2vduhUpSOi+wBqh9B4pN+wOyRi[m
[32m +        aBwOZWsOYBonRXRKdMm+7zMpO7Rq8mVkGb0iEHoZyZIvNeWqEAnXZcoEhPMGWjm5NM/fH+dXLseS5k2x[m
[32m +        c/TPuL56Dbr87WW4vvkvnJowXWbV6bjBeUFGInAhFvPbtkHnZ15AHwGzsfntZ4US7h4ALIuOttFi+gQG[m
[32m +        FbRh8qc2+ffic8R7vIa0E6/jzunXcN3jbXi2EfB7XwD1KS5FLSywWsjkM4Bmsa4S0mhtpRovs1KvgUq5[m
[32m +        NmmplvS5qfHCm91mzct4LdsOoXa1g20+UTo3KmQsrMMKFoarpB8obR31lk3+bf87QkeXQdyyTxCzJR9w[m
[32m +        +jlcX/EJhr8qZXLvp5QxLt+DADqyoEw0Wac8ow6WsbEf3/IkRrz3ifw7tBZ3U24KesqLkgl5+gl/zCpX[m
[32m +        A32feglj3v0AdzZtxLga1RDtthgIPIL4XV6SLpGLppEh7yorQyaHyfallTqJddT/lOgEmPDIyW+FChVM[m
[32m +        HNvBkJDBCTHBhxNPnaRSuU/u448/NiHBiRYTQh0n0yyTE1cKrznhLVu2rIFCWlX5jMryaAFjflrydPJO[m
[32m +        YT5tS+3atc0eRC6hpMVmyZIlph4+47gxLZXStm1bNGrUyEAOrY6EMu5vZV3aL4ac4BMuFy5cmJOXIZ8x[m
[32m +        LWHlnXfeMUtOGzZsiOeff94s2WRfmIZKYbpPP/3UWPEILdYJuqr2l+NDyxXhhaCsz2jVJVhwHAgPWjaf[m
[32m +        s70KDwMHDjTtIGhQmI5pCIIEULVKMg/LZT6t2yraLirT8N0w/5YtW0yc1k/h/cOEaVkflVZBguX69etN[m
[32m +        vKPq2NPixnQdOnQwcVon28628p7XtGzyHRCuOLaEWFqZaZHmUnHru1B1lFmzZpkfPn744QdTLuvT8cxN[m
[32m +        tC3WshjH74XjTqvhokWLzDJkwhuXKDOtjjHTUnjP+Ndee828F377tIayDxRtB8sl2PH9E5QJjrR4Mq+W[m
[32m +        xTA+Pt78AENLMYGR5bMM/h1wWTHr4PfFOFo8aS2lpZnfp7Usin4XBFBNw+dU/mjDFQ/Nmzc3PxbxxxnH[m
[32m +        b8pa1mN5LH9EbPM+fAkLi/8dcz95GTM+eAEzP3oRi8u8BY/yn8CzWlmsEehcK6FbJYJhWexqWQ1nehMy[m
[32m +        acW0Wy/toKnX9vvQ/s1yNMRBg7kkdmALnHGqj33tKgp4CtzVEeirad/rqY6GVhM+BUapdDJEOKV1dE/r[m
[32m +        8jjdS0CpT2OpqymOd6+NbY2/wToBRY/6pXHUqR4O9ayN1XVKYEvz7+S+rnE85N3me6METO7zXFOnuFly[m
[32m +        u54WT4FNwuh6eUYLKOHTXDcW6GxcVuLKyH1peyjKMtY1KGVgdGOTr7Ct7Y/w7lpZoLE6fFzoqEiAy8Cn[m
[32m +        QKa08cCA5qItcKB/c+P9lt5pCZO0ghrQpHUz+/gUgiaVzwiiBjr7yli5NsL+AVR6oJXxF/DkctvQyd0M[m
[32m +        cBI21XNt/Jy+BkgJnmfn9jMaL3p+4QDEzuljHBEdHd4Cvn1qY0//+gKNzXFiXCv4TW6PEIFOaujM7jj2[m
[32m +        cwvsHyawO0Igs391A526BJcQaqyiApaHh9bFoSG1sLNvRSmvInb1+wl7B1QQrSjpysO7bwVs71cZOwbU[m
[32m +        xNb+NXF4YgeErBxtvOESPmnx5PJbq6qVM1zgjBCqy2wJk3odKkDIa4Z0QMTrCAE+fa7wai9nOqIEYqO9[m
[32m +        BNC2CqBlQyM90oYJuBJOeZRK+CY7gKpHW1VaJamETwVFAiXBT8uyKuHTeLyVtPeX1kq7cgVQu6XUWDHN[m
[32m +        c7v10wqYv6dMz3INyG4TCBfgDN3COmTstk1HjO9cnN+3GJf2LxUAlefecxHhMx8h2+cgTED0wlEPpIbt[m
[32m +        NKBJ8CSA0vKpIGqW4Qp4cskt93wmxAcYCDX32ftCaRFlHCH0PwWgLFs1VTR3+KT+3wCoHTrtS3Bp8VTg[m
[32m +        NBD6EAC9m628JoSas0FTLiIl6TzSE6/BuEK9w8nMPSTfuIkhbVpjW/9BSF/hjm0NW8CzahVM+cdrGCaT[m
[32m +        xx6Fi2HflFm4I2mz6D6V53jI5CF8zRqMLFESzvSQW4DLVu/DlaMOz7YgEi63tXsW19xK47b394if9x7m[m
[32m +        VRHgfNEGFzrdKVQUA21PCYTd9xg7VMDMaIFsFUB8JM2lHVbl87zUgC01uw33NZ/ZzzkqXzEpo4gBUS4R[m
[32m +        Nvs2X7ZhwQ8FcWrUv3Bx8UfA1h/h1epZ9H0yu0zmlVB1sJTHI1oIn1wK7CITO6fnnodH8xZAaLDA5A2Z[m
[32m +        IWYh63YGkHgDc+o3gmuBYgaCJ7z0Mn6WCbR3y3bY0L4d2pX6EO4zJuP2HUkv/zPOzJQJOYElw77vSieB[m
[32m +        jvqfEq1TAbRatWpm0s+lo7Tu6PJGtRrppJzAQ9jg8j5ec5JPyxeX6+nklsKQ+awAysk107BuWlkIifPm[m
[32m +        zcsBShVeU1k2rV2cdBMACCS07NDqyMmxio4TAZTLejnRp+WUfaLFipYoQgzrobJNtDo6Aqi2n8sQ2WYC[m
[32m +        AkGcViH2mf3lhJzCPqxdu9YApS5fZpu136oUrZNWO4Imx5t9YhkEUC4R5cTfEUC1TQzpKId9YRoK0zFe[m
[32m +        AZTP+N5oxaJzHQKG1mEVbRPbyb4wHyFt69atJq3WT9G0eQnTMg/VEUCtwnK07NwAVOthqP1iv2l557Jd[m
[32m +        gt/cuXMNbBH69B1ovryE3zAtkNYfV7QOqzBO1Sq813FiWVWqVDHfHb8l/hjAdtHKyPfLdFo+lRZoLoOm[m
[32m +        0ysu/+V75/JerYN5CH9cujx//nyzN5XvkT+Y6DunMKQll/1gWlpo+c4ZR6jlj0S0UDIPhQDKH2q4f1u/[m
[32m +        Jy2LwnuOhQKo7jumsE2rV682oMtvtGrVqsYhGfvP/mkdj+Wx/Bmx/freM5jx/rOYLuH0fz+DuR++iNnv[m
[32m +        P4eFAqTLvxcIrFRC4LMENtT6Ckc61RXwbI0Al5YCfgTQ5sZrbWj/FgKWzR/Q0AESn60h/Zv+Ro90qYbt[m
[32m +        jb/GhjolsaleaYHMT7Dsp3eNtZNOhuxWT0InrZ4ljYXTt8WPON6tttTZ1HjJDezTBP7OjXCyZ11sb/Yd[m
[32m +        1jf+0kDoUed62N+9JlbV+hw7O1bC7s5VDXhyXyctnbRucsktdUPj0mYPKEGTwEndmH3NZ+ubCGw2LQPP[m
[32m +        JqXh0VigU8J1Eu+ZDaCbWWcDab/cr232BTZ3/kmgriZ8+9XG3r5NDGza4dMOnrSGclku94oSOs3S2mzn[m
[32m +        Qr5O3Mtp93xL4CR4EkTpmIgecw8PbmaOUzk+oiUCf+lklthyfyeX2xorZzZ0Us/P74+zcs84hnESxyW3[m
[32m +        fuM7mrM8d/Wti8PDmsl9B2MR9Z/UEX5TOiBoeheEzuqBkJkCoLO64/Skdjg4snGO91tCJy2gVhDd068G[m
[32m +        9sn9gUE1sMe1Eg4OFjDtX160nLGA7u4vsCrxu/pXFhAVIB1YDb6iW4Y2hve0vsYTri7FtSqtmrRiEhwJ[m
[32m +        lFxSa9/fmb20VqDSQKgBT/teUIVQKtPQImriBS7DWYYAaMz2uYjaNjsbPKfnHI3Cay61JXyGEIi59JbL[m
[32m +        cFUJigS87KWwBEVaRM1SWAt0slxe0wJqrKByb93f6QighE4t06QzaQU+s+t7ZJX09qW7UudW6ds2liX3[m
[32m +        m7k8l3tRZyLGeyYivaRsqct4xxX4DN8+y6SNlDB+5zzEn9mHq2HHDXhyOS7B0yzLpXfcWPsyWwOJF0MN[m
[32m +        bBoVGCV8EkYJiXRO9B8D0CsCn9maKpo7fFL/bwCUS2sVJgmhdwUm7yZfEbC07wV9FAC9bY5ose8JTU85[m
[32m +        j7Tk88hIlcnD7RTcoavb22lIPHMKvf7xbzjlfwpOtgIYVLQgnGUiR6gcWbQIRnzzvdBBkoAQEHwsRPLI[m
[32m +        v/jJchMXie3duqB3kSLGK64VsKw6Mn9huEpZM0racGXhNzg+6hWMLWNDd4G34U/b4ZQgRkuhQh/rtmtB[m
[32m +        iaPjI3u8WiVHC9CZ51K+pmUaKzTqvaMOl7xD8kmdosOkbtZvX05sV8Ii46jDBICG8qxQgUXqSIFg1jVM[m
[32m +        0gxl2vwFzREpBMqBAqK9BJbHf1AQh/q9iGvzP8X4f0m+gs9LuqcfGBP2d1TB/AY+RxcqiDEffYq4zWtl[m
[32m +        bK/i7s3zuHniJDZMng6kZSDzbCicPnsPgyUd+05w7SPh8ALPoe8TL2Jtp87AxYu4nZFlDNxZ6TKJzrwl[m
[32m +        M0w74FGsE1jV/5To5F8BlJ5iOQHlJJOTTV6zPToZJkAxfujQoQZYunbtapy1cJ8kJ+O0unDPIfNYAcEK[m
[32m +        oLRecbnqF198AQIX93ayTIUDFebjEl1CIvc+cnLO+thGAh+toszDvJqeQgDlvk6d3DPkElMuFeZkm/DD[m
[32m +        CTfjuU/SCqAsj8I9sVzWSHhlvQQPgi8hm1ZIHQe2l3sz2W8uFSWA6gSdZaoyHcvmmBCKaXklRBOSWRaX[m
[32m +        V7J8jo8jgFJYJuP69u1rgEYdP1GZRgGUVlguZeYyYFqaK1WqlNNWR7Hm535KAiFDhWgVbYMK+2FVptXr[m
[32m +        hwEoRdPnBqBW0XZRdMz4rVBphdY6c+uXo3ApL98lf0Dg2LBcvvu8hM9ZvrX9jOMyddbPPZq0XvMHClos[m
[32m +        +XdD6zzHTUX7RJDk3wl/YCCw8h0TDFkW20CQ5bJt/mDAvhCwmZ57QXmvY8CQ+WkB5Tvm0nB+o+wbx0at[m
[32m +        lGwzy2V9rIc/7vBHG+t4UnTsWrZsacrjjxQU7Td/cKISRFkOwfe7774z3ynLsbbtsTyWPyK2+R//DQs+[m
[32m +        eQkz/vU0fn27GGb9+1nMEwidLzqv+EuY/uFz8K3/NUJcmoDncgb2F/Ab2BzBAlQGNAVCqeEDWiLCoqEG[m
[32m +        QiWdgCKtlHarZ0sBxobY1eoHAUqBvNqfi34Gt8rvG11T9SOsrv4xPCTOvWZxrKtXEhvql8KWxl9gT4cK[m
[32m +        OO1SD4GujUUbSf1NEDG0Jc4IbB7rXgNbBDy9mn+NTQ3L4Ej36jgsuq6egDPzN/kSGwUc3Wp9ZHRdwxJY[m
[32m +        34gWT+73FNBsRsgUqGxcUgCTkGnRpqLNSsGzaUkB0BIm9Gxi13VUgVWqh0DpWgFUz2Zl4dWxHPY718TB[m
[32m +        AQ3NUtm9rg2wW9rs06c+tgl4bnMSYBbY3N67tlEvgdCdBE/p04HBzQUMW2BXv3oCcwKhogwPDGqMU2Pa[m
[32m +        InhyVwHGXoieyf2cPRH+azfEzXU2cTGzeyNarmPmuSB+YV+zhDZuQR+ESJpDI5pgm0sNgb8G2N6nFk5P[m
[32m +        6IiQGT3hN7kzwmc744wA6PFxrQyAnp7Yzqj/1I4S3x7HxjbHybHy7ie1ydkDal2Gu3tQTezoWxk7B1SD[m
[32m +        jysdEQlo9qsEXwFOcy9K6Nw5sDp2yLNtLhXgLXG7BtfGDnrMHVgXfmZZ7iSEeUyD/xouk51tLKPBnnag[m
[32m +        5N7NUFoJN01D0HoB1rUCrNlLaGm51GW0uvfSgKCxaj5onWQ6puGRKXo+p1UDuYRWQvuezez7bA3aKGmk[m
[32m +        /pDNAnhbpHyBvFC5Dpb4oA1TECDtpwbLNeNUQyQPLZGhkod5VXlPUIzYRo+23M8pkCwgyLJZj1HJHyjP[m
[32m +        +FzrUQ3eNNnAZajAZdhWebZxosRNMvfh234VoJyNqB3ST1MmoVQAfMcsxPrOQ7j3HIQIiHJpbsyu+Th/[m
[32m +        YKnRCG+B4J0rELZ7NS77+SA1/hRuxfvhWtQp3BTI5B7RG3FnkCygmXE1DLevhyPraiiyroUi85pcX482[m
[32m +        UEnIJITaQTMKdxJic5wSmTSiBFDGM43VkdBvnQnlrQTQNCk3L02VNhBEedzMLSn3FvebXmLe8D8NoGnX[m
[32m +        BUCzzwFNy4ZPQqg6GkqXMEsA8nbKFWPJtGpGkkDlrYu/iVe9bb1PIYReEggVTb2CFAHblEQB2qxkA6DI[m
[32m +        TMf14GAMrV0PvYs+g6GFioJ7Imfke9pYJAd+8gVw7gqunb2GVu+UwuxvqwMnjssMNsEs+0w5Gilx3wgM[m
[32m +        FcBgmezSUdGQIkXNclXdYzlCwG3WW89h9Is29HvSZpz69CtQBAPyFRP4o8fX+4BIyKRzoZ+N11yCYDZs[m
[32m +        WtKoKmz+Uc0tvy67dUxj1Qfj7Z5quTx3LC2jokPyFRZQzSewaMOkV22Y9mYxDCmaT/oqYyJ97iPhaEkz[m
[32m +        UdLOsL0Mp2Kvw2vCL0i/wSWWAhkZV7B5sAs6yyRvaNWquHLjHHDyOFxeeg2jCj0jdRHWC2PQC29idJkf[m
[32m +        4b9SoJXnusoEMUPAMzNTIC9LJnJ3OYm+bwXKTf9TwrI5YaVVjpNrWjsonKBaRSewnORynx73hHIpJCfF[m
[32m +        tMLQ0kPHPgQxQh0nqpwUa/sJQWXKlDHgSKsn47hckHsOGUenLoQonQAzPetq0qSJAU0CFa1MLJfOhRhP[m
[32m +        GOQEmWm1HuYlgHKyrG2mcsLMiThBgaDGva60ojEdl1Oyv4Q8hgRAwjH37LE+Kr2AEugIsFwiSYuWQjnT[m
[32m +        c6LPPaqHDx8248l4HTeKNW7y5MkGiLjUUZ/TokVLGuPptEfHn+0mpDIdleDDJZ2EA5ap8RTCCSGY8czP[m
[32m +        eI4Nr7VuR2Ea9oNgRkAnTNEJEONYt+a15mc8YYuQY62LebgMm2DJI04Yx7TaPi2Debisme3l+3dMR3Fs[m
[32m +        LwGJIMTx0T2tWvfDhM+ZjpDHdpUvX958d/rNUNhuCutnv/jdMR8t7NZx4Nhy7y6/eX6D/O55Tes8fzgg[m
[32m +        FDI9y2Y5LH/UqFFmTPm+KPzm+P3QMknHW9wDS8so62Aa7ufk3yGd/rAdFG0nv3/mpbWTFk7Ga7nMz3tV[m
[32m +        /kDBHyo4xnRyxTFgu6xjxnS0CnPpLsdX3wPjmY7C/vAZv1mCMf9OraD9WB7LHxXbok9eBnW2gOfs957D[m
[32m +        HFEC6Jz3n8ei4i/Dq9KnONG6Is50roFgpwYIEZAMcm0iSkvmfYsn4ZL7OgmfhFHehxA+RXnNo1B4LieX[m
[32m +        0G6sK2Ao6lHjE6yu8gFWV6WjoQ/gXu0jrKoqYa3iWFv7U2xsWBo7Wn2LY71qwq9fAwT0b4Swwc0EPFsg[m
[32m +        fEgLBPRriCCJO9G7FrY3+1pAtSy2NvkC+ztWwK42PwqMlhYwFdCt+znW1PkY7nUFagU+NwmMbiBsyvUG[m
[32m +        gUY7gJYSiCRYCkRadJ0A57pmEt9U2ttEgLV5aaxvzniB0SYlTL4NzctgY8svsK3tt6LfYGubr024vXtF[m
[32m +        7HYRuHSpCa+e1bC1p4Cy9MVLQHq7c11znqiqrwDoAemT/4RuCJrUDfsFOAmdXB7LpbI8OoUOg6JnUXtm[m
[32m +        KyG0hz3kUSkCnNHznRG70AUxC5wROK0TDo9uKrBXEz5c9jq6JYIFOk/80h4B07ojcHoPnJ7UCSECs/5T[m
[32m +        OiF0ZlcET++Mk79wKa4A6JR2CPq1E8Ik/uTPTXFQwPPAkDrmKBYuvd09oLodRAcJ2IruEhDlMluvPpWw[m
[32m +        g4DJewFTQieBk7qjXxUTx/S+/e0OizY5VzIQun9SFwSvGI2o9QJKm2YhavNsRG+dYwdQAqJAIZeqBhLq[m
[32m +        smGSoEm1Aqg5e1Pu6RgolNbT7DT2dAKBko7wyWW3Vvg0eekoKHtfp6MGbhDg3Ujwk/o3C+Ru5TJZaRvv[m
[32m +        jUq5Ehcl4BfMdNnKPARALonVvAzNGZ3yjOWyHEJqtIAhLZEmjTxjuQqfjCP0qhI4gzZOkHImybNJApaz[m
[32m +        JK+0aYvkI5hKmYRZlksIpbJs1hEmIBq1cx4ifOYIdAqoynW0gGj0LonzXYjg7fMFRJci+tA6XA87gJSz[m
[32m +        fuas0FvnaeUMQPLFIKRdDkW6aKYAqAHR6xHGuZDCpcImLZXGCZGogdJsSCWY3r4ZY9I9AKC/cSaUt/4+[m
[32m +        gNotpHYADREADckp/z8CoAkCoEkyGSOACjRmpRAk76tZVksAdYj/Pb2ddg23068jnY6JkmTCkZEiM410[m
[32m +        mVXJhCkzBYnRp3Bo9Rxs+tkVs5vVwYQffkCPl/4J7DwtEHoegz8qJYD5BPq98Rp2zZ0iwCSTFc5XJG+o[m
[32m +        x2pML/sDBhd4Djzzk9Y9s8SU4CVKBz4DDbgRLgvhFylnvITGIpijtKQSOO1HvVitho6qoPi/qQRzKq/Z[m
[32m +        hiHS1sECO4PzFcBACQcVoMX0PqTqElsqnRFNtnG5cjG4vPgGPPr2RyKX28rYIUkmhGHRmFOpMvrL+IyW[m
[32m +        dBtr1AMuXsKJKRPh8uXnODDvF5zetAhXwg7JdyLfe6K8ywy7ZUknuZzccTLICR9FJ4+56X9KWD/bQSse[m
[32m +        J8oECArbZ62X7WZaTt4Jb9zHyHtOVHWyyskrHfUQ8Li0j/eEUKbj5JeARQgg7Gj5TLNmzRpjPdV9fQRR[m
[32m +        tonLQWklVIsXhXn4jFBIaxuBl8DGPJyMMx3P/eQz1s22MY75FMZYB8GT/SXUcOkj82p/6FiJyxzZV82r[m
[32m +        QngmfHPPJ/fk8Rnzch8slyzS0Q3BnHVboYDCPnOc6Q2WXm9ZH4XfA8vg0kwCFvfeKcBo/YRQ7pGltYqA[m
[32m +        yDiWz+dU9p95dQ8ox4jxLJcOgR4GDWwH09GSRis1oYXAxnEifOh3yvqoHCNCN51K8YcB1qPPCWn8QYHn[m
[32m +        hzLeKtY2c4k3f0CgRZvlabyK9l3jCF8Eb8IZ62R72a5HEZbNfnAfM78zWtT5w4Uum2UdTMMx4jXHb9my[m
[32m +        ZcbCqTDJb4JLfwmd1r8Nlssl6gRK7jXmuDAPnzMdfwzhd88ydBxXrFhhluISJD/++GPTDj7nM1rsWRa/[m
[32m +        P8bpmPEZgZ9LpbnvlPXwGZV90GtV9oPfCcGYHoUJ7SxDx5Rls9380UTflWqvXr3Mt896WRaFf7Pco8of[m
[32m +        ZZiX6R7LY/kzYgB0wccvGfic98EL5poQ6lb2nzhQ50v4taqAky1+wvGW5XCiXUX4d6+JUJcGCBUADRbw[m
[32m +        VA0VyKQGDxLwFA0bIJA4qJVxEkQvtTsl/5b6X5qltFsalMba6h8b6GSo6lGzODwEPGm53Nb8KxwVYDvT[m
[32m +        r75RP9cG8O/fEKFDBGiHNscZLlFt/xOCBjYx6bY2+9JYQDcLhK5vUBIbGpTCmloCuDWkXC67pbVTYJOW[m
[32m +        T+pGgUt7KDD6BwDUgKeBz88l/efY3Er6Y4DzW3i1+w5e7b8z11tafwU3AdTVTUtjY4fvsaNnVfg41YKP[m
[32m +        Sx0Bztrw5t5Pud7Ztx52Sf8OEqx/dULMrL4InNjFLJOl0vrJpbKEz6iZzmYZLeEzZnYvxM6lB1snxJqj[m
[32m +        UvrgPI9Qmd3TWDL3DBHI7VvdAOiBEY1xcGQTBAlwhszqjUOjWyHw1x4Im+1k4sLnOOPkhLY4NaGVpG8s[m
[32m +        oFjdnOfpxSW2rtWwV6BzV/b+Tyotn1b1HVDNwKa3ACXVR+4JmkYJnaIEUwOj2WB6YER9eEs674HVsF1A[m
[32m +        dpvUuVna6zVYgHtqZ8R7jEXEBoFFTwE0j8kIEaAMzNaAbOBUDeESWxMKtAlEBkh63uuyWoKmKuMVWIPN[m
[32m +        ns8HlZZPs09zk5S5mYB5X3NAkBZNgUFj1TTWTFpF7feEzBifuTlxRpmeEChwymtVA52ihMIYgUI+t8Ml[m
[32m +        w+n2PZwsPxtuCbx0LqRK0AzbOkXAcqqkpfV0KsJEQyWOVtCcNm2zl8Nr5ouW9oULdBI2Lx1Zgfh9ixHp[m
[32m +        Oxdh2yWdaAStptKmsB3zEOy9AGF7VuDiGS8kRR9CYjwtoHbl0tsb9IZ7LgCJF4LN8lj1ektrp3q6NftD[m
[32m +        Bfy4PJdOiu4mxBnwpJX0bmKcwGjMYwD9HeXRLJmp10QJoVcFQuU6OUFoQCb8WTKZzkxGaOARRPrvRWLk[m
[32m +        ESA+ALHuSzC/aX3cWDgPy779BsMKFzTHmfR86QUcXrwAd29n4bz8TyCNc7dzCbi+ZC0W/VQRvZ4qjH5F[m
[32m +        bObYkwEENQm5zJYAN16UR4/8IjqUeyGzVZe68kxMqiN0WtURDv831BFABxa07wF1ftIess0EUE3PpcIj[m
[32m +        8xUU6CwkMPo0fnlTYKJvXyTE+uPWvWtIuXNDKCIJSE/A5AZ14fwEj46xL7F1r1QOO1q2xoYenXHbdzOu[m
[32m +        u69A0JzpWDd+FE4c3AV5g0i4Zz+vkRNBnSRSrRPHvPQ/JZwkc08ml5gSxghRPDKFoGVtGyfVtPoxHa0w[m
[32m +        PDeUfdHJMSfXTEfLC52zcKLPtLSWMh3zErxoZeNh/7SWcvJO4YSWFlRCLSflnTt3Nk6GaFki5PCZTnh1[m
[32m +        Es2QE2xOoGlZZZuZ7uDBg8bKxaWO3JvJSTvTUrQvnLAzjktvaa0lbLD9bCstPZxo0zJHyLVOwikcB1qB[m
[32m +        OAbcC8ilpoQ/TvAJBTz+gu3hGDAd7wmbXLZLR0YEDwIml2ASNhSKWQffBZdscrkxQZDLmpmX+2w5JoRC[m
[32m +        Aizbr9DB9rFujinHnFYvpiV0ELh4piUtbA+DNS2HSvCgN9Z27dqZd0Gvtmw3+8L20ALIZboE3Zo1a5py[m
[32m +        +T74jnnGKpeksg0cP1qD2T/9NqhMGxISglq1apn2conwnj17TB/0HVOYVkPCPJdQ88cIAhjHJCAgIGfc[m
[32m +        fk+072wj66ZVkkfVsK20ALKtXGZNayS9FHO8CIb8G6DFcty4caZP3Feszno4VhRe811wvPlt83vlO6Jl[m
[32m +        lKsK+A0TQHnN+vXb448ejGf52g99zv2urI+Qzu+E3wWt9/yb0KXbhFj1FqztYWhV5iNo05rPvwkCNf9u[m
[32m +        +T3xRxr2hz/ysAyFZip/COLScx77wvR877zv06eP6T/fk/VdPZbH8kfEtuCjFzD3g+cw699PYf5Hz2Pe[m
[32m +        h89jU7kPcLxZOZxpXg5+zX6EX8uf4EfHP61+wolW5RDQqYqB0OABAqGiQQwHNUfQYLsGixI8CaG0etJj[m
[32m +        7cY6ZcyeTvuxKh/APRs4PQmdNT4xuq7Wp1gv8Lm/cyWc6lMXp1zqInBgY4QInIUOkXIFPgMHN8XhXtWN[m
[32m +        x9otzb9E6PAWOCpg59XyG4FJeqgtjXUNS2JVzY+w1oAnLZ3cz5kNnBJualrGDp5yv0kA8Y8A6PpmpbCx[m
[32m +        RWlsbv0Ftrb5Etvbf2PUS3Rr268ERr/EBnm+pmFxuDf+FGubCqg2lza1+cpYRHc6CcA5C4iK7uxTB7td[m
[32m +        62HvgAY4Mry5gUw6COIy24NDmhjwPDS0KU6Mam0cCEXPchbg7GOsnYTO+PkuOCvKpbcRM7rj2MimAoO1[m
[32m +        sHtwPRwb2xJHf25hltIeHt3MaJhAa7jkO/xzSwFP7vHsiSDJFyrxJye0ljxNBEJbYv/wesZC6dNfANHV[m
[32m +        Dpj7Btc2Toh8+lSGr4DlTh63wj2hEhI6CZtbncvb4TPb0sn8XHbrK2rgVOKN5VOA06tvJXhJmm0E1kHy[m
[32m +        jQzg88qSTkC1X3n4DqmFI/MGINxzEsLWC2QJEAZumAo/0cDNM8weTu7d1H2cVgBlqOBJq6kVMPmceYy1[m
[32m +        U+CW+axKSyfhk/s0zbEoW+8rAc4svaU1kTCZDXhUAqIdTgUCs62OqgRHpjWWULlmOqaxg6fAIMFSrqkG[m
[32m +        Fk152dAp6RRkHcsN2SygvWWylGmHUAOgBj4ny7UdbKNE43cuMICr5UcQYAU4afGM9BHwFRhlyLgIn9kC[m
[32m +        0DMR6ytxXI4rQBruOx+hvlLGgRVIOXsSSWfPIFmgM+VisB3yRFOuRpnlrmbvp0CosXoKYPLavk800Owd[m
[32m +        NY6DLoXlOC7SPaGPAfThejvtKrJE06Xc9FtSTrIAaMpNub6Je1kZuJtxB1eP+uH/a+8sALM68q5Pt+7e[m
[32m +        7XbbrlSA4u6uxb3F3d3d3Qv1FkoLxSUQiCshuHsIri0OIZ7A+c6Z+0y4pKHt9m33fffbTPfszB2/93kS[m
[32m +        7i///8yML1MdPV98E0Pf/AcmFc2PvvnexrgHHsSYxx80rrDTqCkPPI6Zpcsh/uo5/HjwNLatCgau3OAb[m
[32m +        NXXrPM6F+mJe3UYY+eSfMSaLjm15BKPYhwFMgttAAtughx1LoeN260hpszMt66WHTrcs5P07ZY5OMdZZ[m
[32m +        Zy2q5qoNizRXxcpz6hG4H3oUvR5+DJ0eewojsubChqmf4MqpKCSmXgIun8H1tb74om0HXDu4F5eiN6Pz[m
[32m +        m3/GWML9eAHtE1nQlfA+8MFHMODpFzD4mT9j0IMvYsSzb2Pv8JkE/Ru4k3gHMQmOa5+U/mX7l/RHBb18[m
[32m +        CjoEarLEyNVUVh7l2RdjzVUvxsqXG6pAS2nl6yXX3ovq6EVW5aqnOoI41dGLq9wWda18aynSi7PaqQ+B[m
[32m +        qGBDc5F1UfUkgar6sM9CdTU3vbBrHFlnFAti7D3ISiYIsO3S34ukexc86l51rT4k+wzU1r7Y26B+5P6o[m
[32m +        MTWG6loroR1L81KZdhDVBjoCGd27IEJWRVmJBT+CZEGcYMK6s2o8PQfVlUVSoK51sHpuyrfj2GegWOPp[m
[32m +        eamNnZvmb5+Nnova/VzQuOpP9ezzkdVV9yELs+YhS7TuR/Oyz0f3a9uqrvL1WSvW81d/9tkrKK3nrfnq[m
[32m +        2amO5mnvyQbVl5Sn74mej/rU/SnWPdn7/7lg+3GPr7F0f5qn/mihexII6v602ZSemcZRHT13zVPfV81V[m
[32m +        30/3mPY7rHyVa56Svlf6zJW23xW1s89Dfdt70Nzss9S1/oij77Gei8bV5676um/Nx/4M6TlqbPWpvt33[m
[32m +        qvoqk/Q5qo0+R92rvk+aj3Xtts9e7RR0L3LbFazrc1da3y19z9Sfguq6n0NmyAy/NmSZ8beH8PFbj2PW[m
[32m +        Px7B/PyvIuD93NjyYWlsb1oW+1pUwD6Cp5UgdHcrRzvbVsLubjVxeEAjwuaHOExIPDRcIihS+/o0Qijr[m
[32m +        r2sol9tCWFY9T9qxKlrvKYtnRLuK8GlUGGu01rNOXgQ2LYEt3apj74CGjsvtoEYE28aIGtEMhwifOr9z[m
[32m +        XYsSWFIvD0I7VsSuQQ2xvX89eBNElbesQT4s1nmetXNiRSMCpEQY1aZBFjolpa28CZ92Dai0ypM28NlE[m
[32m +        eYJSx91WWt28kIFM3zbFHbUtSvAsQiAthFVNZR3NQ1DNbbSqcS72x5j5K5txLmy7pk0JhPWpgQ2D6mPj[m
[32m +        0EaIGFgPkYMbYO+E1jj5qY5M6Y2omV0NgG4c1hgbhn6A7WNb4uzXA3Fh7hCCZx9j6fzh20E487V2s21P[m
[32m +        SG2I4H41sG1sU8JnXQOb2ye1NCAaMaIhwofXN9da33no064IH9EABz/pgt0z2uHIF91x7OveOPRJR0SO[m
[32m +        IXgOfh+hw6ojbFgNA4P+Ayqb9ZsRBNAQAWV/BzyNCKSCUsGkoFPwKcnS6bjeOhAqCWIlB2qVT/AkmPoR[m
[32m +        PH0HVmY71S+P4IEVEDq4IsesjDVD6iN4YhscXDASJ71n4qggzECfs7usIPS47+c4EzTHxMqzIKpYoClI[m
[32m +        tXBpQdV97YZYQamzkY/gT660Os7kMwOf2sk2muApq6SA0VovjSVTQKh58VqQqHK51ypP1+nB0brfWhlX[m
[32m +        XgEl+7KwaeWuZ6FU+WqjdZ8CTqsjvsz3gGi072ycDvnarPd0oPNeHSFcCjyP+BNKBaGMtRZUeWfCvsSJ[m
[32m +        YK0N/RynQgmphNHoINYhoB4ImY/zu/0Re2ob4s7uQszZPYj78ZABOkGmJEuo4NJuSiQJQq0lVCBqzg9l[m
[32m +        Peuaq/WZsqLeFCAyHesBRyuBpFXsRV5f8oDnZcJuOuh0K4HlBpDT9Sf9VgBNvwmRBVDFZg2oB0AzAknl[m
[32m +        q9ym3WWpBMz7KSWeMJvAeorjHUtoUuxlguhVxBBEr5h1iNSpH7F98ASMfvkt9BBQ/ekJTMjyIAYTGGXR[m
[32m +        FCjOzPIERrz2Fm7u2Q5s3YkWL72GHjlzYfnYYYA2RoqPAeL4QnHwBPZNmozBWbOh3eOPY9ALz6EPgU2b[m
[32m +        98jqOeHRJzH14SehtaKyjMoqOpHSdUbgaeUGw3+XBgmaCc+j//QApv3p4TQr7hRK8x2iOln+hB4Ex87P[m
[32m +        v4TZdeviUlAAcI3P+oasnTdwaOUSfFKqPLpkeQoDs+UhTJ7Akc9nY9Bjz2AWQV33rmc89NHHCLIPYcDj[m
[32m +        L6Pp48/hq45dcOP4USQlxiMxidAQl4Q7KbfNS5uV+4Xxl5QZ/v8IAgwLBQIbud3KoiiLl1xMZfnUOaey[m
[32m +        OmkjGh0lIzdOXS9cuDCtfeZ3IjNkhszwnxiyfPou4fOfD2NR4dcQUb8IdhMadzQvh10ty2NPK6ncPdrd[m
[32m +        mmK8k2XbW5fHzg5VcKBnbUSZ9ZkfEhzrYVO3avD9oAS82Z+OT1lcNacBTx2rojM+tdbT98OiODW6NcLZ[m
[32m +        35r6BQyE7u5VBwcGfWDgUxZQgeiREc2xn3mBrUpjCeFybfPi2NynNsK7VsHqJkWwnICpnWqX1Oc4ddl3[m
[32m +        g7wGOL0aF3Z2q6VU/q8CqKyhkmPxZD1ZPFvruJVi8GtXEv7tSlElsaalrKO5sKh+VixukA1LG72H5Y1z[m
[32m +        El5zw+vDHFjN9JpmebCmeX4Dqn4dSsGvY2mE9KyGbcMb4+CktjgxuzvOf9HX6PQnvXAkHYDqnE4dnyII[m
[32m +        PfNVf5z4vCf2TWlL+KsN/97vY8uoD7F9XDOCalOCWx2sJ2Cu6y0IrI6QIXUJfrWwfngDbJnQFHtmtsWG[m
[32m +        MY2wtk9lrB/VAFGfdzV5m8d/QPDU7rRVETGqFiG1BtNVzHX48Jppmw4JOIMJn9oBV9ZQ/96VCLo1sWlc[m
[32m +        I+NmK0unYp++lQyEKpYV1Vg+BZzM0xpRA60Dq8J3UGX4DKhIVeCcysCXcdAQjjukqnHRXcu2PsPqYv+8[m
[32m +        ATi6YjxOeE9H9OqphEwHIq1F0w2WGQGoAFPXFjZtPYGrlNZWIOqJtUPt4bWydn5qrgV+FiBlzbSQaKya[m
[32m +        Hjh0IJR9qa6nfnq5oVJKK1NfAlYDl47c9dID6BEfud26RAB13G9lGRWEfuKsKRVwetaAWmkDooPalCj4[m
[32m +        S5xZ/40BUAujhwMIqcGf41gIAZyxdDL8a5yJ/AZHQ6mQb3Eycil+2OOL2BNbDIjeOLUTV0/uNIAp91sB[m
[32m +        ZnoAtWkLoErbc0QFn9dVdp51PBBqQJSgKIi0QGktmg6E/hQ40+uPAFBZQOOvnHHp3wGgrJPA+h4ITYq7[m
[32m +        RAC9hERCaLLWhF6+iNhrl3Az4QbuIBG3L57DyeXLMbdBIwz8+9to+8rLaPfKi+j+9LMY9OyraP30y9j2[m
[32m +        5dfA+WNYUq8WhhDKhjzwKHq/+XdEB/gjNjERMXe08UUsEH8Nsds2YWmbthjy6puErMdZ90n0fexp9Dcb[m
[32m +        Dj1E+PpTGszJ2pgReFplBIh/tLSZ0ABCs9m91mwIlAWjCOeDH3wcvR59Cj2efwUT8xXGua+/Bc6cBy5f[m
[32m +        4q1fJyUkAKdPYnH9xgTURzA4ywPo8czT2PPJDODCCYwqXxH9c+XGhIKF8FG50phcsQy+atYYW6ZPQ/Sa[m
[32m +        1QT6W8CNeAJ9Mj+zZMSnpuAWUvgJ3V2DlQmg/51Bn6X97GVRUtC1oFJWK1m7ZPmSdU4WLlnY3N8Vldvr[m
[32m +        zJAZMkNm+E8LWT5551F8/PajCKiWi9BZjvBZJs3Kubst1a78PdrTtjz2UvvbVsT+1pWwU23asF7n97Gt[m
[32m +        cxUCZWn4fFAYa+oWMud3yurpPlZlRc18BkADmhQ3ABrWqqyBUUHo/n4NCJuNcGDIh4ge2cJYPyO7VE1b[m
[32m +        E7qxe3Vs7FUT61qVNGC5kpD5fZ1cWNowH5ab3WwJvARMpVc1IYASMHW9ivX+VQB1NhcqTPCUhZPg2aa4[m
[32m +        425L6JS7rXeLwqyb3wDn0g/ew7IPCNeUYHRV0zzwap4X65rmgG/z3PBvXQABbQsTWIvCp21RrO9ZGduH[m
[32m +        Ea6ndsDpj7vj3Ge9cP7zPvjhy74493lvHP2o2z0AumNca5yfOxiHCaa7J7RB+KC6Bjq3jmmCox93M+63[m
[32m +        G4Y1wKaRHyBsaD1sGdfUgKdgNHLUB8YiumFUI0JmY0JfNYSOqAs/udYOqYnAwTUQPLQWYU+WT5Z5IDRk[m
[32m +        qFxrKxnLpABU8BnGugJRK7smdF2figYqffpUMpAp4BSEhhBMJa333Di2IcG4roFVu2GRLK0hwzkPjuU7[m
[32m +        iGMNr4GAETXhN6wmfAfL0loe/v3KIXAI5zKyLtZPbYl93w3E8VXjDETK4imgdAOk8tMDqGTXgx6mLIDa[m
[32m +        +rKkqs1RxlrrqeNQjvqxT8Gq50iUNAD1WD3dmxEJ6Cw4Ki2Lo7V6WkhNg0zKDZW2jzRwTad76hndBVCt[m
[32m +        AXVg05F1wz3qp82MPjVz0HzMpkMeoLU6TAA94AHQU+FzzfpPWT+PBX2Bw8w7HPwFokK+pL7AoUD2JSuo[m
[32m +        YJRwKsvqmfBvcTxsPk5ELsPVQ6FIOLMDCRccF1sBpYAzPYDqqJZrp/fi5lmC54XDafm6FnTeMADqWEEF[m
[32m +        orKKChQFkgJIAanKjButp+yXIPSPAVAduXI2Tf8eABV8XkiD0KQ4ygDoJSTH/EDIOYPb8ZfJOldxPSUO[m
[32m +        8SDwJMbAHOsRS4i8dgW4xHrS6VO4EhSCeZ16YkX/Pjg1ZTJmPvUsphPKxjz6EFo/8RB2zJ5OeLqGm1cv[m
[32m +        8b4EYwSpGPZ18TKuhIZj9ZDhzkZHL7yM3g8/iaGEVx1vonWUIx99MEPwtMoIEP9wPazjT7IY8NRmQb2f[m
[32m +        eAYD3s6Kr5s1w7a5c5B8+BCfEYHz+k3cOXUGRyI38jvyI1LOn8fMchXR46mnMOKhPxlL74yXX0Jk7+6Y[m
[32m +        0YK/wz+dD0QfB86dJLhSP/D5xsWA+ICUZAJCPCE+4Q5SYlJB6sSdZLmtyc3UcXWzslDxa5QZ/v8K+vwF[m
[32m +        ndaaKSlPQVZOuVUqz8YKKldZZsgMmSEz/KeGLHPyPIdv8r2A8PoFsaNlWWxvUcZoV2sCpwFQR3uUbiP4[m
[32m +        ZJrxvjblsK91Wexprfol4V+LIFbuDSwu+zpW18iOxe/nwJJqObGkRi6jxdSKevmxXLvfEkKDWpTD6XEd[m
[32m +        ENG+MvyaFMPaRgURPbwpjo5tiUMjmxI2q2GloJLAuKlndUR2J6S0LoWVBMQVBMQlDfNiUf3cWP5hASPl[m
[32m +        rWpKeGxSkGm2a0YAlQstpfzVBFIvAqe0pmkRrOG18pTWzrYrm+QzWtU0P9sWIHgWJnTK2knwbFfMuNpK[m
[32m +        3i0LslzrQQm+hM8VjXMarWwi8MzNsjxYTfj0bpkfAW0KwJ8KbF8EIZ1LILJXBewdUQ9HJzXD8amtcGwK[m
[32m +        NbU1Ts/qRPjsjSvzBuGHr/oRQDtj84gPsHkkAXz4B9g+viXOzh2EjaOawr8vgW5EQxz/vCf2TmuLqNld[m
[32m +        cOzzHtg0+kOTr82DpI1jPkDEyAaIGNWA4FefUFiN0OmswTQbBREUgwmD/kyHDqtN0GSeLJL9KsK/f2Wz[m
[32m +        HtOvXyXjghsypDrBtgaCmBfMOqG8loK1bpN1/QcSPvtVIMSyzYBKJpYiRtfhGNUQRqiUNoypa2KVhRA+[m
[32m +        A4cwHk7YHV4NwVTQiBrwJwD7EIB9B2us8gTWypwr+xxalWVsM7ouNs8kiC4agZNrp+Gk7yxEE6QOEuD2[m
[32m +        rZmFAz6ELcGb1wxC5ywcJVDq7NDo1YTRNYQs7YIry6bOymTZMd/PcNyfsMlrx81W4CbgZPk6B0Dvrgu9[m
[32m +        C6AGClc7sqBnZddx2rpp7RibtmpnYdLA5d3jVJzNg5xdbG2+1WFvp1yKWkcIlcutS0cDOL4/74MAGu3P[m
[32m +        Ofnx3gmi0f68Dx/ej+TLfF4fZvkhlh8J5DMhYB5m22jtohv8GQ74U3LPJYAeXz8XpzbMw9lN8018Ouwr[m
[32m +        XN76vTmy5VjIHBwLnYcTEd/jzJbluHFkA2JO7MYN6pbHAmpccQmMV8/tx7Vzu3H17G7c/OEA4i87QKhj[m
[32m +        USRtZHSVMCpdO7vfWENvXjjoWEJVzwOfAlObZ0CSYJkGoYLNdNfxV5in/MvRhExC7MWoNMVcjE7TLSr2[m
[32m +        MiE0TcfTAagDofFXHAtowlVBqCPHIurJu3bGAKbWed4PQu060PTlWjPq1r0AyjouC6ijSwTRi4iLvYDY[m
[32m +        1B8Rn8A2CTc4l8tIjbmJ1NibYEPcSblD+D+HhZOnYXqbNvioYUN8U6sO1tZvjAVVKmPoiy8YF1RZL2Uh[m
[32m +        HPLIgxjz0ktA6Hpc2b4HXQlgn3fqjGjv1bh94TTupBJvCVC4eR3xhw7g0KJFWNm1G6YVK46Br/wZvR59[m
[32m +        AsP+pGNY1OcDZr3lUILnEFkgGQ8lCI58iJDKfJWpTtoaTE+5NgUaLHdfiWm5z0qDmdauvAO0FpX1NV+B[m
[32m +        perKAiuIFiTK1XjUAw9hAKG478OPoN/zL2LsO+9hQZ0PsGHiVH5/NyBFMB6njYSuArcu4cxab3zcvCUa[m
[32m +        5M6N/s2bEiovYevHX6PfU8+gyyMPYNDjOm/U6X/0E09g7Htv46NXs2HAG2+jxT/fQqdiJbBo9HjE/3AR[m
[32m +        MXB2e40ngMq2pS12iPBIBsFCOxenOGu1rCx4/Bplhv//wi99rhY2LZjaODNkhsyQGf5TQ5av8z2PeQVf[m
[32m +        wvpGhbGtVVmj7dSO1uUImxWxt81dHSAs7m9XidBJGG1VGrtbl8S2ZkXgXfFvWFT0Rcwv+Bzm5H4cn+Z4[m
[32m +        FPPK/p0A+h7hM4c5UkU70mo95oqGhMU6hRHapgpOT+iMEMKsdrBdRxiMJmBt61/b7CC7lIAZ2qUi1veo[m
[32m +        iqCO5bCmeVEsb5wfixrkxoK672FxozxYpg2CCI/LdB6nILIp+9aGQYTIVc2da0lpL4KmrJvSas5ZUlpW[m
[32m +        Tq9mgs68WN08H8GxANa1KUToLOqI8OjbjqDaIi8hMyfnIGtndiOlVzBvZVPCZ7PcVC6sbZUf/h2KIoDy[m
[32m +        aVMQQZ2KY0v/Ktg/qh4Oj2uEqPEf4PiUZjgxuQlOTmmKk9Na4NSMNjg6rQ3OfNIVP3zdF8c/7oIthMct[m
[32m +        oxsRQBtg+4QWODtvMCLHNEfI0AaIZL6OTNk+qQW2jG9qzukMGVIbESMaGEtj+PDa2DW1BTaP+8BYHEOH[m
[32m +        1oI5g9OsvXQ2CZIFUus1jcusZ82mpDJZMI2LbH8nrTyfvuWwrk9ZE0t+AyqyreCTkDq4IgIJiutHEzRH[m
[32m +        EVZHEhR57T+oAoKHEVhHVDOWzsjxdUw6cEhlhI7k2EMqETw5J9VlH+vH1ETQUM5jYAW2rWjS4aNrGKnP[m
[32m +        iLG1zBgbxtZG6JQPsO/bnjixZhxO+E7H4XUEt4DPcTDwawfuvKbh6LrZOK61ogJQLwLWKgKadsK1lkWC[m
[32m +        oHaddayJDiAq7YChY7VUnrV2uqVyc7amQJOSu6vO3NRGP9b6eY8MfKbrQ2C6VoDqHKPi1sE1zhErxqXW[m
[32m +        I7PWUxsNeXTYj+1dOuTHPj3SdRRh1OpIAOfkqRcVwPtKp8OBsxEVxOcT/AmiAgmfQZ8TSL9w4uAvcCJs[m
[32m +        Do6HfW2uz29aYNLKPxb6FU6Gz8VRwurJiEX4cVcgEk7uwC3q2gmdHbqH8HkAVy5QBFDp2vm9hNF9uC7Q[m
[32m +        PHuAIqTK+umR4NNxxz1orJ3p5bZiOhB61xKqa0GoAVDBp0u3Lh0hbAo8fyqVxRJS7+peAHUg9C6AumXz[m
[32m +        HQClCKAWQt2AaSXwjL9xLsMyt+4FUGcTIrdSEi4jiSCqjYmMK27cVda7htuJN8wa0fiYiyYf8Xx5jUvG[m
[32m +        rZ37sKRbL/T865voSDAb+ujjGP7QQxj14IOEvz+ZtZ0jszyKIQ89gT4PPQbfHn2A8xexfeRodCNU9nz0[m
[32m +        SQzLmhObZn4MXJNrLv8FEUsRtO7oWJeY68DZ07gYEoz9cz+Ff89umFW4MPq88AI6P/4Yej/2JEY+/jyG[m
[32m +        PfYUBv7pUQzO8qCxmo7L8rBxix37ANMP3IVRyexGS9kzRXV2p+Y5gBI0G7ilhj36GPo9zXk/yXk+yf7f[m
[32m +        eBPf1K2HsNGjccprOWJ37AYucn6xfHHn/wSDcUghfMbhwvogTCtTEgMeeAKDH3gSI3LmQur2zcD+o5hc[m
[32m +        sBwGPfAgx9A8H+F4f8L4Bx414Ksdhfs99hh6vvA85n7QED+GBAHXryIhPg43kpKQmOxYtSwspAfJ36rM[m
[32m +        kBkyQ2bIDJnhPz1kmZPvOXxb+CVsalYc22XNpHa0KYudbQWgjrutlVn/2bosdrUqg50tSyKgelYDntKC[m
[32m +        Qs/hyxyP4Iv3HsbcfM/g49zP4tuSr2NNrdwI+KAwgpuXQBj7DmO/qxsWxYZO1XFyXHsDoHKv9WlaFNt6[m
[32m +        VcdSAmZgh7KI7FXNSKC47IN8WNYoL5Y0zGPAc4WsnE0KYDm1qllhgqDiQj8PoKznBlCB5yr2ozM817Qo[m
[32m +        QGmNpgOevm0JnZSuZc0UeC778D0sbZQNyxkv+zA7VjTOgVUe8FxNOPUmeAZ0LGZg1Y8K6VoKO4bUwL6R[m
[32m +        dXF0UhOcIGgemfChAdATU5vj1NRmVHMcp44RFk8QQo/PaIcTszohekZbbB1ZH9vHNMImxruntML5bwdh[m
[32m +        09imWD+ikYFNndd5cHYH7JzS0gCpT18BZFWCpuMS6+w6+76BT3tEigDTuMcyDiKQyiVWsCo3We1MazcN[m
[32m +        Ulr1zIZBbKdzPP0JnH79KxjolHtusNZoEj6V59O/nAHN8FEOKAouBZMCx5AR76flBQ2rYmBTaeX5EVB1[m
[32m +        beoIXCkDpARUC7UbxhGsCZ4CV/WnPozGVIe3+praGPsW9CdoTsIJgtYxf4IWITN6nayaHxNECWByofW4[m
[32m +        28o6KSulgNDsSmvg0AFNAaLyJOsSe38AlRXSOfPTrLFkWrE2KjJwyut7lN4ll/3rOmodYxdkOjvZysrJ[m
[32m +        a7nWusp+EUB9OS+PDGi6ADSacKnY1JN+BkAFmVJ6EBVkmmuCp2LBp9LKl46tn4dDId8gesNCXDkSgriz[m
[32m +        2xFzfjdunt9vrJk3zsvSqbWeSltXWkEkwdAFmLJ0/hyAGguoW9rVlhCpjYkyAfQa86+x/CqSYq+YvKs3[m
[32m +        ryExIRYp1wijt24Ap04g6rt5mFarBga+8jp6PvgkemR5HH0YD372ZfR++nmMfvsd9CiQFwuHDgQ2RyKq[m
[32m +        WzdzduYIQmi3R57AtHJVkXwpDqlxqZBtJhF3xKK4fec27hC+zFVSIqGUoHrxEnDhHGJ37sI1vxAc+PhT[m
[32m +        +Pbvj88bNcDwEkXR+72s6Pb3N9Dxzy+h03PPo8uT1OPPEnqfQU/GfQmtA556EYOfehkDnngF/f76d4zI[m
[32m +        mw8flSmH7+vUx85RY3CG93Nq5zbcPBaN2z/+QNCU+3ECYTAGMUkxhM14zpPAKWsj/0tNTiCB3kJMyHoM[m
[32m +        4L32f+hhs1nT7KdfwI8zJmNOp2aY2KAWtowfj429uuAzAuqIrO+g+1/+gk6v/xV9c+fE9+3bYs/S+WZn[m
[32m +        XO0gnHxNn9sN3E5OREqis8Plb7Fw/pIyQ2bIDJkhM2SG//SQZU7+5zC/6CvYIfCkdnrgc1e7e+FT2kP4[m
[32m +        FIBG1C+A1eX+hsXFXjKS1fOTd/+Er3I+iq9zPYbP33sEC4q8giWlXseS0m9gVeW3EdmiBLZ1rIDN7cpi[m
[32m +        7YdFsbVHLZwY24YAWhZ+zYrBr3kxAmgNeBEKZfEM6UyIIoguIZAurp/LaCkhdCWB0at5EQOgK5oSIE1a[m
[32m +        ceFfAFCt72Sa19pUSNdrWhSGT2vHxdanTWEDnQJQgefaVnLd1Y62OQi4jgSdxtpJrW6RB2tbFzAScAYS[m
[32m +        PgM7FcP6nuWwh1AXRdg8JksnAVPweZzAGT2xMY5OboJjk5vi9IxWxhJ6aHwj7B1dD7tH1DEQeuKjttjH[m
[32m +        vIiBVbBlRG1sJsDun94SF77rj63jmjiutaPq88XoQ4QNq+2sqxxWKy0tsDRptlO+8nStHWgFlRYuBaYq[m
[32m +        N8etsEzwqbpK2zJZPrWWM3hIdWP19PUAaOBgB0glbVQkOBREChwFloLRgMGVjAVTAKlyAaliIxeMqr7A[m
[32m +        U3Ap66a1ospiasCV9dWf+rd9KD9kFPsfWQnrhlXCGva18ePWOO09Fqd9JuLwKoKozxyC4Kc44DUbB3WG[m
[32m +        J6FPm+5E+bih0IFAAaGg0oCn8nhtofHnAFRlqiOrp445MZBJsDS7zLpcco2MO68znoVbQesRzccFlXYd[m
[32m +        p2DTQOi/AKBu4MxIph7jI4GE5J8B0MNaP0r4tHCpOCPotPGxkK8ci2gY4TSCdTZ9gyMbvyMQrMKVo+GI[m
[32m +        O7cTMWf24PrJw0Y3zxD4zgs6oxy32gsHCKkH03R3Q6KMATQjCUStRfS/HUAVC0BTE6+b6/g7sbh26xIS[m
[32m +        km7gTvIt0iKhMDmecRxuM//62SP8nPbgRtQupJzYB/CewM8GJ/bjVmQI1rRvhfGvvYLBWbJg4uMPY+Cf[m
[32m +        sqD9U48heNlSs97xttY63iFwCpCSCHlMCkp1ROltct4twhhHRJIAMIXjEgzN5j53YpCUfIWVZJm8CFwl[m
[32m +        ON64xOd2BUk3LyLl+o+4c41515VP3STIxl1H8u0Y3CJSxt6WHTMB8byHpNs3kJgksJRFlsBnaNhMCbFx[m
[32m +        8ayfyhbJnBMnlcJ5xHNGF85jVYs26PLIoxj4oCycf8JI3tvA15/F/PYNsfPzqYhe8BWivL5F8oHNwCU+[m
[32m +        l1ucp54tn2USn2Uyn2Uy7yn5ThJiEm8hMTURqSkE71SOIdR1gePvpcyQGTJDZsgMmeE/PWT5Ot/ThMTX[m
[32m +        CJ+lsKNN6TTtbl8O+9uXxz4DomWxpw3htEVJhNXNjSXF/4xFRV7CvHxPGeC0ls8vCJ6C0G/yPIl5eZ/C[m
[32m +        d/mfwapyr8O3+juIaFwAkc0KYz0hcFO3KtjepwZOjGuBkLZl4N+8OIJbc8z+dbG0QR6EdKlIICyJ5cby[m
[32m +        mQ9LG+ZxNghqWggrBY+EToGo0ooFoHLPXUWoNNDZjJDZsrADoUyvai5LJvMoudsq1rEpPm1k7SxmgNPC[m
[32m +        p6/HAip3XG0opB1t5Wa7ogkBlLFccWXtFHjKvTago+NuG96jLA6MaUDobGqA04Am0wZCpzXHSUKkrJ3G[m
[32m +        /ZbX+8c2wLahNeDH9j7tC2P7kGo4O7sNzn/cFocmNkRI79II6FkKkUPex8HpzXHh2z7YNakJtoz7ABtG[m
[32m +        1SVgEuzYfsNoQaM2DCLQDby7xtO624YRJJ2jTwifhFMBpWK55MryqfoCVMXKN665rC9ZS6ngVRZPt7Q5[m
[32m +        UeCgygZABZJymzUASngURAoUDTR6gNJYPT2gKaAUnApCZQXVtSyfktrYuoJQaxFVvHEC75v9ydK6ZVI1[m
[32m +        XrPe6CoIH18TIeN5DxPqYccX7XB01TQcIYRGryH0rXHcbQ8Q5vavnW7WQAouLQju95pOmCSYySLpsUpa[m
[32m +        Gcj0uONaSE0vQadcb41lVUBJ0JQl1I7hBlVzzbTkQKjqz0a01mxa+WpTIwug083OtmlywaeUHkAlgabc[m
[32m +        baMJmZLSFkDT8oM4P1lErQifhwmh0YTPUxEOYFodDXYA01g5ldaxLEoLPJmWrHvu0XA+h4hPEL3hcxyN[m
[32m +        /BoHw5m3cSEuHfRHwpltiDtN2Dt5CDdPETTPHjLut9cEmj8QIAmOOqfTAKgHPh0YZZrXAlVBpoFNC5qE[m
[32m +        xvSbEFkIlbTOM1Z5VgRLgebNH9mPyu4BznsVd8UBTrcEmwYyr94LoE6eR+kAVLCZXspPX+e3AKhb6S2g[m
[32m +        bqUmMD+B4JZAaEqIQVzsTcTcukkwI4QlEshuEQZjCE3RZxA+aCyG/iM3Bjz7N/R86GX01xmWWZ7E1CwP[m
[32m +        YyYBdAY1KcsDGPbAgxj5Tg7snzQNd3ZsI5ydQ1LSNcQQNa8iHhcJfDdJgAkk0eSEFJzesw8HFy/D4sZt[m
[32m +        MLNDfwIlAe26s7HRtT17sGvZKuxb7M3v0WYkXSSUavfY+ETEnzmDA+Hh2LZuHY5v3Mj8G0hJTcLNpERC[m
[32m +        agJSjpzH4KoNCIvfkUVvIzWW9yP6TSF9pmhwkqike40h/J67gvObdsB71mwMrfY+uv7zn+a8zhFZHsFk[m
[32m +        3uO0LA9hTJYHMfTBxzHggSfR/4mX0ebddzGtYSMcWrKc93mVc9fzYp+3eA8iaz662xxKw2qNpyytd4jb[m
[32m +        d2QNzgAg/6fKDJkhM2SGzJAZ/tNDljn5n8Lycn/FrnalsbNtKezpUNakpT1tSxM+md+yOLY0KWTWen5f[m
[32m +        +HksLPICvs3/tLF8fpOXsEkQ/TTrn0x6bp4nsLjoi1hX8U1sbJQXWwmJmwidG5vmh2/td7Gu5tsIaFUY[m
[32m +        23pXIYA2R0i7UvBtVgSh7cpiSw9ZQAthDQFT0CmtJrTqTE65zJpNhVwAKvdbXcsSKouoG0BXMi1LqLWG[m
[32m +        CijXaH0nYdOnbWFCY3EEdiwB//bF4N+hmHHBXf5hTiPtZqtY60J1zIpX8zyOqy1jgad/+yJGwV1KYmOf[m
[32m +        itg7so6xasraKcAUaGptp0DUsYA6Oso6h8Y1wuZ+lbGuQ2Gsbsf5tuQ9tsqDzQMrYufQqiwri439ysCv[m
[32m +        S0EE9SwO/x7FsH1MLRyZ1QobhtfAptF1CJ+EuuECSMcV1k+WSQ8MChZlzRRoKta1rJkbRtc3wCmwVCwr[m
[32m +        pz2XU2671vIpAJWVVGtH71pM2Y/69kjgqd1yNQddCyIdkCQMetxwBZBuiBRYCj5VLkumgVKPRdTWFWgK[m
[32m +        ZgWmFlLVTn1ovajpg+0j+DzWj6pIGK2E0NGVETGBUDqhFvxHVoXvCLad2hK7dGzLyok4snoSDnlNxiHC[m
[32m +        3H5t6rOWoOYBQQGk0rJQmp1rLZh6pDy51CqtuhYe0yRwZZksoHLFVT8WYq0F1YCmwFRjEEwtnApU1f9R[m
[32m +        P46RHkApA5mE0H8HgEaHfGrgUzoa6lg+3bJut1J6ABV4ngifYyD0aDjrrCd8RrBsw9c4FjEH0YTQYxHf[m
[32m +        4OTGRbhycAMSTu1G7Ok9uHXWORf0+vlDhFDH7VZuur8GQI1llOl4gqL7iBbJbELkUexPrJr/nQCKWwS6[m
[32m +        WIJT3HXcjrvBujeQEEsQJZSdQRyO4QZ+YHzl9nUkxlNnTuGg1xqs6TkIHxWsgH7P/x2DXvgbBv/5TQz5[m
[32m +        x1v4rlFd7J0+EecXfIeNUyZiVutmGNSwDmYO7I3AFQsRf/WcY+lMIAzGEcsIt7cOHQa2bcOot9/Bsulf[m
[32m +        yHAJXInB/GHDMbl1a+fokx9vYv0X32J8rfrAyfOI2bAFg2s3xOVNO5F69AxmdeuDeZ27sx7v5xb7vZSC[m
[32m +        pa0HI7Bxb/hUa4GU5BjiXyK7jiUCxzNOIBAmIS7lFvYFBGPBkHH4fsBYLJvwEcIWLcOPO7fhzqF9iAsO[m
[32m +        wb4ZH2NF63b4rHwlzKvI31mtOiN65DSkegVxLmccIL4Vx/vhfcUTPgmdsvSa3YUEoUqTDW+b/1Io7Via[m
[32m +        CaCZITNkhsyQGTJDRiHL3AJPYxVhcW/HcgZAd7cvjR1tSzJdEnvblcGOFgS0au+YNZ7zCz5rYPOzbA/i[m
[32m +        8+wPpV0LSGUJFYCuKP0XBNfOjo0f5sbmpvmwrWUhbGlRENvbFcVW6vsyL+LLci9hfaeSODamMcI6ELaa[m
[32m +        EwA/KMC4OFYSNuVuKwjd2r82tg2oa45EEYianW1dAOrVoojjemssoQXvAVClV3jcb9e0ctZzCjxl5TTQ[m
[32m +        ScntVmAq4NQ5npI5x5PwKfdbueH6tStioFOWT9+2spQWQmCn4tjQqzz2jqhj1nUaF1uCp6DTbCo0vaVx[m
[32m +        sVV84ZP2BkL3jKiN9T3LYl2bgkZrOxbF6vaFDIh6t8uPiF6lsI0Qt2dYJQItQa5PcQT3LIaQ3iWwc2wt[m
[32m +        HP24JTaNqI4to2sT/hz4FPw51kgBIYGOUGjWbnqgM5zzCx9ex2xGFKa1np61oIqt9VOAadeArmd9awlV[m
[32m +        fcXm2BTGWu95V5XNuCFDCbAc21gpCY5yu9XaTQGjdacVLMqiacoJkQJISTAp0LSxpLaqYyFUMoBKoNXG[m
[32m +        QwZU5ZbL/sLHVEEY4TNwRAWEjtExLZXhT/gMGPU+QifVRcjkBlg/szkOLh6ME2unIGr1VBxYNc0DfQQu[m
[32m +        j5usANNZu0ko81gprazrrNIWVjOS6lmwtNZSBzI94Mm+nb4cKLVWUbWVK64bQHWEShqIEjL/HQAqt1uB[m
[32m +        51GC6BEBqQs+LXQKME+t/+YnACr4PCXAXD+XMMpy6ni4dsZlvJ5wuv5Lln2Bk7Ksrv8OZ3d4IeZEJGLP[m
[32m +        7ULsj4TKi8dw/QdK0OmRdcO9H4Cqrqyl2gHXDZ/ppZ1v468eS5N1w/1vA9Db8Vc88rjoEjKT428giYpP[m
[32m +        uIoYtr+eeBlXE6/gGuskJsfidkI8UuNuIvHmZaTcuIL4ixcQd0muvteRlBqD2Ns3zbrKxBRCGesmnv8B[m
[32m +        OH8Fd46cBc4SemNlISQssfg2k3dSknF6UxhaZn0Th08QeXmdeO4MmhfMg63fzQWu8n5vJyH2yD50yfFP[m
[32m +        3Az0xveD+2BUm+bsPwZITcT5fbvR8R9/x/lQQuHNG1g661Ns/nIebq1eh5EF8jPvCpKvXSSkCTzlcnuH[m
[32m +        MyT/pt4mIJIYr1znRYqBx9QUYmIqATmJteJ4J4nE1dsJvDeCptyUCeipSYm4Hsd7vZMEnd158U48LhFo[m
[32m +        r5m+hboM8rQlC4sLtf4Vd3hxm5lywf2d135aZYbMkBkyQ2bIDP/pIcs3BZ/C6ip/w77OOs+zOLYS1ra1[m
[32m +        KkoILYH1DXNjZdm/4Jt8T2B+4WfwZa6H8Wm2B/BlzoeNQupkx8Kiz2NRUVlEnyJ8vorthMItBL8tLfIb[m
[32m +        bSf07exQDKGNc+Dz/A9hYfmXENgsDyLaF8X2nhXg2yQ/1hEw135YCKsb5sfyD/ISxt5H9MRWiBrXEjsG[m
[32m +        1TebBq1tQThtIsgUgGq9Z0GsNgBaxOQ50m64csXNzzKVFyJ8FoZPu+LGymnBUy62smyuaJIL39d7B0sa[m
[32m +        ZseyD50zPK28WxVASJfSCO1WGr7tChFCnd1ttxLgoic1Nu61WudprJweABVonpnZGudmtcUpAeiM1ojs[m
[32m +        WykNOsN6lMFuguj2IdXh3b4wVrXNh7UdOO9WBN7m2bF1QFn20QB7CKDr+xZHWO9iCOxRBP7dihBCa8K/[m
[32m +        Z3H49GDeQELe4MoUIYzQKRiUNVKxjlYJkBWU8zS73A5yXG8doKwGv/6EO8aS/wCt5ZRFUy67VRAxqi77[m
[32m +        UD+ybDrlIUMJi0MJoARNKwO9Hkuo0nbDIAGjAFJxxLhaRpsm1sOG8XXMWlDtghs5oY4DkqMJkqPkQlsd[m
[32m +        gcMIkhL7CGRbAa0UrjWfsowO1W64vK8hHIP5QVpjOqwCgkdUQjCfVcSEWggYQQAdzmcypgbCxr2PyKl1[m
[32m +        4D/6ffiNrYstX3RB9KoJOLaGAErwEwwKEC08SocJhgeNRVP5jqybrWP9JPQJIF067OpDsepIh7XWlFJ+[m
[32m +        tN8nOBH4OU4GE9q0Q66nTGtRj/iyXHIDqP9sI6XvgU+jXw+gWucp2IxiWus+JaVNfjoA1fpPWUGPaQ2n[m
[32m +        sYQqvlfHQr8kbH5t4qMhBFNK6ZPrBaBzjRwA/Y4A+i3zCaURc3A68iucifwSpzawjw2EUNaL3rQQPxwK[m
[32m +        wvVTO8yZoTfORznHr5zb7wCnG0AtlOpIFoGjx03XrP00EBplQNNK6z7v0f8KgOos0HMeuEyvfz+AJiVe[m
[32m +        NUombCYnENIYpyYRJJnGtUuEMoLZLWIV28cTSuOSbuFWwi1cibmCW0kxSDHrO/m/ZAEW/9UQCDGSy6kk[m
[32m +        b9dUZiSQuW4lpxroY8+4ShFFzY6zSTdjsW7iFEwuWhJJBFXjxnojHvtmfoz++QoimGXLp0zH561aoOcb[m
[32m +        LwMRgZherzqmNm/Mepc5AHu9fAEj3/wHjs/9BqeCQ/FJ/8GE3fOIDfBFh3/+Bd9264dBtRtxUAKrBwxN[m
[32m +        TKUYEyWVkkrQdQywOh4lSbBIDlVdVU8WtBKoU1jvRnIKbmgHW973bd5kcorOaWQtk6d2KWwqEJVSDfQa[m
[32m +        AJXrb5Lq/RQefw9lhsyQGTJDZsgM/+khy9wCT8Kn+lvY27EMdrYrQfAsbkB0bbV/Yn6x5zCnwBP4Is8j[m
[32m +        +ChrFnyc/QF8lvMhfEYQnVfoCWxpng9LShFASz6Hbws9jsDab2EX4W4r4W1jq/zY3aUkwpvmwvIqf8H3[m
[32m +        ZZ9H8AfZsbTiK9jcOCfCG2TnGG9iYZlXML/sn7GydlZs61kFu4bXw/5xjXFgbBMcGtecwFcXXk2LYnXT[m
[32m +        YgZEVzfXek5H3i2da20upDM8tVOtNgky1sp2BM+2snoWNO6y/p61lqtb5sXypjmx+INsWNwoG5Z8mN20[m
[32m +        cZTT7HirNZ5h3csY6+YOAp1tu6FvRRyTK+3UZjg5oyWOEzzPzmqD0zNbmTWe5z9ujzMftTFutgLXNa2L[m
[32m +        IKhbOYT3roTDk5tiz5i62D26NtZ1KIjIARWwmUC1i2C1fUQ1rGqdC0E9iiOkJ8G/X2n4dcmPwO6FjLzb[m
[32m +        54JPJ95T53wUIbsdAblzAQT1LY1wgmjYUALhQIIfoTBgWA34ExiDRtQivNUmHLJMYEpQlbVR1kNJkGjX[m
[32m +        Xhrw8wCkdZdNyyP8yTXWWirt5kJu+Q+vhECCYMgYjkEFE/yk0LHVzbViWx40imOOccqDRnOssZ7yUU65[m
[32m +        6vkTLANHEqrHEpoFoHw+QbKiMg5kHMy8oGECXc2LoDpaO+TKMlrVaD37Ctd4soiOJFxrg6MZTbDvux44[m
[32m +        4jUWB3XMifd0QhyhkTDoaDZFIFv7OQ576ygVxyLqAOMMHFo7FQfWOhsZSfuZlg7omjDp3oE2vQwYBggA[m
[32m +        HZl8HZXi7wBjeoh0K31fbqWva/tyAJRz92wsZDcYshsORQUROD0ut8b9NgPJIiogPRbGmOnjTMuaeSLi[m
[32m +        KxxfTwBl/pHQT811mgiYTjnrMX3Sc30y8muc2TSXMfOZPhH5DY6u/xanty7HtahgJJzegitnd1G7zYZE[m
[32m +        t350IPPmOYKm3HMJpTe1UZFH18/tM7Hq3bp42Kz1tHLDqAFSF4AKSAWXgtD0AGrOCmX5Xd0fQBXfC6Tp[m
[32m +        AfTsXcVIBFKPBJYWOOOunzWxzvx059u83wqgqQnXzQZEGYplbjjVZkWS0ip3lyWxbqKUeMMoKfEmkpNj[m
[32m +        kJpyC6mpsi/eTpNWPqYSvhRLhvfIaUqa9ZenT2Fqw0bw7dnHWEdvJ90x52TeTpJLKxH1wnnWOYcFHbvi[m
[32m +        q9btgPMXsG7UaAwoUw44c4r9XcP1M/vR7d13cXrFav6sBiFy6RpcityGlPWR+Kx6dXiPGMt+fjQWWdwx[m
[32m +        szC6i2yakCOB5G3CZ2pqMmEzySg5OdFIeW6p7v1kgPM+Sg+Ov5f+qPBzY7jLMir/d4T/7fEzQ2bIDL9/[m
[32m +        cP9cZ/5s/3eFLN8WfgYBdbJiXyftflsC4R/kxlIC4XdFn4Pg9JMcfzLgOStbFgOeX+Z9DN8VeRYLij+L[m
[32m +        zQTQxQTQZWVfwoJiTyOsYXbsaleEEFsEmwl/yyu/ioVlX8DK9/+KlVVfwwaC4apqr2N1pVexvMyL+Kbw[m
[32m +        E1hQ+kWsrZcVW7uWw77+NRE1qiGOjm+CI2MbI3p8c2wZUBta6+nVoigll1mt53S0tlURA54rGufldQGz[m
[32m +        M+067UpLWBSA+ncoYjYIktvsmlYE1CY5DHgu1VEqjXMYrWiWy2wwpHWeslIKVoM6FzeWTlkzZa0M6FQM[m
[32m +        vuxr88CqBM9WBkLPEDzPzG5rdO6T9jg2tTl2DKuJwC4lsLZNAYT2KIOQHhUInA0Q0bcyoqY0RXifcgjt[m
[32m +        VcrA5zaBXq8SBEvOu21urGmbB97t8sCLILqq9XtY0SqbAc91HZnX5j14tc3B/OxY3jIrVrXNieVtcmBp[m
[32m +        6xxY170oggaUR+CAiggmjPoN0hEmhDhCZ8CQ9821n45LEaASFg10UhYwZbF0WzAtgKqO3F/Vxu0mKwlI[m
[32m +        FcvVVrGsj3KBFTwa+CRgGtBkWlC5fkItBziZp7qKVVexAFRluvYbVtHpy1gzKyF8XC2EECyDqaBRglCB[m
[32m +        a3WEj69toFOAGTxc83PA08DnGJYzP5R9hPA6aBT7Zj8+hNC1Y2og4pO22L1wEI55T0KU92Szu6yA8gDh[m
[32m +        88A6QednOLxWIOpYJ3UkysE1AtbfDqAHjTiORyb/VwLovyI3gBorJ8HzoMYgfMq1VrHA8gQB8ni4LJif[m
[32m +        ZQif0v0AVPB5jG2PylrKsp8D0FORc9JA9NTGOdTXJj65cR6ObfgW0RsW4PiWZTi7yxtXT2xA/A+7EHdh[m
[32m +        N0FjF6FzP0HTsY6ataEuAL15YT8SrhAuL2ud570geQ9wptf/AoDGG51Jk7V8WgC10JneEvo/AdBflAsy[m
[32m +        fw5AUwSdSTcJitcRz3aJCTfIdtcQx3FiY68iITEOSckJxpX19h1ZB63ZkRKA8l3ixrVr2BgShAXTp2Fg[m
[32m +        rTqY37UXdgSEIvb6LXM8iY5JOX5gFw6FBmFWt65YMmkCkn84Q0i9jmt7dqNLybLY/vW3SD1xHEEL52Fq[m
[32m +        25bARUJmYhIS4xIJm4m4feoE5vbujo979MLF3bs4NsGWc9FshJuahzkOhXlWSUkJ9yiZACrYFJSmV0bg[m
[32m +        aZUReFq5X6p+T/1R4efGcJdlVP7vCP/b42eGzJAZfv/g/rnO/Nn+7wpZvin0NEIb5MT2NoSsmm9jfrHn[m
[32m +        MY95X+R5FLOzZzHg+TnB87NcD+Hz3I8Yq+iK8q9hEcFxc8v8+L7Uc1hS7kUsKPEMNvFaLrfrmxDqqvzF[m
[32m +        QGfQB9mN5XMZYdS37lv4tuQz+L74MwTcp7Cm2huIbFUQ+3tXwq6eFbCrd0Xs7VMF0cPq4NioRjgxoRm2[m
[32m +        9KvmrOkkbHq1FIA6u9naHW0lZ0fbImngKZdZH4/bq87oXN74PSwReDJerh1tZelsntvIq2VeYylVO8Gq[m
[32m +        jlKJ6FXerNk8+1Eb7BlZBwEEUgHo9qE1cHx6C5yc2QpnCZ4C0YMTGmFj/8pYyzF9OxZBJNPbh9XA3jH1[m
[32m +        sGtkPcYNsZHgemjSB4TOathKoAvtVRI7CEdhfUoQPjkXwqZA07t9bmP5XNMuJ69zG3m3z8k672F1O0Jo[m
[32m +        m+ysSwBlvLpdLmMJXdaGwEqI9e5ejBCqY1IqIGhwJQQOEnRWdODTA6Xaqda4yHIOgkhtCrRxvLOzrMBT[m
[32m +        MGkBVGs3t0xukAajBjo9MCoXWuUJXJVnodGIIGqtmtqdNnRcdWyYVCfNCmohVdZPAaiVypWv9upH9cLG[m
[32m +        1nAA0oCkoNVRsCyeBM1QlgkybSwpP4TwGjyyEkLYxvTJ+fgy9h9HCCXEBk2sjx1z5JY7CkfWTiFQzsR+[m
[32m +        QuR+l2uuLJ9yndWazEPe0wyo/lYAzVC/EkBVfj9lVFfxPRZQj8z5npRgUiCZEXS6dT8APRbOZ+LSzwHo[m
[32m +        aVk9N3xt8k5G6noO9Q1ObZqHo1ojumkhTm1fRghdihObv8flQz6IP7uJILobMef3OhsUXYjGjZ8A6AHE[m
[32m +        XtQmRIRIAqiA0upeiLzXBfd/A0DjbpwhaJ5OU+w1gqjnCBbFglGBp41/DwC1UHk/uSHTnZceQJPdFlDG[m
[32m +        sn4mJ8UgyVwLRmMIp7d4HUsovYl4rRlNiCXQxQGyKCbeQmpKAt8wkgiM8UDMLeMeG3fhEm4nONbFxKRY[m
[32m +        HCKAnjq0B7jyA+vFQNsIybnVWEbP/IDTgeuxZeVqHNmyCbev81kQfOXmG0MlGHdYXt26xotYpgnFCTFE[m
[32m +        4BSWJRMsCZ5Jtzn3uxZOSRZPC5wWJm974n9FGYGnVfoXq99Lf1T4uTHcZRmV/zvC//b4mSEzZIbfP7h/[m
[32m +        rjN/tv+7QhZZO9e+/w8sLPkivs73uLFwfvzeA4RPx+q5osJr8K76dywu/TIWFH8BKyu+jsA62eBd7W/Y[m
[32m +        2CIflpR/iQD6Er4v/RwiCXvzCaLfFH0CEc3zwIfAKQCVJXQBy78t8TTmsmx11b9id6cSxkX3AGFvn9TH[m
[32m +        ox7lmFcBhwZUw5ER9RDRtTS8CakrtRttS4GnoDOv0brWOrtTFk7n6BRZOrVOU1ZQr2a5zdmdS+RmKxFA[m
[32m +        BZyrW+bDqhZ5jHwJrHKtFXwGdixmdrTVUSpaz6njUwSgu4bXQiAB1J9gupswevbjdjgxo6XJD+9VjpDI[m
[32m +        cTsXQ+TAKtg5qo7RFgHouAbYyfp7ddzKsOo4PrM5QbSCca/dTUg6Mq0+IgeVxtoOueDdISfWtM9hQFPA[m
[32m +        6dUmG6+zp8mrbTZC57uMs7JcdXIYSF3ROhtWtOU9tsqBRS3fw8oOBeDXuzhCB5dH2FBBqI5GIfQNfR++[m
[32m +        gwiKhEj/QRUNOApEBZuCUMGmoNLCpiyb2uxHx55o3abqpe1QK4AeUc20UV2V+Q6tYKyXjutsFQOckZPr[m
[32m +        YtPU+oiYWBubpzUwcQDLrIuu6lnQtPCqtCQYNe64ozjfERWZJ7DlfAmtSkvBhMsw1hOYKm2glnGQ+iCA[m
[32m +        BhmX3vcROp7gO7YqIZQax/KxVRA+oToiZzRE+EdNsfWbnoj2mUqonIF93tOhjX60AZDZgdaHMKe1liY9[m
[32m +        04BmRjok/QJkyvVWabfSQDJdvlu2TkbKqG5arPEEnh7rp9xtjwQ7VlBrEbVQ+lP4dADUQKgHPmUxNZIF[m
[32m +        VBZUjwxcWvCM8LjeRn5t5E6bOhscF9xTm+dR3+HElvk4ZvQ9zm7+BqeZd373Slw+EoLEi/uMhfPGj57j[m
[32m +        WQidcr29dnYvr7Ue9BDiLh0mCDoweVN1JM/6TkGmAUtBqOQBUF1nBKBuCFXdn18D6kCoc/ZnOghNB6Cx[m
[32m +        Ak9BKKW0AdDrDniml6ygbglI0xSrDYDuKinuR5cuGgBNMrpiYl1bCUzTlA5A72cVNSBr3G4d11tZQp30[m
[32m +        3bwUgmYKAdKIECqZczEJninxhFnWS2S9BAJhigA0gTAaRyUQ/hITCILa9CcBiTpPk/3f0XpT1k1KTUTs[m
[32m +        beWzbjx1K4FlibyOJ7hynJRkxN++46zh5PvKbV4bq6fmkRLLenGIE4gSQFO1bjOZMHjbcbn9iVWTqGrT[m
[32m +        AtBfsnimV0bgaWVfqH5v/VEhLk5PFHyGsh3r40ogpKcaKShflmRd/9w8EhP5WVEKqm+D2ti+jEXaVaaQ[m
[32m +        vs9kHZ/DoHpKq61x2+a1ratrO19bR0Hlylds67rTCvZa9aSkJP2RQi7XTh07P3eeDbatlYL7fuzY7mfn[m
[32m +        rmvzFUu2rS13B1tXdfRcVSf9vUru8W2wddxBc/mlYPu09+7u3/apMuXFx+vPQU5Qmeoq2Fh17Jh6xgr6[m
[32m +        3Gy5DerPxrZM9dWn7Tc2NjYtLaW/Zzs35VvZvjQHXds6Ntjvqjuojf3M7LUNul93H+552P7d9RXc81Kw[m
[32m +        n6MNdm7ufMVqJ6Wft7uOyhRrXurHXc+mbT/2c1Ab206xgsrd49h81ZFsWxtsewXFtp2tr3L3s1V7fZ72[m
[32m +        Xm19xXZsldk+M8P//yGL1nd+kfsRfJnnUQOegs7ZlK79ar2DZWVfhTYqml/0OawifK6q9IbJ86v9NjYR[m
[32m +        9JZV+jMWE0IVCzq/KfakSUe2yo/V1d/AgjLPYT7hc06Rx009ueYe6l0Rh/tUwr7uZXCwN4Gzd1ns71Pa[m
[32m +        6HDfciwvj4P9KuLgwKrw19EnhElvxqubUc3zwpswKquldqf1M662RY1k9dRRKUsJm4savIPFDd81EGrW[m
[32m +        dxI+ZfnUGlAfWSvbFzHwGdS1JLYMqGrWex4a1xBHJn5odq/VUSraTMgB0BJGAtDoKU0R0r20Adh17Qth[m
[32m +        +6ja2DOhIXaPb4Bd4+pjx+i62DqylrnWms99yiPMyfIp8Dw28wPCqtZ4EqA75iJUZifAyvpJAG33HoGU[m
[32m +        c2yXjXqX8Eng7OCkvdq+Y+K1HbLDm0Dq1TqrYxFt8x4BNBsWt8iGpW1yYmkrtuuUGwH9SiJoYHlCqNxr[m
[32m +        CaCDCZcES0GmPWfTrgcNU8x8405LMBVomnoETdXTuk8BqfIEomYTIbaxFlDBp8BR0Cirp8AzbFwNA5KS[m
[32m +        gNR97YZQC61uCJUF1YHOCgRJlQtuy7MNAZjXIYTIsAk1EcaxgtiP4tDxNRAyjn2zf4FuIGE1mNAZMp73[m
[32m +        NZbtxhFKqbDxlRE5qRrWT6oBf9ZdM6oGAmY2x4EVI3Dcfwqi/aYTOKcgymca04JPXq+daWDUgOb9lAGA[m
[32m +        uq2S1jJpNgbyAOQfKbPxkFnveRc076fokHsh1MJnGoBa+DQAKjfcu3IA1LFy6tq420bOMRKQCj6VVnx6[m
[32m +        41xjFT2z9Vuc2jKPAPotjjEtnd08l3DKNhu/w/EtS3B2zzpcP7mZIHrAWDoFo3Fyt72oc0C1+dBhR8yL[m
[32m +        IaTqLNH0AGoglLpr1bxrAbWAml7/CoAq75cBlKBK+JRir7HN9bNpls9/BUATqQSXEmN/TKd7odMta+W0[m
[32m +        csNmRkqrJ9AUeHpk14Ka9aAJN3A7MSZNqVLCzTSpbYrAlflJBNIkuetSydpdlzAqJRMYk5MJjEm3KNaj[m
[32m +        kEAI4stpYkoCEginqQRLKeZOAm5o6yC+wNxJ4ouvoNKc9UlpQyC+tKawvqNEJKc6Fk7tvsu3GgKoA54/[m
[32m +        AdD/oTICTyu9SP0R+qPC7t27MWDAAAwbNgyjR4/GuHHj0KdPH0yaNMnkDR06FF9++aV5WbSwoPlYEFFw[m
[32m +        v3QqdpcpqL6u3bHNTx+UZ/sSeAQHB2P27Nn49NNPMWHCBIwYMQKDBg3CtGnTcPkyv+uul13Vt2PYuSrc[m
[32m +        uuW4fqcPFmzcL+hqr3z3i7dtrxdpO2dd2xdnq5s39YcXfl89wdaXBPr2hdv9HG2sfJXb+7HPUHk22Lbu[m
[32m +        9prb+PHj8eOPP5rrGzf4M+iau4Lm4X4e7qA2dgy1O3z4MKZMmZLWh41Vx0Knno/6U78Ktr36kmzQvaiN[m
[32m +        8nT/inUPNth7PHToECZOnIhPPvnEfNZfffWV+c5duXIl7Y8PGss+m6tX+XvKMy+VxcTIL8IZ3/1sLJzZ[m
[32m +        Odmx3feiMtuvym1a+e52tq2C8u0fbmy+jW0bd1Ceyu18bFBa96XP0NZRUNqWKc8+X10rbcfQta1nn5MN[m
[32m +        to3ybH07tmL3XNxj2O+PZNsp1hgK7v5sfPHiRaxdu9b83lBs6yqozpEjRzB9+nR89NFH5nuqPvQ5bdiw[m
[32m +        AWFhYaaOe+6Z4f/vYHbB/Tz3w/gq72Nmg6FPpRwP4qt8jxnw/L7ECwhpkAMRjfNhW+uiRv613sXOjiWx[m
[32m +        qW1BLKvyKhZXfNloY5sCWFD2eZNeWO5FfFfyGcwr/pQBz7AmOQmbFYz29SyP/b0qIKp/ZRzoVQaH+lB9[m
[32m +        S1ElcXgAgbQfgbRvWcYVsKr237GAQLuyzj/h2zIf/AiOcpOVu6zWeMp66S2rprV4NsxqAHQFx9OGQqsI[m
[32m +        n7KGGvAkcPp1LGrcaUMJkdpgaP+YBtg3qi6OTm5iIFTHp5wleCq+8HF7s2ttMCE1qEtJ7GW949OaGwBV[m
[32m +        XwFdihvo3Dm2non3TmyEHYROey0A3TmyJrYQ6Hw7FyBk5sKqNgLK9+DfLS+CehKgu+YxkqXTm/LpLIuo[m
[32m +        LJ9ZjQSdq9u9gzUdCKMdsxFAsxGgsyGoWz4CrOO+u7xVdoIn1Vpuuu9gZWvCKuHWp2dR444bNLw6/IdV[m
[32m +        dwCUElhaCDVWz+GEtWFVHXdaue963HMtgApMdW3SrGOglKBqragWPK3lU7LXW6Y3xOE57bD9ow/NWlAL[m
[32m +        n7JWWui019qIyFpA5YobStBcP7E6RWCkNkyugfAJ72PjlFrYNutDREypC3+2CdI6UsKn4kAdyUIpDiKA[m
[32m +        OvBJUB5XgXXKE1IrIpQgGjKO7caz/oQa8OVcvTmvyM/bYu+qUYj2n4pDayfhiK9g1ALorIzB0+pnAFSW[m
[32m +        UCltbaYLFP8o/V8EUFNPVlGtAxVwbvmG8DkXx7bNwfmd3xNKBabzcWrrIpzbtRKXDvjgRnQwbp3fa8BT[m
[32m +        ls+rZ/Yw1jEsjhVUmxDd/OGwAVALnoqtzOZEHtj8OfC0ygTQ+wOorJRuuQH0DiHSrdRkQqYslklUMl+4[m
[32m +        qRTCpiyUSYwFn6ke3U5SuVMf2pSIccIdR7d1niivk1PjEUcAvU2olHuvOVbFiC/2vHbyf6o7BFHJDZ+Z[m
[32m +        AJpx2LVrl3mh1wupXgqnTp2K7Nmzp8GUXrQ3b95s5nDu3DnzEvn111+nAZWCXlaPHTtmADYwMDCtneId[m
[32m +        O3Zg+PDhmDdvnoGKuXPnGshxv+i7g641DwGnXmijo6PNy6nGUL761Etyt27dzMusXnZVLijav38/li5d[m
[32m +        ilWrVmHFihVYvHgxfH19zb2ojgWi7du3G7jeunWryVPfuhf1ofpffPGFgR/la6xFixaZedg5a0zNU/XV[m
[32m +        h16uT5w4YfK/++47fPbZZ1iwYIG5V0Gz0pKg/uDBg6YPPUs9E9VdvXo1vv/+ezNfvcxbOIiMjDTPVICm[m
[32m +        e1DQfajO5MmTsXHjRvOc+/XrZ+ape1A7zWnZsmXmGejzUr37fYeUrzZ6lvPnzzefVY4cOdIAS2UaU9q5[m
[32m +        cydWrlxp5i1YXLNmjSnXfevz0vdCz0rfIf2B4Ntvv8U333yDmTNn4vp1ufPf+4cJBT1TzbtNmzbo2rWr[m
[32m +        Sau/JUuW4JVXXsGePXtMPeXrsz9z5oyZg56ZpPE0hr5/aqf+dE96Hv7+/gbOT506ZdprbD1HzVufxfHj[m
[32m +        x00bBd2H+hZ8qy+NIRDWPdnPUZ+RrnU/+sONPn/B4/Lly809634lfX/0xxHdr+aiZ3n27Fn4+fmZ74E+[m
[32m +        Gz1r/TxoPH0XdG+ay7p168xnrjnY56656zPXZzlr1ixzD7pP9a/7nDNnjolVV31oTKU1rn1GmqvyNC/N[m
[32m +        T5+hfu4V1EbSGBpf32Hdk71ffZb6OdYc1Yf7u2Tnp+fx0EMPmZ8DXWtuCnYuY8aMMfPXtcbS3EqUKGHm[m
[32m +        pntRnczw3xGyfFf0WbOuUxsOfVPoKQOi0rdFnsHiUi/Dq9Ib2NOxNLa3LmaOZ9nUrCAWlXoJkS0LIILg[m
[32m +        t0QW0EqvYEnlPyOsWS7MKf4k5pd53oDnkgovYz3hb39PAmUPqmc5HOxVHgf7VMIBan/vcjjcrzwO95Xl[m
[32m +        sySi+pbAgf5lsK9/aewjhB4aQACt8VfT98r3X4dXg3expmUegidBsr0soPng3SovVjbNgaWNsmL5h+85[m
[32m +        Fk+BJ8ddY9Z3enbB1UZChMYwzkNrOY9MamJcaaMnNzXHqhwa18hzdArB85MOZjdbxVoDGtytFCG0FPaO[m
[32m +        rmcAVBsMCUiDmC9L5/7JH5p436QPDIDKIqp4Pe8hsFtReLfLC99O+R0X2w45EdA9P+EzP4J7FTDA6dMp[m
[32m +        J9YQKtd2eM/A6LpOrNeR4Nn+bXi1e4sA+jbWdsrKfG1M9C4BOjvWtiWgEmblruvFfr3a5cKKtjmxVtDa[m
[32m +        9h0sb5MVS9rkwLJOBeEzgAA2ohZB1AFQa91Mg09BJNOSANO64QpEbT0TM091VUfWT3PW5xiKYBk+oaaB[m
[32m +        Tlk6BZMCTWnrjEbY/0UrA6Ubp9Yzrriqb2BU4Ej4lASixp2W4Kg64eOrI2y83GWrEDyrY9M0Ai3jkLGV[m
[32m +        CKNVET65DiLYX/D4GggmRIZwfKWDjMutVA0BBNjAMYTksRXZTvBZlhBaAaGE2PBJnB9jf5YHEkYDCKq+[m
[32m +        bOs1vTk2LuhHAJ1I6Px9APQeCQrT5/0B+j8HoKyj9Z8nNxJEN/F6yxyc2DrHwOexbexj+wKc3LoAZ3fy[m
[32m +        xWvPclyifty5DJd2rcDpfSG4eGK7aw3ofhPfIoTKPVfwKcnaKYg0EPpjlLGGShZC3QBqraHplQmgPwOg[m
[32m +        WgPqUUoSwTOJLzoe3UnmSzHzrVL40pGql64kvqgTKu8QNO8wPzXlBhJT2J/Sgs/EWJbzBTdR1k2+1BA4[m
[32m +        iSzQKaOxcrLVOaPxlCyjLOPrEfj6ybcdXqeyz9Q4JN9JQCL/03EpjlIovvQQTnkThFO91GQC6C8F+7Ko[m
[32m +        F3Cl9YL77rvvmhdEvRQqX0EvjbquWrUqmjVrZtrYeVkIef755+Ht7W3SkvoTbD711FPmxVf1FOtFV+F+[m
[32m +        96YX5GzZspn2kq0n6VovrBZolD5w4IABGDdQ2hdjWWT+9re/GRhTe5XJIvPAAw8YALH3boPgpEOHDqa9[m
[32m +        hfJatWohd+7cBhYEpiqzfamP0qVLm5dzKSoqKm3Ogpg8efIYSFE/anvt2rW09j179sTAgQNNP6oj63OR[m
[32m +        IkVM2j5vvaCXKlUKp0/zdwz71+ciMBIkaBzVs4Clexdc16hRI23uAg/Bs8rvF+xz1TwERsWLFzf9Kl9S[m
[32m +        WmBRpkyZtM9V8xAYawwBke7bzln3Vb9+fVNPEthpPulBQ32ovfL1+UkKqiOgKliwoLkfWTjVXhAjcNTz[m
[32m +        0bzUTs/k5MmTeP/990171dV9qFwQ9eabb6bBl/JUX/MVwDdo0CDNiq4+Bav6DmleilVX81u/fj0efvhh[m
[32m +        A+nq+9KlS+aZ6351rc9D3xH1ozEEjxpTZWqv8i5duhgIVblky/THgaNHj6bl6Q8gb7zxhrl/+ywk9d24[m
[32m +        cWNUrFjRXGtsSfN+++23zXdE313NXf2ojmL9QUZ/HFD/Cvo8WrZsiU6dOpk8zUH19KyU/8MPP5g+1F51[m
[32m +        Va7PWX3rWvm2L3f7ffv24eWXXzbt7XNRuZU+N4GyPkeV636aNGliYFx9SpnhvyNkkXus1mbOKfoEvipM[m
[32m +        +Cz0KL5mrLxF5V/Ciqp/wY5OxbGzcwlslbWx5t/wXalnsbNTCWxsXQhLK76K5ZVfw6JyL2N+qecxpwhB[m
[32m +        lvAZ3Pht7OtZHAd6l8ShPqXTqZxLAtAKVHknPbAi9hsLaBkDoHt6lcSGtnmxtsHf4VXrFayu/SK86/8F[m
[32m +        gS3eRUDrnFjZOJtxh11B4FzSNA+WNMmNlS3yE84Kwa9jcWPxlAUzkmPtHl4DURMa4ejkxjg7qzXOzW6N[m
[32m +        Y1MaI4oAeWRqY5z5pA2Oz2yBXaNqGZ37rD12ELwCuxdBQLfC2D+hDo7NbIzQ3iUIloUJkkWxfXQtRM1o[m
[32m +        ij0TBaKNzHVov3II6i0329wGMNcRMAWX3kbZTaz8wB4EaF77dslFaCRgdsxh6q5ul5VA+Q5WtPonVrV5[m
[32m +        28Q2vZoAuqoD71muuQRVxSsIncvbvotlbd7B0laEz7bZjJa1edfEq9mnX88CCBxQAhGjKmP9CEIcYS9M[m
[32m +        O8uOIFCOJAjq2JbhtQmaBMPhBD1ZSrXBj9Zbyk2WzyFolOCyBmFRLrJaf+lcCxwFnmEEQFkvTdrjcrtl[m
[32m +        BqFzEtOEvLDxHGu0YJBgOKoiApkOoGSlDBxTEX4jy5s4hPXCJlYzWj+5BjZOr43IaQRo1gumQgimyg+f[m
[32m +        VN3AZMQUwqf6Zzp0QlUHOnktBRFYTTumZfVU2+DxLL+PAiZUhp+srJ+1xKHlQ3Bc7rjrCJTeH+Ggj2cn[m
[32m +        W0LpAe/pOOI7m2BKwNM5oB4321+jjIDxfjoUwLHvo8OB7M+lqCC28cjJm2nSR4K1CVE6hXLeHkWHEUBd[m
[32m +        Orae4HkfaeMhBzSdHW0FnlbHI7/CMQLm/XRyCwH0Pjq1/ds0nd7xHc7t/h7n9yzExQNL8cPu5Ti3fTku[m
[32m +        7F2HGycicevCbsLfYdz48SBuXDyMGKZjLhFCLxBICZuxPxImqVtUTLo1ob+kuwB6123X5lklXHVg9H4A[m
[32m +        6t50KL0yAk8BqcD09wJQu9bTyl2mNaL3lCV4lHiNLwPacOhamnR9f93gC8ddIP2JCJdWsnymEh6t3GWS[m
[32m +        u+yXJEvnr9EdSaDpUXoAvUcGFn+b0kOnW+6Xrt9Tf3SwL5ayUgia7EuoDXYederUMS+O58+fNy+bgkm9[m
[32m +        mOulWxYrvajqpdTOWfkvvPCCAVHBgX2Jv99Lp/LKli2L3r17p73EKk9pyb4EK1aZQLRw4cJYuHAhv593[m
[32m +        rVlKq45eeGXF+ctf/mJASHmCpWeeecbMyc7D9qcX4h49epg+LAh++OGHxkqlOWksAYltoz7z589vXqjt[m
[32m +        HK1kiVWZgMeOY6WxZOHVWLrWMxMs6/mqL/VtJTgoWrSogV3BeUhIiOlf7Wwd26+eb7ly5dCoUSNjPbQQ[m
[32m +        pTq/FNSnrF7FihUz7RTs3HQPTZs2NbAdHh5uylXf3redg+6rf//+BmZsvlsqTy/lt2rVCh07djTPW0Am[m
[32m +        y7AgW31qbFlEBcYCeNW3c5P0GQvuBZv6rJWnoD8AvP766/d8ly0wSbJkVq9e3cCi/vAiC6/KVdfWUVqW[m
[32m +        aP0RRd93e0+2XPOXVVP9qFzfR/sdVz21ffLJJ02++pLUxqZVx/356Dvw2muvGegT6KpP/awJXmvXrm0A[m
[32m +        VMHOTaBat25dY6GsWbOm+Yz0XbWQJwuoLK32O6Wx27Vrlwag6kc/B3p29g8VyldQ2t6HvVc7fxtsmb5r[m
[32m +        TzzxhPlDicqVr6Bx9fnIQqzPxs5b+fqeCPTtM88M/x0hi9ZoflfKcZXVBkGCz7nFnjTHp3xPBTXKhl1d[m
[32m +        SpoNhRaUeR7r6vwDq97/K3Z35S8fAt+ySjrj80W2fxrfl3kRfvXeNWs7BZqCz4O9SxEuy9wrgaZHgk4H[m
[32m +        Qssjql8FHOhL+OxXBvvYfg/hM6AxgarGq1ha7RWsrPESFlV6DF+XfABfl3kUi2u/hjXNs8OvfUGsliW0[m
[32m +        RV6sa18Evh2KwYexrJabBlTBwXGEzqlNcESgSSl96qOWOD2rFc4QQk9/3BpRUz7ExoGV4NupCEJ6lsKB[m
[32m +        CQ1w9tO2Zv1mUI+iBkIFoCdnN0NIr+IIZl5E/7LYObYO9k9phAjtOtudwNujOPx7lIB/T0JqD4Jw++zG[m
[32m +        JVabCAkwZeG0ECrwFIQKRm09bTS0rlMO437r3SErVrT+J/PeZtlbBkC92jkAuqYz63QhgLcngDJvuUQI[m
[32m +        Xc72K9qpnODbLa+xhC5lv8u1iVGXPAgihBoAHV3ZwGXQ8MoIGEYAHCrrp3a3JVAOlZWT0May4OEERa3x[m
[32m +        JKgGUH6s6z9cZ386Up6slhsm1TaWy9CxAlXl81kOrUDgrGTcZjdMrkkQlQWTADyBADuqAkIJmoJN/1Hl[m
[32m +        DXwqFiwKLDdMrWUkuBSIClQFnds/bnQPoAosVV95VsoThFoQ/fUAymfBuv7jOKcJteA3qT62zOmGQ6tG[m
[32m +        4ti6idhPGD3oOw2HBKGE0SgCaJSOaqEO+xH6MoDNjJQRaN5PGYGnlRs476cM4VP6FwD0aPhdycKZBpza[m
[32m +        dOh3AtDjW+bi5DbB53yc3bXAo+8JnYtw+cBKnN2+hHUW4eSOVbhyPJyAuQs3f9iNmz/uow5Sh3CdAGrh[m
[32m +        M/bHYwTQo5kAKsh0lWUCaAYysPjblB463dLL1x+hPzroBVBQoRf/nDlzplmNbLDzkNVIL7l6IdaL8YUL[m
[32m +        F4zkWioLiNwM1U5SfVnOlC/XXL2kCvD00qwXVL14pg9qI3iRVUf17Lg2KG371susgEQv7LJwKqhfldn+[m
[32m +        VXfTpk14/PHHjYuu8mW9evDBB83cbF/2hVnQKFdQvcDbMWTdsuCzbds2Y6Vs3769uW9Z0Cywqb5bAkfB[m
[32m +        vO7DjmOla1k/K1eubOBKFqKGDRuauhrTjm/hRM9Vz1Hzs3mqlz4oX3ORO2/evHmNxdoCya8Jgr7y5cun[m
[32m +        PTv1Z+criNqyZYv5A4HAWiCqfHdQ3b59+6ZZydMHe/9WCuqjbdu2xoKpMfQMBC0WclVPa38F4fojhvq1[m
[32m +        bW0/AtB8+fIZd2Q7Jz0rWRPdAGpj9aFnorWnspAL4GyZHdNKEKk/WAgIVeZ+JooFoHpmWtOofmRx1DxV[m
[32m +        HhQUZP4wo/vSPSlP7W2wfUkqlwfBP/7xDwOFAln9nOmPHPrjgwVQ1bXt9EcSWaZ1reemPyDIe8DCuyBc[m
[32m +        f7Swn6eCAFSwb/vRvDVH/Tzomdtg788+D13bPAXFtlw/24899liaW7Py7XdObeTarTlZ67XmM3bs2DQX[m
[32m +        eykz/HeELN8TKrVD7fxSz6aBqNZuLq7AX3DVXsfSiq/Aq/obWFPjTfjU+afJCySUBmitZaVXCKtPmDZr[m
[32m +        a/8de7uVxpH+lbG/pzYXKoWo/uV4LTfbMoTLsi5V+IkcC2g5RA2qgO1dC8Hvw39gWfWXsKrWq/Cq8xq+[m
[32m +        r/QMviqeBXNLZsG35R7F3HKP4YvSjyGobR5sIPD5tc2L1S1zYQdBavOAStjUvxIOjG1A2GyG6KlNcWhi[m
[32m +        Q8aNcZLgeYbAeeEz/qPxeQfsG1OXMFkSq9vkNeC5le2jWE8WUQHoTgJocM9iBkIPTqqHE7OaGgDVdWif[m
[32m +        kgiiAnuXgE+3IowJ6oy9OuTDqnZ5oM2EBKHh/YoirC/BtndBgmw+k94wsAQiBhRDQPe8hM1sjpWUgCp3[m
[32m +        XLvxkF/XXIRU7ZCblRAqiBWAElI7El575MUy5i0lmAo8BaGyhK6knDSBs2N2guh7BlbXdcuNNdQKuff2[m
[32m +        LAD//sUROLgMgoaVJ2A6x7PYNaJa8xk0TNeENVk/zSZD2oH2fUJnZfgMqUixDeFTZ3Kun1DDKGxcNQIm[m
[32m +        4XB8NUIn8ybWNJsHyfK5YZKuq2H7rIbY9ckHCCXkhY7neCwTKAowZf0ULDoustWxcXodbJpRN83aKW2e[m
[32m +        WQ+R0wi6rKN8W1exBU31FTzOSds+fw2AhrCN7iF0QnWzPjR4ci0ETKqFoGn1sef7LjjsP5UASgj1meq4[m
[32m +        2frNxkG/j6lPmP73A2h6RYcQJj06KrBknCF8Sr8aQD/HyUi50joyO9m6oNOt/wmAntjK2ADodwY+Zf1U[m
[32m +        2lhFPWVndi3ChQNeOL3fC+ej/HD93AbEX95D2DyI+EtRiEuzfh5D7A8nCKDHMgGUcpdlAmgGMrD425Qe[m
[32m +        Ot2yL2W/t/7ooBdAvUh+/PHHaWsA3S+FKtNLY5UqVcwLbPogS82zzz5rLDjudrJm6cVUsGpfvGXRsun0[m
[32m +        QfeqF2G9EGscC6EK7jbqQ2vYNJZgUJZJQYiC6tk5qO3gwYMN1CqtfNXTXAWICnpR1v0pyFoka5gdU7Hc[m
[32m +        OzWW0noGkqxnsq7phV8ur/Yl3S1BsXXBTR80D7llSqor4Be0CTJ0z7aOgsr1fAXaWo+rfDuGDUor37ZV[m
[32m +        0H1p/Z4gVJ/nLwX1IZiSBdUCi71f++zVj0BJQCwgtM/NHQSBupeMPmM7bzt3xepDn4/aCIAsuKhMn7OC[m
[32m +        1hjqjwgCNNvego6CwOef//yngW2b5+XlZSx7bqiy7XRPCrLAPf3002nfbztn24fyBdqygMrar3xJz8Z+[m
[32m +        z7TuU8/YPW87N4Go3Lf1HVVeRt8FPU89V81T96c5q52C/aw1llxw9QcLpTUvlamdPgd9fxRkWdQfRmRJ[m
[32m +        1x9KtFZX3wHl2zaaS+fOnU2/ylNbrceUZ4OuFZRn71PB/j6w81Gwsdro5/vRRx81f/hQsGUKuj95EQh0[m
[32m +        FdSH7kHeEpqr7Tcz/HeELI6l83kIRCW55MrFVnlfFHjYpAWd9kgVAanyviv1NL4t+SS8a72Bre0LGoDU[m
[32m +        hkL7epQidGqDobI41Lc0ogdWMBBqYfTIAAGpcx3F+Ej/8qaONiLa1aUI1jV4A151/4IVNV/GylqvYH6F[m
[32m +        J/FFsQeMvi37CPUQvinzEOZXfBKr6r2GfYPKYUvP4lhe/w2sbZENJ6c0xKGxtbF/dE0cmfwBoqc0xtHp[m
[32m +        zXCK0Hn+8/Y4Q6g8OqMZtg6rBr8uReHftRi2MS3wPDmrJbYMqYoj05oYi6jqywU3VBZPQqgANIr9C0D9[m
[32m +        uxQkIBbCWsWE0dUd82FFm5xYTq3plB8BrC+4lDXTWjp1vZbwKDD17ZIb/t3yGIun8rQBker5ds6FAOaH[m
[32m +        95eLb262f4/lOoqFANrWAVABptxtnfhtAug7xhIqy+jydm9jdafs8O4i8GTcNQevZRHNDp+eubC2e06s[m
[32m +        65XHgKhP38IIHFKKoFnOWDodl9uqCBkh66iTDh1JGB1OCJW1VDvLasMgxrJwat1mmDb/0U61lMAzcgqB[m
[32m +        dCKBcJzWdupM0CoGNsMIm2GM933RDHs/a4LgMZURMKoC4bASgc+xXFqrpdt6uX4ywZPgKohUnYgpNUy+[m
[32m +        oFMWUsUCUVlDLWgqVplAVW3+FQANHSN34mrGnTeA8Bo8kfc9ieVTqsD3k9bYsWwQogOmYP+6SYTOGYTP[m
[32m +        WTigs0IzAM37KT1kpj9Kxa30kCm3Wqv0UHkvgBIkBZQGQjOwhLoAND2I3gugn+F4xOdpkguujmExazvl[m
[32m +        giuLqEe/DKBz04Hn3WsDmi6d3DaPsQOjp7YLQOfixDbGhNLT+5bgzP7lOLZrMc4f9kXM2W2I/2Ev4n7Y[m
[32m +        T/A8bFxvb/14HLcuCkA9mxH9CgC99xiWnwdQgef9jmHJCDyt/jAAvXV/AHWOZrkrd5kDoHeB8x4A9eQl[m
[32m +        e/THAWicR86mQ+666aUjV9KUDjrdygTQ3x70AqgXYMHaW2+9ZVzp7Muogsr1UixLT/PmzdOsOQqan6Dx[m
[32m +        ueeeMwBjrafK1xo3uzZUboVa06d1jSq3L/vuoHxJfchqIrjT2j+9vO7du9dYmAICAgysaA6qp1gufnqB[m
[32m +        FvTJxVbzl1VGoCgLkO7NvoSrvqBC0CBIUV2tC9V6ue7du5s+LYApLSCT5dPCmPLVj6BQrq6FChVKu2cr[m
[32m +        3ZvW/r333nvGgqU8G/RcNAe5Qcrqp5d7C0V6gRdMy3onq6vGUV+y2soCqo111Db998LOSRsi6fnoxV7w[m
[32m +        r82WZHVW3/cL6kdjCPa0C22uXLnMnNWfpLZ6/lrDJ9DQZy2w0bNVubsP3YfW0Mot1Lqd2rmml4LKBWWC[m
[32m +        K4G+/jhgn7GCTSuWVVBgNWTIEERERBjY1Get75YspPoc7WcnyeKmZ+bj42Pq6bujPH2P7b0JQF966SXz[m
[32m +        +bvnqqBY96M/qui7LQu62qie7lXfJ42jZ6HvgJ6RxgkNDTXArM9V5Yq1c7PgUXU1d92LvlOCV/1MaN7q[m
[32m +        W/OT1Vau63YukuasnwVZn5XW+Kovq6y+Y7LEayz7HdeYslZrbag+U31ndC/K189OixYtTFr3orH1GWjH[m
[32m +        a/2BSd8h7U6rdZ1yS9YfZfRzojHtM1JQ2kp5undZaLUplDwi9F3Rvel3in4vKKie5qGfR/2xSxCqPPWR[m
[32m +        Gf47QhbtVuvWIkqutvNKEDApbSQkAPWt97aBz3klnjKQuqLqq9jcNh8O9pZbrdZyljVxVL/yDlQOuCuB[m
[32m +        p40FpVH92aZfaaMjBNUdnQsgoNE/4F37NXjV/jMWVXmWkPkI5pZ+2BHTuv6mzMNYUPFxLK32nJFfk78j[m
[32m +        alh5bO1WECvq/hnL6v0ZUaOq4Mi4Gjg8rhZOzJDFszlOyc32s7bYO6E+1g+oAK/2+Qly+RExsBK2j6pp[m
[32m +        gHTnyFo4NrM5gbMGjs1ojhMftTAW0G3D38f6voQ0AqVZ9+lSIMHTq0MurGqfkwCaBz6cR0CvogjqS0Dt[m
[32m +        WQQ+nQl7nnWdAkvtfCsrp6DTr2tuI7MTLmFU+XLDlauugDO4V37Gsoy+Z6RdcBWvdq33FHxaF9wV7bIS[m
[32m +        OnPBqyPbd2WbbjlNvKZLdgOg3ozXdH6XQJoVa7oSVrtkw0qWe/fKB78BRRA0tDSCR1RAyMiKCB9dBRFj[m
[32m +        tVMuwU1uuGa32gqE0IoGNv2HlzfXoWNl2ayJTdO0CVFV42q7carjaqu1nsGESLncOrGzo+2+L5qyjjYg[m
[32m +        qmLWgAo03eDolsDSuOF6LJ2CSbeUZyVXXcFo2ERZQgnDBFLHQnrXJdcZh8oAPiUDoOw3nH2ETeIYE5g/[m
[32m +        sQJV3mjdtDpYO7UOwr9qi0PeI3HIZ5yxih4OmGF2uf05yPy1OhLoHNViZddyOmK/93GzteBp08fCPjWK[m
[32m +        Dplt6tjytHou8IxSHcpCqBs4f6ovKFlCnc2H3DpOKHUD5wntdJtOBjap45vmGDl5c40L7r3w6VhDz+xc[m
[32m +        YODz5HaW75iH0zu/w6md83F6z0KcIpye2LGI1ytxKSoIcRd2IPHyAULnQdz8QdB51MCnVUbQaWXh8376[m
[32m +        KYC6oNOtdACqzYfcmxKlh8/00OnWvwKgCbcuISmOgEmlB9CfkyDTDZ3pZQA0WbCpDYn+GAB16vAFKFUW[m
[32m +        znuB86dKStPPQei/BKDplBFo3k/podMtvUz9Hvp3BwsgcvvTi72sPXpRtEEviHrx1UulJDjSPO3Lp64F[m
[32m +        LQII9wuyzZcrofq26+QUMrpPm6d+Nb5ejtVOG81IejGXtUvj6GVb9WxdvUSrrsbTPeilXC/e9sXZStd6[m
[32m +        AdYLuOYjoBK8yMqpflRHQfX0gm/vWW1UZu9bshCgdnbuinWt8dWv7ldw4G6rdpqjfdbKt/PUPSvP3qPG[m
[32m +        1dwEobo/e092PAXbpyygek6qqzmrnR37fsE+D42nNhpDAKvnozL1qzH13O2cbb+Sgh1f9eyzdwP0/YKe[m
[32m +        k9roOelzUxv7nN1BfehZKNb3S3Ul+33SOHYsxaqrMs3FuovrvpTWc9MY7udq3WvdQXNQPypTW83Nfs7K[m
[32m +        V9Azsm6yGktj6tr9PVJdpfX91DPWePrjgL53qqs56zNXrLH07NWPfbZ2POVpHNXVM9MY6k+fi+5D92O/[m
[32m +        E2qr56R6ijW+2qkf9a/viOaja/vMVEfPUp+dyjWW5qj7Uj3VUf/3k+Zj+9c9qq2eu56Rbaug8VRX9fQ7[m
[32m +        55f6Ta/fK/zRff6e/f7/FLJoo6H0EnQKRHV8iiTw1MZCctPVGZ8bW+UneJbF/l4lCZTOMSqHjWuttXLe[m
[32m +        C6DRAwmfA5yyY4MqMtaxKyWxtQOhrd7rWCM32xqvYFGFp/BN6YfwVcksmFPqT/iu/KP4ttwjRvMrPIbF[m
[32m +        VZ/B0urPY22D17C1cx7s61MEpwhEWzrlYh77qP8S9g8uiYOEoxNT6uHM7GY4MasZ9o6vh4CeJeHTtSi2[m
[32m +        jKhu4nVdimDHmNrYMbaOAdDdo2sTVFuZo1NOfNQSR6c3NRAawTk7R6jkMdAp11ufTvmxpq3O8CRgds0H[m
[32m +        3x4E6N6EUsq/ZyGCX16s6uAApaya2oDIQChBU2s/teHQqtbveKydspLKzVZHr2QzICqr6fr+RQxwhvTO[m
[32m +        j9A+BVims0CdNaCrtUa0cw6Pu63H5Zax2Zyo49uEznexrrvcdHNgbbfsJq14Tee32PYfWN3lbaztTrjt[m
[32m +        lRNe3TifHrng3Tc/AoaWRMS4SlhPUAsZUZEw6rGEjpLFszwBVOdyEkIJjrJqal2nYDJyqrNL7aZpNXhd[m
[32m +        3excGzquoidNcBxDmCR8bp/VALs/bWysocGjCYSEQsGjoFHA6AZKtwSPKhdgOhZPx+opd1y56Ao+N1DW[m
[32m +        EqrYWkYjOT8HRNmXgVaBJe/vPgqSxZPgGTK5CsW6kxh75DOhLIKnvw+fye/Db0Y9bF/YA0d8x+CI33hC[m
[32m +        54zfDKBu4Ewvx+r5kcdyyfrp4FPKCEBlAXW74dpyKzeAOmL98E/NOs+MwdPq9wRQ1dGOuMzfSriUddO6[m
[32m +        3boAVOtCFcsaem7XQqbn4+zu73GW8RmWnZJ2LsLpvV64cjKc8LmT8HkANy86mxJlAuj9lQmgP1VGoHk/[m
[32m +        pYdOt9wvH/8T/buDxtSLYUbzUGxfpu2Lqr22sQ3utipTffuCmb4PWy+joHw7H8Xu8WyegtI2T7HNV9C1[m
[32m +        becOFsjcbdx9pg8WBGw9BcW2vU3boLTq2jKbZ4PS7vFtsGl3nhtC3H26+1OwfamOrWevbfp+QWX2M1JQ[m
[32m +        Wu3stcoFDLYvm6egPAU7J9vGplXP5qUPtsz2bfvPqL7Nl+z3x0p5dh4Ktr3Nd7dVsHXdfSjYchvcZe66[m
[32m +        que+ltSnHU+x5mjbKdh52LHtWIp1/zatOratYE7Bfja2L8VW9rNScNex/asPW1d5km2jtGJ32j2WzXeD[m
[32m +        reL7ScH2p2DzbT822LRie6/uYNvdT+7wc2UK6ct/i9KHjOrcT5nhpyGLYPMeETYFnAJQwaisoVoTurzy[m
[32m +        qwj+IDsO9CyHQ+Y8zzI4QACVK60gUy631tJ5dGCFewBU6z4FoKojaN3cLie8a//ZyEsbC1V4EnOLEzhL[m
[32m +        O7D5bfmHMa/cw/im7ENYVPUpLH7/aayu9zL8m/wNmwibBwaUwIF+RXF8eDmcI9xs0ZrIhuyv/guIHsF5[m
[32m +        DSuN7QNLIrR7IQRpB9vuxbBrXF2EDyT8ftTcbBS0jhC6bVRN7CacnpjVkuBZxwDnjhE1sXcsoaZfebYt[m
[32m +        Ad9OBeHftZDR2vZ5CZ65sa5DXmMNDe5VjMDJ8l6F4NM9P4Evv9n4Zw3n6EUAFUzKzXZVm3eM261zvmc2[m
[32m +        I107R6446z4V242JpNA+BeFDyJQlVOtA5YJrIJSw6dM9L7yVx/sWiK7tmot5eeDXMx/WdM2K1Z3fIXBm[m
[32m +        g0+P94z8CJqK13Z9C77d32bdd1mP/RFCvXty3F6cb8+cWN03H/yGFEfQ8DIE0AoIG6UzP993NioaWQ6B[m
[32m +        2iRodAVj7ZSlc7N2p51C6COwRU6pRggkSDIdOr4i1hPYdL2ecBlO4AyfoHM8a2LbzPrY/cmH5ixPC42y[m
[32m +        UDrrNqvcIwucsnYqFlwqX0AqoFTbDZyHrKRKC2TdFlILtg7c2o2LCKITCcgZKITyn8x5TOP4U6oiiKAZ[m
[32m +        TNgNnlSDAMr5TuczGF+C+RXgy/tbx/sJ+bQ59izvhyi/ab8ZQN1KbwEVgAoyBY2CyvTwKWUMoHdhMyO5[m
[32m +        4VNWT8FnRi63P9XvA6Am3voNTm+bhzOEzRMeABVcnt7uQKgF0FM7CKHbv2d6IaGT4vV5gug5bVi0fS7O[m
[32m +        7ZyDc3vm4+TuhTi2ZznOHAnA5XNbcPPyvkwA/QVlAuhPlRFo3k/podMt98vH/0T/G0GwY8e3L5HuYPPt[m
[32m +        /NzzTP+Cq9j94quXbFuu4E7/XFD79C+p6dvaa8mOraC5uq/dQf0q2DY27c63QVakjIKtk35+7uB+Bu6g[m
[32m +        a5uncvdLu52D/TwUFLvB2QalrRRUbqHVfV/uNjbYPHfsrqvYzsU+SwVbbsdxB/v9kCxY3S/YvhUESu7n[m
[32m +        bMewwf18FOy15mTT9tlYKWQEd+42NqS/VrD3525r03buFp6V764v2edlLbo23y1bpmD7zei5Kqi+rWOl[m
[32m +        cL/vp8rtOAru2KbtfStOX1/zd8/Flv2cFOzzkOzzt3O1QWU2zz7XXyv1b6U+3Pq5svRy95lRuVu/td/M[m
[32m +        8NOQZWmlFwidz0Px8qoEUMbLqrxkrr8v+zQB9CkENPynsW4aS2dfa+kUXAo0HR0dWMnk2TWdUYPLInoI[m
[32m +        2wwsjf39SmBfn2KIbJ8Ta+q+Cu96r2JVrZfxfaUnMafUg5hb6iF8V/4xzK/wOL7m9fzKT2Bh1aexvNaL[m
[32m +        WFX3FYS0egfbCHiHB5fC4UElsLdPIRwaUAwnR5bH2bGVsLF9VgQ1exNeDV7E0dHlsa7JG5hb8XEEtc2B[m
[32m +        Lb2K48iYmoieVAc7hlXAmU+aIbh3MUJZUWweWwPbJ9VF1Ixm2EUADef9+XUhUHYpQPgshICu+eDdXpZO[m
[32m +        HaWSH4E9iyLIiO27FWI/xQmKxQiJRQiT+QmVOuOzIGO52RL8uuQ2klutgNPLE0uyejrHsuhIFsc6Kpdc[m
[32m +        xT5ded0jJ8E2D1a2fxsrdRZox3cJnVrLybbdcxIwCY5d3zMut8tZvoLy6pSVeRynk9aEvsV7zM0+2C8B[m
[32m +        c1031u38FtYPIyz3yo6gAXng3SMr1vbMBt8+HK9fbqzslhXhI0vCr39BrOtdABtGVUTkaALfoHLwG1yJ[m
[32m +        cKrdcCtj47S6juVxWg2EEzI3EkR1rqZcV7VGcz3Tig0QCiQFfrJkEjIPziHsf9HUAKXg8cCc5tg8sy6h[m
[32m +        sgLh0uMia9xkK2P91BrY/WVj7GOdjTPrmOvQSexzYlWmCaQERCe/OjZ9VBdbZtXjfKojcFwlBE+ojDDW[m
[32m +        1XUQ+wqbzDkIKAnIYZMrI3wqoXNSJd4D50yFT61K0CQ4z+K8PibQfsT+ZxB4WS+A9QKpoMkEcKMKCJxc[m
[32m +        CQFTKiOQ7YKmV8PGb9ogat1QHAucgP3e4wh5n2C/HxXwFaKCP0d00HRqBjUTRwM/ombhWMAsHA2YjcOy[m
[32m +        cnoUxfwjgkqPooJk/ZQEoYLNu5J77a+VbX80dDaOhgk67+roeq37FIBa3YXQExu+uEfHN355j45FOnkn[m
[32m +        Nn3F+F4AFWS6dcKlk9pYiNCZJoKotYDatIFR5cnSKQsopeNZZPVU2u6Ue5o6Je1ehFN7luD4rsU4tXc5[m
[32m +        Lhz2QfyPe5B4+SDiLx5C3EWC5GVC4eXziL10ATevRnt0xCjm2l3FXb0/gMZdO06wPGkUd/0EYnmt2Mk7[m
[32m +        5QHNX6tzBEzBqNaA3guk6QE0PXS6JQA1mwxlAKBpGw15ZNZ2upQReEpJiQLNu+eAJupcUCo53ZmgGeoe[m
[32m +        uLwXQH9v3U5NIGQm/gRCf05uOE2v9CD5W+H0515G/hVlhsyQGTLD/1bQbyD+9gJ/AyKZ/5/M/5KQiOsU[m
[32m +        /yUAf7vzmr+rVFkcKY4Va8pom8TcBGYoT2VUSor6YlINbF1Je2MxTmVhcjJ/Z/J3H3+LmjETWWDOek7R[m
[32m +        edNUUgxF2NZZzwlUIhvprOhESudKJ/PfhbgYpFK341mX8U+kfJ1DrTasb9rZc6mTEzgRjnebfacwLfHf[m
[32m +        mbQ89Z9wC7eTeROe+0pltu4nIZZPiqyu+afozGrd1B21YVrzFYgnp5rHo9s3v+L1MAT4SarDf8/Y0i1O[m
[32m +        4K74bwlSNS5lGhOaKf6r46ntpPkEWaYRJLVV/H8rZFla+Xksr/IillUWiD4HXS8o8yQWln8GQR++hb09[m
[32m +        iuPE0MoET8GnXG3LONZOY92smCat/zxCENUa0IM6gmVACcJiacJiUYS0fAerCZ1Lqz8HLwLloioEW8Kn[m
[32m +        drPVus65pR/CvLKPGAhd9P6zWFrjBYLnnxFM8NzZuzAODCqFg4NL48jQMjg6tBROjChL+CyH06Mr4BwB[m
[32m +        Z1sXwlz9l+HV6GVEjypnAHRRjecR0TE3thEY9w+qgD1DS2P7oJK48GljBPUoQDArjB0TayJ8eAX4dCkM[m
[32m +        386OlTOkRxH4dsoNb0FiB0quswTRINYP7lMEAT0LIbAX63YvgBBeh3J+UnCvggjuWRBhfdgXIVLrPeVG[m
[32m +        K2lXW7uJkNJyrVUsy6Z2utWaT1k7VUdxQK+88CGACiDXdSdoEjxXd9L6zewmb40B0awmb1VHwSYhtcPb[m
[32m +        BM93TZliSXUD+jh9rWZ9n16E4r68nz4coz/BlLFv7/fMtW9fzoPla3s5mxT59ilAOCV083PcNLYaNoyt[m
[32m +        g4hxtRA+vgYiJ+uIFAImoS50EuHOY5mU3O60slQKQAWfslLKZdZaKbd8VB9HF7TD5o/YLyExghAZQlC0[m
[32m +        EoAGja9EMHTgMmI6PyvV0dpMSjAphU+phiDC5nrCsCyYgWyj62BZNVWH5YpD1YbpsCkETbOus4KB0PXT[m
[32m +        qrJviSA6g5pVA5s+q4Mtn9dD5Mc1HRCdyXFmVkPItCo/UfBUznNKJawVoM6uj23fd8apoMk4orWh/rJI[m
[32m +        fo3DgbJcypIpfYRoQqZbzjpPRz+1cGqzIQdCHQC1QOpc/1rZ+g6AEkpdcgDUrZ8H0GMuHSWAKj4uAN30[m
[32m +        tce11tFPAJTQ6ZZA0637Aahi43YrF1wBqCctndm90AFPj87sXYqTuxYZnd6zDOcP+ePmmc0E0H2I/fGQ[m
[32m +        s0PuxdO49eMZF4BGI0a6Jv0aAKVuEDhvEj6vH6d0TQhVHiH0p5D58/qjATSB0GllIDQD2MxIgs2MATQD[m
[32m +        4Eyv/2QAvc1/qK0MSGYCaGbIDJnhvyvoN49snsIW57eQgIdQc0e/I6lbBCnClgHMFMHOHQNV2oOXaAbi[m
[32m +        H9Mp5MpUYpjANZX/z7oJbEPGQwLbpKQanL2JeFxh5o9sGRfLPPV98xZw8TxwdC/itgQiJtwLt/zW4YcV[m
[32m +        SxE19yvsmj0bGyZOhu/g4VjUpQfWNG8G32ZN4Cc1bwp/j5T2btkeK1v1SJNXm15Y1bonVlJeLbvAp+mH[m
[32m +        5Aaq8QdY+2EjBLVuie29eyJqxDBsnDYVez7/DKcWL8KlNasRHxKM1A0RwLatiD2r94DLZFOieNx18mkM[m
[32m +        UuJv8MHxKeiZ8DbEfvo1HstLrXi/7FEC71zPhf+KMb5jUFX2az0/NdOzVJ7Nt7KfifPEPf8nKUMFVgJV[m
[32m +        kyk85b9BJv1/KxBACZ6VnsOiCs9gYbmn8W2px7Gu7uvY3a0IwZIw2buU42rrOULFWePpuNq6JbdbC6lH[m
[32m +        BpbDvr7FENHuPaxr9Dq86ryClbVfNuA5l8A5r9wjWFDxCSys/JQBUUnW0GXVn4d3w9cQ0SEHdhPuDhE6[m
[32m +        BZ+7CbH7B5bEidGVCKGlcGwkAXR0eZwaUxFnCSobCXDrPngV3o3/4gHQ17Gk1vNY3zEndvcrjgODy2LH[m
[32m +        wMII6ZQVO4eUIGTmMa6tAVLvAgjvUwwBXfLBl8AaSHAMY14oy7aw7rbhpbBhoECyEML7F0Ron/wEz3wE[m
[32m +        0FyE0jxGug7p7UjloX3zmzZ2I6Ggnvn4Rf8noTMr1nV2NhXSuk4BqODTv5uz261PlxxpAOrfO48BSL+e[m
[32m +        ubG2mzYTymZi5QsmBZgGPgmeim2eF9O6Vl3BqwFYgqsPY9/eTPfIaqDTh5L107s7wZZ5a7pnRcCAfFjX[m
[32m +        OxdWa80ox/bqlhNeXQn3WuM6uBxCRlRC8MiKCB1LsDSQWJHAV8G4z1o5u9o68CltndXAHKcii6c2ATK7[m
[32m +        0MoqymtZPjfO0JEqylM7QqNHIZTgUmApAI2cWdtYXGXtjJjmwKhgM2BcRWwgnG77pIGpL8un4FMwKkup[m
[32m +        YFXwqWsB6/pp6rMqNsyohs2za2HH5/Wx5ePa2Cjw5LXAc+OntQmfSnN+n9QyABoyvQpBk/dnNZXzncF+[m
[32m +        mW8gdFplBE6vhoDphPTPmuPw6uE4FzoLx/ym42jwxzgc5FIwodOln0KnW/85AHpi871ut/8eABVoLknT[m
[32m +        uX3LDISe2r2YELoYp/etwqm9Xrh0LASxP+xC3KWDBNAos0lRzJVj9+jW1eNpiuN1JoD+dwLondR7lQmg[m
[32m +        mSEzZIb/tiBcEQSRnxzQUYbox0NGSczgb1Pmk3bkYpzIwniiU1wi4TOBQJmAG1QCG6TeicPtOIJZPAEz[m
[32m +        NQZXCZoJSfy36uRBXFm9HBdnzcTZvv1xqE1zbO1SDbsHNMe2IT2xffxU7P54GY4t2YmLAedwft8pXDly[m
[32m +        AbGn+W/bDzEkOo4Xw7FjCHOcCnPSpEN7dNCNgE5WW9zm+Fap0nWy9DUkp8T8pJ10jbd1lRB55xL/7Tt3[m
[32m +        GdePnsGlQ8dxdvdB7A/biMjVvjj88SzsGzUMm/v3xtaBfRHZpwf8O7TBpn69sGXaTOxcsobvXhG4evQ4[m
[32m +        oToGSfy3Ko5PLlEEnnCJD/EaxVH5b4s4/qbnHtImY29AwC765HMXkCpLsT4b8+Eo4fpsLPjq47HFpu7/[m
[32m +        sWAsoN+WesyApyyhW9rl9exUW9ZYMhVbyEzbYEhrPAmZ0QNZ5tHhvqVM3t4eRRHRKhvWNfwrVtf9M5bX[m
[32m +        fNFYOuVa+1XJP5lY18trvIAVtV7CQkKpwFMbC0V2yIk9fYvi4KDSVClEDSuHowSeY6MqIXpEBRwn4Bwl[m
[32m +        YB6jIjtlJ6hmxVlChuJ1hM91TV5LA9AV9V5CBGFuz8Bi2Ett75sTIR3/jlWNX8KShs/Dq8VfEUBo8yfY[m
[32m +        +XV4F6HdcvFLVJhf+uLYPEhWTcJlz5wI7p2TcTbCZHZsHloQO0cXJ5QWRni/XITS3IgYVAAbBhfE+oH5[m
[32m +        CaiE1355EMY4qFcOpgsgYoB2y81NYJW1U2s8sxM6dfSKYFRwmof9FDR1vLWDLeXXIxd8KVkurUVTEGmh[m
[32m +        0lhAqdUE6vSWTwukvj1zmboCT8Gp2q7q9JaBz3W8l7WETuOCSwlG5Ybr00fQSdDtlQt+/fKZeI3mwLkt[m
[32m +        l3vwgGIIGlYKQSPLIHBUWQSNKUfILAe/keUZCz4JYZ71mUor1gZB6ddtKm12pCXEhk9SHqFQlkpZLV0y[m
[32m +        EEl4NNZMD0RakBR8CjyVL6mOsXxSpq6rfrAHZo01dJKspVUNfEqyfoZNqUzArY5tn9VDuGBzGscjXIbN[m
[32m +        cMAzlFI6mJDpllNW1bQJnV6R14Ruwuj6j+shhOC9ZW5bnAkYhRNBUwmSswmfjg4ROg8SBg9QB0MEk56j[m
[32m +        Uaj/bAD9qdXTrT8CQM/K6knwtDq3fxnOH1iB8/uX4+w+gujexebIltP7V+LcIR9cOhGOGxe2I/7KPty6[m
[32m +        Ek0RPC9LhMkrp6jTRpkA+t8LoD+przyPMgLN+ykTQDNDZsgM/8nBce7Ufw7IGHkS8j6V6y3xkmyUREaK[m
[32m +        Jxjd4n8kJ7m4xhCTLl4Bok/gSsgG7P56PryHjOW77ECEdB2MTcMnIYp5l4JCELd/L5LPHEPK9R9wlbB6[m
[32m +        nb3dpGJNn4pvcQSSlfxz5d96R6QlIuM4d2RXJEzeIVSmUZtbMYSvWwb6rOLv6DrWzFo2Wlvvzh2LrerH[m
[32m +        yumfSHqv7lCxvMc4zkmK4fxiObebCUj64SoQFQVEhgN+Pvjxs89xeNgo7O7aB7vadsPOrv0QNGoSDsxZ[m
[32m +        iMu+Ybiz8zBw6jKHYT/XHBdngbtmG0PdoPivMsE90YCkPgITbMLzmdwtSFfE/3MV/Z8JWb4r/QSWV30R[m
[32m +        G1rmMNbONFdbWTIFnC7JAnp0kLPB0PEhFQmnOuezLNMVCJ5FsL4FYabeX+Fd51WzY60BT0LnVyUfIHj+[m
[32m +        Cd/IzbbCYwhu8Tb2EjT9m/wdi6o+jaBm/8SRIQTZoeVwYGBJHB7KcQicgs+TY6viyPDyJh01vCw2dM6O[m
[32m +        ZXWfN9raMy/OyKrVkTDW6M/wbfYGokaUhk+z17GWMBpGGNtKiApo9Sa8Gj6GVQ0ew8qGT2BVo6ewsNYj[m
[32m +        WFr/Kfi1eR2RPbJhI6EsrOu72DmsCLYNLYTwvtoM6B1CZE5sHJwHIb3eReTAXATRdxHc8x2WZzf5Gwbl[m
[32m +        Q/gAndtJGB2YDz5d3kIQgc6/e1b4dcsO365OvK4zIbdvXgJtbhOHUREDC7L/fNg2siQCeuRAIIE3pE8e[m
[32m +        BPQi7BEgrRuuBVBJbreBffMhwGMJFWTacoGntYqa+gJVj2XUWFB5n3K3lSuuYoHoesJ02JACTOeAN8f3[m
[32m +        4fg+fQSgeRA8uAACeX9re+fAsk7vEEKzYUX39xA8vASCRxFER5cxElDK+mnB0rGEEsQImxZA7bXdVEjX[m
[32m +        spYKQC2Ehk3ULrUOfGr9piyYFia1jlMuuYJMudQqVr4soQJLC5uShVIHPlmPsdaCyoK6YUYNbPyohoHP[m
[32m +        3V83QtT3LY0FVFAaShAVeG6YXdOsBRV0yg3Xwqhg08paPq0rrgA0bEYlygOmM6uZ9aEbv2iIvct64UjA[m
[32m +        RBwPnY5DAZNxhNB5kEAoAD0QdK/brRtGHd0FzvRKD5luqdzC60/KZZl1AefxiE/TyYHPDCGUoGnAcyNh[m
[32m +        NM3q6ejkll8PoHan218jC6YWPBULRM/vWYhzewiYLgCVzu5daiyh5wmj5/Yvpph3QBC6Aif3rcTZKB9c[m
[32m +        PbMesZcPEi6jEHf5CGIvRVPHEX/5lLNO9Cph0gWdbv2eAJoYc86l3w6g5hxQKqMNiH4rgCYm6lxQB0IF[m
[32m +        lW4YtXn31X8wgKbX7wWgdtOKjCDzX1FmyAyZITP8UUG/Y/R7yqwxTJFSkZBIEEpKMMgnRLtEDOJvUVbh[m
[32m +        77RE5sYR2m6x5NxZHPZZh1X9huOzRm0wr31PbJr1JS4GhiNh937g9DlC2jXEplxHAkEzifAaR5LVEs4k[m
[32m +        GVLlOirrHaXllvL21e9gWVBTBYeclpF+DRrpQkgmC6dg1KUkQqBV8hXcSb50HxH8OJ80JRKapWQCpq61[m
[32m +        5lPQqwmZtaCMTVoQzN/tnEgqn0NSSjISkhKRmJyEZIKy4PEG//8WJYSOS7qGpAT2J/fcGD0r/jt5+Cyu[m
[32m +        bdmN/UuWw3fiBCzo2QWzmzbErP7d4DtnNo5HBgI/Hidrc46aUxJ1mfOK44NKpGK1XpX/9vE56lle5Ug3[m
[32m +        +CyE3PyX0TwZ85z0XPUs0/1b4ta/PwD/D2s3T08uLqBxAAAAAElFTkSuQmCC[m
[32m +</value>[m
[32m +  </data>[m
[32m +  <data name="pictureBox6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">[m
[32m +    <value>[m
[32m +        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAA21JREFUaEPt[m
[32m +        mc9rE1EQx+tP9FA96J/g3du+hCIE9tVWpT/8URFU2ovVnhTBgxeJnvQieBAVvGhPFZGKBy1SEKw/7qVS[m
[32m +        VKpQFKOnmt2kTe2OM3EWYjO73c1utiHkA18Iyb6Z72R335vd19aiRYtkWexK7yloddQyUxctU93Ka/WU[m
[32m +        RJ/pu4JOHaFj+PDGAQ6oHVZnasjS6qFlGvMoCKh5SxsPaCzF4HDJA9nMZlunRvCfzgkmQ0rl7E7jHGSz[m
[32m +        Gzl8Mtha9eVNY1Y2FUHamMbLT3Oa+gEDA5vyprqKSZ0qE/HJyWsjCwAbOG28gGnuwiSTq5LWU89iv3es[m
[32m +        LmMvXsdfhWR1VfnyxdxsIxowPLwFp88pKVESwtyvyQPbqR28J+5KCZIUeWA7tWGZ6W4p8Poo3c22wkEz[m
[32m +        FAaYqQ5YLfvUYbCPHxJ/i1Ez5IntBYcWKCGYqOKVS+AUi7A0eh+sg/vEY+IQeWJ7wYDejnZcnH5KwSRR[m
[32m +        IS4rv3KweD0L2HqIx0YSego1JYc5G6TKQlxW5j5D4fwZ8fgoCnVWsPIXUhAvSYW4LE+9AnvwmDiuJqE3[m
[32m +        tulPuZvVxpIYxEN+hRDOn2UojT8Cq1+L40MJvYHWO9muN/n96oQYwEdrFeLi/F6Axds3weruEOMElW0a[m
[32m +        /WzXG2rYpMF+ClqIy8r3b1C8dhn/XSXGW0vkke16U8tKHrYQlz+zH6AwMijG9FOglR57m3FpsJ9qLYRw[m
[32m +        HAeWJyfAPtknxpZEHtmuN3i630uD/RSlEBenVILS2ChYPRkxx39Cj2zXm6YppGkurSa62Ztk+q3lGSRo[m
[32m +        IXEtiIGeTbDn39rILQqejQXyyHb9aeSmMdCN7tI0bTx1lzjox+ogXqospK4PVqbKhX7XhTPKBTlYtaiQ[m
[32m +        JB51yRPbCw4MZbbhvTInBlylZF4+qC/kie2Fo7xdIAZdB6EXthUees2Ps8RjMXCCypvGk8hbDjCQ3o6B[m
[32m +        3koJkhCuG+/IA9uJBvRkdmPAj1Kiegqvhk+Um23EA20r4Jl5IyWsj9RLysnp44VaAzwzd+TE8Yly1PR6[m
[32m +        NCy0PYZT87RkIpKS2nqrhGYR2zTO0mormgqlddoMrYRaBu7NnlcbXEPYnJYL6O1o53CNQblH61Sn0eQN[m
[32m +        nHHuodExbCsm/skYK3+Hv9Exgd4WtmjRIiba2v4CczSC80q+hpwAAAAASUVORK5CYII=[m
[32m +</value>[m
[32m +  </data>[m
[32m +  <data name="pictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">[m
[32m +    <value>[m
[32m +        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAU1JREFUaEPt[m
[32m +        mEFKw0AUhucIHsUbeJumZtOiG2dsICu7UJgkRKHYguDSRYMeQC2CHsA76MriAeQ5LzwLynQjGX1T3g/f[m
[32m +        ZmYy7/9IVlESScCkxm7v6monRrA7aSjVH1UPPW0hRrA7abg3ktVPdfMIi1eICuyM3UlDRP4dEeGGiHBD[m
[32m +        RLghItwQEW6ICDdEhBsiwg0R4YaIcENEuLG5Iv3D8mVvPIPs9CoqsDN2Jw2lElO8+/6rxgB2J404RPS4[m
[32m +        hJOzesUgL9r16ESubyYAb5crUAbXoxNZx4aK6GLquO0CvHz/6BwOji+84F5bwPPsL5mSRrfBkrP5Apr7[m
[32m +        Zy+4h2foON+IyF9nmNutxJQDV2aeaOu+0e9gyXRUfaTZGtwenvE92+Luxhk0LkxwgCuxxCKBWQaV6Rmb[m
[32m +        e4aGYkhju4+7/O7HsGAkxjY0ViKRSL6i1CcwashXrS2X+AAAAABJRU5ErkJggg==[m
[32m +</value>[m
[32m +  </data>[m
[32m +  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">[m
[32m +    <value>[m
[32m +        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAACIVJREFUaEPt[m
[32m +        mHtXU2cWxl3zCfwI8xH8BtMvYLWdmdqp2tHaWrWgBEEQAgn3ACEJlwRCLidXSAgQwRu26AFURPFanYsz[m
[32m +        bWmLl461o+PUtqOd9cze77kkIYGAZaauWey1nrX44yRr/7KfZ7/vYd1ardVardVavTQFafP6f7e/avqx[m
[32m +        Y6O8Ej3v2CT/4Pi1/L39t/K3tjflf9q2yo9t2+VH1h3yQ+su+WHre/KD1j3yVy0fyPdbCuR7LQfkO5Yi[m
[32m +        ed5yUP7SUiJ/3lRKKpPnmsrlzxoPkyrlT3QZ5U+bjKY5u3m92mb+et7+quPH9o1YiZ63b8K/HK+DIEAQ[m
[32m +        eGLbin+0vY1H1p34xvouvm7djb+17AVB4F7zftxpLsK8pRgEgM+bDoGaBzWPTxsrQU3jrw1VpGr8pcFE[m
[32m +        MuM2q95Mf9c41Dbz1/P2jRO5ml1MBK5DPFUhHhPE3wniYStDvE8Q+3C/uQB3mw/gjsVAAAfxhQ5QQQBK[m
[32m +        89y40nQN/lxfiz/V15Hqhf5Y18CaUNvMXysBUSBe0yHIThkQDwjiK4K411xIEMoUvmgqpSmUqRNgAOWX[m
[32m +        V5pXGuem/1DXhFtCFtyqbcZNRf8dkGeOzQTxGzy1bxEQbKdcEJSF1BQayxULaRMgAP7lU81bqOEWfFzb[m
[32m +        SrLiBqumTehajW31QZ45NoHCje/sbxDEWwSxXcnEIhCcBZ6CkoFqfQIaAP/i3Dw3fr3GRk3bSQ5crWnH[m
[32m +        VTOrg7W6IFouvhPh/h2etG0jiB0U7F0iE5kQHGjFSp80GMUUFP/XKxPQAOgXv07NX+Xmqekr5k5cNndh[m
[32m +        1uzErMmFmaouXKzumlTbzF/LAdEtpYf79wTxjr6d7mdNokK1kllA8BQ0C92o1QDaU81T45dM3bho6iG5[m
[32m +        MX6oHYFGCYPGrhm1zfyVD4RXbaaltFy8RxB79O2UYScdgq3UKCB4CoqFHATQQQBOvfmZ6l5cqPaQvDhr[m
[32m +        9MDfEMTme8DbN7/5dvMDbFBbXbrygWhbSpwXmqX0XHxAEPv17aRlQrFTHW7V1OOGuQnXzC24YrJittpO[m
[32m +        dukQtpmucuG8sQfnjL04W+nBVKUXk5V+yBVeuKwJASJ0F4+WBbMUSGoavKXeUletZiktFwaCKBFnBG8n[m
[32m +        LRPXTbUYq6xDwO6FZJfgswfhtYfQa4ugty0Kd1s/eqwxdFvjpIRo3mkdJA2hNjSRAtF0HzvUlnPXUiDP[m
[32m +        ckxDrFq2VEu6pcoIokLfTpyJ6cPV2Hfxs+yGforuw6S2nV2LgfCm+kFsKiUb2dNgS/E0VEtRLviU5u3E[m
[32m +        B5tcWo29qw3CWmwyi4FkbKr0bOjTULbUnJiGZqk6WrGNYjudLjETyFzuZl5cjwnkl2rrmbUYCIdcOzf4[m
[32m +        8ONN9bXYVHtFNrKmoVqKNxQfcucqLDAnZLwx932uhlauu7i+ZOhzgaRspVxFlHNjV9qmSs9G+jSa9DU7[m
[32m +        a3JgotyGk8UtOFbchlGDA0eKOjF8wImhAz1I7PcgXuhDrDCAvsIQooURRAsiiBRE0Wo5lQ3xCEtf6XOB[m
[32m +        5LKVHnI6N/jw42nMZU2jWUyDzwo+6PiM4PPhfJWfzocQJo1RyJUxnK5I4KPDwzh1+AjGyo/iRPlxHC87[m
[32m +        iaNlp5AsOYkWy3g6SEBtdenKDaJtq5StlANQC3mxfoLzpuJ1q2WDp8EHnrhm0EE3XeXDuaoApowRgugn[m
[32m +        iAGCGBIQJxmi7ASOlY1h9NCHGDk0juGScbgNI9h9Zh6G5O0v1TbzVy4QJR/Z22oxWymbik/v1DQu6dOQ[m
[32m +        xDQmKvtwpjKO8YpBfHg4SZMYJYjjKsRHOFJ6GsnSCQKZRNwgI1R4CuHCsSm1zfy1EGSpfPC24rc9vhjy[m
[32m +        9Zwvhbqt6DLIF0G+uc6anHSCuzFdvXAaiqXGykeEnVIQZzBMEEMlZ5EoOY+Bg9OkCxgoufDit1/tNOd3[m
[32m +        jidtW3PkI7Wt+C3vtrgUZtrqkmorJRtBunpE9WlolhKZYDupkxAQBBA/OEO6iFjxJfQXz744iHjvyAr6[m
[32m +        wrW7MB/KtuJ3Cr7R8mVQs9WUMSxspWSDAp42Dc5EslQmiCkdQgG4jL7iK6yfAqJsLOVaorw8pUBSQecr[m
[32m +        SebaXbitvKqtwrqttGwcp4DzNDgXw6WTGCw5R1ZKQUQNVxExXEfYcG01QBYehOkbKz3odMtVD0EFhPJB[m
[32m +        7xTTKsikyEdMD7lmKy0bqWlcZCulQXyMUNHN5YNMBW3zJ8NuKOrBiZAbx4NuHAt6cDTgwWjAixHJi6Tk[m
[32m +        Q9Lvx5CP5JWQIA14Aoh7goj1BtHfG0KfO4xIDx1q3RGEWK4oAixnH/xdrH54O2PwdsTQ2x4X6nEMCLns[m
[32m +        dAMmOW0JdJE62+hvy9F5tc381RcfuhwcOApWID5KGoEUI/UfgZ/Vl4Svbxi+6DC80SF4I0PwRAbhCQ+i[m
[32m +        N5xAb2gAblaQmmIF6GrOkvrhkvrg8vfB6Y/C6YuiyxshhdHpYYXQQfAd9CO0u1kBOHokIXu3X8jhDF5W[m
[32m +        28xfwYHRiSyImArRzxCkRSESGRDVlg7UtDpzQ/gYIoJOAZILQgHRIFg2l3/51mIQBWI0NwRNYzkQPIl3[m
[32m +        DUa8X2IiCAJZFCKMDgFCAAIkN8SKQaTYaNHSEAqIgCBlQpC/0+zU5pKEVgShWsqeA8Tu8hWpbS6vpIHk[m
[32m +        Bql/xOzrTyqKsobMHk1hVsLs1hSMC1kc3bZ3dhdMaNqZpX0TDdZOGwGYFQXNZCVVkpC9W5MvU05pef90[m
[32m +        WI16bcv2N1/fsg1LiZ9RH395a9uuPY5tu/Yijyzq4y9v7dxnmCEhj5Yf2J+jzGbzL3YXlT8lIY+e8rPq[m
[32m +        x37+kpLJ9aGB0V9pcknxzRX1rdeWI342/bP8XerX/u+rO5x4RazcVVFiZWt1NcveK22gdTmxGqJ1+4r6[m
[32m +        tWu1Vmu1Vv/3tW7dfwCFd4rYRmXQJAAAAABJRU5ErkJggg==[m
[32m +</value>[m
[32m +  </data>[m
[32m +  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">[m
[32m +    <value>[m
[32m +        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAA9NJREFUaEPt[m
[32m +        WEtrU0EU7k/wJ/gT3FlBRfDR0haa9KlQe5t7b6UUwQjFRUUaF3bRLhrQCrUuSiGbVmg2VVCxFYQqiK0o[m
[32m +        ggpW6FZpVn1ixnNuzp3MnUzaJplJjOSDj7zmnu98M2deqauhhhrMor+//4Rt2yPAiUgksiQSv4dXa2Bg[m
[32m +        4Dg1/7eAiVHi60B2RK4CLQpRWUSj0WPUy5tCgoUSzVfOEJYQJZGTnH07zpzx+Qxn1pgzveK9t0dnmX3z[m
[32m +        Tk577xnbXsCOofDlAYj2gXhwFK4PMWfyFXOTv5i7uHUw5zY8Y5FrgwEzwNWyzR8yEUjAiS+qEz6MYAhH[m
[32m +        T4q3aXxkqJyyIwE96ia+qZMsgN7oBM2skqR+YC+BQHZOHGJi6OUWG1vZYRPvMhx5vc1uPFe3RWJZ8tgZ[m
[32m +        xklaL6CkYqJQPhNxSDr5dY+9+LGvZOLTLhte2lY+a9+dEo0wrACS1wOcgBCYl5RqTuAIzH3JGnj6fY8l[m
[32m +        Pu96xibf73jvRUP4nRwDad8aFc0sUQp6AAHjPDisTrI4mliExH0D996oe3zw2ZZnwDfz6MNuThtcrrkW[m
[32m +        UOuoQEA+N5yHsMRK4tjrmNg8jAgmK/8uE0sLDeMzqnkjrWR65gqtVDywm/ydI4zJo5mjmPDpLwaq37Cz[m
[32m +        BM11SqU0iJMce0olrJ2wqQpGmJZNEgLx+eGMP1ELG6B4lHFd9xylUzwg0HJFjAirF54mKJ3iETAy81Ep[m
[32m +        aoKSkRilUzwCRqbfKkVN0KyRCpWWljkSWLXgPqESNUHceHUb4cd2XElUotoJ5zhfE6nlWE/nLB7Und9Q[m
[32m +        i2sknuUEzWVKpXRAsDU/cDnmiVhWUBFRSqN0iOXl3UMMjop0PElpv/pC0J++gLGjCpzjxHu8lmVXRmBU[m
[32m +        gNpLDExI/7CkjN3dIXhSEFIe6YsimpBuh9hxJKsfdG/nE98TLHVvyR0JNPEHGCZZM6DlOBUQhl24mHOY[m
[32m +        N7Fz/9vKxLTtfeNmVCPjieM/jFhuissXJ2x23j4hLLEC0+JnNNNjWb0kaw4glr3LS8RywZESmSd5ZAqS[m
[32m +        7gP2wntupqfXYqebwunzrZ0LJGkOdBXmB8sCiQZi4urkm7lqWexMU5idbGj1eCHUNUdNzIIM4Qjx/eYA[m
[32m +        LkPC0XybnWXZztnmtrRvwuelUGeCmpQHmCCeWKlcYkj8jDzq3nAx1DkrG6mIGR3IZ6axrfsxNakeqMzU[m
[32m +        N7Sm/yszze3d96lJ9UBpprG6zQRWs6o1A3NjSjRT3xhKt7RfGaOfqwu+mVNgornj8jB9XZ1oCHc9aOm4[m
[32m +        EqGPNdRQQ0Goq/sLu/czdIxgZuAAAAAASUVORK5CYII=[m
[32m +</value>[m
[32m +  </data>[m
[32m +  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">[m
[32m +    <value>[m
[32m +        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABbJJREFUaEPt[m
[32m +        Wm1PW2UY7k/wJ/gTjP4A378D9r2wgQrJIHEqJBph7LSHtsBAYLoNjVISmTNDY4wbhXLa0vIO3cbGBmWT[m
[32m +        YB0ZTlQWBXF+wfs6PJX29Dn0tLRpNV7JHcLJ9ZxzX+e5354Duv/BQYkQfKL01NCzVmfwglGUvK8IvkWT[m
[32m +        I7AGM9hHl83O4KDVFWxg9OJCieB90iRKA+Vt4zde75m7/+7A6p4wuL53xvuIa691zQXZ0uJASZP3Oatz[m
[32m +        bLz23MKG+PWPXKd5VjRCSt67+pRJDFyr74tu8hxNZ0UhBCGE8HF/+zPXSS3GE4Ld1Qu+HZsrtJXO9MLo[m
[32m +        H5R7l9nSzIAkRrI2Xor9znMuE1MTUtd7a5fHT7TTg+uPLS2BL9myzIBQKm8Nx7TsApK89vzCxvH2iTtI[m
[32m +        fpPDP0NvsT9ueBk8R7QIIRG7RxJhbglupBNR17uwZWkJ3jKLkgNVjC3XjHRC8IKMjoCX0TMDwindTjR4[m
[32m +        oju21vAsHGHLskI6IfDB6g7dhU9siXYgDNRE4PrxM5P3TC2SjdGPBC2hhV0xOEZn2BJtoNi+qJbYuCHi[m
[32m +        H2HH6EeGFiGwBs/KrtHh72LLDgccRInl3QgiTC2Ba1lt8SFQCkFi41mJz47bq+/PbmrKQzjKCylck3ci[m
[32m +        xyIAWciFfSEk4E+zM/BVeWtoXs0Po0OaY0v5wA3VOjZyIpfhlIj4jgiX1/+CCPkaPataJTKoxD8sa77y[m
[32m +        vLyYB8xOvIWoTrlKbB4gpLJj6jH1mm/YJRkmMXjync9Wf1P6g11Bj2K0ZCDuMAAqF8FQYhktL4AQmt9G[m
[32m +        2K9JsLlDczyfqnvmH3BzBZWKN8XWnV/YwoMYLS84LO8M9pGXKdwfKf2Sy7Hg62S0AyCRlWQYOjajFAzw[m
[32m +        geeb0S6tMMo+8EZ4iQXVGDsYrWCgE6adV46rOqbvJ+0mQgcnOyUROZPN7JRroIKd/Ph2SjVt6F/ZSwp7[m
[32m +        izPQy1OMKZZRCo5j7ZNRpX9NX8T29ILUwSg6HTWYYSUJhrxhlILD4gwuKv1DcTKL/s8ZhSqDMJpCghns[m
[32m +        vglGKTioPM/zfKST5UExorFkjUfCYYhRCg6bO+zh+WiwS1FGQWj57/FIxSTE6gr38Xw0OKS7jKLT6U/7[m
[32m +        uD3k3xBatCNLjLKf7LxJ0+oaW2aUggPTsNI/GKWFxCg6XVnzcCtKmZJUZOV3WekfWgaNVh8wChriUAmv[m
[32m +        IcpzVp5G90yg1hDhc1JDRJuv7JyKKYnFMqJYXEE3r2FXd8+tpwycaoNZMeQJ+Xab51t5a/g6oxyAGksf[m
[32m +        T/XbfdEdtTEebyPfs1iZMPwSQlzpF7o6+ZzaHuBQ9dnIT8oFMJwcGe0fQASV7Vi+zyo2V3iW51N1T4TC[m
[32m +        SuUlqn14oOPmtt4h1TKaLALfvd78ZCk52XIMesaJek90W+kPzCRK84yWCjjF20YYPhGhesRFIAxRsvMl[m
[32m +        xCQMP43zBs+X+r7lX0ubhl5gVD7SfQ6Ki8C1fAnBy0LfUPPDJPpTk1wJ+TOMSq5AQGJByIcQiMAQq/ZX[m
[32m +        MCq5a5p7G80v3fgExLtRouVaiMEx8kxlx+SqmojGS99vJx2ktACDJK8cJ1ouhRhFqa6qc0b1Txi4TlN6[m
[32m +        hNG1A1uMnFC7MSwXQvTNvhfx3Qz9ivcMGHyoaJ9YhE9smXYkVifezWHZCkH9p3s3Ui7coCr5C+/ecZOT[m
[32m +        m3Imq5lPiwiYmhBae4WOBks2d6jf5h7zVLSFB4yiP0IHtdmKtvGbb3y0GEt3bxhE2JyhybyKgKkJUTtx[m
[32m +        ZmJIbIMgTWYdTqWnvNFj7eObJ85dX0tnVZ3TG7kWgl2o6Yk8MIqBD9ntCodshbz16fKa0S5NZxVK+UAm[m
[32m +        QtAzarrnf6DeNXXUCphzHCYEuYeTXc3ZyEMaQ5Zo3LhYDJ9lubC4Q/VUnXzyvzhR6SRh3xmE0Tv08ypZ[m
[32m +        F958Vkn834dO9zfLsVa2/QBJmQAAAABJRU5ErkJggg==[m
[32m +</value>[m
[32m +  </data>[m
[32m +  <metadata name="loginformDataSet.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[32m +    <value>599, 17</value>[m
[32m +  </metadata>[m
[32m +  <metadata name="tblloginBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[32m +    <value>747, 17</value>[m
[32m +  </metadata>[m
[32m +  <metadata name="loginformDataSet.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[32m +    <value>599, 17</value>[m
[32m +  </metadata>[m
[32m +  <metadata name="tbl_loginTableAdapter.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[32m +    <value>17, 56</value>[m
[32m +  </metadata>[m
[32m +  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">[m
[32m +    <value>93</value>[m
[32m +  </metadata>[m
[32m++=======[m
[32m++ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m++<root>[m
[32m++  <!-- [m
[32m++    Microsoft ResX Schema [m
[32m++    [m
[32m++    Version 2.0[m
[32m++    [m
[32m++    The primary goals of this format is to allow a simple XML format [m
[32m++    that is mostly human readable. The generation and parsing of the [m
[32m++    various data types are done through the TypeConverter classes [m
[32m++    associated with the data types.[m
[32m++    [m
[32m++    Example:[m
[32m++    [m
[32m++    ... ado.net/XML headers & schema ...[m
[32m++    <resheader name="resmimetype">text/microsoft-resx</resheader>[m
[32m++    <resheader name="version">2.0</resheader>[m
[32m++    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>[m
[32m++    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>[m
[32m++    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>[m
[32m++    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>[m
[32m++    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">[m
[32m++        <value>[base64 mime encoded serialized .NET Framework object]</value>[m
[32m++    </data>[m
[32m++    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">[m
[32m++        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>[m
[32m++        <comment>This is a comment</comment>[m
[32m++    </data>[m
[32m++                [m
[32m++    There are any number of "resheader" rows that contain simple [m
[32m++    name/value pairs.[m
[32m++    [m
[32m++    Each data row contains a name, and value. The row also contains a [m
[32m++    type or mimetype. Type corresponds to a .NET class that support [m
[32m++    text/value conversion through the TypeConverter architecture. [m
[32m++    Classes that don't support this are serialized and stored with the [m
[32m++    mimetype set.[m
[32m++    [m
[32m++    The mimetype is used for serialized objects, and tells the [m
[32m++    ResXResourceReader how to depersist the object. This is currently not [m
[32m++    extensible. For a given mimetype the value must be set accordingly:[m
[32m++    [m
[32m++    Note - application/x-microsoft.net.object.binary.base64 is the format [m
[32m++    that the ResXResourceWriter will generate, however the reader can [m
[32m++    read any of the formats listed below.[m
[32m++    [m
[32m++    mimetype: application/x-microsoft.net.object.binary.base64[m
[32m++    value   : The object must be serialized with [m
[32m++            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter[m
[32m++            : and then encoded with base64 encoding.[m
[32m++    [m
[32m++    mimetype: application/x-microsoft.net.object.soap.base64[m
[32m++    value   : The object must be serialized with [m
[32m++            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter[m
[32m++            : and then encoded with base64 encoding.[m
[32m++[m
[32m++    mimetype: application/x-microsoft.net.object.bytearray.base64[m
[32m++    value   : The object must be serialized into a byte array [m
[32m++            : using a System.ComponentModel.TypeConverter[m
[32m++            : and then encoded with base64 encoding.[m
[32m++    -->[m
[32m++  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">[m
[32m++    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />[m
[32m++    <xsd:element name="root" msdata:IsDataSet="true">[m
[32m++      <xsd:complexType>[m
[32m++        <xsd:choice maxOccurs="unbounded">[m
[32m++          <xsd:element name="metadata">[m
[32m++            <xsd:complexType>[m
[32m++              <xsd:sequence>[m
[32m++                <xsd:element name="value" type="xsd:string" minOccurs="0" />[m
[32m++              </xsd:sequence>[m
[32m++              <xsd:attribute name="name" use="required" type="xsd:string" />[m
[32m++              <xsd:attribute name="type" type="xsd:string" />[m
[32m++              <xsd:attribute name="mimetype" type="xsd:string" />[m
[32m++              <xsd:attribute ref="xml:space" />[m
[32m++            </xsd:complexType>[m
[32m++          </xsd:element>[m
[32m++          <xsd:element name="assembly">[m
[32m++            <xsd:complexType>[m
[32m++              <xsd:attribute name="alias" type="xsd:string" />[m
[32m++              <xsd:attribute name="name" type="xsd:string" />[m
[32m++            </xsd:compwarning: in the working copy of 'capstoneproject/loginformDataSet1.Designer.cs', LF will be replaced by CRLF the next time Git touches it
lexType>[m
[32m++          </xsd:element>[m
[32m++          <xsd:element name="data">[m
[32m++            <xsd:complexType>[m
[32m++              <xsd:sequence>[m
[32m++                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />[m
[32m++                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />[m
[32m++              </xsd:sequence>[m
[32m++              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />[m
[32m++              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />[m
[32m++              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />[m
[32m++              <xsd:attribute ref="xml:space" />[m
[32m++            </xsd:complexType>[m
[32m++          </xsd:element>[m
[32m++          <xsd:element name="resheader">[m
[32m++            <xsd:complexType>[m
[32m++              <xsd:sequence>[m
[32m++                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />[m
[32m++              </xsd:sequence>[m
[32m++              <xsd:attribute name="name" type="xsd:string" use="required" />[m
[32m++            </xsd:complexType>[m
[32m++          </xsd:element>[m
[32m++        </xsd:choice>[m
[32m++      </xsd:complexType>[m
[32m++    </xsd:element>[m
[32m++  </xsd:schema>[m
[32m++  <resheader name="resmimetype">[m
[32m++    <value>text/microsoft-resx</value>[m
[32m++  </resheader>[m
[32m++  <resheader name="version">[m
[32m++    <value>2.0</value>[m
[32m++  </resheader>[m
[32m++  <resheader name="reader">[m
[32m++    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>[m
[32m++  </resheader>[m
[32m++  <resheader name="writer">[m
[32m++    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>[m
[32m++  </resheader>[m
[32m++  <metadata name="QueueDate.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">[m
[32m++    <value>True</value>[m
[32m++  </metadata>[m
[32m++  <metadata name="studataBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[32m++    <value>171, 17</value>[m
[32m++  </metadata>[m
[32m++  <metadata name="loginformDataSet7.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[32m++    <value>17, 17</value>[m
[32m++  </metadata>[m
[32m++  <metadata name="stu_dataTableAdapter.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[32m++    <value>342, 17</value>[m
[32m++  </metadata>[m
[32m++  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">[m
[32m++    <value>512, 17</value>[m
[32m++  </metadata>[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  </root>[m
[1mdiff --cc capstoneproject/loginformDataSet1.Designer.cs[m
[1mindex a28270c,39e7cd1..0000000[m
[1m--- a/capstoneproject/loginformDataSet1.Designer.cs[m
[1m+++ b/capstoneproject/loginformDataSet1.Designer.cs[m
[36m@@@ -1,1508 -1,1508 +1,3018 @@@[m
[31m -ï»¿//------------------------------------------------------------------------------[m
[31m -// <auto-generated>[m
[31m -//     This code was generated by a tool.[m
[31m -//     Runtime Version:4.0.30319.42000[m
[31m -//[m
[31m -//     Changes to this file may cause incorrect behavior and will be lost if[m
[31m -//     the code is regenerated.[m
[31m -// </auto-generated>[m
[31m -//------------------------------------------------------------------------------[m
[31m -[m
[31m -#pragma warning disable 1591[m
[31m -[m
[31m -namespace capstoneproject {[m
[31m -    [m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///Represents a strongly typed in-memory cache of data.[m
[31m -    ///</summary>[m
[31m -    [global::System.Serializable()][m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[31m -    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet1")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[31m -    public partial class loginformDataSet1 : global::System.Data.DataSet {[m
[31m -        [m
[31m -        private QueueDataDataTable tableQueueData;[m
[31m -        [m
[31m -        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public loginformDataSet1() {[m
[31m -            this.BeginInit();[m
[31m -            this.InitClass();[m
[31m -            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -            base.Tables.CollectionChanged += schemaChangedHandler;[m
[31m -            base.Relations.CollectionChanged += schemaChangedHandler;[m
[31m -            this.EndInit();[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected loginformDataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[31m -                base(info, context, false) {[m
[31m -            if ((this.IsBinarySerialized(info, context) == true)) {[m
[31m -                this.InitVars(false);[m
[31m -                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[31m -                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[31m -                return;[m
[31m -            }[m
[31m -            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[31m -            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[31m -                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[31m -                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[31m -                if ((ds.Tables["QueueData"] != null)) {[m
[31m -                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[31m -                }[m
[31m -                this.DataSetName = ds.DataSetName;[m
[31m -                this.Prefix = ds.Prefix;[m
[31m -                this.Namespace = ds.Namespace;[m
[31m -                this.Locale = ds.Locale;[m
[31m -                this.CaseSensitive = ds.CaseSensitive;[m
[31m -                this.EnforceConstraints = ds.EnforceConstraints;[m
[31m -                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            else {[m
[31m -                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[31m -            }[m
[31m -            this.GetSerializationData(info, context);[m
[31m -            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -            base.Tables.CollectionChanged += schemaChangedHandler;[m
[31m -            this.Relations.CollectionChanged += schemaChangedHandler;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[31m -        public QueueDataDataTable QueueData {[m
[31m -            get {[m
[31m -                return this.tableQueueData;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.BrowsableAttribute(true)][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[31m -        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[31m -            get {[m
[31m -                return this._schemaSerializationMode;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._schemaSerializationMode = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[31m -        public new global::System.Data.DataTableCollection Tables {[m
[31m -            get {[m
[31m -                return base.Tables;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[31m -        public new global::System.Data.DataRelationCollection Relations {[m
[31m -            get {[m
[31m -                return base.Relations;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override void InitializeDerivedDataSet() {[m
[31m -            this.BeginInit();[m
[31m -            this.InitClass();[m
[31m -            this.EndInit();[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public override global::System.Data.DataSet Clone() {[m
[31m -            loginformDataSet1 cln = ((loginformDataSet1)(base.Clone()));[m
[31m -            cln.InitVars();[m
[31m -            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[31m -            return cln;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override bool ShouldSerializeTables() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override bool ShouldSerializeRelations() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[31m -            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[31m -                this.Reset();[m
[31m -                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[31m -                ds.ReadXml(reader);[m
[31m -                if ((ds.Tables["QueueData"] != null)) {[m
[31m -                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[31m -                }[m
[31m -                this.DataSetName = ds.DataSetName;[m
[31m -                this.Prefix = ds.Prefix;[m
[31m -                this.Namespace = ds.Namespace;[m
[31m -                this.Locale = ds.Locale;[m
[31m -                this.CaseSensitive = ds.CaseSensitive;[m
[31m -                this.EnforceConstraints = ds.EnforceConstraints;[m
[31m -                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            else {[m
[31m -                this.ReadXml(reader);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[31m -            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[31m -            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[31m -            stream.Position = 0;[m
[31m -            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal void InitVars() {[m
[31m -            this.InitVars(true);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal void InitVars(bool initTable) {[m
[31m -            this.tableQueueData = ((QueueDataDataTable)(base.Tables["QueueData"]));[m
[31m -            if ((initTable == true)) {[m
[31m -                if ((this.tableQueueData != null)) {[m
[31m -                    this.tableQueueData.InitVars();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitClass() {[m
[31m -            this.DataSetName = "loginformDataSet1";[m
[31m -            this.Prefix = "";[m
[31m -            this.Namespace = "http://tempuri.org/loginformDataSet1.xsd";[m
[31m -            this.EnforceConstraints = true;[m
[31m -            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -            this.tableQueueData = new QueueDataDataTable();[m
[31m -            base.Tables.Add(this.tableQueueData);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private bool ShouldSerializeQueueData() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[31m -            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[31m -            loginformDataSet1 ds = new loginformDataSet1();[m
[31m -            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[31m -            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[31m -            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -            any.Namespace = ds.Namespace;[m
[31m -            sequence.Items.Add(any);[m
[31m -            type.Particle = sequence;[m
[31m -            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[31m -            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[31m -                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[31m -                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[31m -                try {[m
[31m -                    global::System.Xml.Schema.XmlSchema schema = null;[m
[31m -                    dsSchema.Write(s1);[m
[31m -                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[31m -                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[31m -                        s2.SetLength(0);[m
[31m -                        schema.Write(s2);[m
[31m -                        if ((s1.Length == s2.Length)) {[m
[31m -                            s1.Position = 0;[m
[31m -                            s2.Position = 0;[m
[31m -                            for (; ((s1.Position != s1.Length) [m
[31m -                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[31m -                                ;[m
[31m -                            }[m
[31m -                            if ((s1.Position == s1.Length)) {[m
[31m -                                return type;[m
[31m -                            }[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                finally {[m
[31m -                    if ((s1 != null)) {[m
[31m -                        s1.Close();[m
[31m -                    }[m
[31m -                    if ((s2 != null)) {[m
[31m -                        s2.Close();[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            xs.Add(dsSchema);[m
[31m -            return type;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public delegate void QueueDataRowChangeEventHandler(object sender, QueueDataRowChangeEvent e);[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Represents the strongly named DataTable class.[m
[31m -        ///</summary>[m
[31m -        [global::System.Serializable()][m
[31m -        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[31m -        public partial class QueueDataDataTable : global::System.Data.TypedTableBase<QueueDataRow> {[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnid;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnName;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnDepartment;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnPurpose;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnQueueNumber;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataDataTable() {[m
[31m -                this.TableName = "QueueData";[m
[31m -                this.BeginInit();[m
[31m -                this.InitClass();[m
[31m -                this.EndInit();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal QueueDataDataTable(global::System.Data.DataTable table) {[m
[31m -                this.TableName = table.TableName;[m
[31m -                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[31m -                    this.CaseSensitive = table.CaseSensitive;[m
[31m -                }[m
[31m -                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[31m -                    this.Locale = table.Locale;[m
[31m -                }[m
[31m -                if ((table.Namespace != table.DataSet.Namespace)) {[m
[31m -                    this.Namespace = table.Namespace;[m
[31m -                }[m
[31m -                this.Prefix = table.Prefix;[m
[31m -                this.MinimumCapacity = table.MinimumCapacity;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected QueueDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[31m -                    base(info, context) {[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn idColumn {[m
[31m -                get {[m
[31m -                    return this.columnid;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn NameColumn {[m
[31m -                get {[m
[31m -                    return this.columnName;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn DepartmentColumn {[m
[31m -                get {[m
[31m -                    return this.columnDepartment;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn PurposeColumn {[m
[31m -                get {[m
[31m -                    return this.columnPurpose;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn QueueNumberColumn {[m
[31m -                get {[m
[31m -                    return this.columnQueueNumber;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            [global::System.ComponentModel.Browsable(false)][m
[31m -            public int Count {[m
[31m -                get {[m
[31m -                    return this.Rows.Count;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow this[int index] {[m
[31m -                get {[m
[31m -                    return ((QueueDataRow)(this.Rows[index]));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowChanging;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowChanged;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowDeleting;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowDeleted;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void AddQueueDataRow(QueueDataRow row) {[m
[31m -                this.Rows.Add(row);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow AddQueueDataRow(string Name, string Department, string Purpose, int QueueNumber) {[m
[31m -                QueueDataRow rowQueueDataRow = ((QueueDataRow)(this.NewRow()));[m
[31m -                object[] columnValuesArray = new object[] {[m
[31m -                        null,[m
[31m -                        Name,[m
[31m -                        Department,[m
[31m -                        Purpose,[m
[31m -                        QueueNumber};[m
[31m -                rowQueueDataRow.ItemArray = columnValuesArray;[m
[31m -                this.Rows.Add(rowQueueDataRow);[m
[31m -                return rowQueueDataRow;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow FindByid(int id) {[m
[31m -                return ((QueueDataRow)(this.Rows.Find(new object[] {[m
[31m -                            id})));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public override global::System.Data.DataTable Clone() {[m
[31m -                QueueDataDataTable cln = ((QueueDataDataTable)(base.Clone()));[m
[31m -                cln.InitVars();[m
[31m -                return cln;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Data.DataTable CreateInstance() {[m
[31m -                return new QueueDataDataTable();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal void InitVars() {[m
[31m -                this.columnid = base.Columns["id"];[m
[31m -                this.columnName = base.Columns["Name"];[m
[31m -                this.columnDepartment = base.Columns["Department"];[m
[31m -                this.columnPurpose = base.Columns["Purpose"];[m
[31m -                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            private void InitClass() {[m
[31m -                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnid);[m
[31m -                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnName);[m
[31m -                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnDepartment);[m
[31m -                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnPurpose);[m
[31m -                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnQueueNumber);[m
[31m -                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[31m -                                this.columnid}, true));[m
[31m -                this.columnid.AutoIncrement = true;[m
[31m -                this.columnid.AutoIncrementSeed = -1;[m
[31m -                this.columnid.AutoIncrementStep = -1;[m
[31m -                this.columnid.AllowDBNull = false;[m
[31m -                this.columnid.ReadOnly = true;[m
[31m -                this.columnid.Unique = true;[m
[31m -                this.columnName.AllowDBNull = false;[m
[31m -                this.columnName.MaxLength = 50;[m
[31m -                this.columnDepartment.AllowDBNull = false;[m
[31m -                this.columnDepartment.MaxLength = 50;[m
[31m -                this.columnPurpose.AllowDBNull = false;[m
[31m -                this.columnPurpose.MaxLength = 2147483647;[m
[31m -                this.columnQueueNumber.AllowDBNull = false;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow NewQueueDataRow() {[m
[31m -                return ((QueueDataRow)(this.NewRow()));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[31m -                return new QueueDataRow(builder);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Type GetRowType() {[m
[31m -                return typeof(QueueDataRow);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowChanged(e);[m
[31m -                if ((this.QueueDataRowChanged != null)) {[m
[31m -                    this.QueueDataRowChanged(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowChanging(e);[m
[31m -                if ((this.QueueDataRowChanging != null)) {[m
[31m -                    this.QueueDataRowChanging(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowDeleted(e);[m
[31m -                if ((this.QueueDataRowDeleted != null)) {[m
[31m -                    this.QueueDataRowDeleted(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowDeleting(e);[m
[31m -                if ((this.QueueDataRowDeleting != null)) {[m
[31m -                    this.QueueDataRowDeleting(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void RemoveQueueDataRow(QueueDataRow row) {[m
[31m -                this.Rows.Remove(row);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[31m -                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[31m -                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[31m -                loginformDataSet1 ds = new loginformDataSet1();[m
[31m -                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[31m -                any1.MinOccurs = new decimal(0);[m
[31m -                any1.MaxOccurs = decimal.MaxValue;[m
[31m -                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[31m -                sequence.Items.Add(any1);[m
[31m -                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[31m -                any2.MinOccurs = new decimal(1);[m
[31m -                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[31m -                sequence.Items.Add(any2);[m
[31m -                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[31m -                attribute1.Name = "namespace";[m
[31m -                attribute1.FixedValue = ds.Namespace;[m
[31m -                type.Attributes.Add(attribute1);[m
[31m -                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[31m -                attribute2.Name = "tableTypeName";[m
[31m -                attribute2.FixedValue = "QueueDataDataTable";[m
[31m -                type.Attributes.Add(attribute2);[m
[31m -                type.Particle = sequence;[m
[31m -                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[31m -                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[31m -                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[31m -                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[31m -                    try {[m
[31m -                        global::System.Xml.Schema.XmlSchema schema = null;[m
[31m -                        dsSchema.Write(s1);[m
[31m -                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[31m -                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[31m -                            s2.SetLength(0);[m
[31m -                            schema.Write(s2);[m
[31m -                            if ((s1.Length == s2.Length)) {[m
[31m -                                s1.Position = 0;[m
[31m -                                s2.Position = 0;[m
[31m -                                for (; ((s1.Position != s1.Length) [m
[31m -                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[31m -                                    ;[m
[31m -                                }[m
[31m -                                if ((s1.Position == s1.Length)) {[m
[31m -                                    return type;[m
[31m -                                }[m
[31m -                            }[m
[31m -                        }[m
[31m -                    }[m
[31m -                    finally {[m
[31m -                        if ((s1 != null)) {[m
[31m -                            s1.Close();[m
[31m -                        }[m
[31m -                        if ((s2 != null)) {[m
[31m -                            s2.Close();[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                xs.Add(dsSchema);[m
[31m -                return type;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Represents strongly named DataRow class.[m
[31m -        ///</summary>[m
[31m -        public partial class QueueDataRow : global::System.Data.DataRow {[m
[31m -            [m
[31m -            private QueueDataDataTable tableQueueData;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal QueueDataRow(global::System.Data.DataRowBuilder rb) : [m
[31m -                    base(rb) {[m
[31m -                this.tableQueueData = ((QueueDataDataTable)(this.Table));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int id {[m
[31m -                get {[m
[31m -                    return ((int)(this[this.tableQueueData.idColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.idColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Name {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueData.NameColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.NameColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Department {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueData.DepartmentColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.DepartmentColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Purpose {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueData.PurposeColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.PurposeColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int QueueNumber {[m
[31m -                get {[m
[31m -                    return ((int)(this[this.tableQueueData.QueueNumberColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.QueueNumberColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Row event argument class[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public class QueueDataRowChangeEvent : global::System.EventArgs {[m
[31m -            [m
[31m -            private QueueDataRow eventRow;[m
[31m -            [m
[31m -            private global::System.Data.DataRowAction eventAction;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRowChangeEvent(QueueDataRow row, global::System.Data.DataRowAction action) {[m
[31m -                this.eventRow = row;[m
[31m -                this.eventAction = action;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow Row {[m
[31m -                get {[m
[31m -                    return this.eventRow;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataRowAction Action {[m
[31m -                get {[m
[31m -                    return this.eventAction;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -}[m
[31m -namespace capstoneproject.loginformDataSet1TableAdapters {[m
[31m -    [m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///Represents the connection and commands used to retrieve and save data.[m
[31m -    ///</summary>[m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.ComponentModel.DataObjectAttribute(true)][m
[31m -    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[31m -        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -    public partial class QueueDataTableAdapter : global::System.ComponentModel.Component {[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlConnection _connection;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[31m -        [m
[31m -        private bool _clearBeforeFill;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public QueueDataTableAdapter() {[m
[31m -            this.ClearBeforeFill = true;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[31m -            get {[m
[31m -                if ((this._adapter == null)) {[m
[31m -                    this.InitAdapter();[m
[31m -                }[m
[31m -                return this._adapter;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[31m -            get {[m
[31m -                if ((this._connection == null)) {[m
[31m -                    this.InitConnection();[m
[31m -                }[m
[31m -                return this._connection;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._connection = value;[m
[31m -                if ((this.Adapter.InsertCommand != null)) {[m
[31m -                    this.Adapter.InsertCommand.Connection = value;[m
[31m -                }[m
[31m -                if ((this.Adapter.DeleteCommand != null)) {[m
[31m -                    this.Adapter.DeleteCommand.Connection = value;[m
[31m -                }[m
[31m -                if ((this.Adapter.UpdateCommand != null)) {[m
[31m -                    this.Adapter.UpdateCommand.Connection = value;[m
[31m -                }[m
[31m -                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[31m -                    if ((this.CommandCollection[i] != null)) {[m
[31m -                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[31m -            get {[m
[31m -                return this._transaction;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._transaction = value;[m
[31m -                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[31m -                    this.CommandCollection[i].Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.DeleteCommand != null))) {[m
[31m -                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.InsertCommand != null))) {[m
[31m -                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.UpdateCommand != null))) {[m
[31m -                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[31m -            get {[m
[31m -                if ((this._commandCollection == null)) {[m
[31m -                    this.InitCommandCollection();[m
[31m -                }[m
[31m -                return this._commandCollection;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public bool ClearBeforeFill {[m
[31m -            get {[m
[31m -                return this._clearBeforeFill;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._clearBeforeFill = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitAdapter() {[m
[31m -            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[31m -            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[31m -            tableMapping.SourceTable = "Table";[m
[31m -            tableMapping.DataSetTable = "QueueData";[m
[31m -            tableMapping.ColumnMappings.Add("id", "id");[m
[31m -            tableMapping.ColumnMappings.Add("Name", "Name");[m
[31m -            tableMapping.ColumnMappings.Add("Department", "Department");[m
[31m -            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[31m -            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[31m -            this._adapter.TableMappings.Add(tableMapping);[m
[31m -            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.DeleteCommand.Connection = this.Connection;[m
[31m -            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Origina" +[m
[31m -                "l_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original" +[m
[31m -                "_QueueNumber))";[m
[31m -            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.InsertCommand.Connection = this.Connection;[m
[31m -            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber]) VA" +[m
[31m -                "LUES (@Name, @Department, @Purpose, @QueueNumber);\r\nSELECT id, Name, Department," +[m
[31m -                " Purpose, QueueNumber FROM QueueData WHERE (id = SCOPE_IDENTITY())";[m
[31m -            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.UpdateCommand.Connection = this.Connection;[m
[31m -            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber));[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber FROM QueueData WHERE (id = @id)";[m
[31m -            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitConnection() {[m
[31m -            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[31m -            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitCommandCollection() {[m
[31m -            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[31m -            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._commandCollection[0].Connection = this.Connection;[m
[31m -            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber FROM dbo.QueueData";[m
[31m -            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[31m -        public virtual int Fill(loginformDataSet1.QueueDataDataTable dataTable) {[m
[31m -            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[31m -            if ((this.ClearBeforeFill == true)) {[m
[31m -                dataTable.Clear();[m
[31m -            }[m
[31m -            int returnValue = this.Adapter.Fill(dataTable);[m
[31m -            return returnValue;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[31m -        public virtual loginformDataSet1.QueueDataDataTable GetData() {[m
[31m -            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[31m -            loginformDataSet1.QueueDataDataTable dataTable = new loginformDataSet1.QueueDataDataTable();[m
[31m -            this.Adapter.Fill(dataTable);[m
[31m -            return dataTable;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(loginformDataSet1.QueueDataDataTable dataTable) {[m
[31m -            return this.Adapter.Update(dataTable);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(loginformDataSet1 dataSet) {[m
[31m -            return this.Adapter.Update(dataSet, "QueueData");[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[31m -            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[31m -                        dataRow});[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[31m -            return this.Adapter.Update(dataRows);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[31m -        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber) {[m
[31m -            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[31m -            if ((Original_Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[31m -            }[m
[31m -            if ((Original_Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[31m -            }[m
[31m -            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[31m -            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.DeleteCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.DeleteCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[31m -        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber) {[m
[31m -            if ((Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[31m -            }[m
[31m -            if ((Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[31m -            }[m
[31m -            if ((Purpose == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Purpose");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[31m -            }[m
[31m -            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[31m -            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.InsertCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.InsertCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[31m -        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, int id) {[m
[31m -            if ((Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[31m -            }[m
[31m -            if ((Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[31m -            }[m
[31m -            if ((Purpose == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Purpose");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[31m -            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_id));[m
[31m -            if ((Original_Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Name));[m
[31m -            }[m
[31m -            if ((Original_Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Department));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_QueueNumber));[m
[31m -            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(id));[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[31m -            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.UpdateCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.UpdateCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[31m -        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber) {[m
[31m -            return this.Update(Name, Department, Purpose, QueueNumber, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_id);[m
[31m -        }[m
[31m -    }[m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[31m -    ///</summary>[m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[31m -        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[31m -    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[31m -        [m
[31m -        private UpdateOrderOption _updateOrder;[m
[31m -        [m
[31m -        private QueueDataTableAdapter _queueDataTableAdapter;[m
[31m -        [m
[31m -        private bool _backupDataSetBeforeUpdate;[m
[31m -        [m
[31m -        private global::System.Data.IDbConnection _connection;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public UpdateOrderOption UpdateOrder {[m
[31m -            get {[m
[31m -                return this._updateOrder;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._updateOrder = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[31m -            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[31m -            "a", "System.Drawing.Design.UITypeEditor")][m
[31m -        public QueueDataTableAdapter QueueDataTableAdapter {[m
[31m -            get {[m
[31m -                return this._queueDataTableAdapter;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._queueDataTableAdapter = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public bool BackupDataSetBeforeUpdate {[m
[31m -            get {[m
[31m -                return this._backupDataSetBeforeUpdate;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._backupDataSetBeforeUpdate = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        public global::System.Data.IDbConnection Connection {[m
[31m -            get {[m
[31m -                if ((this._connection != null)) {[m
[31m -                    return this._connection;[m
[31m -                }[m
[31m -                if (((this._queueDataTableAdapter != null) [m
[31m -                            && (this._queueDataTableAdapter.Connection != null))) {[m
[31m -                    return this._queueDataTableAdapter.Connection;[m
[31m -                }[m
[31m -                return null;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._connection = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        public int TableAdapterInstanceCount {[m
[31m -            get {[m
[31m -                int count = 0;[m
[31m -                if ((this._queueDataTableAdapter != null)) {[m
[31m -                    count = (count + 1);[m
[31m -                }[m
[31m -                return count;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update rows in top-down order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateUpdatedRows(loginformDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] updatedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[31m -                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[31m -                if (((updatedRows != null) [m
[31m -                            && (0 < updatedRows.Length))) {[m
[31m -                    result = (result + this._queueDataTableAdapter.Update(updatedRows));[m
[31m -                    allChangedRows.AddRange(updatedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Insert rows in top-down order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateInsertedRows(loginformDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] addedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[31m -                if (((addedRows != null) [m
[31m -                            && (0 < addedRows.Length))) {[m
[31m -                    result = (result + this._queueDataTableAdapter.Update(addedRows));[m
[31m -                    allAddedRows.AddRange(addedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Delete rows in bottom-up order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateDeletedRows(loginformDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] deletedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[31m -                if (((deletedRows != null) [m
[31m -                            && (0 < deletedRows.Length))) {[m
[31m -                    result = (result + this._queueDataTableAdapter.Update(deletedRows));[m
[31m -                    allChangedRows.AddRange(deletedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            if (((updatedRows == null) [m
[31m -                        || (updatedRows.Length < 1))) {[m
[31m -                return updatedRows;[m
[31m -            }[m
[31m -            if (((allAddedRows == null) [m
[31m -                        || (allAddedRows.Count < 1))) {[m
[31m -                return updatedRows;[m
[31m -            }[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[31m -                global::System.Data.DataRow row = updatedRows[i];[m
[31m -                if ((allAddedRows.Contains(row) == false)) {[m
[31m -                    realUpdatedRows.Add(row);[m
[31m -                }[m
[31m -            }[m
[31m -            return realUpdatedRows.ToArray();[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update all changes to the dataset.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public virtual int UpdateAll(loginformDataSet1 dataSet) {[m
[31m -            if ((dataSet == null)) {[m
[31m -                throw new global::System.ArgumentNullException("dataSet");[m
[31m -            }[m
[31m -            if ((dataSet.HasChanges() == false)) {[m
[31m -                return 0;[m
[31m -            }[m
[31m -            if (((this._queueDataTableAdapter != null) [m
[31m -                        && (this.MatchTableAdapterConnection(this._queueDataTableAdapter.Connection) == false))) {[m
[31m -                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[31m -                        "tring.");[m
[31m -            }[m
[31m -            global::System.Data.IDbConnection workConnection = this.Connection;[m
[31m -            if ((workConnection == null)) {[m
[31m -                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[31m -                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[31m -            }[m
[31m -            bool workConnOpened = false;[m
[31m -            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[31m -                        == global::System.Data.ConnectionState.Broken)) {[m
[31m -                workConnection.Close();[m
[31m -            }[m
[31m -            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[31m -                workConnection.Open();[m
[31m -                workConnOpened = true;[m
[31m -            }[m
[31m -            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[31m -            if ((workTransaction == null)) {[m
[31m -                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[31m -                        "ctions or the current state is not allowing the transaction to begin.");[m
[31m -            }[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[31m -            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[31m -            int result = 0;[m
[31m -            global::System.Data.DataSet backupDataSet = null;[m
[31m -            if (this.BackupDataSetBeforeUpdate) {[m
[31m -                backupDataSet = new global::System.Data.DataSet();[m
[31m -                backupDataSet.Merge(dataSet);[m
[31m -            }[m
[31m -            try {[m
[31m -                // ---- Prepare for update -----------[m
[31m -                //[m
[31m -                if ((this._queueDataTableAdapter != null)) {[m
[31m -                    revertConnections.Add(this._queueDataTableAdapter, this._queueDataTableAdapter.Connection);[m
[31m -                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[31m -                    this._queueDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[31m -                    if (this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[31m -                        this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[31m -                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueDataTableAdapter.Adapter);[m
[31m -                    }[m
[31m -                }[m
[31m -                // [m
[31m -                //---- Perform updates -----------[m
[31m -                //[m
[31m -                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[31m -                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[31m -                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[31m -                }[m
[31m -                else {[m
[31m -                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[31m -                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[31m -                }[m
[31m -                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[31m -                // [m
[31m -                //---- Commit updates -----------[m
[31m -                //[m
[31m -                workTransaction.Commit();[m
[31m -                if ((0 < allAddedRows.Count)) {[m
[31m -                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[31m -                    allAddedRows.CopyTo(rows);[m
[31m -                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.DataRow row = rows[i];[m
[31m -                        row.AcceptChanges();[m
[31m -                    }[m
[31m -                }[m
[31m -                if ((0 < allChangedRows.Count)) {[m
[31m -                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[31m -                    allChangedRows.CopyTo(rows);[m
[31m -                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.DataRow row = rows[i];[m
[31m -                        row.AcceptChanges();[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            catch (global::System.Exception ex) {[m
[31m -                workTransaction.Rollback();[m
[31m -                // ---- Restore the dataset -----------[m
[31m -                if (this.BackupDataSetBeforeUpdate) {[m
[31m -                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[31m -                    dataSet.Clear();[m
[31m -                    dataSet.Merge(backupDataSet);[m
[31m -                }[m
[31m -                else {[m
[31m -                    if ((0 < allAddedRows.Count)) {[m
[31m -                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[31m -                        allAddedRows.CopyTo(rows);[m
[31m -                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                            global::System.Data.DataRow row = rows[i];[m
[31m -                            row.AcceptChanges();[m
[31m -                            row.SetAdded();[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                throw ex;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if (workConnOpened) {[m
[31m -                    workConnection.Close();[m
[31m -                }[m
[31m -                if ((this._queueDataTableAdapter != null)) {[m
[31m -                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueDataTableAdapter]));[m
[31m -                    this._queueDataTableAdapter.Transaction = null;[m
[31m -                }[m
[31m -                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[31m -                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[31m -                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[31m -                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[31m -                        adapter.AcceptChangesDuringUpdate = true;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[31m -            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[31m -            if ((this._connection != null)) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            if (((this.Connection == null) [m
[31m -                        || (inputConnection == null))) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update Order Option[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public enum UpdateOrderOption {[m
[31m -            [m
[31m -            InsertUpdateDelete = 0,[m
[31m -            [m
[31m -            UpdateInsertDelete = 1,[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Used to sort self-referenced table's rows[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[31m -            [m
[31m -            private global::System.Data.DataRelation _relation;[m
[31m -            [m
[31m -            private int _childFirst;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[31m -                this._relation = relation;[m
[31m -                if (childFirst) {[m
[31m -                    this._childFirst = -1;[m
[31m -                }[m
[31m -                else {[m
[31m -                    this._childFirst = 1;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[31m -                global::System.Diagnostics.Debug.Assert((row != null));[m
[31m -                global::System.Data.DataRow root = row;[m
[31m -                distance = 0;[m
[31m -[m
[31m -                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[31m -                traversedRows[row] = row;[m
[31m -[m
[31m -                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[31m -                for ([m
[31m -                ; ((parent != null) [m
[31m -                            && (traversedRows.ContainsKey(parent) == false)); [m
[31m -                ) {[m
[31m -                    distance = (distance + 1);[m
[31m -                    root = parent;[m
[31m -                    traversedRows[parent] = parent;[m
[31m -                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[31m -                }[m
[31m -[m
[31m -                if ((distance == 0)) {[m
[31m -                    traversedRows.Clear();[m
[31m -                    traversedRows[row] = row;[m
[31m -                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[31m -                    for ([m
[31m -                    ; ((parent != null) [m
[31m -                                && (traversedRows.ContainsKey(parent) == false)); [m
[31m -                    ) {[m
[31m -                        distance = (distance + 1);[m
[31m -                        root = parent;[m
[31m -                        traversedRows[parent] = parent;[m
[31m -                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[31m -                    }[m
[31m -                }[m
[31m -[m
[31m -                return root;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[31m -                if (object.ReferenceEquals(row1, row2)) {[m
[31m -                    return 0;[m
[31m -                }[m
[31m -                if ((row1 == null)) {[m
[31m -                    return -1;[m
[31m -                }[m
[31m -                if ((row2 == null)) {[m
[31m -                    return 1;[m
[31m -                }[m
[31m -[m
[31m -                int distance1 = 0;[m
[31m -                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[31m -[m
[31m -                int distance2 = 0;[m
[31m -                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[31m -[m
[31m -                if (object.ReferenceEquals(root1, root2)) {[m
[31m -                    return (this._childFirst * distance1.CompareTo(distance2));[m
[31m -                }[m
[31m -                else {[m
[31m -                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[31m -                                    && (root2.Table != null)));[m
[31m -                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[31m -                        return -1;[m
[31m -                    }[m
[31m -                    else {[m
[31m -                        return 1;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -}[m
[31m -[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿//------------------------------------------------------------------------------[m
[32m +// <auto-generated>[m
[32m +//     This code was generated by a tool.[m
[32m +//     Runtime Version:4.0.30319.42000[m
[32m +//[m
[32m +//     Changes to this file may cause incorrect behavior and will be lost if[m
[32m +//     the code is regenerated.[m
[32m +// </auto-generated>[m
[32m +//------------------------------------------------------------------------------[m
[32m +[m
[32m +#pragma warning disable 1591[m
[32m +[m
[32m +namespace capstoneproject {[m
[32m +    [m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///Represents a strongly typed in-memory cache of data.[m
[32m +    ///</summary>[m
[32m +    [global::System.Serializable()][m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[32m +    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet1")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[32m +    public partial class loginformDataSet1 : global::System.Data.DataSet {[m
[32m +        [m
[32m +        private QueueDataDataTable tableQueueData;[m
[32m +        [m
[32m +        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public loginformDataSet1() {[m
[32m +            this.BeginInit();[m
[32m +            this.InitClass();[m
[32m +            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m +            base.Relations.CollectionChanged += schemaChangedHandler;[m
[32m +            this.EndInit();[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected loginformDataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m +                base(info, context, false) {[m
[32m +            if ((this.IsBinarySerialized(info, context) == true)) {[m
[32m +                this.InitVars(false);[m
[32m +                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[32m +                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[32m +                return;[m
[32m +            }[m
[32m +            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[32m +            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m +                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m +                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m +                if ((ds.Tables["QueueData"] != null)) {[m
[32m +                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m +                }[m
[32m +                this.DataSetName = ds.DataSetName;[m
[32m +                this.Prefix = ds.Prefix;[m
[32m +                this.Namespace = ds.Namespace;[m
[32m +                this.Locale = ds.Locale;[m
[32m +                this.CaseSensitive = ds.CaseSensitive;[m
[32m +                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m +                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            else {[m
[32m +                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m +            }[m
[32m +            this.GetSerializationData(info, context);[m
[32m +            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m +            this.Relations.CollectionChanged += schemaChangedHandler;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[32m +        public QueueDataDataTable QueueData {[m
[32m +            get {[m
[32m +                return this.tableQueueData;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.BrowsableAttribute(true)][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[32m +        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[32m +            get {[m
[32m +                return this._schemaSerializationMode;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._schemaSerializationMode = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m +        public new global::System.Data.DataTableCollection Tables {[m
[32m +            get {[m
[32m +                return base.Tables;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m +        public new global::System.Data.DataRelationCollection Relations {[m
[32m +            get {[m
[32m +                return base.Relations;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override void InitializeDerivedDataSet() {[m
[32m +            this.BeginInit();[m
[32m +            this.InitClass();[m
[32m +            this.EndInit();[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public override global::System.Data.DataSet Clone() {[m
[32m +            loginformDataSet1 cln = ((loginformDataSet1)(base.Clone()));[m
[32m +            cln.InitVars();[m
[32m +            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[32m +            return cln;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override bool ShouldSerializeTables() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override bool ShouldSerializeRelations() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[32m +            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m +                this.Reset();[m
[32m +                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m +                ds.ReadXml(reader);[m
[32m +                if ((ds.Tables["QueueData"] != null)) {[m
[32m +                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m +                }[m
[32m +                this.DataSetName = ds.DataSetName;[m
[32m +                this.Prefix = ds.Prefix;[m
[32m +                this.Namespace = ds.Namespace;[m
[32m +                this.Locale = ds.Locale;[m
[32m +                this.CaseSensitive = ds.CaseSensitive;[m
[32m +                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m +                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            else {[m
[32m +                this.ReadXml(reader);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[32m +            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[32m +            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[32m +            stream.Position = 0;[m
[32m +            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal void InitVars() {[m
[32m +            this.InitVars(true);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal void InitVars(bool initTable) {[m
[32m +            this.tableQueueData = ((QueueDataDataTable)(base.Tables["QueueData"]));[m
[32m +            if ((initTable == true)) {[m
[32m +                if ((this.tableQueueData != null)) {[m
[32m +                    this.tableQueueData.InitVars();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitClass() {[m
[32m +            this.DataSetName = "loginformDataSet1";[m
[32m +            this.Prefix = "";[m
[32m +            this.Namespace = "http://tempuri.org/loginformDataSet1.xsd";[m
[32m +            this.EnforceConstraints = true;[m
[32m +            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +            this.tableQueueData = new QueueDataDataTable();[m
[32m +            base.Tables.Add(this.tableQueueData);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private bool ShouldSerializeQueueData() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[32m +            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m +            loginformDataSet1 ds = new loginformDataSet1();[m
[32m +            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m +            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m +            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +            any.Namespace = ds.Namespace;[m
[32m +            sequence.Items.Add(any);[m
[32m +            type.Particle = sequence;[m
[32m +            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m +            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m +                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m +                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m +                try {[m
[32m +                    global::System.Xml.Schema.XmlSchema schema = null;[m
[32m +                    dsSchema.Write(s1);[m
[32m +                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m +                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m +                        s2.SetLength(0);[m
[32m +                        schema.Write(s2);[m
[32m +                        if ((s1.Length == s2.Length)) {[m
[32m +                            s1.Position = 0;[m
[32m +                            s2.Position = 0;[m
[32m +                            for (; ((s1.Position != s1.Length) [m
[32m +                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m +                                ;[m
[32m +                            }[m
[32m +                            if ((s1.Position == s1.Length)) {[m
[32m +                                return type;[m
[32m +                            }[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                finally {[m
[32m +                    if ((s1 != null)) {[m
[32m +                        s1.Close();[m
[32m +                    }[m
[32m +                    if ((s2 != null)) {[m
[32m +                        s2.Close();[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            xs.Add(dsSchema);[m
[32m +            return type;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public delegate void QueueDataRowChangeEventHandler(object sender, QueueDataRowChangeEvent e);[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Represents the strongly named DataTable class.[m
[32m +        ///</summary>[m
[32m +        [global::System.Serializable()][m
[32m +        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[32m +        public partial class QueueDataDataTable : global::System.Data.TypedTableBase<QueueDataRow> {[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnid;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnName;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnDepartment;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnPurpose;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnQueueNumber;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataDataTable() {[m
[32m +                this.TableName = "QueueData";[m
[32m +                this.BeginInit();[m
[32m +                this.InitClass();[m
[32m +                this.EndInit();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal QueueDataDataTable(global::System.Data.DataTable table) {[m
[32m +                this.TableName = table.TableName;[m
[32m +                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[32m +                    this.CaseSensitive = table.CaseSensitive;[m
[32m +                }[m
[32m +                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[32m +                    this.Locale = table.Locale;[m
[32m +                }[m
[32m +                if ((table.Namespace != table.DataSet.Namespace)) {[m
[32m +                    this.Namespace = table.Namespace;[m
[32m +                }[m
[32m +                this.Prefix = table.Prefix;[m
[32m +                this.MinimumCapacity = table.MinimumCapacity;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected QueueDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m +                    base(info, context) {[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn idColumn {[m
[32m +                get {[m
[32m +                    return this.columnid;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn NameColumn {[m
[32m +                get {[m
[32m +                    return this.columnName;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn DepartmentColumn {[m
[32m +                get {[m
[32m +                    return this.columnDepartment;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn PurposeColumn {[m
[32m +                get {[m
[32m +                    return this.columnPurpose;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn QueueNumberColumn {[m
[32m +                get {[m
[32m +                    return this.columnQueueNumber;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            [global::System.ComponentModel.Browsable(false)][m
[32m +            public int Count {[m
[32m +                get {[m
[32m +                    return this.Rows.Count;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow this[int index] {[m
[32m +                get {[m
[32m +                    return ((QueueDataRow)(this.Rows[index]));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowChanging;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowChanged;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowDeleting;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowDeleted;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void AddQueueDataRow(QueueDataRow row) {[m
[32m +                this.Rows.Add(row);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow AddQueueDataRow(string Name, string Department, string Purpose, int QueueNumber) {[m
[32m +                QueueDataRow rowQueueDataRow = ((QueueDataRow)(this.NewRow()));[m
[32m +                object[] columnValuesArray = new object[] {[m
[32m +                        null,[m
[32m +                        Name,[m
[32m +                        Department,[m
[32m +                        Purpose,[m
[32m +                        QueueNumber};[m
[32m +                rowQueueDataRow.ItemArray = columnValuesArray;[m
[32m +                this.Rows.Add(rowQueueDataRow);[m
[32m +                return rowQueueDataRow;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow FindByid(int id) {[m
[32m +                return ((QueueDataRow)(this.Rows.Find(new object[] {[m
[32m +                            id})));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public override global::System.Data.DataTable Clone() {[m
[32m +                QueueDataDataTable cln = ((QueueDataDataTable)(base.Clone()));[m
[32m +                cln.InitVars();[m
[32m +                return cln;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Data.DataTable CreateInstance() {[m
[32m +                return new QueueDataDataTable();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal void InitVars() {[m
[32m +                this.columnid = base.Columns["id"];[m
[32m +                this.columnName = base.Columns["Name"];[m
[32m +                this.columnDepartment = base.Columns["Department"];[m
[32m +                this.columnPurpose = base.Columns["Purpose"];[m
[32m +                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            private void InitClass() {[m
[32m +                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnid);[m
[32m +                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnName);[m
[32m +                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnDepartment);[m
[32m +                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnPurpose);[m
[32m +                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnQueueNumber);[m
[32m +                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[32m +                                this.columnid}, true));[m
[32m +                this.columnid.AutoIncrement = true;[m
[32m +                this.columnid.AutoIncrementSeed = -1;[m
[32m +                this.columnid.AutoIncrementStep = -1;[m
[32m +                this.columnid.AllowDBNull = false;[m
[32m +                this.columnid.ReadOnly = true;[m
[32m +                this.columnid.Unique = true;[m
[32m +                this.columnName.AllowDBNull = false;[m
[32m +                this.columnName.MaxLength = 50;[m
[32m +                this.columnDepartment.AllowDBNull = false;[m
[32m +                this.columnDepartment.MaxLength = 50;[m
[32m +                this.columnPurpose.AllowDBNull = false;[m
[32m +                this.columnPurpose.MaxLength = 2147483647;[m
[32m +                this.columnQueueNumber.AllowDBNull = false;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow NewQueueDataRow() {[m
[32m +                return ((QueueDataRow)(this.NewRow()));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[32m +                return new QueueDataRow(builder);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Type GetRowType() {[m
[32m +                return typeof(QueueDataRow);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowChanged(e);[m
[32m +                if ((this.QueueDataRowChanged != null)) {[m
[32m +                    this.QueueDataRowChanged(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowChanging(e);[m
[32m +                if ((this.QueueDataRowChanging != null)) {[m
[32m +                    this.QueueDataRowChanging(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowDeleted(e);[m
[32m +                if ((this.QueueDataRowDeleted != null)) {[m
[32m +                    this.QueueDataRowDeleted(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowDeleting(e);[m
[32m +                if ((this.QueueDataRowDeleting != null)) {[m
[32m +                    this.QueueDataRowDeleting(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void RemoveQueueDataRow(QueueDataRow row) {[m
[32m +                this.Rows.Remove(row);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m +                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m +                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m +                loginformDataSet1 ds = new loginformDataSet1();[m
[32m +                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[32m +                any1.MinOccurs = new decimal(0);[m
[32m +                any1.MaxOccurs = decimal.MaxValue;[m
[32m +                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m +                sequence.Items.Add(any1);[m
[32m +                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[32m +                any2.MinOccurs = new decimal(1);[m
[32m +                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m +                sequence.Items.Add(any2);[m
[32m +                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m +                attribute1.Name = "namespace";[m
[32m +                attribute1.FixedValue = ds.Namespace;[m
[32m +                type.Attributes.Add(attribute1);[m
[32m +                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m +                attribute2.Name = "tableTypeName";[m
[32m +                attribute2.FixedValue = "QueueDataDataTable";[m
[32m +                type.Attributes.Add(attribute2);[m
[32m +                type.Particle = sequence;[m
[32m +                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m +                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m +                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m +                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m +                    try {[m
[32m +                        global::System.Xml.Schema.XmlSchema schema = null;[m
[32m +                        dsSchema.Write(s1);[m
[32m +                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m +                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m +                            s2.SetLength(0);[m
[32m +                            schema.Write(s2);[m
[32m +                            if ((s1.Length == s2.Length)) {[m
[32m +                                s1.Position = 0;[m
[32m +                                s2.Position = 0;[m
[32m +                                for (; ((s1.Position != s1.Length) [m
[32m +                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m +                                    ;[m
[32m +                                }[m
[32m +                                if ((s1.Position == s1.Length)) {[m
[32m +                                    return type;[m
[32m +                                }[m
[32m +                            }[m
[32m +                        }[m
[32m +                    }[m
[32m +                    finally {[m
[32m +                        if ((s1 != null)) {[m
[32m +                            s1.Close();[m
[32m +                        }[m
[32m +                        if ((s2 != null)) {[m
[32m +                            s2.Close();[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                xs.Add(dsSchema);[m
[32m +                return type;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Represents strongly named DataRow class.[m
[32m +        ///</summary>[m
[32m +        public partial class QueueDataRow : global::System.Data.DataRow {[m
[32m +            [m
[32m +            private QueueDataDataTable tableQueueData;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal QueueDataRow(global::System.Data.DataRowBuilder rb) : [m
[32m +                    base(rb) {[m
[32m +                this.tableQueueData = ((QueueDataDataTable)(this.Table));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int id {[m
[32m +                get {[m
[32m +                    return ((int)(this[this.tableQueueData.idColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.idColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Name {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueData.NameColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.NameColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Department {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueData.DepartmentColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.DepartmentColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Purpose {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueData.PurposeColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.PurposeColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int QueueNumber {[m
[32m +                get {[m
[32m +                    return ((int)(this[this.tableQueueData.QueueNumberColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.QueueNumberColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Row event argument class[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public class QueueDataRowChangeEvent : global::System.EventArgs {[m
[32m +            [m
[32m +            private QueueDataRow eventRow;[m
[32m +            [m
[32m +            private global::System.Data.DataRowAction eventAction;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRowChangeEvent(QueueDataRow row, global::System.Data.DataRowAction action) {[m
[32m +                this.eventRow = row;[m
[32m +                this.eventAction = action;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow Row {[m
[32m +                get {[m
[32m +                    return this.eventRow;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataRowAction Action {[m
[32m +                get {[m
[32m +                    return this.eventAction;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +namespace capstoneproject.loginformDataSet1TableAdapters {[m
[32m +    [m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///Represents the connection and commands used to retrieve and save data.[m
[32m +    ///</summary>[m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.ComponentModel.DataObjectAttribute(true)][m
[32m +    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[32m +        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +    public partial class QueueDataTableAdapter : global::System.ComponentModel.Component {[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlConnection _connection;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[32m +        [m
[32m +        private bool _clearBeforeFill;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public QueueDataTableAdapter() {[m
[32m +            this.ClearBeforeFill = true;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[32m +            get {[m
[32m +                if ((this._adapter == null)) {[m
[32m +                    this.InitAdapter();[m
[32m +                }[m
[32m +                return this._adapter;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[32m +            get {[m
[32m +                if ((this._connection == null)) {[m
[32m +                    this.InitConnection();[m
[32m +                }[m
[32m +                return this._connection;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._connection = value;[m
[32m +                if ((this.Adapter.InsertCommand != null)) {[m
[32m +                    this.Adapter.InsertCommand.Connection = value;[m
[32m +                }[m
[32m +                if ((this.Adapter.DeleteCommand != null)) {[m
[32m +                    this.Adapter.DeleteCommand.Connection = value;[m
[32m +                }[m
[32m +                if ((this.Adapter.UpdateCommand != null)) {[m
[32m +                    this.Adapter.UpdateCommand.Connection = value;[m
[32m +                }[m
[32m +                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m +                    if ((this.CommandCollection[i] != null)) {[m
[32m +                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[32m +            get {[m
[32m +                return this._transaction;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._transaction = value;[m
[32m +                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m +                    this.CommandCollection[i].Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.DeleteCommand != null))) {[m
[32m +                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.InsertCommand != null))) {[m
[32m +                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.UpdateCommand != null))) {[m
[32m +                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[32m +            get {[m
[32m +                if ((this._commandCollection == null)) {[m
[32m +                    this.InitCommandCollection();[m
[32m +                }[m
[32m +                return this._commandCollection;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public bool ClearBeforeFill {[m
[32m +            get {[m
[32m +                return this._clearBeforeFill;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._clearBeforeFill = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitAdapter() {[m
[32m +            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[32m +            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[32m +            tableMapping.SourceTable = "Table";[m
[32m +            tableMapping.DataSetTable = "QueueData";[m
[32m +            tableMapping.ColumnMappings.Add("id", "id");[m
[32m +            tableMapping.ColumnMappings.Add("Name", "Name");[m
[32m +            tableMapping.ColumnMappings.Add("Department", "Department");[m
[32m +            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[32m +            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[32m +            this._adapter.TableMappings.Add(tableMapping);[m
[32m +            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.DeleteCommand.Connection = this.Connection;[m
[32m +            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Origina" +[m
[32m +                "l_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original" +[m
[32m +                "_QueueNumber))";[m
[32m +            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.InsertCommand.Connection = this.Connection;[m
[32m +            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber]) VA" +[m
[32m +                "LUES (@Name, @Department, @Purpose, @QueueNumber);\r\nSELECT id, Name, Department," +[m
[32m +                " Purpose, QueueNumber FROM QueueData WHERE (id = SCOPE_IDENTITY())";[m
[32m +            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.UpdateCommand.Connection = this.Connection;[m
[32m +            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber));[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber FROM QueueData WHERE (id = @id)";[m
[32m +            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitConnection() {[m
[32m +            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[32m +            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitCommandCollection() {[m
[32m +            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[32m +            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._commandCollection[0].Connection = this.Connection;[m
[32m +            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber FROM dbo.QueueData";[m
[32m +            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[32m +        public virtual int Fill(loginformDataSet1.QueueDataDataTable dataTable) {[m
[32m +            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m +            if ((this.ClearBeforeFill == true)) {[m
[32m +                dataTable.Clear();[m
[32m +            }[m
[32m +            int returnValue = this.Adapter.Fill(dataTable);[m
[32m +            return returnValue;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[32m +        public virtual loginformDataSet1.QueueDataDataTable GetData() {[m
[32m +            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m +            loginformDataSet1.QueueDataDataTable dataTable = new loginformDataSet1.QueueDataDataTable();[m
[32m +            this.Adapter.Fill(dataTable);[m
[32m +            return dataTable;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(loginformDataSet1.QueueDataDataTable dataTable) {[m
[32m +            return this.Adapter.Update(dataTable);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(loginformDataSet1 dataSet) {[m
[32m +            return this.Adapter.Update(dataSet, "QueueData");[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[32m +            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[32m +                        dataRow});[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[32m +            return this.Adapter.Update(dataRows);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[32m +        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber) {[m
[32m +            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[32m +            if ((Original_Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[32m +            }[m
[32m +            if ((Original_Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[32m +            }[m
[32m +            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[32m +            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.DeleteCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.DeleteCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[32m +        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber) {[m
[32m +            if ((Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[32m +            }[m
[32m +            if ((Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[32m +            }[m
[32m +            if ((Purpose == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Purpose");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m +            }[m
[32m +            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[32m +            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.InsertCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.InsertCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m +        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, int id) {[m
[32m +            if ((Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[32m +            }[m
[32m +            if ((Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[32m +            }[m
[32m +            if ((Purpose == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Purpose");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m +            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_id));[m
[32m +            if ((Original_Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Name));[m
[32m +            }[m
[32m +            if ((Original_Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Department));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_QueueNumber));[m
[32m +            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(id));[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[32m +            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.UpdateCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.UpdateCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m +        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber) {[m
[32m +            return this.Update(Name, Department, Purpose, QueueNumber, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_id);[m
[32m +        }[m
[32m +    }[m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[32m +    ///</summary>[m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[32m +        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[32m +    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[32m +        [m
[32m +        private UpdateOrderOption _updateOrder;[m
[32m +        [m
[32m +        private QueueDataTableAdapter _queueDataTableAdapter;[m
[32m +        [m
[32m +        private bool _backupDataSetBeforeUpdate;[m
[32m +        [m
[32m +        private global::System.Data.IDbConnection _connection;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public UpdateOrderOption UpdateOrder {[m
[32m +            get {[m
[32m +                return this._updateOrder;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._updateOrder = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[32m +            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[32m +            "a", "System.Drawing.Design.UITypeEditor")][m
[32m +        public QueueDataTableAdapter QueueDataTableAdapter {[m
[32m +            get {[m
[32m +                return this._queueDataTableAdapter;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._queueDataTableAdapter = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public bool BackupDataSetBeforeUpdate {[m
[32m +            get {[m
[32m +                return this._backupDataSetBeforeUpdate;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._backupDataSetBeforeUpdate = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        public global::System.Data.IDbConnection Connection {[m
[32m +            get {[m
[32m +                if ((this._connection != null)) {[m
[32m +                    return this._connection;[m
[32m +                }[m
[32m +                if (((this._queueDataTableAdapter != null) [m
[32m +                            && (this._queueDataTableAdapter.Connection != null))) {[m
[32m +                    return this._queueDataTableAdapter.Connection;[m
[32m +                }[m
[32m +                return null;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._connection = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        public int TableAdapterInstanceCount {[m
[32m +            get {[m
[32m +                int count = 0;[m
[32m +                if ((this._queueDataTableAdapter != null)) {[m
[32m +                    count = (count + 1);[m
[32m +                }[m
[32m +                return count;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update rows in top-down order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateUpdatedRows(loginformDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] updatedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[32m +                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[32m +                if (((updatedRows != null) [m
[32m +                            && (0 < updatedRows.Length))) {[m
[32m +                    result = (result + this._queueDataTableAdapter.Update(updatedRows));[m
[32m +                    allChangedRows.AddRange(updatedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Insert rows in top-down order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateInsertedRows(loginformDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] addedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[32m +                if (((addedRows != null) [m
[32m +                            && (0 < addedRows.Length))) {[m
[32m +                    result = (result + this._queueDataTableAdapter.Update(addedRows));[m
[32m +                    allAddedRows.AddRange(addedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Delete rows in bottom-up order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateDeletedRows(loginformDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] deletedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[32m +                if (((deletedRows != null) [m
[32m +                            && (0 < deletedRows.Length))) {[m
[32m +                    result = (result + this._queueDataTableAdapter.Update(deletedRows));[m
[32m +                    allChangedRows.AddRange(deletedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            if (((updatedRows == null) [m
[32m +                        || (updatedRows.Length < 1))) {[m
[32m +                return updatedRows;[m
[32m +            }[m
[32m +            if (((allAddedRows == null) [m
[32m +                        || (allAddedRows.Count < 1))) {[m
[32m +                return updatedRows;[m
[32m +            }[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[32m +                global::System.Data.DataRow row = updatedRows[i];[m
[32m +                if ((allAddedRows.Contains(row) == false)) {[m
[32m +                    realUpdatedRows.Add(row);[m
[32m +                }[m
[32m +            }[m
[32m +            return realUpdatedRows.ToArray();[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update all changes to the dataset.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public virtual int UpdateAll(loginformDataSet1 dataSet) {[m
[32m +            if ((dataSet == null)) {[m
[32m +                throw new global::System.ArgumentNullException("dataSet");[m
[32m +            }[m
[32m +            if ((dataSet.HasChanges() == false)) {[m
[32m +                return 0;[m
[32m +            }[m
[32m +            if (((this._queueDataTableAdapter != null) [m
[32m +                        && (this.MatchTableAdapterConnection(this._queueDataTableAdapter.Connection) == false))) {[m
[32m +                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[32m +                        "tring.");[m
[32m +            }[m
[32m +            global::System.Data.IDbConnection workConnection = this.Connection;[m
[32m +            if ((workConnection == null)) {[m
[32m +                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[32m +                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[32m +            }[m
[32m +            bool workConnOpened = false;[m
[32m +            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[32m +                        == global::System.Data.ConnectionState.Broken)) {[m
[32m +                workConnection.Close();[m
[32m +            }[m
[32m +            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[32m +                workConnection.Open();[m
[32m +                workConnOpened = true;[m
[32m +            }[m
[32m +            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[32m +            if ((workTransaction == null)) {[m
[32m +                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[32m +                        "ctions or the current state is not allowing the transaction to begin.");[m
[32m +            }[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[32m +            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[32m +            int result = 0;[m
[32m +            global::System.Data.DataSet backupDataSet = null;[m
[32m +            if (this.BackupDataSetBeforeUpdate) {[m
[32m +                backupDataSet = new global::System.Data.DataSet();[m
[32m +                backupDataSet.Merge(dataSet);[m
[32m +            }[m
[32m +            try {[m
[32m +                // ---- Prepare for update -----------[m
[32m +                //[m
[32m +                if ((this._queueDataTableAdapter != null)) {[m
[32m +                    revertConnections.Add(this._queueDataTableAdapter, this._queueDataTableAdapter.Connection);[m
[32m +                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[32m +                    this._queueDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[32m +                    if (this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[32m +                        this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[32m +                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueDataTableAdapter.Adapter);[m
[32m +                    }[m
[32m +                }[m
[32m +                // [m
[32m +                //---- Perform updates -----------[m
[32m +                //[m
[32m +                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[32m +                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m +                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m +                }[m
[32m +                else {[m
[32m +                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m +                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m +                }[m
[32m +                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[32m +                // [m
[32m +                //---- Commit updates -----------[m
[32m +                //[m
[32m +                workTransaction.Commit();[m
[32m +                if ((0 < allAddedRows.Count)) {[m
[32m +                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m +                    allAddedRows.CopyTo(rows);[m
[32m +                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.DataRow row = rows[i];[m
[32m +                        row.AcceptChanges();[m
[32m +                    }[m
[32m +                }[m
[32m +                if ((0 < allChangedRows.Count)) {[m
[32m +                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[32m +                    allChangedRows.CopyTo(rows);[m
[32m +                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.DataRow row = rows[i];[m
[32m +                        row.AcceptChanges();[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            catch (global::System.Exception ex) {[m
[32m +                workTransaction.Rollback();[m
[32m +                // ---- Restore the dataset -----------[m
[32m +                if (this.BackupDataSetBeforeUpdate) {[m
[32m +                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[32m +                    dataSet.Clear();[m
[32m +                    dataSet.Merge(backupDataSet);[m
[32m +                }[m
[32m +                else {[m
[32m +                    if ((0 < allAddedRows.Count)) {[m
[32m +                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m +                        allAddedRows.CopyTo(rows);[m
[32m +                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                            global::System.Data.DataRow row = rows[i];[m
[32m +                            row.AcceptChanges();[m
[32m +                            row.SetAdded();[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                throw ex;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if (workConnOpened) {[m
[32m +                    workConnection.Close();[m
[32m +                }[m
[32m +                if ((this._queueDataTableAdapter != null)) {[m
[32m +                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueDataTableAdapter]));[m
[32m +                    this._queueDataTableAdapter.Transaction = null;[m
[32m +                }[m
[32m +                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[32m +                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[32m +                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[32m +                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[32m +                        adapter.AcceptChangesDuringUpdate = true;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[32m +            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[32m +            if ((this._connection != null)) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            if (((this.Connection == null) [m
[32m +                        || (inputConnection == null))) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update Order Option[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public enum UpdateOrderOption {[m
[32m +            [m
[32m +            InsertUpdateDelete = 0,[m
[32m +            [m
[32m +            UpdateInsertDelete = 1,[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Used to sort self-referenced table's rows[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[32m +            [m
[32m +            private global::System.Data.DataRelation _relation;[m
[32m +            [m
[32m +            private int _childFirst;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[32m +                this._relation = relation;[m
[32m +                if (childFirst) {[m
[32m +                    this._childFirst = -1;[m
[32m +                }[m
[32m +                else {[m
[32m +                    this._childFirst = 1;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[32m +                global::System.Diagnostics.Debug.Assert((row != null));[m
[32m +                global::System.Data.DataRow root = row;[m
[32m +                distance = 0;[m
[32m +[m
[32m +                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[32m +                traversedRows[row] = row;[m
[32m +[m
[32m +                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m +                for ([m
[32m +                ; ((parent != null) [m
[32m +                            && (traversedRows.ContainsKey(parent) == false)); [m
[32m +                ) {[m
[32m +                    distance = (distance + 1);[m
[32m +                    root = parent;[m
[32m +                    traversedRows[parent] = parent;[m
[32m +                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m +                }[m
[32m +[m
[32m +                if ((distance == 0)) {[m
[32m +                    traversedRows.Clear();[m
[32m +                    traversedRows[row] = row;[m
[32m +                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m +                    for ([m
[32m +                    ; ((parent != null) [m
[32m +                                && (traversedRows.ContainsKey(parent) == false)); [m
[32m +                    ) {[m
[32m +                        distance = (distance + 1);[m
[32m +                        root = parent;[m
[32m +                        traversedRows[parent] = parent;[m
[32m +                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m +                    }[m
[32m +                }[m
[32m +[m
[32m +                return root;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[32m +                if (object.ReferenceEquals(row1, row2)) {[m
[32m +                    return 0;[m
[32m +                }[m
[32m +                if ((row1 == null)) {[m
[32m +                    return -1;[m
[32m +                }[m
[32m +                if ((row2 == null)) {[m
[32m +                    return 1;[m
[32m +                }[m
[32m +[m
[32m +                int distance1 = 0;[m
[32m +                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[32m +[m
[32m +                int distance2 = 0;[m
[32m +                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[32m +[m
[32m +                if (object.ReferenceEquals(root1, root2)) {[m
[32m +                    return (this._childFirst * distance1.CompareTo(distance2));[m
[32m +                }[m
[32m +                else {[m
[32m +                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[32m +                                    && (root2.Table != null)));[m
[32m +                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[32m +                        return -1;[m
[32m +                    }[m
[32m +                    else {[m
[32m +                        return 1;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +[m
[32m++=======[m
[32m++ï»¿//------------------------------------------------------------------------------[m
[32m++// <auto-generated>[m
[32m++//     This code was generated by a tool.[m
[32m++//     Runtime Version:4.0.30319.42000[m
[32m++//[m
[32m++//     Changes to this file may cause incorrect behavior and will be lost if[m
[32m++//     the code is regenerated.[m
[32m++// </auto-generated>[m
[32m++//------------------------------------------------------------------------------[m
[32m++[m
[32m++#pragma warning disable 1591[m
[32m++[m
[32m++namespace capstoneproject {[m
[32m++    [m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///Represents a strongly typed in-memory cache of data.[m
[32m++    ///</summary>[m
[32m++    [global::System.Serializable()][m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[32m++    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet1")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[32m++    public partial class loginformDataSet1 : global::System.Data.DataSet {[m
[32m++        [m
[32m++        private QueueDataDataTable tableQueueData;[m
[32m++        [m
[32m++        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public loginformDataSet1() {[m
[32m++            this.BeginInit();[m
[32m++            this.InitClass();[m
[32m++            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m++            base.Relations.CollectionChanged += schemaChangedHandler;[m
[32m++            this.EndInit();[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected loginformDataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m++                base(info, context, false) {[m
[32m++            if ((this.IsBinarySerialized(info, context) == true)) {[m
[32m++                this.InitVars(false);[m
[32m++                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[32m++                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[32m++                return;[m
[32m++            }[m
[32m++            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[32m++            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m++                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m++                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m++                if ((ds.Tables["QueueData"] != null)) {[m
[32m++                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m++                }[m
[32m++                this.DataSetName = ds.DataSetName;[m
[32m++                this.Prefix = ds.Prefix;[m
[32m++                this.Namespace = ds.Namespace;[m
[32m++                this.Locale = ds.Locale;[m
[32m++                this.CaseSensitive = ds.CaseSensitive;[m
[32m++                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m++                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            else {[m
[32m++                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m++            }[m
[32m++            this.GetSerializationData(info, context);[m
[32m++            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m++            this.Relations.CollectionChanged += schemaChangedHandler;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[32m++        public QueueDataDataTable QueueData {[m
[32m++            get {[m
[32m++                return this.tableQueueData;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.BrowsableAttribute(true)][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[32m++        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[32m++            get {[m
[32m++                return this._schemaSerializationMode;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._schemaSerializationMode = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m++        public new global::System.Data.DataTableCollection Tables {[m
[32m++            get {[m
[32m++                return base.Tables;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m++        public new global::System.Data.DataRelationCollection Relations {[m
[32m++            get {[m
[32m++                return base.Relations;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override void InitializeDerivedDataSet() {[m
[32m++            this.BeginInit();[m
[32m++            this.InitClass();[m
[32m++            this.EndInit();[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public override global::System.Data.DataSet Clone() {[m
[32m++            loginformDataSet1 cln = ((loginformDataSet1)(base.Clone()));[m
[32m++            cln.InitVars();[m
[32m++            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[32m++            return cln;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override bool ShouldSerializeTables() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override bool ShouldSerializeRelations() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[32m++            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m++                this.Reset();[m
[32m++                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m++                ds.ReadXml(reader);[m
[32m++                if ((ds.Tables["QueueData"] != null)) {[m
[32m++                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m++                }[m
[32m++                this.DataSetName = ds.DataSetName;[m
[32m++                this.Prefix = ds.Prefix;[m
[32m++                this.Namespace = ds.Namespace;[m
[32m++                this.Locale = ds.Locale;[m
[32m++                this.CaseSensitive = ds.CaseSensitive;[m
[32m++                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m++                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            else {[m
[32m++                this.ReadXml(reader);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[32m++            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[32m++            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[32m++            stream.Position = 0;[m
[32m++            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal void InitVars() {[m
[32m++            this.InitVars(true);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal void InitVars(bool initTable) {[m
[32m++            this.tableQueueData = ((QueueDataDataTable)(base.Tables["QueueData"]));[m
[32m++            if ((initTable == true)) {[m
[32m++                if ((this.tableQueueData != null)) {[m
[32m++                    this.tableQueueData.InitVars();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitClass() {[m
[32m++            this.DataSetName = "loginformDataSet1";[m
[32m++            this.Prefix = "";[m
[32m++            this.Namespace = "http://tempuri.org/loginformDataSet1.xsd";[m
[32m++            this.EnforceConstraints = true;[m
[32m++            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++            this.tableQueueData = new QueueDataDataTable();[m
[32m++            base.Tables.Add(this.tableQueueData);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private bool ShouldSerializeQueueData() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[32m++            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m++            loginformDataSet1 ds = new loginformDataSet1();[m
[32m++            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m++            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m++            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++            any.Namespace = ds.Namespace;[m
[32m++            sequence.Items.Add(any);[m
[32m++            type.Particle = sequence;[m
[32m++            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m++            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m++                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m++                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m++                try {[m
[32m++                    global::System.Xml.Schema.XmlSchema schema = null;[m
[32m++                    dsSchema.Write(s1);[m
[32m++                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m++                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m++                        s2.SetLength(0);[m
[32m++                        schema.Write(s2);[m
[32m++                        if ((s1.Length == s2.Length)) {[m
[32m++                            s1.Position = 0;[m
[32m++                            s2.Position = 0;[m
[32m++                            for (; ((s1.Position != s1.Length) [m
[32m++                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m++                                ;[m
[32m++                            }[m
[32m++                            if ((s1.Position == s1.Length)) {[m
[32m++                                return type;[m
[32m++                            }[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                finally {[m
[32m++                    if ((s1 != null)) {[m
[32m++                        s1.Close();[m
[32m++                    }[m
[32m++                    if ((s2 != null)) {[m
[32m++                        s2.Close();[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            xs.Add(dsSchema);[m
[32m++            return type;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public delegate void QueueDataRowChangeEventHandler(object sender, QueueDataRowChangeEvent e);[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Represents the strongly named DataTable class.[m
[32m++        ///</summary>[m
[32m++        [global::System.Serializable()][m
[32m++        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[32m++        public partial class QueueDataDataTable : global::System.Data.TypedTableBase<QueueDataRow> {[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnid;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnName;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnDepartment;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnPurpose;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnQueueNumber;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataDataTable() {[m
[32m++                this.TableName = "QueueData";[m
[32m++                this.BeginInit();[m
[32m++                this.InitClass();[m
[32m++                this.EndInit();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal QueueDataDataTable(global::System.Data.DataTable table) {[m
[32m++                this.TableName = table.TableName;[m
[32m++                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[32m++                    this.CaseSensitive = table.CaseSensitive;[m
[32m++                }[m
[32m++                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[32m++                    this.Locale = table.Locale;[m
[32m++                }[m
[32m++                if ((table.Namespace != table.DataSet.Namespace)) {[m
[32m++                    this.Namespace = table.Namespace;[m
[32m++                }[m
[32m++                this.Prefix = table.Prefix;[m
[32m++                this.MinimumCapacity = table.MinimumCapacity;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected QueueDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m++                    base(info, context) {[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn idColumn {[m
[32m++                get {[m
[32m++                    return this.columnid;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn NameColumn {[m
[32m++                get {[m
[32m++                    return this.columnName;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn DepartmentColumn {[m
[32m++                get {[m
[32m++                    return this.columnDepartment;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn PurposeColumn {[m
[32m++                get {[m
[32m++                    return this.columnPurpose;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn QueueNumberColumn {[m
[32m++                get {[m
[32m++                    return this.columnQueueNumber;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            [global::System.ComponentModel.Browsable(false)][m
[32m++            public int Count {[m
[32m++                get {[m
[32m++                    return this.Rows.Count;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow this[int index] {[m
[32m++                get {[m
[32m++                    return ((QueueDataRow)(this.Rows[index]));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowChanging;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowChanged;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowDeleting;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowDeleted;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void AddQueueDataRow(QueueDataRow row) {[m
[32m++                this.Rows.Add(row);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow AddQueueDataRow(string Name, string Department, string Purpose, int QueueNumber) {[m
[32m++                QueueDataRow rowQueueDataRow = ((QueueDataRow)(this.NewRow()));[m
[32m++                object[] columnValuesArray = new object[] {[m
[32m++                        null,[m
[32m++                        Name,[m
[32m++                        Department,[m
[32m++                        Purpose,[m
[32m++                        QueueNumber};[m
[32m++                rowQueueDataRow.ItemArray = columnValuesArray;[m
[32m++                this.Rows.Add(rowQueueDataRow);[m
[32m++                return rowQueueDataRow;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow FindByid(int id) {[m
[32m++                return ((QueueDataRow)(this.Rows.Find(new object[] {[m
[32m++                            id})));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public override global::System.Data.DataTable Clone() {[m
[32m++                QueueDataDataTable cln = ((QueueDataDataTable)(base.Clone()));[m
[32m++                cln.InitVars();[m
[32m++                return cln;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Data.DataTable CreateInstance() {[m
[32m++                return new QueueDataDataTable();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal void InitVars() {[m
[32m++                this.columnid = base.Columns["id"];[m
[32m++                this.columnName = base.Columns["Name"];[m
[32m++                this.columnDepartment = base.Columns["Department"];[m
[32m++                this.columnPurpose = base.Columns["Purpose"];[m
[32m++                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            private void InitClass() {[m
[32m++                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnid);[m
[32m++                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnName);[m
[32m++                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnDepartment);[m
[32m++                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnPurpose);[m
[32m++                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnQueueNumber);[m
[32m++                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[32m++                                this.columnid}, true));[m
[32m++                this.columnid.AutoIncrement = true;[m
[32m++                this.columnid.AutoIncrementSeed = -1;[m
[32m++                this.columnid.AutoIncrementStep = -1;[m
[32m++                this.columnid.AllowDBNull = false;[m
[32m++                this.columnid.ReadOnly = true;[m
[32m++                this.columnid.Unique = true;[m
[32m++                this.columnName.AllowDBNull = false;[m
[32m++                this.columnName.MaxLength = 50;[m
[32m++                this.columnDepartment.AllowDBNull = false;[m
[32m++                this.columnDepartment.MaxLength = 50;[m
[32m++                this.columnPurpose.AllowDBNull = false;[m
[32m++                this.columnPurpose.MaxLength = 2147483647;[m
[32m++                this.columnQueueNumber.AllowDBNull = false;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow NewQueueDataRow() {[m
[32m++                return ((QueueDataRow)(this.NewRow()));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[32m++                return new QueueDataRow(builder);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Type GetRowType() {[m
[32m++                return typeof(QueueDataRow);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowChanged(e);[m
[32m++                if ((this.QueueDataRowChanged != null)) {[m
[32m++                    this.QueueDataRowChanged(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowChanging(e);[m
[32m++                if ((this.QueueDataRowChanging != null)) {[m
[32m++                    this.QueueDataRowChanging(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowDeleted(e);[m
[32m++                if ((this.QueueDataRowDeleted != null)) {[m
[32m++                    this.QueueDataRowDeleted(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowDeleting(e);[m
[32m++                if ((this.QueueDataRowDeleting != null)) {[m
[32m++                    this.QueueDataRowDeleting(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void RemoveQueueDataRow(QueueDataRow row) {[m
[32m++                this.Rows.Remove(row);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m++                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m++                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m++                loginformDataSet1 ds = new loginformDataSet1();[m
[32m++                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[32m++                any1.MinOccurs = new decimal(0);[m
[32m++                any1.MaxOccurs = decimal.MaxValue;[m
[32m++                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m++                sequence.Items.Add(any1);[m
[32m++                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[32m++                any2.MinOccurs = new decimal(1);[m
[32m++                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m++                sequence.Items.Add(any2);[m
[32m++                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m++                attribute1.Name = "namespace";[m
[32m++                attribute1.FixedValue = ds.Namespace;[m
[32m++                type.Attributes.Add(attribute1);[m
[32m++                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m++                attribute2.Name = "tableTypeName";[m
[32m++                attribute2.FixedValue = "QueueDataDataTable";[m
[32m++                type.Attributes.Add(attribute2);[m
[32m++                type.Particle = sequence;[m
[32m++                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m++                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m++                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m++                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m++                    try {[m
[32m++                        global::System.Xml.Schema.XmlSchema schema = null;[m
[32m++                        dsSchema.Write(s1);[m
[32m++                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m++                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m++                            s2.SetLength(0);[m
[32m++                            schema.Write(s2);[m
[32m++                            if ((s1.Length == s2.Length)) {[m
[32m++                                s1.Position = 0;[m
[32m++                                s2.Position = 0;[m
[32m++                                for (; ((s1.Position != s1.Length) [m
[32m++                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m++                                    ;[m
[32m++                                }[m
[32m++                                if ((s1.Position == s1.Length)) {[m
[32m++                                    return type;[m
[32m++                                }[m
[32m++                            }[m
[32m++                        }[m
[32m++                    }[m
[32m++                    finally {[m
[32m++                        if ((s1 != null)) {[m
[32m++                            s1.Close();[m
[32m++                        }[m
[32m++                        if ((s2 != null)) {[m
[32m++                            s2.Close();[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                xs.Add(dsSchema);[m
[32m++                return type;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Represents strongly named DataRow class.[m
[32m++        ///</summary>[m
[32m++        public partial class QueueDataRow : global::System.Data.DataRow {[m
[32m++            [m
[32m++            private QueueDataDataTable tableQueueData;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal QueueDataRow(global::System.Data.DataRowBuilder rb) : [m
[32m++                    base(rb) {[m
[32m++                this.tableQueueData = ((QueueDataDataTable)(this.Table));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int id {[m
[32m++                get {[m
[32m++                    return ((int)(this[this.tableQueueData.idColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.idColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Name {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueData.NameColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.NameColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Department {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueData.DepartmentColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.DepartmentColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Purpose {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueData.PurposeColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.PurposeColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int QueueNumber {[m
[32m++                get {[m
[32m++                    return ((int)(this[this.tableQueueData.QueueNumberColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.QueueNumberColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Row event argument class[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public class QueueDataRowChangeEvent : global::System.EventArgs {[m
[32m++            [m
[32m++            private QueueDataRow eventRow;[m
[32m++            [m
[32m++            private global::System.Data.DataRowAction eventAction;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRowChangeEvent(QueueDataRow row, global::System.Data.DataRowAction action) {[m
[32m++                this.eventRow = row;[m
[32m++                this.eventAction = action;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow Row {[m
[32m++                get {[m
[32m++                    return this.eventRow;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataRowAction Action {[m
[32m++                get {[m
[32m++                    return this.eventAction;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++}[m
[32m++namespace capstoneproject.loginformDataSet1TableAdapters {[m
[32m++    [m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///Represents the connection and commands used to retrieve and save data.[m
[32m++    ///</summary>[m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.ComponentModel.DataObjectAttribute(true)][m
[32m++    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[32m++        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++    public partial class QueueDataTableAdapter : global::System.ComponentModel.Component {[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlConnection _connection;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[32m++        [m
[32m++        private bool _clearBeforeFill;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public QueueDataTableAdapter() {[m
[32m++            this.ClearBeforeFill = true;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[32m++            get {[m
[32m++                if ((this._adapter == null)) {[m
[32m++                    this.InitAdapter();[m
[32m++                }[m
[32m++                return this._adapter;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[32m++            get {[m
[32m++                if ((this._connection == null)) {[m
[32m++                    this.InitConnection();[m
[32m++                }[m
[32m++                return this._connection;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._connection = value;[m
[32m++                if ((this.Adapter.InsertCommand != null)) {[m
[32m++                    this.Adapter.InsertCommand.Connection = value;[m
[32m++                }[m
[32m++                if ((this.Adapter.DeleteCommand != null)) {[m
[32m++                    this.Adapter.DeleteCommand.Connection = value;[m
[32m++                }[m
[32m++                if ((this.Adapter.UpdateCommand != null)) {[m
[32m++                    this.Adapter.UpdateCommand.Connection = value;[m
[32m++                }[m
[32m++                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m++                    if ((this.CommandCollection[i] != null)) {[m
[32m++                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[32m++            get {[m
[32m++                return this._transaction;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._transaction = value;[m
[32m++                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m++                    this.CommandCollection[i].Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.DeleteCommand != null))) {[m
[32m++                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.InsertCommand != null))) {[m
[32m++                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.UpdateCommand != null))) {[m
[32m++                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[32m++            get {[m
[32m++                if ((this._commandCollection == null)) {[m
[32m++                    this.InitCommandCollection();[m
[32m++                }[m
[32m++                return this._commandCollection;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public bool ClearBeforeFill {[m
[32m++            get {[m
[32m++                return this._clearBeforeFill;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._clearBeforeFill = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitAdapter() {[m
[32m++            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[32m++            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[32m++            tableMapping.SourceTable = "Table";[m
[32m++            tableMapping.DataSetTable = "QueueData";[m
[32m++            tableMapping.ColumnMappings.Add("id", "id");[m
[32m++            tableMapping.ColumnMappings.Add("Name", "Name");[m
[32m++            tableMapping.ColumnMappings.Add("Department", "Department");[m
[32m++            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[32m++            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[32m++            this._adapter.TableMappings.Add(tableMapping);[m
[32m++            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.DeleteCommand.Connection = this.Connection;[m
[32m++            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Origina" +[m
[32m++                "l_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original" +[m
[32m++                "_QueueNumber))";[m
[32m++            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.InsertCommand.Connection = this.Connection;[m
[32m++            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber]) VA" +[m
[32m++                "LUES (@Name, @Department, @Purpose, @QueueNumber);\r\nSELECT id, Name, Department," +[m
[32m++                " Purpose, QueueNumber FROM QueueData WHERE (id = SCOPE_IDENTITY())";[m
[32m++            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.UpdateCommand.Connection = this.Connection;[m
[32m++            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber));[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber FROM QueueData WHERE (id = @id)";[m
[32m++            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitConnection() {[m
[32m++            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[32m++            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitCommandCollection() {[m
[32m++            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[32m++            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._commandCollection[0].Connection = this.Connection;[m
[32m++            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber FROM dbo.QueueData";[m
[32m++            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[32m++        public virtual int Fill(loginformDataSet1.QueueDataDataTable dataTable) {[m
[32m++            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m++            if ((this.ClearBeforeFill == true)) {[m
[32m++                dataTable.Clear();[m
[32m++            }[m
[32m++            int returnValue = this.Adapter.Fill(dataTable);[m
[32m++            return returnValue;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[32m++        public virtual loginformDataSet1.QueueDataDataTable GetData() {[m
[32m++            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m++            loginformDataSet1.QueueDataDataTable dataTable = new loginformDataSet1.QueueDataDataTable();[m
[32m++            this.Adapter.Fill(dataTable);[m
[32m++            return dataTable;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(loginformDataSet1.QueueDataDataTable dataTable) {[m
[32m++            return this.Adapter.Update(dataTable);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(loginformDataSet1 dataSet) {[m
[32m++            return this.Adapter.Update(dataSet, "QueueData");[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[32m++            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[32m++                        dataRow});[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[32m++            return this.Adapter.Update(dataRows);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[32m++        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber) {[m
[32m++            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[32m++            if ((Original_Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[32m++            }[m
[32m++            if ((Original_Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[32m++            }[m
[32m++            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[32m++            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.DeleteCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.DeleteCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[32m++        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber) {[m
[32m++            if ((Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[32m++            }[m
[32m++            if ((Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[32m++            }[m
[32m++            if ((Purpose == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Purpose");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m++            }[m
[32m++            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[32m++            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.InsertCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.InsertCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m++        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, int id) {[m
[32m++            if ((Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[32m++            }[m
[32m++            if ((Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[32m++            }[m
[32m++            if ((Purpose == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Purpose");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m++            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_id));[m
[32m++            if ((Original_Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Name));[m
[32m++            }[m
[32m++            if ((Original_Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Department));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_QueueNumber));[m
[32m++            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(id));[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[32m++            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.UpdateCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.UpdateCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m++        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber) {[m
[32m++            return this.Update(Name, Department, Purpose, QueueNumber, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_id);[m
[32m++        }[m
[32m++    }[m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[32m++    ///</summary>[m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[32m++        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[32m++    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[32m++        [m
[32m++        private UpdateOrderOption _updateOrder;[m
[32m++        [m
[32m++        private QueueDataTableAdapter _queueDataTableAdapter;[m
[32m++        [m
[32m++        private bool _backupDataSetBeforeUpdate;[m
[32m++        [m
[32m++        private global::System.Data.IDbConnection _connection;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public UpdateOrderOption UpdateOrder {[m
[32m++            get {[m
[32m++                return this._updateOrder;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._updateOrder = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[32m++            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[32m++            "a", "System.Drawing.Design.UITypeEditor")][m
[32m++        public QueueDataTableAdapter QueueDataTableAdapter {[m
[32m++            get {[m
[32m++                return this._queueDataTableAdapter;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._queueDataTableAdapter = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public bool BackupDataSetBeforeUpdate {[m
[32m++            get {[m
[32m++                return this._backupDataSetBeforeUpdate;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._backupDataSetBeforeUpdate = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        public global::System.Data.IDbConnection Connection {[m
[32m++            get {[m
[32m++                if ((this._connection != null)) {[m
[32m++                    return this._connection;[m
[32m++                }[m
[32m++                if (((this._queueDataTableAdapter != null) [m
[32m++                            && (this._queueDataTableAdapter.Connection != null))) {[m
[32m++                    return this._queueDataTableAdapter.Connection;[m
[32m++                }[m
[32m++                return null;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._connection = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        public int TableAdapterInstanceCount {[m
[32m++            get {[m
[32m++                int count = 0;[m
[32m++                if ((this._queueDataTableAdapter != null)) {[m
[32m++                    count = (count + 1);[m
[32m++                }[m
[32m++                return count;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update rows in top-down order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateUpdatedRows(loginformDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] updatedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[32m++                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[32m++                if (((updatedRows != null) [m
[32m++                            && (0 < updatedRows.Length))) {[m
[32m++                    result = (result + this._queueDataTableAdapter.Update(updatedRows));[m
[32m++                    allChangedRows.AddRange(updatedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Insert rows in top-down order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateInsertedRows(loginformDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] addedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[32m++                if (((addedRows != null) [m
[32m++                            && (0 < addedRows.Length))) {[m
[32m++                    result = (result + this._queueDataTableAdapter.Update(addedRows));[m
[32m++                    allAddedRows.AddRange(addedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Delete rows in bottom-up order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateDeletedRows(loginformDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] deletedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[32m++                if (((deletedRows != null) [m
[32m++                            && (0 < deletedRows.Length))) {[m
[32m++                    result = (result + this._queueDataTableAdapter.Update(deletedRows));[m
[32m++                    allChangedRows.AddRange(deletedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            if (((updatedRows == null) [m
[32m++                        || (updatedRows.Length < 1))) {[m
[32m++                return updatedRows;[m
[32m++            }[m
[32m++            if (((allAddedRows == null) [m
[32m++                        || (allAddedRows.Count < 1))) {[m
[32m++                return updatedRows;[m
[32m++            }[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[32m++                global::System.Data.DataRow row = updatedRows[i];[m
[32m++                if ((allAddedRows.Contains(row) == false)) {[m
[32m++                    realUpdatedRows.Add(row);[m
[32m++                }[m
[32m++            }[m
[32m++            return realUpdatedRows.ToArray();[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update all changes to the dataset.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public virtual int UpdateAll(loginformDataSet1 dataSet) {[m
[32m++            if ((dataSet == null)) {[m
[32m++                throw new global::System.ArgumentNullException("dataSet");[m
[32m++            }[m
[32m++            if ((dataSet.HasChanges() == false)) {[m
[32m++                return 0;[m
[32m++            }[m
[32m++            if (((this._queueDataTableAdapter != null) [m
[32m++                        && (this.MatchTableAdapterConnection(this._queueDataTableAdapter.Connection) == false))) {[m
[32m++                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[32m++                        "tring.");[m
[32m++            }[m
[32m++            global::System.Data.IDbConnection workConnection = this.Connection;[m
[32m++            if ((workConnection == null)) {[m
[32m++                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[32m++                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[32m++            }[m
[32m++            bool workConnOpened = false;[m
[32m++            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[32m++                        == global::System.Data.ConnectionState.Broken)) {[m
[32m++                workConnection.Close();[m
[32m++            }[m
[32m++            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[32m++                workConnection.Open();[m
[32m++                workConnOpened = true;[m
[32m++            }[m
[32m++            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[32m++            if ((workTransaction == null)) {[m
[32m++                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[32m++                        "ctions or the current state is not allowing the transaction to begin.");[m
[32m++            }[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[32m++            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[32m++            int result = 0;[m
[32m++            global::System.Data.DataSet backupDataSet = null;[m
[32m++            if (this.BackupDataSetBeforeUpdate) {[m
[32m++                backupDataSet = new global::System.Data.DataSet();[m
[32m++                backupDataSet.Merge(dataSet);[m
[32m++            }[m
[32m++            try {[m
[32m++                // ---- Prepare for update -----------[m
[32m++                //[m
[32m++                if ((this._queueDataTableAdapter != null)) {[m
[32m++                    revertConnections.Add(this._queueDataTableAdapter, this._queueDataTableAdapter.Connection);[m
[32m++                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[32m++                    this._queueDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[32m++                    if (this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[32m++                        this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[32m++                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueDataTableAdapter.Adapter);[m
[32m++                    }[m
[32m++                }[m
[32m++                // [m
[32m++                //---- Perform updates -----------[m
[32m++                //[m
[32m++                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[32m++                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m++                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m++                }[m
[32m++                else {[m
[32m++                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m++                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m++                }[m
[32m++                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[32m++                // [m
[32m++                //---- Commit updates -----------[m
[32m++                //[m
[32m++                workTransaction.Commit();[m
[32m++                if ((0 < allAddedRows.Count)) {[m
[32m++                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m++                    allAddedRows.CopyTo(rows);[m
[32m++                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.DataRow row = rows[i];[m
[32m++                        row.AcceptChanges();[m
[32m++                    }[m
[32m++                }[m
[32m++                if ((0 < allChangedRows.Count)) {[m
[32m++                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[32m++                    allChangedRows.CopyTo(rows);[m
[32m++                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.DataRow row = rows[i];[m
[32m++                        row.AcceptChanges();[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            catch (global::System.Exception ex) {[m
[32m++                workTransaction.Rollback();[m
[32m++                // ---- Restore the dataset -----------[m
[32m++                if (this.BackupDataSetBeforeUpdate) {[m
[32m++                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[32m++                    dataSet.Clear();[m
[32m++                    dataSet.Merge(backupDataSet);[m
[32m++                }[m
[32m++                else {[m
[32m++                    if ((0 < allAddedRows.Count)) {[m
[32m++                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m++                        allAddedRows.CopyTo(rows);[m
[32m++                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                            global::System.Data.DataRow row = rows[i];[m
[32m++                            row.AcceptChanges();[m
[32m++                            row.SetAdded();[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                throw ex;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if (workConnOpened) {[m
[32m++                    workConnection.Close();[m
[32m++                }[m
[32m++                if ((this._queueDataTableAdapter != null)) {[m
[32m++                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueDataTableAdapter]));[m
[32m++                    this._queueDataTableAdapter.Transaction = null;[m
[32m++                }[m
[32m++                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[32m++                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[32m++                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[32m++                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[32m++                        adapter.AcceptChangesDuringUpdate = true;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[32m++            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[32m++            if ((this._connection != null)) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            if (((this.Connection == null) [m
[32m++                        || (inputConnection == null))) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update Order Option[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public enum UpdateOrderOption {[m
[32m++            [m
[32m++            InsertUpdateDelete = 0,[m
[32m++            [m
[32m++            UpdateInsertDelete = 1,[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Used to sort self-referenced table's rows[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[32m++            [m
[32m++            private global::System.Data.DataRelation _relation;[m
[32m++            [m
[32m++            private int _childFirst;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[32m++                this._relation = relation;[m
[32m++                if (childFirst) {[m
[32m++                    this._childFirst = -1;[m
[32m++                }[m
[32m++                else {[m
[32m++                    this._childFirst = 1;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[32m++                global::System.Diagnostics.Debug.Assert((row != null));[m
[32m++                global::System.Data.DataRow root = row;[m
[32m++                distance = 0;[m
[32m++[m
[32m++                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Gewarning: in the working copy of 'capstoneproject/loginformDataSet1.xsd', LF will be replaced by CRLF the next time Git touches it
neric.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[32m++                traversedRows[row] = row;[m
[32m++[m
[32m++                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m++                for ([m
[32m++                ; ((parent != null) [m
[32m++                            && (traversedRows.ContainsKey(parent) == false)); [m
[32m++                ) {[m
[32m++                    distance = (distance + 1);[m
[32m++                    root = parent;[m
[32m++                    traversedRows[parent] = parent;[m
[32m++                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m++                }[m
[32m++[m
[32m++                if ((distance == 0)) {[m
[32m++                    traversedRows.Clear();[m
[32m++                    traversedRows[row] = row;[m
[32m++                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m++                    for ([m
[32m++                    ; ((parent != null) [m
[32m++                                && (traversedRows.ContainsKey(parent) == false)); [m
[32m++                    ) {[m
[32m++                        distance = (distance + 1);[m
[32m++                        root = parent;[m
[32m++                        traversedRows[parent] = parent;[m
[32m++                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m++                    }[m
[32m++                }[m
[32m++[m
[32m++                return root;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[32m++                if (object.ReferenceEquals(row1, row2)) {[m
[32m++                    return 0;[m
[32m++                }[m
[32m++                if ((row1 == null)) {[m
[32m++                    return -1;[m
[32m++                }[m
[32m++                if ((row2 == null)) {[m
[32m++                    return 1;[m
[32m++                }[m
[32m++[m
[32m++                int distance1 = 0;[m
[32m++                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[32m++[m
[32m++                int distance2 = 0;[m
[32m++                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[32m++[m
[32m++                if (object.ReferenceEquals(root1, root2)) {[m
[32m++                    return (this._childFirst * distance1.CompareTo(distance2));[m
[32m++                }[m
[32m++                else {[m
[32m++                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[32m++                                    && (root2.Table != null)));[m
[32m++                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[32m++                        return -1;[m
[32m++                    }[m
[32m++                    else {[m
[32m++                        return 1;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++}[m
[32m++[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  #pragma warning restore 1591[m
[1mdiff --cc capstoneproject/loginformDataSet1.xsd[m
[1mindex 82ee138,a33f603..0000000[m
[1m--- a/capstoneproject/loginformDataSet1.xsd[m
[1m+++ b/capstoneproject/loginformDataSet1.xsd[m
[36m@@@ -1,114 -1,114 +1,230 @@@[m
[31m -ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[31m -<xs:schema id="loginformDataSet1" targetNamespace="http://tempuri.org/loginformDataSet1.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet1.xsd" xmlns="http://tempuri.org/loginformDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[31m -  <xs:annotation>[m
[31m -    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[31m -      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[31m -        <Connections>[m
[31m -          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[31m -        </Connections>[m
[31m -        <Tables>[m
[31m -          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueDataTableAdapter" GeneratorDataComponentClassName="QueueDataTableAdapter" Name="QueueData" UserDataComponentName="QueueDataTableAdapter">[m
[31m -            <MainSource>[m
[31m -              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[31m -                <DeleteCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber))</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </DeleteCommand>[m
[31m -                <InsertCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber]) VALUES (@Name, @Department, @Purpose, @QueueNumber);[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber FROM QueueData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </InsertCommand>[m
[31m -                <SelectCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber FROM dbo.QueueData</CommandText>[m
[31m -                    <Parameters />[m
[31m -                  </DbCommand>[m
[31m -                </SelectCommand>[m
[31m -                <UpdateCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber));[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber FROM QueueData WHERE (id = @id)</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </UpdateCommand>[m
[31m -              </DbSource>[m
[31m -            </MainSource>[m
[31m -            <Mappings>[m
[31m -              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[31m -              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[31m -              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[31m -              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[31m -              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[31m -            </Mappings>[m
[31m -            <Sources />[m
[31m -          </TableAdapter>[m
[31m -        </Tables>[m
[31m -        <Sources />[m
[31m -      </DataSource>[m
[31m -    </xs:appinfo>[m
[31m -  </xs:annotation>[m
[31m -  <xs:element name="loginformDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet1" msprop:Generator_UserDSName="loginformDataSet1">[m
[31m -    <xs:complexType>[m
[31m -      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[31m -        <xs:element name="QueueData" msprop:Generator_TableClassName="QueueDataDataTable" msprop:Generator_TableVarName="tableQueueData" msprop:Generator_TablePropName="QueueData" msprop:Generator_RowDeletingName="QueueDataRowDeleting" msprop:Generator_RowChangingName="QueueDataRowChanging" msprop:Generator_RowEvHandlerName="QueueDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueDataRowDeleted" msprop:Generator_UserTableName="QueueData" msprop:Generator_RowChangedName="QueueDataRowChanged" msprop:Generator_RowEvArgName="QueueDataRowChangeEvent" msprop:Generator_RowClassName="QueueDataRow">[m
[31m -          <xs:complexType>[m
[31m -            <xs:sequence>[m
[31m -              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[31m -              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="2147483647" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[31m -            </xs:sequence>[m
[31m -          </xs:complexType>[m
[31m -        </xs:element>[m
[31m -      </xs:choice>[m
[31m -    </xs:complexType>[m
[31m -    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[31m -      <xs:selector xpath=".//mstns:QueueData" />[m
[31m -      <xs:field xpath="mstns:id" />[m
[31m -    </xs:unique>[m
[31m -  </xs:element>[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m +<xs:schema id="loginformDataSet1" targetNamespace="http://tempuri.org/loginformDataSet1.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet1.xsd" xmlns="http://tempuri.org/loginformDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[32m +  <xs:annotation>[m
[32m +    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m +      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m +        <Connections>[m
[32m +          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[32m +        </Connections>[m
[32m +        <Tables>[m
[32m +          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueDataTableAdapter" GeneratorDataComponentClassName="QueueDataTableAdapter" Name="QueueData" UserDataComponentName="QueueDataTableAdapter">[m
[32m +            <MainSource>[m
[32m +              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[32m +                <DeleteCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber))</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </DeleteCommand>[m
[32m +                <InsertCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber]) VALUES (@Name, @Department, @Purpose, @QueueNumber);[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber FROM QueueData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </InsertCommand>[m
[32m +                <SelectCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber FROM dbo.QueueData</CommandText>[m
[32m +                    <Parameters />[m
[32m +                  </DbCommand>[m
[32m +                </SelectCommand>[m
[32m +                <UpdateCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber));[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber FROM QueueData WHERE (id = @id)</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </UpdateCommand>[m
[32m +              </DbSource>[m
[32m +            </MainSource>[m
[32m +            <Mappings>[m
[32m +              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[32m +              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[32m +              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[32m +              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[32m +              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[32m +            </Mappings>[m
[32m +            <Sources />[m
[32m +          </TableAdapter>[m
[32m +        </Tables>[m
[32m +        <Sources />[m
[32m +      </DataSource>[m
[32m +    </xs:appinfo>[m
[32m +  </xs:annotation>[m
[32m +  <xs:element name="loginformDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet1" msprop:Generator_UserDSName="loginformDataSet1">[m
[32m +    <xs:complexType>[m
[32m +      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[32m +        <xs:element name="QueueData" msprop:Generator_TableClassName="QueueDataDataTable" msprop:Generator_TableVarName="tableQueueData" msprop:Generator_TablePropName="QueueData" msprop:Generator_RowDeletingName="QueueDataRowDeleting" msprop:Generator_RowChangingName="QueueDataRowChanging" msprop:Generator_RowEvHandlerName="QueueDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueDataRowDeleted" msprop:Generator_UserTableName="QueueData" msprop:Generator_RowChangedName="QueueDataRowChanged" msprop:Generator_RowEvArgName="QueueDataRowChangeEvent" msprop:Generator_RowClassName="QueueDataRow">[m
[32m +          <xs:complexType>[m
[32m +            <xs:sequence>[m
[32m +              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[32m +              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="2147483647" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[32m +            </xs:sequence>[m
[32m +          </xs:complexType>[m
[32m +        </xs:element>[m
[32m +      </xs:choice>[m
[32m +    </xs:complexType>[m
[32m +    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[32m +      <xs:selector xpath=".//mstns:QueueData" />[m
[32m +      <xs:field xpath="mstns:id" />[m
[32m +    </xs:unique>[m
[32m +  </xs:element>[m
[32m++=======[m
[32m++ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m++<xs:schema id="loginformDataSet1" targetNamespace="http://tempuri.org/loginformDataSet1.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet1.xsd" xmlns="http://tempuri.org/loginformDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[32m++  <xs:annotation>[m
[32m++    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m++      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m++        <Connections>[m
[32m++          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[32m++        </Connections>[m
[32m++        <Tables>[m
[32m++          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueDataTableAdapter" GeneratorDataComponentClassName="QueueDataTableAdapter" Name="QueueData" UserDataComponentName="QueueDataTableAdapter">[m
[32m++            <MainSource>[m
[32m++              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[32m++                <DeleteCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber))</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </DeleteCommand>[m
[32m++                <InsertCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber]) VALUES (@Name, @Department, @Purpose, @QueueNumber);[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber FROM QueueData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </InsertCommand>[m
[32m++                <SelectCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber FROM dbo.QueueData</CommandText>[m
[32m++                    <Parameters />[m
[32m++                  </DbCommand>[m
[32m++                </SelectCommand>[m
[32m++                <UpdateCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber));[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber FROM QueueData WHERE (id = @id)</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </UpdateCommand>[m
[32m++              </DbSource>[m
[32m++            </MainSource>[m
[32m++            <Mappings>[m
[32m++              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[32m++              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[32m++              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[32m++              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[32m++              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[32m++            </Mappings>[m
[32m++            <Sources />[m
[32m++          </TableAdapter>[m
[32m++        </Tables>[m
[32m++        <Sources />[m
[32m++      </DataSource>[m
[32m++    </xs:appinfo>[m
[32m++  </xs:annotation>[m
[32m++  <xs:element name="loginformDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet1" msprop:Generator_UserDSName="loginformDataSet1">[m
[32m++    <xs:complexType>[m
[32m++      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[32m++        <xs:element name="QueueData" msprop:Generator_TableClassName="QueueDataDataTable" msprop:Generator_TableVarName="tableQueueData" msprop:Generator_TablePropName="QueueData" msprop:Generator_RowDeletingName="QueueDataRowDeleting" msprop:Generator_RowChangingName="QueueDataRowChanging" msprop:Generator_RowEvHandlerName="QueueDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueDataRowDeleted" msprop:Generator_UserTableName="QueueData" msprop:Generator_RowChangedName="QueueDataRowChanged" msprop:Generator_RowEvArgName="QueueDataRowChangeEvent" msprop:Generator_RowClassName="QueueDataRow">[m
[32m++          <xs:complexType>[m
[32m++            <xs:sequence>[m
[32m++              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[32m++              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++          warning: in the working copy of 'capstoneproject/loginformDataSet2.Designer.cs', LF will be replaced by CRLF the next time Git touches it
        </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="2147483647" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[32m++            </xs:sequence>[m
[32m++          </xs:complexType>[m
[32m++        </xs:element>[m
[32m++      </xs:choice>[m
[32m++    </xs:complexType>[m
[32m++    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[32m++      <xs:selector xpath=".//mstns:QueueData" />[m
[32m++      <xs:field xpath="mstns:id" />[m
[32m++    </xs:unique>[m
[32m++  </xs:element>[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  </xs:schema>[m
[1mdiff --cc capstoneproject/loginformDataSet2.Designer.cs[m
[1mindex b095729,7cf8024..0000000[m
[1m--- a/capstoneproject/loginformDataSet2.Designer.cs[m
[1m+++ b/capstoneproject/loginformDataSet2.Designer.cs[m
[36m@@@ -1,1587 -1,1587 +1,3176 @@@[m
[31m -ï»¿//------------------------------------------------------------------------------[m
[31m -// <auto-generated>[m
[31m -//     This code was generated by a tool.[m
[31m -//     Runtime Version:4.0.30319.42000[m
[31m -//[m
[31m -//     Changes to this file may cause incorrect behavior and will be lost if[m
[31m -//     the code is regenerated.[m
[31m -// </auto-generated>[m
[31m -//------------------------------------------------------------------------------[m
[31m -[m
[31m -#pragma warning disable 1591[m
[31m -[m
[31m -namespace capstoneproject {[m
[31m -    [m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///Represents a strongly typed in-memory cache of data.[m
[31m -    ///</summary>[m
[31m -    [global::System.Serializable()][m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[31m -    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet2")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[31m -    public partial class loginformDataSet2 : global::System.Data.DataSet {[m
[31m -        [m
[31m -        private QueueDataDataTable tableQueueData;[m
[31m -        [m
[31m -        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public loginformDataSet2() {[m
[31m -            this.BeginInit();[m
[31m -            this.InitClass();[m
[31m -            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -            base.Tables.CollectionChanged += schemaChangedHandler;[m
[31m -            base.Relations.CollectionChanged += schemaChangedHandler;[m
[31m -            this.EndInit();[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected loginformDataSet2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[31m -                base(info, context, false) {[m
[31m -            if ((this.IsBinarySerialized(info, context) == true)) {[m
[31m -                this.InitVars(false);[m
[31m -                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[31m -                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[31m -                return;[m
[31m -            }[m
[31m -            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[31m -            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[31m -                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[31m -                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[31m -                if ((ds.Tables["QueueData"] != null)) {[m
[31m -                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[31m -                }[m
[31m -                this.DataSetName = ds.DataSetName;[m
[31m -                this.Prefix = ds.Prefix;[m
[31m -                this.Namespace = ds.Namespace;[m
[31m -                this.Locale = ds.Locale;[m
[31m -                this.CaseSensitive = ds.CaseSensitive;[m
[31m -                this.EnforceConstraints = ds.EnforceConstraints;[m
[31m -                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            else {[m
[31m -                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[31m -            }[m
[31m -            this.GetSerializationData(info, context);[m
[31m -            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -            base.Tables.CollectionChanged += schemaChangedHandler;[m
[31m -            this.Relations.CollectionChanged += schemaChangedHandler;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[31m -        public QueueDataDataTable QueueData {[m
[31m -            get {[m
[31m -                return this.tableQueueData;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.BrowsableAttribute(true)][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[31m -        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[31m -            get {[m
[31m -                return this._schemaSerializationMode;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._schemaSerializationMode = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[31m -        public new global::System.Data.DataTableCollection Tables {[m
[31m -            get {[m
[31m -                return base.Tables;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[31m -        public new global::System.Data.DataRelationCollection Relations {[m
[31m -            get {[m
[31m -                return base.Relations;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override void InitializeDerivedDataSet() {[m
[31m -            this.BeginInit();[m
[31m -            this.InitClass();[m
[31m -            this.EndInit();[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public override global::System.Data.DataSet Clone() {[m
[31m -            loginformDataSet2 cln = ((loginformDataSet2)(base.Clone()));[m
[31m -            cln.InitVars();[m
[31m -            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[31m -            return cln;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override bool ShouldSerializeTables() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override bool ShouldSerializeRelations() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[31m -            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[31m -                this.Reset();[m
[31m -                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[31m -                ds.ReadXml(reader);[m
[31m -                if ((ds.Tables["QueueData"] != null)) {[m
[31m -                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[31m -                }[m
[31m -                this.DataSetName = ds.DataSetName;[m
[31m -                this.Prefix = ds.Prefix;[m
[31m -                this.Namespace = ds.Namespace;[m
[31m -                this.Locale = ds.Locale;[m
[31m -                this.CaseSensitive = ds.CaseSensitive;[m
[31m -                this.EnforceConstraints = ds.EnforceConstraints;[m
[31m -                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            else {[m
[31m -                this.ReadXml(reader);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[31m -            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[31m -            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[31m -            stream.Position = 0;[m
[31m -            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal void InitVars() {[m
[31m -            this.InitVars(true);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal void InitVars(bool initTable) {[m
[31m -            this.tableQueueData = ((QueueDataDataTable)(base.Tables["QueueData"]));[m
[31m -            if ((initTable == true)) {[m
[31m -                if ((this.tableQueueData != null)) {[m
[31m -                    this.tableQueueData.InitVars();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitClass() {[m
[31m -            this.DataSetName = "loginformDataSet2";[m
[31m -            this.Prefix = "";[m
[31m -            this.Namespace = "http://tempuri.org/loginformDataSet2.xsd";[m
[31m -            this.EnforceConstraints = true;[m
[31m -            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -            this.tableQueueData = new QueueDataDataTable();[m
[31m -            base.Tables.Add(this.tableQueueData);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private bool ShouldSerializeQueueData() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[31m -            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[31m -            loginformDataSet2 ds = new loginformDataSet2();[m
[31m -            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[31m -            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[31m -            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -            any.Namespace = ds.Namespace;[m
[31m -            sequence.Items.Add(any);[m
[31m -            type.Particle = sequence;[m
[31m -            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[31m -            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[31m -                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[31m -                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[31m -                try {[m
[31m -                    global::System.Xml.Schema.XmlSchema schema = null;[m
[31m -                    dsSchema.Write(s1);[m
[31m -                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[31m -                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[31m -                        s2.SetLength(0);[m
[31m -                        schema.Write(s2);[m
[31m -                        if ((s1.Length == s2.Length)) {[m
[31m -                            s1.Position = 0;[m
[31m -                            s2.Position = 0;[m
[31m -                            for (; ((s1.Position != s1.Length) [m
[31m -                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[31m -                                ;[m
[31m -                            }[m
[31m -                            if ((s1.Position == s1.Length)) {[m
[31m -                                return type;[m
[31m -                            }[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                finally {[m
[31m -                    if ((s1 != null)) {[m
[31m -                        s1.Close();[m
[31m -                    }[m
[31m -                    if ((s2 != null)) {[m
[31m -                        s2.Close();[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            xs.Add(dsSchema);[m
[31m -            return type;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public delegate void QueueDataRowChangeEventHandler(object sender, QueueDataRowChangeEvent e);[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Represents the strongly named DataTable class.[m
[31m -        ///</summary>[m
[31m -        [global::System.Serializable()][m
[31m -        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[31m -        public partial class QueueDataDataTable : global::System.Data.TypedTableBase<QueueDataRow> {[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnid;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnName;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnDepartment;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnPurpose;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnQueueNumber;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columndate;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataDataTable() {[m
[31m -                this.TableName = "QueueData";[m
[31m -                this.BeginInit();[m
[31m -                this.InitClass();[m
[31m -                this.EndInit();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal QueueDataDataTable(global::System.Data.DataTable table) {[m
[31m -                this.TableName = table.TableName;[m
[31m -                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[31m -                    this.CaseSensitive = table.CaseSensitive;[m
[31m -                }[m
[31m -                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[31m -                    this.Locale = table.Locale;[m
[31m -                }[m
[31m -                if ((table.Namespace != table.DataSet.Namespace)) {[m
[31m -                    this.Namespace = table.Namespace;[m
[31m -                }[m
[31m -                this.Prefix = table.Prefix;[m
[31m -                this.MinimumCapacity = table.MinimumCapacity;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected QueueDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[31m -                    base(info, context) {[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn idColumn {[m
[31m -                get {[m
[31m -                    return this.columnid;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn NameColumn {[m
[31m -                get {[m
[31m -                    return this.columnName;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn DepartmentColumn {[m
[31m -                get {[m
[31m -                    return this.columnDepartment;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn PurposeColumn {[m
[31m -                get {[m
[31m -                    return this.columnPurpose;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn QueueNumberColumn {[m
[31m -                get {[m
[31m -                    return this.columnQueueNumber;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn dateColumn {[m
[31m -                get {[m
[31m -                    return this.columndate;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            [global::System.ComponentModel.Browsable(false)][m
[31m -            public int Count {[m
[31m -                get {[m
[31m -                    return this.Rows.Count;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow this[int index] {[m
[31m -                get {[m
[31m -                    return ((QueueDataRow)(this.Rows[index]));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowChanging;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowChanged;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowDeleting;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowDeleted;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void AddQueueDataRow(QueueDataRow row) {[m
[31m -                this.Rows.Add(row);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow AddQueueDataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime date) {[m
[31m -                QueueDataRow rowQueueDataRow = ((QueueDataRow)(this.NewRow()));[m
[31m -                object[] columnValuesArray = new object[] {[m
[31m -                        null,[m
[31m -                        Name,[m
[31m -                        Department,[m
[31m -                        Purpose,[m
[31m -                        QueueNumber,[m
[31m -                        date};[m
[31m -                rowQueueDataRow.ItemArray = columnValuesArray;[m
[31m -                this.Rows.Add(rowQueueDataRow);[m
[31m -                return rowQueueDataRow;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow FindByid(int id) {[m
[31m -                return ((QueueDataRow)(this.Rows.Find(new object[] {[m
[31m -                            id})));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public override global::System.Data.DataTable Clone() {[m
[31m -                QueueDataDataTable cln = ((QueueDataDataTable)(base.Clone()));[m
[31m -                cln.InitVars();[m
[31m -                return cln;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Data.DataTable CreateInstance() {[m
[31m -                return new QueueDataDataTable();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal void InitVars() {[m
[31m -                this.columnid = base.Columns["id"];[m
[31m -                this.columnName = base.Columns["Name"];[m
[31m -                this.columnDepartment = base.Columns["Department"];[m
[31m -                this.columnPurpose = base.Columns["Purpose"];[m
[31m -                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[31m -                this.columndate = base.Columns["date"];[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            private void InitClass() {[m
[31m -                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnid);[m
[31m -                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnName);[m
[31m -                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnDepartment);[m
[31m -                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnPurpose);[m
[31m -                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnQueueNumber);[m
[31m -                this.columndate = new global::System.Data.DataColumn("date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columndate);[m
[31m -                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[31m -                                this.columnid}, true));[m
[31m -                this.columnid.AutoIncrement = true;[m
[31m -                this.columnid.AutoIncrementSeed = -1;[m
[31m -                this.columnid.AutoIncrementStep = -1;[m
[31m -                this.columnid.AllowDBNull = false;[m
[31m -                this.columnid.ReadOnly = true;[m
[31m -                this.columnid.Unique = true;[m
[31m -                this.columnName.AllowDBNull = false;[m
[31m -                this.columnName.MaxLength = 50;[m
[31m -                this.columnDepartment.AllowDBNull = false;[m
[31m -                this.columnDepartment.MaxLength = 50;[m
[31m -                this.columnPurpose.AllowDBNull = false;[m
[31m -                this.columnPurpose.MaxLength = 2147483647;[m
[31m -                this.columnQueueNumber.AllowDBNull = false;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow NewQueueDataRow() {[m
[31m -                return ((QueueDataRow)(this.NewRow()));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[31m -                return new QueueDataRow(builder);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Type GetRowType() {[m
[31m -                return typeof(QueueDataRow);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowChanged(e);[m
[31m -                if ((this.QueueDataRowChanged != null)) {[m
[31m -                    this.QueueDataRowChanged(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowChanging(e);[m
[31m -                if ((this.QueueDataRowChanging != null)) {[m
[31m -                    this.QueueDataRowChanging(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowDeleted(e);[m
[31m -                if ((this.QueueDataRowDeleted != null)) {[m
[31m -                    this.QueueDataRowDeleted(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowDeleting(e);[m
[31m -                if ((this.QueueDataRowDeleting != null)) {[m
[31m -                    this.QueueDataRowDeleting(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void RemoveQueueDataRow(QueueDataRow row) {[m
[31m -                this.Rows.Remove(row);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[31m -                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[31m -                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[31m -                loginformDataSet2 ds = new loginformDataSet2();[m
[31m -                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[31m -                any1.MinOccurs = new decimal(0);[m
[31m -                any1.MaxOccurs = decimal.MaxValue;[m
[31m -                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[31m -                sequence.Items.Add(any1);[m
[31m -                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[31m -                any2.MinOccurs = new decimal(1);[m
[31m -                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[31m -                sequence.Items.Add(any2);[m
[31m -                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[31m -                attribute1.Name = "namespace";[m
[31m -                attribute1.FixedValue = ds.Namespace;[m
[31m -                type.Attributes.Add(attribute1);[m
[31m -                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[31m -                attribute2.Name = "tableTypeName";[m
[31m -                attribute2.FixedValue = "QueueDataDataTable";[m
[31m -                type.Attributes.Add(attribute2);[m
[31m -                type.Particle = sequence;[m
[31m -                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[31m -                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[31m -                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[31m -                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[31m -                    try {[m
[31m -                        global::System.Xml.Schema.XmlSchema schema = null;[m
[31m -                        dsSchema.Write(s1);[m
[31m -                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[31m -                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[31m -                            s2.SetLength(0);[m
[31m -                            schema.Write(s2);[m
[31m -                            if ((s1.Length == s2.Length)) {[m
[31m -                                s1.Position = 0;[m
[31m -                                s2.Position = 0;[m
[31m -                                for (; ((s1.Position != s1.Length) [m
[31m -                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[31m -                                    ;[m
[31m -                                }[m
[31m -                                if ((s1.Position == s1.Length)) {[m
[31m -                                    return type;[m
[31m -                                }[m
[31m -                            }[m
[31m -                        }[m
[31m -                    }[m
[31m -                    finally {[m
[31m -                        if ((s1 != null)) {[m
[31m -                            s1.Close();[m
[31m -                        }[m
[31m -                        if ((s2 != null)) {[m
[31m -                            s2.Close();[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                xs.Add(dsSchema);[m
[31m -                return type;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Represents strongly named DataRow class.[m
[31m -        ///</summary>[m
[31m -        public partial class QueueDataRow : global::System.Data.DataRow {[m
[31m -            [m
[31m -            private QueueDataDataTable tableQueueData;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal QueueDataRow(global::System.Data.DataRowBuilder rb) : [m
[31m -                    base(rb) {[m
[31m -                this.tableQueueData = ((QueueDataDataTable)(this.Table));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int id {[m
[31m -                get {[m
[31m -                    return ((int)(this[this.tableQueueData.idColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.idColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Name {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueData.NameColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.NameColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Department {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueData.DepartmentColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.DepartmentColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Purpose {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueData.PurposeColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.PurposeColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int QueueNumber {[m
[31m -                get {[m
[31m -                    return ((int)(this[this.tableQueueData.QueueNumberColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.QueueNumberColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public System.DateTime date {[m
[31m -                get {[m
[31m -                    try {[m
[31m -                        return ((global::System.DateTime)(this[this.tableQueueData.dateColumn]));[m
[31m -                    }[m
[31m -                    catch (global::System.InvalidCastException e) {[m
[31m -                        throw new global::System.Data.StrongTypingException("The value for column \'date\' in table \'QueueData\' is DBNull.", e);[m
[31m -                    }[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.dateColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public bool IsdateNull() {[m
[31m -                return this.IsNull(this.tableQueueData.dateColumn);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void SetdateNull() {[m
[31m -                this[this.tableQueueData.dateColumn] = global::System.Convert.DBNull;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Row event argument class[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public class QueueDataRowChangeEvent : global::System.EventArgs {[m
[31m -            [m
[31m -            private QueueDataRow eventRow;[m
[31m -            [m
[31m -            private global::System.Data.DataRowAction eventAction;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRowChangeEvent(QueueDataRow row, global::System.Data.DataRowAction action) {[m
[31m -                this.eventRow = row;[m
[31m -                this.eventAction = action;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow Row {[m
[31m -                get {[m
[31m -                    return this.eventRow;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataRowAction Action {[m
[31m -                get {[m
[31m -                    return this.eventAction;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -}[m
[31m -namespace capstoneproject.loginformDataSet2TableAdapters {[m
[31m -    [m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///Represents the connection and commands used to retrieve and save data.[m
[31m -    ///</summary>[m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.ComponentModel.DataObjectAttribute(true)][m
[31m -    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[31m -        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -    public partial class QueueDataTableAdapter : global::System.ComponentModel.Component {[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlConnection _connection;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[31m -        [m
[31m -        private bool _clearBeforeFill;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public QueueDataTableAdapter() {[m
[31m -            this.ClearBeforeFill = true;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[31m -            get {[m
[31m -                if ((this._adapter == null)) {[m
[31m -                    this.InitAdapter();[m
[31m -                }[m
[31m -                return this._adapter;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[31m -            get {[m
[31m -                if ((this._connection == null)) {[m
[31m -                    this.InitConnection();[m
[31m -                }[m
[31m -                return this._connection;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._connection = value;[m
[31m -                if ((this.Adapter.InsertCommand != null)) {[m
[31m -                    this.Adapter.InsertCommand.Connection = value;[m
[31m -                }[m
[31m -                if ((this.Adapter.DeleteCommand != null)) {[m
[31m -                    this.Adapter.DeleteCommand.Connection = value;[m
[31m -                }[m
[31m -                if ((this.Adapter.UpdateCommand != null)) {[m
[31m -                    this.Adapter.UpdateCommand.Connection = value;[m
[31m -                }[m
[31m -                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[31m -                    if ((this.CommandCollection[i] != null)) {[m
[31m -                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[31m -            get {[m
[31m -                return this._transaction;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._transaction = value;[m
[31m -                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[31m -                    this.CommandCollection[i].Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.DeleteCommand != null))) {[m
[31m -                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.InsertCommand != null))) {[m
[31m -                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.UpdateCommand != null))) {[m
[31m -                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[31m -            get {[m
[31m -                if ((this._commandCollection == null)) {[m
[31m -                    this.InitCommandCollection();[m
[31m -                }[m
[31m -                return this._commandCollection;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public bool ClearBeforeFill {[m
[31m -            get {[m
[31m -                return this._clearBeforeFill;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._clearBeforeFill = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitAdapter() {[m
[31m -            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[31m -            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[31m -            tableMapping.SourceTable = "Table";[m
[31m -            tableMapping.DataSetTable = "QueueData";[m
[31m -            tableMapping.ColumnMappings.Add("id", "id");[m
[31m -            tableMapping.ColumnMappings.Add("Name", "Name");[m
[31m -            tableMapping.ColumnMappings.Add("Department", "Department");[m
[31m -            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[31m -            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[31m -            tableMapping.ColumnMappings.Add("date", "date");[m
[31m -            this._adapter.TableMappings.Add(tableMapping);[m
[31m -            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.DeleteCommand.Connection = this.Connection;[m
[31m -            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Origina" +[m
[31m -                "l_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original" +[m
[31m -                "_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_" +[m
[31m -                "date)))";[m
[31m -            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.InsertCommand.Connection = this.Connection;[m
[31m -            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [d" +[m
[31m -                "ate]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @date);\r\nSELECT id, Na" +[m
[31m -                "me, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = SCOPE_IDEN" +[m
[31m -                "TITY())";[m
[31m -            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.UpdateCommand.Connection = this.Connection;[m
[31m -            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [date] = @date WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)));[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = @id)";[m
[31m -            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitConnection() {[m
[31m -            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[31m -            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitCommandCollection() {[m
[31m -            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[31m -            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._commandCollection[0].Connection = this.Connection;[m
[31m -            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, date FROM dbo.QueueData";[m
[31m -            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[31m -        public virtual int Fill(loginformDataSet2.QueueDataDataTable dataTable) {[m
[31m -            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[31m -            if ((this.ClearBeforeFill == true)) {[m
[31m -                dataTable.Clear();[m
[31m -            }[m
[31m -            int returnValue = this.Adapter.Fill(dataTable);[m
[31m -            return returnValue;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[31m -        public virtual loginformDataSet2.QueueDataDataTable GetData() {[m
[31m -            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[31m -            loginformDataSet2.QueueDataDataTable dataTable = new loginformDataSet2.QueueDataDataTable();[m
[31m -            this.Adapter.Fill(dataTable);[m
[31m -            return dataTable;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(loginformDataSet2.QueueDataDataTable dataTable) {[m
[31m -            return this.Adapter.Update(dataTable);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(loginformDataSet2 dataSet) {[m
[31m -            return this.Adapter.Update(dataSet, "QueueData");[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[31m -            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[31m -                        dataRow});[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[31m -            return this.Adapter.Update(dataRows);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[31m -        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date) {[m
[31m -            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[31m -            if ((Original_Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[31m -            }[m
[31m -            if ((Original_Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[31m -            }[m
[31m -            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[31m -            if ((Original_date.HasValue == true)) {[m
[31m -                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));[m
[31m -                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_date.Value));[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));[m
[31m -                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;[m
[31m -            }[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[31m -            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.DeleteCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.DeleteCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[31m -        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date) {[m
[31m -            if ((Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[31m -            }[m
[31m -            if ((Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[31m -            }[m
[31m -            if ((Purpose == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Purpose");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[31m -            }[m
[31m -            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[31m -            if ((date.HasValue == true)) {[m
[31m -                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(date.Value));[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[31m -            }[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[31m -            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.InsertCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.InsertCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[31m -        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date, int id) {[m
[31m -            if ((Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[31m -            }[m
[31m -            if ((Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[31m -            }[m
[31m -            if ((Purpose == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Purpose");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[31m -            if ((date.HasValue == true)) {[m
[31m -                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(date.Value));[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));[m
[31m -            if ((Original_Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));[m
[31m -            }[m
[31m -            if ((Original_Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Department));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_QueueNumber));[m
[31m -            if ((Original_date.HasValue == true)) {[m
[31m -                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));[m
[31m -                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_date.Value));[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));[m
[31m -                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(id));[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[31m -            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.UpdateCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.UpdateCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[31m -        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date) {[m
[31m -            return this.Update(Name, Department, Purpose, QueueNumber, date, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_date, Original_id);[m
[31m -        }[m
[31m -    }[m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[31m -    ///</summary>[m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[31m -        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[31m -    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[31m -        [m
[31m -        private UpdateOrderOption _updateOrder;[m
[31m -        [m
[31m -        private QueueDataTableAdapter _queueDataTableAdapter;[m
[31m -        [m
[31m -        private bool _backupDataSetBeforeUpdate;[m
[31m -        [m
[31m -        private global::System.Data.IDbConnection _connection;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public UpdateOrderOption UpdateOrder {[m
[31m -            get {[m
[31m -                return this._updateOrder;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._updateOrder = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[31m -            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[31m -            "a", "System.Drawing.Design.UITypeEditor")][m
[31m -        public QueueDataTableAdapter QueueDataTableAdapter {[m
[31m -            get {[m
[31m -                return this._queueDataTableAdapter;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._queueDataTableAdapter = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public bool BackupDataSetBeforeUpdate {[m
[31m -            get {[m
[31m -                return this._backupDataSetBeforeUpdate;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._backupDataSetBeforeUpdate = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        public global::System.Data.IDbConnection Connection {[m
[31m -            get {[m
[31m -                if ((this._connection != null)) {[m
[31m -                    return this._connection;[m
[31m -                }[m
[31m -                if (((this._queueDataTableAdapter != null) [m
[31m -                            && (this._queueDataTableAdapter.Connection != null))) {[m
[31m -                    return this._queueDataTableAdapter.Connection;[m
[31m -                }[m
[31m -                return null;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._connection = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        public int TableAdapterInstanceCount {[m
[31m -            get {[m
[31m -                int count = 0;[m
[31m -                if ((this._queueDataTableAdapter != null)) {[m
[31m -                    count = (count + 1);[m
[31m -                }[m
[31m -                return count;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update rows in top-down order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateUpdatedRows(loginformDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] updatedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[31m -                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[31m -                if (((updatedRows != null) [m
[31m -                            && (0 < updatedRows.Length))) {[m
[31m -                    result = (result + this._queueDataTableAdapter.Update(updatedRows));[m
[31m -                    allChangedRows.AddRange(updatedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Insert rows in top-down order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateInsertedRows(loginformDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] addedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[31m -                if (((addedRows != null) [m
[31m -                            && (0 < addedRows.Length))) {[m
[31m -                    result = (result + this._queueDataTableAdapter.Update(addedRows));[m
[31m -                    allAddedRows.AddRange(addedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Delete rows in bottom-up order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateDeletedRows(loginformDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] deletedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[31m -                if (((deletedRows != null) [m
[31m -                            && (0 < deletedRows.Length))) {[m
[31m -                    result = (result + this._queueDataTableAdapter.Update(deletedRows));[m
[31m -                    allChangedRows.AddRange(deletedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            if (((updatedRows == null) [m
[31m -                        || (updatedRows.Length < 1))) {[m
[31m -                return updatedRows;[m
[31m -            }[m
[31m -            if (((allAddedRows == null) [m
[31m -                        || (allAddedRows.Count < 1))) {[m
[31m -                return updatedRows;[m
[31m -            }[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[31m -                global::System.Data.DataRow row = updatedRows[i];[m
[31m -                if ((allAddedRows.Contains(row) == false)) {[m
[31m -                    realUpdatedRows.Add(row);[m
[31m -                }[m
[31m -            }[m
[31m -            return realUpdatedRows.ToArray();[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update all changes to the dataset.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public virtual int UpdateAll(loginformDataSet2 dataSet) {[m
[31m -            if ((dataSet == null)) {[m
[31m -                throw new global::System.ArgumentNullException("dataSet");[m
[31m -            }[m
[31m -            if ((dataSet.HasChanges() == false)) {[m
[31m -                return 0;[m
[31m -            }[m
[31m -            if (((this._queueDataTableAdapter != null) [m
[31m -                        && (this.MatchTableAdapterConnection(this._queueDataTableAdapter.Connection) == false))) {[m
[31m -                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[31m -                        "tring.");[m
[31m -            }[m
[31m -            global::System.Data.IDbConnection workConnection = this.Connection;[m
[31m -            if ((workConnection == null)) {[m
[31m -                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[31m -                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[31m -            }[m
[31m -            bool workConnOpened = false;[m
[31m -            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[31m -                        == global::System.Data.ConnectionState.Broken)) {[m
[31m -                workConnection.Close();[m
[31m -            }[m
[31m -            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[31m -                workConnection.Open();[m
[31m -                workConnOpened = true;[m
[31m -            }[m
[31m -            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[31m -            if ((workTransaction == null)) {[m
[31m -                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[31m -                        "ctions or the current state is not allowing the transaction to begin.");[m
[31m -            }[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[31m -            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[31m -            int result = 0;[m
[31m -            global::System.Data.DataSet backupDataSet = null;[m
[31m -            if (this.BackupDataSetBeforeUpdate) {[m
[31m -                backupDataSet = new global::System.Data.DataSet();[m
[31m -                backupDataSet.Merge(dataSet);[m
[31m -            }[m
[31m -            try {[m
[31m -                // ---- Prepare for update -----------[m
[31m -                //[m
[31m -                if ((this._queueDataTableAdapter != null)) {[m
[31m -                    revertConnections.Add(this._queueDataTableAdapter, this._queueDataTableAdapter.Connection);[m
[31m -                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[31m -                    this._queueDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[31m -                    if (this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[31m -                        this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[31m -                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueDataTableAdapter.Adapter);[m
[31m -                    }[m
[31m -                }[m
[31m -                // [m
[31m -                //---- Perform updates -----------[m
[31m -                //[m
[31m -                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[31m -                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[31m -                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[31m -                }[m
[31m -                else {[m
[31m -                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[31m -                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[31m -                }[m
[31m -                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[31m -                // [m
[31m -                //---- Commit updates -----------[m
[31m -                //[m
[31m -                workTransaction.Commit();[m
[31m -                if ((0 < allAddedRows.Count)) {[m
[31m -                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[31m -                    allAddedRows.CopyTo(rows);[m
[31m -                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.DataRow row = rows[i];[m
[31m -                        row.AcceptChanges();[m
[31m -                    }[m
[31m -                }[m
[31m -                if ((0 < allChangedRows.Count)) {[m
[31m -                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[31m -                    allChangedRows.CopyTo(rows);[m
[31m -                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.DataRow row = rows[i];[m
[31m -                        row.AcceptChanges();[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            catch (global::System.Exception ex) {[m
[31m -                workTransaction.Rollback();[m
[31m -                // ---- Restore the dataset -----------[m
[31m -                if (this.BackupDataSetBeforeUpdate) {[m
[31m -                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[31m -                    dataSet.Clear();[m
[31m -                    dataSet.Merge(backupDataSet);[m
[31m -                }[m
[31m -                else {[m
[31m -                    if ((0 < allAddedRows.Count)) {[m
[31m -                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[31m -                        allAddedRows.CopyTo(rows);[m
[31m -                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                            global::System.Data.DataRow row = rows[i];[m
[31m -                            row.AcceptChanges();[m
[31m -                            row.SetAdded();[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                throw ex;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if (workConnOpened) {[m
[31m -                    workConnection.Close();[m
[31m -                }[m
[31m -                if ((this._queueDataTableAdapter != null)) {[m
[31m -                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueDataTableAdapter]));[m
[31m -                    this._queueDataTableAdapter.Transaction = null;[m
[31m -                }[m
[31m -                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[31m -                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[31m -                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[31m -                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[31m -                        adapter.AcceptChangesDuringUpdate = true;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[31m -            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[31m -            if ((this._connection != null)) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            if (((this.Connection == null) [m
[31m -                        || (inputConnection == null))) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update Order Option[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public enum UpdateOrderOption {[m
[31m -            [m
[31m -            InsertUpdateDelete = 0,[m
[31m -            [m
[31m -            UpdateInsertDelete = 1,[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Used to sort self-referenced table's rows[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[31m -            [m
[31m -            private global::System.Data.DataRelation _relation;[m
[31m -            [m
[31m -            private int _childFirst;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[31m -                this._relation = relation;[m
[31m -                if (childFirst) {[m
[31m -                    this._childFirst = -1;[m
[31m -                }[m
[31m -                else {[m
[31m -                    this._childFirst = 1;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[31m -                global::System.Diagnostics.Debug.Assert((row != null));[m
[31m -                global::System.Data.DataRow root = row;[m
[31m -                distance = 0;[m
[31m -[m
[31m -                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[31m -                traversedRows[row] = row;[m
[31m -[m
[31m -                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[31m -                for ([m
[31m -                ; ((parent != null) [m
[31m -                            && (traversedRows.ContainsKey(parent) == false)); [m
[31m -                ) {[m
[31m -                    distance = (distance + 1);[m
[31m -                    root = parent;[m
[31m -                    traversedRows[parent] = parent;[m
[31m -                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[31m -                }[m
[31m -[m
[31m -                if ((distance == 0)) {[m
[31m -                    traversedRows.Clear();[m
[31m -                    traversedRows[row] = row;[m
[31m -                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[31m -                    for ([m
[31m -                    ; ((parent != null) [m
[31m -                                && (traversedRows.ContainsKey(parent) == false)); [m
[31m -                    ) {[m
[31m -                        distance = (distance + 1);[m
[31m -                        root = parent;[m
[31m -                        traversedRows[parent] = parent;[m
[31m -                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[31m -                    }[m
[31m -                }[m
[31m -[m
[31m -                return root;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[31m -                if (object.ReferenceEquals(row1, row2)) {[m
[31m -                    return 0;[m
[31m -                }[m
[31m -                if ((row1 == null)) {[m
[31m -                    return -1;[m
[31m -                }[m
[31m -                if ((row2 == null)) {[m
[31m -                    return 1;[m
[31m -                }[m
[31m -[m
[31m -                int distance1 = 0;[m
[31m -                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[31m -[m
[31m -                int distance2 = 0;[m
[31m -                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[31m -[m
[31m -                if (object.ReferenceEquals(root1, root2)) {[m
[31m -                    return (this._childFirst * distance1.CompareTo(distance2));[m
[31m -                }[m
[31m -                else {[m
[31m -                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[31m -                                    && (root2.Table != null)));[m
[31m -                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[31m -                        return -1;[m
[31m -                    }[m
[31m -                    else {[m
[31m -                        return 1;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -}[m
[31m -[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿//------------------------------------------------------------------------------[m
[32m +// <auto-generated>[m
[32m +//     This code was generated by a tool.[m
[32m +//     Runtime Version:4.0.30319.42000[m
[32m +//[m
[32m +//     Changes to this file may cause incorrect behavior and will be lost if[m
[32m +//     the code is regenerated.[m
[32m +// </auto-generated>[m
[32m +//------------------------------------------------------------------------------[m
[32m +[m
[32m +#pragma warning disable 1591[m
[32m +[m
[32m +namespace capstoneproject {[m
[32m +    [m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///Represents a strongly typed in-memory cache of data.[m
[32m +    ///</summary>[m
[32m +    [global::System.Serializable()][m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[32m +    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet2")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[32m +    public partial class loginformDataSet2 : global::System.Data.DataSet {[m
[32m +        [m
[32m +        private QueueDataDataTable tableQueueData;[m
[32m +        [m
[32m +        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public loginformDataSet2() {[m
[32m +            this.BeginInit();[m
[32m +            this.InitClass();[m
[32m +            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m +            base.Relations.CollectionChanged += schemaChangedHandler;[m
[32m +            this.EndInit();[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected loginformDataSet2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m +                base(info, context, false) {[m
[32m +            if ((this.IsBinarySerialized(info, context) == true)) {[m
[32m +                this.InitVars(false);[m
[32m +                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[32m +                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[32m +                return;[m
[32m +            }[m
[32m +            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[32m +            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m +                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m +                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m +                if ((ds.Tables["QueueData"] != null)) {[m
[32m +                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m +                }[m
[32m +                this.DataSetName = ds.DataSetName;[m
[32m +                this.Prefix = ds.Prefix;[m
[32m +                this.Namespace = ds.Namespace;[m
[32m +                this.Locale = ds.Locale;[m
[32m +                this.CaseSensitive = ds.CaseSensitive;[m
[32m +                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m +                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            else {[m
[32m +                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m +            }[m
[32m +            this.GetSerializationData(info, context);[m
[32m +            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m +            this.Relations.CollectionChanged += schemaChangedHandler;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[32m +        public QueueDataDataTable QueueData {[m
[32m +            get {[m
[32m +                return this.tableQueueData;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.BrowsableAttribute(true)][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[32m +        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[32m +            get {[m
[32m +                return this._schemaSerializationMode;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._schemaSerializationMode = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m +        public new global::System.Data.DataTableCollection Tables {[m
[32m +            get {[m
[32m +                return base.Tables;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m +        public new global::System.Data.DataRelationCollection Relations {[m
[32m +            get {[m
[32m +                return base.Relations;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override void InitializeDerivedDataSet() {[m
[32m +            this.BeginInit();[m
[32m +            this.InitClass();[m
[32m +            this.EndInit();[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public override global::System.Data.DataSet Clone() {[m
[32m +            loginformDataSet2 cln = ((loginformDataSet2)(base.Clone()));[m
[32m +            cln.InitVars();[m
[32m +            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[32m +            return cln;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override bool ShouldSerializeTables() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override bool ShouldSerializeRelations() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[32m +            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m +                this.Reset();[m
[32m +                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m +                ds.ReadXml(reader);[m
[32m +                if ((ds.Tables["QueueData"] != null)) {[m
[32m +                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m +                }[m
[32m +                this.DataSetName = ds.DataSetName;[m
[32m +                this.Prefix = ds.Prefix;[m
[32m +                this.Namespace = ds.Namespace;[m
[32m +                this.Locale = ds.Locale;[m
[32m +                this.CaseSensitive = ds.CaseSensitive;[m
[32m +                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m +                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            else {[m
[32m +                this.ReadXml(reader);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[32m +            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[32m +            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[32m +            stream.Position = 0;[m
[32m +            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal void InitVars() {[m
[32m +            this.InitVars(true);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal void InitVars(bool initTable) {[m
[32m +            this.tableQueueData = ((QueueDataDataTable)(base.Tables["QueueData"]));[m
[32m +            if ((initTable == true)) {[m
[32m +                if ((this.tableQueueData != null)) {[m
[32m +                    this.tableQueueData.InitVars();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitClass() {[m
[32m +            this.DataSetName = "loginformDataSet2";[m
[32m +            this.Prefix = "";[m
[32m +            this.Namespace = "http://tempuri.org/loginformDataSet2.xsd";[m
[32m +            this.EnforceConstraints = true;[m
[32m +            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +            this.tableQueueData = new QueueDataDataTable();[m
[32m +            base.Tables.Add(this.tableQueueData);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private bool ShouldSerializeQueueData() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[32m +            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m +            loginformDataSet2 ds = new loginformDataSet2();[m
[32m +            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m +            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m +            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +            any.Namespace = ds.Namespace;[m
[32m +            sequence.Items.Add(any);[m
[32m +            type.Particle = sequence;[m
[32m +            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m +            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m +                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m +                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m +                try {[m
[32m +                    global::System.Xml.Schema.XmlSchema schema = null;[m
[32m +                    dsSchema.Write(s1);[m
[32m +                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m +                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m +                        s2.SetLength(0);[m
[32m +                        schema.Write(s2);[m
[32m +                        if ((s1.Length == s2.Length)) {[m
[32m +                            s1.Position = 0;[m
[32m +                            s2.Position = 0;[m
[32m +                            for (; ((s1.Position != s1.Length) [m
[32m +                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m +                                ;[m
[32m +                            }[m
[32m +                            if ((s1.Position == s1.Length)) {[m
[32m +                                return type;[m
[32m +                            }[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                finally {[m
[32m +                    if ((s1 != null)) {[m
[32m +                        s1.Close();[m
[32m +                    }[m
[32m +                    if ((s2 != null)) {[m
[32m +                        s2.Close();[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            xs.Add(dsSchema);[m
[32m +            return type;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public delegate void QueueDataRowChangeEventHandler(object sender, QueueDataRowChangeEvent e);[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Represents the strongly named DataTable class.[m
[32m +        ///</summary>[m
[32m +        [global::System.Serializable()][m
[32m +        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[32m +        public partial class QueueDataDataTable : global::System.Data.TypedTableBase<QueueDataRow> {[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnid;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnName;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnDepartment;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnPurpose;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnQueueNumber;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columndate;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataDataTable() {[m
[32m +                this.TableName = "QueueData";[m
[32m +                this.BeginInit();[m
[32m +                this.InitClass();[m
[32m +                this.EndInit();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal QueueDataDataTable(global::System.Data.DataTable table) {[m
[32m +                this.TableName = table.TableName;[m
[32m +                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[32m +                    this.CaseSensitive = table.CaseSensitive;[m
[32m +                }[m
[32m +                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[32m +                    this.Locale = table.Locale;[m
[32m +                }[m
[32m +                if ((table.Namespace != table.DataSet.Namespace)) {[m
[32m +                    this.Namespace = table.Namespace;[m
[32m +                }[m
[32m +                this.Prefix = table.Prefix;[m
[32m +                this.MinimumCapacity = table.MinimumCapacity;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected QueueDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m +                    base(info, context) {[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn idColumn {[m
[32m +                get {[m
[32m +                    return this.columnid;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn NameColumn {[m
[32m +                get {[m
[32m +                    return this.columnName;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn DepartmentColumn {[m
[32m +                get {[m
[32m +                    return this.columnDepartment;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn PurposeColumn {[m
[32m +                get {[m
[32m +                    return this.columnPurpose;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn QueueNumberColumn {[m
[32m +                get {[m
[32m +                    return this.columnQueueNumber;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn dateColumn {[m
[32m +                get {[m
[32m +                    return this.columndate;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            [global::System.ComponentModel.Browsable(false)][m
[32m +            public int Count {[m
[32m +                get {[m
[32m +                    return this.Rows.Count;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow this[int index] {[m
[32m +                get {[m
[32m +                    return ((QueueDataRow)(this.Rows[index]));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowChanging;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowChanged;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowDeleting;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowDeleted;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void AddQueueDataRow(QueueDataRow row) {[m
[32m +                this.Rows.Add(row);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow AddQueueDataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime date) {[m
[32m +                QueueDataRow rowQueueDataRow = ((QueueDataRow)(this.NewRow()));[m
[32m +                object[] columnValuesArray = new object[] {[m
[32m +                        null,[m
[32m +                        Name,[m
[32m +                        Department,[m
[32m +                        Purpose,[m
[32m +                        QueueNumber,[m
[32m +                        date};[m
[32m +                rowQueueDataRow.ItemArray = columnValuesArray;[m
[32m +                this.Rows.Add(rowQueueDataRow);[m
[32m +                return rowQueueDataRow;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow FindByid(int id) {[m
[32m +                return ((QueueDataRow)(this.Rows.Find(new object[] {[m
[32m +                            id})));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public override global::System.Data.DataTable Clone() {[m
[32m +                QueueDataDataTable cln = ((QueueDataDataTable)(base.Clone()));[m
[32m +                cln.InitVars();[m
[32m +                return cln;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Data.DataTable CreateInstance() {[m
[32m +                return new QueueDataDataTable();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal void InitVars() {[m
[32m +                this.columnid = base.Columns["id"];[m
[32m +                this.columnName = base.Columns["Name"];[m
[32m +                this.columnDepartment = base.Columns["Department"];[m
[32m +                this.columnPurpose = base.Columns["Purpose"];[m
[32m +                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[32m +                this.columndate = base.Columns["date"];[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            private void InitClass() {[m
[32m +                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnid);[m
[32m +                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnName);[m
[32m +                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnDepartment);[m
[32m +                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnPurpose);[m
[32m +                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnQueueNumber);[m
[32m +                this.columndate = new global::System.Data.DataColumn("date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columndate);[m
[32m +                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[32m +                                this.columnid}, true));[m
[32m +                this.columnid.AutoIncrement = true;[m
[32m +                this.columnid.AutoIncrementSeed = -1;[m
[32m +                this.columnid.AutoIncrementStep = -1;[m
[32m +                this.columnid.AllowDBNull = false;[m
[32m +                this.columnid.ReadOnly = true;[m
[32m +                this.columnid.Unique = true;[m
[32m +                this.columnName.AllowDBNull = false;[m
[32m +                this.columnName.MaxLength = 50;[m
[32m +                this.columnDepartment.AllowDBNull = false;[m
[32m +                this.columnDepartment.MaxLength = 50;[m
[32m +                this.columnPurpose.AllowDBNull = false;[m
[32m +                this.columnPurpose.MaxLength = 2147483647;[m
[32m +                this.columnQueueNumber.AllowDBNull = false;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow NewQueueDataRow() {[m
[32m +                return ((QueueDataRow)(this.NewRow()));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[32m +                return new QueueDataRow(builder);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Type GetRowType() {[m
[32m +                return typeof(QueueDataRow);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowChanged(e);[m
[32m +                if ((this.QueueDataRowChanged != null)) {[m
[32m +                    this.QueueDataRowChanged(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowChanging(e);[m
[32m +                if ((this.QueueDataRowChanging != null)) {[m
[32m +                    this.QueueDataRowChanging(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowDeleted(e);[m
[32m +                if ((this.QueueDataRowDeleted != null)) {[m
[32m +                    this.QueueDataRowDeleted(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowDeleting(e);[m
[32m +                if ((this.QueueDataRowDeleting != null)) {[m
[32m +                    this.QueueDataRowDeleting(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void RemoveQueueDataRow(QueueDataRow row) {[m
[32m +                this.Rows.Remove(row);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m +                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m +                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m +                loginformDataSet2 ds = new loginformDataSet2();[m
[32m +                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[32m +                any1.MinOccurs = new decimal(0);[m
[32m +                any1.MaxOccurs = decimal.MaxValue;[m
[32m +                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m +                sequence.Items.Add(any1);[m
[32m +                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[32m +                any2.MinOccurs = new decimal(1);[m
[32m +                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m +                sequence.Items.Add(any2);[m
[32m +                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m +                attribute1.Name = "namespace";[m
[32m +                attribute1.FixedValue = ds.Namespace;[m
[32m +                type.Attributes.Add(attribute1);[m
[32m +                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m +                attribute2.Name = "tableTypeName";[m
[32m +                attribute2.FixedValue = "QueueDataDataTable";[m
[32m +                type.Attributes.Add(attribute2);[m
[32m +                type.Particle = sequence;[m
[32m +                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m +                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m +                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m +                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m +                    try {[m
[32m +                        global::System.Xml.Schema.XmlSchema schema = null;[m
[32m +                        dsSchema.Write(s1);[m
[32m +                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m +                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m +                            s2.SetLength(0);[m
[32m +                            schema.Write(s2);[m
[32m +                            if ((s1.Length == s2.Length)) {[m
[32m +                                s1.Position = 0;[m
[32m +                                s2.Position = 0;[m
[32m +                                for (; ((s1.Position != s1.Length) [m
[32m +                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m +                                    ;[m
[32m +                                }[m
[32m +                                if ((s1.Position == s1.Length)) {[m
[32m +                                    return type;[m
[32m +                                }[m
[32m +                            }[m
[32m +                        }[m
[32m +                    }[m
[32m +                    finally {[m
[32m +                        if ((s1 != null)) {[m
[32m +                            s1.Close();[m
[32m +                        }[m
[32m +                        if ((s2 != null)) {[m
[32m +                            s2.Close();[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                xs.Add(dsSchema);[m
[32m +                return type;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Represents strongly named DataRow class.[m
[32m +        ///</summary>[m
[32m +        public partial class QueueDataRow : global::System.Data.DataRow {[m
[32m +            [m
[32m +            private QueueDataDataTable tableQueueData;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal QueueDataRow(global::System.Data.DataRowBuilder rb) : [m
[32m +                    base(rb) {[m
[32m +                this.tableQueueData = ((QueueDataDataTable)(this.Table));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int id {[m
[32m +                get {[m
[32m +                    return ((int)(this[this.tableQueueData.idColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.idColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Name {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueData.NameColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.NameColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Department {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueData.DepartmentColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.DepartmentColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Purpose {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueData.PurposeColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.PurposeColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int QueueNumber {[m
[32m +                get {[m
[32m +                    return ((int)(this[this.tableQueueData.QueueNumberColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.QueueNumberColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public System.DateTime date {[m
[32m +                get {[m
[32m +                    try {[m
[32m +                        return ((global::System.DateTime)(this[this.tableQueueData.dateColumn]));[m
[32m +                    }[m
[32m +                    catch (global::System.InvalidCastException e) {[m
[32m +                        throw new global::System.Data.StrongTypingException("The value for column \'date\' in table \'QueueData\' is DBNull.", e);[m
[32m +                    }[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.dateColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public bool IsdateNull() {[m
[32m +                return this.IsNull(this.tableQueueData.dateColumn);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void SetdateNull() {[m
[32m +                this[this.tableQueueData.dateColumn] = global::System.Convert.DBNull;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Row event argument class[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public class QueueDataRowChangeEvent : global::System.EventArgs {[m
[32m +            [m
[32m +            private QueueDataRow eventRow;[m
[32m +            [m
[32m +            private global::System.Data.DataRowAction eventAction;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRowChangeEvent(QueueDataRow row, global::System.Data.DataRowAction action) {[m
[32m +                this.eventRow = row;[m
[32m +                this.eventAction = action;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow Row {[m
[32m +                get {[m
[32m +                    return this.eventRow;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataRowAction Action {[m
[32m +                get {[m
[32m +                    return this.eventAction;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +namespace capstoneproject.loginformDataSet2TableAdapters {[m
[32m +    [m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///Represents the connection and commands used to retrieve and save data.[m
[32m +    ///</summary>[m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.ComponentModel.DataObjectAttribute(true)][m
[32m +    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[32m +        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +    public partial class QueueDataTableAdapter : global::System.ComponentModel.Component {[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlConnection _connection;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[32m +        [m
[32m +        private bool _clearBeforeFill;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public QueueDataTableAdapter() {[m
[32m +            this.ClearBeforeFill = true;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[32m +            get {[m
[32m +                if ((this._adapter == null)) {[m
[32m +                    this.InitAdapter();[m
[32m +                }[m
[32m +                return this._adapter;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[32m +            get {[m
[32m +                if ((this._connection == null)) {[m
[32m +                    this.InitConnection();[m
[32m +                }[m
[32m +                return this._connection;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._connection = value;[m
[32m +                if ((this.Adapter.InsertCommand != null)) {[m
[32m +                    this.Adapter.InsertCommand.Connection = value;[m
[32m +                }[m
[32m +                if ((this.Adapter.DeleteCommand != null)) {[m
[32m +                    this.Adapter.DeleteCommand.Connection = value;[m
[32m +                }[m
[32m +                if ((this.Adapter.UpdateCommand != null)) {[m
[32m +                    this.Adapter.UpdateCommand.Connection = value;[m
[32m +                }[m
[32m +                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m +                    if ((this.CommandCollection[i] != null)) {[m
[32m +                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[32m +            get {[m
[32m +                return this._transaction;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._transaction = value;[m
[32m +                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m +                    this.CommandCollection[i].Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.DeleteCommand != null))) {[m
[32m +                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.InsertCommand != null))) {[m
[32m +                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.UpdateCommand != null))) {[m
[32m +                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[32m +            get {[m
[32m +                if ((this._commandCollection == null)) {[m
[32m +                    this.InitCommandCollection();[m
[32m +                }[m
[32m +                return this._commandCollection;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public bool ClearBeforeFill {[m
[32m +            get {[m
[32m +                return this._clearBeforeFill;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._clearBeforeFill = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitAdapter() {[m
[32m +            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[32m +            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[32m +            tableMapping.SourceTable = "Table";[m
[32m +            tableMapping.DataSetTable = "QueueData";[m
[32m +            tableMapping.ColumnMappings.Add("id", "id");[m
[32m +            tableMapping.ColumnMappings.Add("Name", "Name");[m
[32m +            tableMapping.ColumnMappings.Add("Department", "Department");[m
[32m +            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[32m +            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[32m +            tableMapping.ColumnMappings.Add("date", "date");[m
[32m +            this._adapter.TableMappings.Add(tableMapping);[m
[32m +            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.DeleteCommand.Connection = this.Connection;[m
[32m +            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Origina" +[m
[32m +                "l_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original" +[m
[32m +                "_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_" +[m
[32m +                "date)))";[m
[32m +            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.InsertCommand.Connection = this.Connection;[m
[32m +            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [d" +[m
[32m +                "ate]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @date);\r\nSELECT id, Na" +[m
[32m +                "me, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = SCOPE_IDEN" +[m
[32m +                "TITY())";[m
[32m +            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.UpdateCommand.Connection = this.Connection;[m
[32m +            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [date] = @date WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)));[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = @id)";[m
[32m +            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitConnection() {[m
[32m +            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[32m +            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitCommandCollection() {[m
[32m +            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[32m +            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._commandCollection[0].Connection = this.Connection;[m
[32m +            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, date FROM dbo.QueueData";[m
[32m +            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[32m +        public virtual int Fill(loginformDataSet2.QueueDataDataTable dataTable) {[m
[32m +            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m +            if ((this.ClearBeforeFill == true)) {[m
[32m +                dataTable.Clear();[m
[32m +            }[m
[32m +            int returnValue = this.Adapter.Fill(dataTable);[m
[32m +            return returnValue;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[32m +        public virtual loginformDataSet2.QueueDataDataTable GetData() {[m
[32m +            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m +            loginformDataSet2.QueueDataDataTable dataTable = new loginformDataSet2.QueueDataDataTable();[m
[32m +            this.Adapter.Fill(dataTable);[m
[32m +            return dataTable;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(loginformDataSet2.QueueDataDataTable dataTable) {[m
[32m +            return this.Adapter.Update(dataTable);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(loginformDataSet2 dataSet) {[m
[32m +            return this.Adapter.Update(dataSet, "QueueData");[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[32m +            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[32m +                        dataRow});[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[32m +            return this.Adapter.Update(dataRows);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[32m +        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date) {[m
[32m +            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[32m +            if ((Original_Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[32m +            }[m
[32m +            if ((Original_Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[32m +            }[m
[32m +            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[32m +            if ((Original_date.HasValue == true)) {[m
[32m +                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));[m
[32m +                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_date.Value));[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));[m
[32m +                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;[m
[32m +            }[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[32m +            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.DeleteCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.DeleteCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[32m +        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date) {[m
[32m +            if ((Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[32m +            }[m
[32m +            if ((Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[32m +            }[m
[32m +            if ((Purpose == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Purpose");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m +            }[m
[32m +            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m +            if ((date.HasValue == true)) {[m
[32m +                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(date.Value));[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[32m +            }[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[32m +            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.InsertCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.InsertCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m +        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date, int id) {[m
[32m +            if ((Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[32m +            }[m
[32m +            if ((Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[32m +            }[m
[32m +            if ((Purpose == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Purpose");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m +            if ((date.HasValue == true)) {[m
[32m +                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(date.Value));[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));[m
[32m +            if ((Original_Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));[m
[32m +            }[m
[32m +            if ((Original_Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Department));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_QueueNumber));[m
[32m +            if ((Original_date.HasValue == true)) {[m
[32m +                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));[m
[32m +                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_date.Value));[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));[m
[32m +                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(id));[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[32m +            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.UpdateCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.UpdateCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m +        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date) {[m
[32m +            return this.Update(Name, Department, Purpose, QueueNumber, date, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_date, Original_id);[m
[32m +        }[m
[32m +    }[m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[32m +    ///</summary>[m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[32m +        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[32m +    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[32m +        [m
[32m +        private UpdateOrderOption _updateOrder;[m
[32m +        [m
[32m +        private QueueDataTableAdapter _queueDataTableAdapter;[m
[32m +        [m
[32m +        private bool _backupDataSetBeforeUpdate;[m
[32m +        [m
[32m +        private global::System.Data.IDbConnection _connection;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public UpdateOrderOption UpdateOrder {[m
[32m +            get {[m
[32m +                return this._updateOrder;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._updateOrder = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[32m +            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[32m +            "a", "System.Drawing.Design.UITypeEditor")][m
[32m +        public QueueDataTableAdapter QueueDataTableAdapter {[m
[32m +            get {[m
[32m +                return this._queueDataTableAdapter;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._queueDataTableAdapter = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public bool BackupDataSetBeforeUpdate {[m
[32m +            get {[m
[32m +                return this._backupDataSetBeforeUpdate;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._backupDataSetBeforeUpdate = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        public global::System.Data.IDbConnection Connection {[m
[32m +            get {[m
[32m +                if ((this._connection != null)) {[m
[32m +                    return this._connection;[m
[32m +                }[m
[32m +                if (((this._queueDataTableAdapter != null) [m
[32m +                            && (this._queueDataTableAdapter.Connection != null))) {[m
[32m +                    return this._queueDataTableAdapter.Connection;[m
[32m +                }[m
[32m +                return null;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._connection = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        public int TableAdapterInstanceCount {[m
[32m +            get {[m
[32m +                int count = 0;[m
[32m +                if ((this._queueDataTableAdapter != null)) {[m
[32m +                    count = (count + 1);[m
[32m +                }[m
[32m +                return count;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update rows in top-down order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateUpdatedRows(loginformDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] updatedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[32m +                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[32m +                if (((updatedRows != null) [m
[32m +                            && (0 < updatedRows.Length))) {[m
[32m +                    result = (result + this._queueDataTableAdapter.Update(updatedRows));[m
[32m +                    allChangedRows.AddRange(updatedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Insert rows in top-down order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateInsertedRows(loginformDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] addedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[32m +                if (((addedRows != null) [m
[32m +                            && (0 < addedRows.Length))) {[m
[32m +                    result = (result + this._queueDataTableAdapter.Update(addedRows));[m
[32m +                    allAddedRows.AddRange(addedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Delete rows in bottom-up order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateDeletedRows(loginformDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] deletedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[32m +                if (((deletedRows != null) [m
[32m +                            && (0 < deletedRows.Length))) {[m
[32m +                    result = (result + this._queueDataTableAdapter.Update(deletedRows));[m
[32m +                    allChangedRows.AddRange(deletedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            if (((updatedRows == null) [m
[32m +                        || (updatedRows.Length < 1))) {[m
[32m +                return updatedRows;[m
[32m +            }[m
[32m +            if (((allAddedRows == null) [m
[32m +                        || (allAddedRows.Count < 1))) {[m
[32m +                return updatedRows;[m
[32m +            }[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[32m +                global::System.Data.DataRow row = updatedRows[i];[m
[32m +                if ((allAddedRows.Contains(row) == false)) {[m
[32m +                    realUpdatedRows.Add(row);[m
[32m +                }[m
[32m +            }[m
[32m +            return realUpdatedRows.ToArray();[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update all changes to the dataset.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public virtual int UpdateAll(loginformDataSet2 dataSet) {[m
[32m +            if ((dataSet == null)) {[m
[32m +                throw new global::System.ArgumentNullException("dataSet");[m
[32m +            }[m
[32m +            if ((dataSet.HasChanges() == false)) {[m
[32m +                return 0;[m
[32m +            }[m
[32m +            if (((this._queueDataTableAdapter != null) [m
[32m +                        && (this.MatchTableAdapterConnection(this._queueDataTableAdapter.Connection) == false))) {[m
[32m +                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[32m +                        "tring.");[m
[32m +            }[m
[32m +            global::System.Data.IDbConnection workConnection = this.Connection;[m
[32m +            if ((workConnection == null)) {[m
[32m +                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[32m +                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[32m +            }[m
[32m +            bool workConnOpened = false;[m
[32m +            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[32m +                        == global::System.Data.ConnectionState.Broken)) {[m
[32m +                workConnection.Close();[m
[32m +            }[m
[32m +            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[32m +                workConnection.Open();[m
[32m +                workConnOpened = true;[m
[32m +            }[m
[32m +            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[32m +            if ((workTransaction == null)) {[m
[32m +                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[32m +                        "ctions or the current state is not allowing the transaction to begin.");[m
[32m +            }[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[32m +            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[32m +            int result = 0;[m
[32m +            global::System.Data.DataSet backupDataSet = null;[m
[32m +            if (this.BackupDataSetBeforeUpdate) {[m
[32m +                backupDataSet = new global::System.Data.DataSet();[m
[32m +                backupDataSet.Merge(dataSet);[m
[32m +            }[m
[32m +            try {[m
[32m +                // ---- Prepare for update -----------[m
[32m +                //[m
[32m +                if ((this._queueDataTableAdapter != null)) {[m
[32m +                    revertConnections.Add(this._queueDataTableAdapter, this._queueDataTableAdapter.Connection);[m
[32m +                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[32m +                    this._queueDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[32m +                    if (this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[32m +                        this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[32m +                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueDataTableAdapter.Adapter);[m
[32m +                    }[m
[32m +                }[m
[32m +                // [m
[32m +                //---- Perform updates -----------[m
[32m +                //[m
[32m +                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[32m +                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m +                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m +                }[m
[32m +                else {[m
[32m +                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m +                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m +                }[m
[32m +                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[32m +                // [m
[32m +                //---- Commit updates -----------[m
[32m +                //[m
[32m +                workTransaction.Commit();[m
[32m +                if ((0 < allAddedRows.Count)) {[m
[32m +                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m +                    allAddedRows.CopyTo(rows);[m
[32m +                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.DataRow row = rows[i];[m
[32m +                        row.AcceptChanges();[m
[32m +                    }[m
[32m +                }[m
[32m +                if ((0 < allChangedRows.Count)) {[m
[32m +                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[32m +                    allChangedRows.CopyTo(rows);[m
[32m +                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.DataRow row = rows[i];[m
[32m +                        row.AcceptChanges();[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            catch (global::System.Exception ex) {[m
[32m +                workTransaction.Rollback();[m
[32m +                // ---- Restore the dataset -----------[m
[32m +                if (this.BackupDataSetBeforeUpdate) {[m
[32m +                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[32m +                    dataSet.Clear();[m
[32m +                    dataSet.Merge(backupDataSet);[m
[32m +                }[m
[32m +                else {[m
[32m +                    if ((0 < allAddedRows.Count)) {[m
[32m +                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m +                        allAddedRows.CopyTo(rows);[m
[32m +                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                            global::System.Data.DataRow row = rows[i];[m
[32m +                            row.AcceptChanges();[m
[32m +                            row.SetAdded();[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                throw ex;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if (workConnOpened) {[m
[32m +                    workConnection.Close();[m
[32m +                }[m
[32m +                if ((this._queueDataTableAdapter != null)) {[m
[32m +                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueDataTableAdapter]));[m
[32m +                    this._queueDataTableAdapter.Transaction = null;[m
[32m +                }[m
[32m +                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[32m +                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[32m +                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[32m +                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[32m +                        adapter.AcceptChangesDuringUpdate = true;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[32m +            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[32m +            if ((this._connection != null)) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            if (((this.Connection == null) [m
[32m +                        || (inputConnection == null))) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update Order Option[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public enum UpdateOrderOption {[m
[32m +            [m
[32m +            InsertUpdateDelete = 0,[m
[32m +            [m
[32m +            UpdateInsertDelete = 1,[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Used to sort self-referenced table's rows[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[32m +            [m
[32m +            private global::System.Data.DataRelation _relation;[m
[32m +            [m
[32m +            private int _childFirst;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[32m +                this._relation = relation;[m
[32m +                if (childFirst) {[m
[32m +                    this._childFirst = -1;[m
[32m +                }[m
[32m +                else {[m
[32m +                    this._childFirst = 1;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[32m +                global::System.Diagnostics.Debug.Assert((row != null));[m
[32m +                global::System.Data.DataRow root = row;[m
[32m +                distance = 0;[m
[32m +[m
[32m +                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[32m +                traversedRows[row] = row;[m
[32m +[m
[32m +                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m +                for ([m
[32m +                ; ((parent != null) [m
[32m +                            && (traversedRows.ContainsKey(parent) == false)); [m
[32m +                ) {[m
[32m +                    distance = (distance + 1);[m
[32m +                    root = parent;[m
[32m +                    traversedRows[parent] = parent;[m
[32m +                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m +                }[m
[32m +[m
[32m +                if ((distance == 0)) {[m
[32m +                    traversedRows.Clear();[m
[32m +                    traversedRows[row] = row;[m
[32m +                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m +                    for ([m
[32m +                    ; ((parent != null) [m
[32m +                                && (traversedRows.ContainsKey(parent) == false)); [m
[32m +                    ) {[m
[32m +                        distance = (distance + 1);[m
[32m +                        root = parent;[m
[32m +                        traversedRows[parent] = parent;[m
[32m +                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m +                    }[m
[32m +                }[m
[32m +[m
[32m +                return root;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[32m +                if (object.ReferenceEquals(row1, row2)) {[m
[32m +                    return 0;[m
[32m +                }[m
[32m +                if ((row1 == null)) {[m
[32m +                    return -1;[m
[32m +                }[m
[32m +                if ((row2 == null)) {[m
[32m +                    return 1;[m
[32m +                }[m
[32m +[m
[32m +                int distance1 = 0;[m
[32m +                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[32m +[m
[32m +                int distance2 = 0;[m
[32m +                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[32m +[m
[32m +                if (object.ReferenceEquals(root1, root2)) {[m
[32m +                    return (this._childFirst * distance1.CompareTo(distance2));[m
[32m +                }[m
[32m +                else {[m
[32m +                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[32m +                                    && (root2.Table != null)));[m
[32m +                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[32m +                        return -1;[m
[32m +                    }[m
[32m +                    else {[m
[32m +                        return 1;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +[m
[32m++=======[m
[32m++ï»¿//------------------------------------------------------------------------------[m
[32m++// <auto-generated>[m
[32m++//     This code was generated by a tool.[m
[32m++//     Runtime Version:4.0.30319.42000[m
[32m++//[m
[32m++//     Changes to this file may cause incorrect behavior and will be lost if[m
[32m++//     the code is regenerated.[m
[32m++// </auto-generated>[m
[32m++//------------------------------------------------------------------------------[m
[32m++[m
[32m++#pragma warning disable 1591[m
[32m++[m
[32m++namespace capstoneproject {[m
[32m++    [m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///Represents a strongly typed in-memory cache of data.[m
[32m++    ///</summary>[m
[32m++    [global::System.Serializable()][m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[32m++    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet2")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[32m++    public partial class loginformDataSet2 : global::System.Data.DataSet {[m
[32m++        [m
[32m++        private QueueDataDataTable tableQueueData;[m
[32m++        [m
[32m++        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public loginformDataSet2() {[m
[32m++            this.BeginInit();[m
[32m++            this.InitClass();[m
[32m++            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m++            base.Relations.CollectionChanged += schemaChangedHandler;[m
[32m++            this.EndInit();[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected loginformDataSet2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m++                base(info, context, false) {[m
[32m++            if ((this.IsBinarySerialized(info, context) == true)) {[m
[32m++                this.InitVars(false);[m
[32m++                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[32m++                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[32m++                return;[m
[32m++            }[m
[32m++            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[32m++            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m++                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m++                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m++                if ((ds.Tables["QueueData"] != null)) {[m
[32m++                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m++                }[m
[32m++                this.DataSetName = ds.DataSetName;[m
[32m++                this.Prefix = ds.Prefix;[m
[32m++                this.Namespace = ds.Namespace;[m
[32m++                this.Locale = ds.Locale;[m
[32m++                this.CaseSensitive = ds.CaseSensitive;[m
[32m++                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m++                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            else {[m
[32m++                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m++            }[m
[32m++            this.GetSerializationData(info, context);[m
[32m++            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m++            this.Relations.CollectionChanged += schemaChangedHandler;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[32m++        public QueueDataDataTable QueueData {[m
[32m++            get {[m
[32m++                return this.tableQueueData;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.BrowsableAttribute(true)][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[32m++        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[32m++            get {[m
[32m++                return this._schemaSerializationMode;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._schemaSerializationMode = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m++        public new global::System.Data.DataTableCollection Tables {[m
[32m++            get {[m
[32m++                return base.Tables;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m++        public new global::System.Data.DataRelationCollection Relations {[m
[32m++            get {[m
[32m++                return base.Relations;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override void InitializeDerivedDataSet() {[m
[32m++            this.BeginInit();[m
[32m++            this.InitClass();[m
[32m++            this.EndInit();[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public override global::System.Data.DataSet Clone() {[m
[32m++            loginformDataSet2 cln = ((loginformDataSet2)(base.Clone()));[m
[32m++            cln.InitVars();[m
[32m++            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[32m++            return cln;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override bool ShouldSerializeTables() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override bool ShouldSerializeRelations() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[32m++            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m++                this.Reset();[m
[32m++                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m++                ds.ReadXml(reader);[m
[32m++                if ((ds.Tables["QueueData"] != null)) {[m
[32m++                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m++                }[m
[32m++                this.DataSetName = ds.DataSetName;[m
[32m++                this.Prefix = ds.Prefix;[m
[32m++                this.Namespace = ds.Namespace;[m
[32m++                this.Locale = ds.Locale;[m
[32m++                this.CaseSensitive = ds.CaseSensitive;[m
[32m++                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m++                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            else {[m
[32m++                this.ReadXml(reader);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[32m++            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[32m++            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[32m++            stream.Position = 0;[m
[32m++            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal void InitVars() {[m
[32m++            this.InitVars(true);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal void InitVars(bool initTable) {[m
[32m++            this.tableQueueData = ((QueueDataDataTable)(base.Tables["QueueData"]));[m
[32m++            if ((initTable == true)) {[m
[32m++                if ((this.tableQueueData != null)) {[m
[32m++                    this.tableQueueData.InitVars();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitClass() {[m
[32m++            this.DataSetName = "loginformDataSet2";[m
[32m++            this.Prefix = "";[m
[32m++            this.Namespace = "http://tempuri.org/loginformDataSet2.xsd";[m
[32m++            this.EnforceConstraints = true;[m
[32m++            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++            this.tableQueueData = new QueueDataDataTable();[m
[32m++            base.Tables.Add(this.tableQueueData);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private bool ShouldSerializeQueueData() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[32m++            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m++            loginformDataSet2 ds = new loginformDataSet2();[m
[32m++            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m++            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m++            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++            any.Namespace = ds.Namespace;[m
[32m++            sequence.Items.Add(any);[m
[32m++            type.Particle = sequence;[m
[32m++            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m++            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m++                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m++                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m++                try {[m
[32m++                    global::System.Xml.Schema.XmlSchema schema = null;[m
[32m++                    dsSchema.Write(s1);[m
[32m++                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m++                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m++                        s2.SetLength(0);[m
[32m++                        schema.Write(s2);[m
[32m++                        if ((s1.Length == s2.Length)) {[m
[32m++                            s1.Position = 0;[m
[32m++                            s2.Position = 0;[m
[32m++                            for (; ((s1.Position != s1.Length) [m
[32m++                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m++                                ;[m
[32m++                            }[m
[32m++                            if ((s1.Position == s1.Length)) {[m
[32m++                                return type;[m
[32m++                            }[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                finally {[m
[32m++                    if ((s1 != null)) {[m
[32m++                        s1.Close();[m
[32m++                    }[m
[32m++                    if ((s2 != null)) {[m
[32m++                        s2.Close();[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            xs.Add(dsSchema);[m
[32m++            return type;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public delegate void QueueDataRowChangeEventHandler(object sender, QueueDataRowChangeEvent e);[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Represents the strongly named DataTable class.[m
[32m++        ///</summary>[m
[32m++        [global::System.Serializable()][m
[32m++        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[32m++        public partial class QueueDataDataTable : global::System.Data.TypedTableBase<QueueDataRow> {[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnid;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnName;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnDepartment;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnPurpose;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnQueueNumber;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columndate;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataDataTable() {[m
[32m++                this.TableName = "QueueData";[m
[32m++                this.BeginInit();[m
[32m++                this.InitClass();[m
[32m++                this.EndInit();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal QueueDataDataTable(global::System.Data.DataTable table) {[m
[32m++                this.TableName = table.TableName;[m
[32m++                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[32m++                    this.CaseSensitive = table.CaseSensitive;[m
[32m++                }[m
[32m++                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[32m++                    this.Locale = table.Locale;[m
[32m++                }[m
[32m++                if ((table.Namespace != table.DataSet.Namespace)) {[m
[32m++                    this.Namespace = table.Namespace;[m
[32m++                }[m
[32m++                this.Prefix = table.Prefix;[m
[32m++                this.MinimumCapacity = table.MinimumCapacity;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected QueueDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m++                    base(info, context) {[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn idColumn {[m
[32m++                get {[m
[32m++                    return this.columnid;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn NameColumn {[m
[32m++                get {[m
[32m++                    return this.columnName;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn DepartmentColumn {[m
[32m++                get {[m
[32m++                    return this.columnDepartment;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn PurposeColumn {[m
[32m++                get {[m
[32m++                    return this.columnPurpose;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn QueueNumberColumn {[m
[32m++                get {[m
[32m++                    return this.columnQueueNumber;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn dateColumn {[m
[32m++                get {[m
[32m++                    return this.columndate;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            [global::System.ComponentModel.Browsable(false)][m
[32m++            public int Count {[m
[32m++                get {[m
[32m++                    return this.Rows.Count;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow this[int index] {[m
[32m++                get {[m
[32m++                    return ((QueueDataRow)(this.Rows[index]));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowChanging;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowChanged;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowDeleting;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowDeleted;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void AddQueueDataRow(QueueDataRow row) {[m
[32m++                this.Rows.Add(row);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow AddQueueDataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime date) {[m
[32m++                QueueDataRow rowQueueDataRow = ((QueueDataRow)(this.NewRow()));[m
[32m++                object[] columnValuesArray = new object[] {[m
[32m++                        null,[m
[32m++                        Name,[m
[32m++                        Department,[m
[32m++                        Purpose,[m
[32m++                        QueueNumber,[m
[32m++                        date};[m
[32m++                rowQueueDataRow.ItemArray = columnValuesArray;[m
[32m++                this.Rows.Add(rowQueueDataRow);[m
[32m++                return rowQueueDataRow;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow FindByid(int id) {[m
[32m++                return ((QueueDataRow)(this.Rows.Find(new object[] {[m
[32m++                            id})));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public override global::System.Data.DataTable Clone() {[m
[32m++                QueueDataDataTable cln = ((QueueDataDataTable)(base.Clone()));[m
[32m++                cln.InitVars();[m
[32m++                return cln;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Data.DataTable CreateInstance() {[m
[32m++                return new QueueDataDataTable();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal void InitVars() {[m
[32m++                this.columnid = base.Columns["id"];[m
[32m++                this.columnName = base.Columns["Name"];[m
[32m++                this.columnDepartment = base.Columns["Department"];[m
[32m++                this.columnPurpose = base.Columns["Purpose"];[m
[32m++                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[32m++                this.columndate = base.Columns["date"];[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            private void InitClass() {[m
[32m++                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnid);[m
[32m++                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnName);[m
[32m++                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnDepartment);[m
[32m++                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnPurpose);[m
[32m++                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnQueueNumber);[m
[32m++                this.columndate = new global::System.Data.DataColumn("date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columndate);[m
[32m++                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[32m++                                this.columnid}, true));[m
[32m++                this.columnid.AutoIncrement = true;[m
[32m++                this.columnid.AutoIncrementSeed = -1;[m
[32m++                this.columnid.AutoIncrementStep = -1;[m
[32m++                this.columnid.AllowDBNull = false;[m
[32m++                this.columnid.ReadOnly = true;[m
[32m++                this.columnid.Unique = true;[m
[32m++                this.columnName.AllowDBNull = false;[m
[32m++                this.columnName.MaxLength = 50;[m
[32m++                this.columnDepartment.AllowDBNull = false;[m
[32m++                this.columnDepartment.MaxLength = 50;[m
[32m++                this.columnPurpose.AllowDBNull = false;[m
[32m++                this.columnPurpose.MaxLength = 2147483647;[m
[32m++                this.columnQueueNumber.AllowDBNull = false;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow NewQueueDataRow() {[m
[32m++                return ((QueueDataRow)(this.NewRow()));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[32m++                return new QueueDataRow(builder);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Type GetRowType() {[m
[32m++                return typeof(QueueDataRow);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowChanged(e);[m
[32m++                if ((this.QueueDataRowChanged != null)) {[m
[32m++                    this.QueueDataRowChanged(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowChanging(e);[m
[32m++                if ((this.QueueDataRowChanging != null)) {[m
[32m++                    this.QueueDataRowChanging(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowDeleted(e);[m
[32m++                if ((this.QueueDataRowDeleted != null)) {[m
[32m++                    this.QueueDataRowDeleted(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowDeleting(e);[m
[32m++                if ((this.QueueDataRowDeleting != null)) {[m
[32m++                    this.QueueDataRowDeleting(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void RemoveQueueDataRow(QueueDataRow row) {[m
[32m++                this.Rows.Remove(row);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m++                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m++                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m++                loginformDataSet2 ds = new loginformDataSet2();[m
[32m++                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[32m++                any1.MinOccurs = new decimal(0);[m
[32m++                any1.MaxOccurs = decimal.MaxValue;[m
[32m++                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m++                sequence.Items.Add(any1);[m
[32m++                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[32m++                any2.MinOccurs = new decimal(1);[m
[32m++                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m++                sequence.Items.Add(any2);[m
[32m++                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m++                attribute1.Name = "namespace";[m
[32m++                attribute1.FixedValue = ds.Namespace;[m
[32m++                type.Attributes.Add(attribute1);[m
[32m++                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m++                attribute2.Name = "tableTypeName";[m
[32m++                attribute2.FixedValue = "QueueDataDataTable";[m
[32m++                type.Attributes.Add(attribute2);[m
[32m++                type.Particle = sequence;[m
[32m++                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m++                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m++                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m++                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m++                    try {[m
[32m++                        global::System.Xml.Schema.XmlSchema schema = null;[m
[32m++                        dsSchema.Write(s1);[m
[32m++                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m++                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m++                            s2.SetLength(0);[m
[32m++                            schema.Write(s2);[m
[32m++                            if ((s1.Length == s2.Length)) {[m
[32m++                                s1.Position = 0;[m
[32m++                                s2.Position = 0;[m
[32m++                                for (; ((s1.Position != s1.Length) [m
[32m++                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m++                                    ;[m
[32m++                                }[m
[32m++                                if ((s1.Position == s1.Length)) {[m
[32m++                                    return type;[m
[32m++                                }[m
[32m++                            }[m
[32m++                        }[m
[32m++                    }[m
[32m++                    finally {[m
[32m++                        if ((s1 != null)) {[m
[32m++                            s1.Close();[m
[32m++                        }[m
[32m++                        if ((s2 != null)) {[m
[32m++                            s2.Close();[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                xs.Add(dsSchema);[m
[32m++                return type;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Represents strongly named DataRow class.[m
[32m++        ///</summary>[m
[32m++        public partial class QueueDataRow : global::System.Data.DataRow {[m
[32m++            [m
[32m++            private QueueDataDataTable tableQueueData;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal QueueDataRow(global::System.Data.DataRowBuilder rb) : [m
[32m++                    base(rb) {[m
[32m++                this.tableQueueData = ((QueueDataDataTable)(this.Table));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int id {[m
[32m++                get {[m
[32m++                    return ((int)(this[this.tableQueueData.idColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.idColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Name {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueData.NameColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.NameColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Department {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueData.DepartmentColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.DepartmentColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Purpose {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueData.PurposeColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.PurposeColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int QueueNumber {[m
[32m++                get {[m
[32m++                    return ((int)(this[this.tableQueueData.QueueNumberColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.QueueNumberColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public System.DateTime date {[m
[32m++                get {[m
[32m++                    try {[m
[32m++                        return ((global::System.DateTime)(this[this.tableQueueData.dateColumn]));[m
[32m++                    }[m
[32m++                    catch (global::System.InvalidCastException e) {[m
[32m++                        throw new global::System.Data.StrongTypingException("The value for column \'date\' in table \'QueueData\' is DBNull.", e);[m
[32m++                    }[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.dateColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public bool IsdateNull() {[m
[32m++                return this.IsNull(this.tableQueueData.dateColumn);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void SetdateNull() {[m
[32m++                this[this.tableQueueData.dateColumn] = global::System.Convert.DBNull;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Row event argument class[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public class QueueDataRowChangeEvent : global::System.EventArgs {[m
[32m++            [m
[32m++            private QueueDataRow eventRow;[m
[32m++            [m
[32m++            private global::System.Data.DataRowAction eventAction;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRowChangeEvent(QueueDataRow row, global::System.Data.DataRowAction action) {[m
[32m++                this.eventRow = row;[m
[32m++                this.eventAction = action;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow Row {[m
[32m++                get {[m
[32m++                    return this.eventRow;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataRowAction Action {[m
[32m++                get {[m
[32m++                    return this.eventAction;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++}[m
[32m++namespace capstoneproject.loginformDataSet2TableAdapters {[m
[32m++    [m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///Represents the connection and commands used to retrieve and save data.[m
[32m++    ///</summary>[m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.ComponentModel.DataObjectAttribute(true)][m
[32m++    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[32m++        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++    public partial class QueueDataTableAdapter : global::System.ComponentModel.Component {[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlConnection _connection;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[32m++        [m
[32m++        private bool _clearBeforeFill;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public QueueDataTableAdapter() {[m
[32m++            this.ClearBeforeFill = true;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[32m++            get {[m
[32m++                if ((this._adapter == null)) {[m
[32m++                    this.InitAdapter();[m
[32m++                }[m
[32m++                return this._adapter;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[32m++            get {[m
[32m++                if ((this._connection == null)) {[m
[32m++                    this.InitConnection();[m
[32m++                }[m
[32m++                return this._connection;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._connection = value;[m
[32m++                if ((this.Adapter.InsertCommand != null)) {[m
[32m++                    this.Adapter.InsertCommand.Connection = value;[m
[32m++                }[m
[32m++                if ((this.Adapter.DeleteCommand != null)) {[m
[32m++                    this.Adapter.DeleteCommand.Connection = value;[m
[32m++                }[m
[32m++                if ((this.Adapter.UpdateCommand != null)) {[m
[32m++                    this.Adapter.UpdateCommand.Connection = value;[m
[32m++                }[m
[32m++                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m++                    if ((this.CommandCollection[i] != null)) {[m
[32m++                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[32m++            get {[m
[32m++                return this._transaction;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._transaction = value;[m
[32m++                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m++                    this.CommandCollection[i].Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.DeleteCommand != null))) {[m
[32m++                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.InsertCommand != null))) {[m
[32m++                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.UpdateCommand != null))) {[m
[32m++                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[32m++            get {[m
[32m++                if ((this._commandCollection == null)) {[m
[32m++                    this.InitCommandCollection();[m
[32m++                }[m
[32m++                return this._commandCollection;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public bool ClearBeforeFill {[m
[32m++            get {[m
[32m++                return this._clearBeforeFill;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._clearBeforeFill = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitAdapter() {[m
[32m++            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[32m++            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[32m++            tableMapping.SourceTable = "Table";[m
[32m++            tableMapping.DataSetTable = "QueueData";[m
[32m++            tableMapping.ColumnMappings.Add("id", "id");[m
[32m++            tableMapping.ColumnMappings.Add("Name", "Name");[m
[32m++            tableMapping.ColumnMappings.Add("Department", "Department");[m
[32m++            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[32m++            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[32m++            tableMapping.ColumnMappings.Add("date", "date");[m
[32m++            this._adapter.TableMappings.Add(tableMapping);[m
[32m++            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.DeleteCommand.Connection = this.Connection;[m
[32m++            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Origina" +[m
[32m++                "l_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original" +[m
[32m++                "_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_" +[m
[32m++                "date)))";[m
[32m++            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.InsertCommand.Connection = this.Connection;[m
[32m++            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [d" +[m
[32m++                "ate]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @date);\r\nSELECT id, Na" +[m
[32m++                "me, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = SCOPE_IDEN" +[m
[32m++                "TITY())";[m
[32m++            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.UpdateCommand.Connection = this.Connection;[m
[32m++            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [date] = @date WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)));[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = @id)";[m
[32m++            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitConnection() {[m
[32m++            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[32m++            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitCommandCollection() {[m
[32m++            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[32m++            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._commandCollection[0].Connection = this.Connection;[m
[32m++            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, date FROM dbo.QueueData";[m
[32m++            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[32m++        public virtual int Fill(loginformDataSet2.QueueDataDataTable dataTable) {[m
[32m++            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m++            if ((this.ClearBeforeFill == true)) {[m
[32m++                dataTable.Clear();[m
[32m++            }[m
[32m++            int returnValue = this.Adapter.Fill(dataTable);[m
[32m++            return returnValue;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[32m++        public virtual loginformDataSet2.QueueDataDataTable GetData() {[m
[32m++            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m++            loginformDataSet2.QueueDataDataTable dataTable = new loginformDataSet2.QueueDataDataTable();[m
[32m++            this.Adapter.Fill(dataTable);[m
[32m++            return dataTable;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(loginformDataSet2.QueueDataDataTable dataTable) {[m
[32m++            return this.Adapter.Update(dataTable);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(loginformDataSet2 dataSet) {[m
[32m++            return this.Adapter.Update(dataSet, "QueueData");[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[32m++            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[32m++                        dataRow});[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[32m++            return this.Adapter.Update(dataRows);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[32m++        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date) {[m
[32m++            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[32m++            if ((Original_Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[32m++            }[m
[32m++            if ((Original_Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[32m++            }[m
[32m++            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[32m++            if ((Original_date.HasValue == true)) {[m
[32m++                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));[m
[32m++                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_date.Value));[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));[m
[32m++                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;[m
[32m++            }[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[32m++            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.DeleteCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.DeleteCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[32m++        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date) {[m
[32m++            if ((Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[32m++            }[m
[32m++            if ((Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[32m++            }[m
[32m++            if ((Purpose == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Purpose");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m++            }[m
[32m++            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m++            if ((date.HasValue == true)) {[m
[32m++                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(date.Value));[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[32m++            }[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[32m++            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.InsertCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.InsertCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m++        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date, int id) {[m
[32m++            if ((Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[32m++            }[m
[32m++            if ((Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[32m++            }[m
[32m++            if ((Purpose == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Purpose");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m++            if ((date.HasValue == true)) {[m
[32m++                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(date.Value));[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));[m
[32m++            if ((Original_Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));[m
[32m++            }[m
[32m++            if ((Original_Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Department));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_QueueNumber));[m
[32m++            if ((Original_date.HasValue == true)) {[m
[32m++                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));[m
[32m++                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_date.Value));[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));[m
[32m++                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(id));[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[32m++            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.UpdateCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.UpdateCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m++        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date) {[m
[32m++            return this.Update(Name, Department, Purpose, QueueNumber, date, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_date, Original_id);[m
[32m++        }[m
[32m++    }[m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[32m++    ///</summary>[m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[32m++        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[32m++    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[32m++        [m
[32m++        private UpdateOrderOption _updateOrder;[m
[32m++        [m
[32m++        private QueueDataTableAdapter _queueDataTableAdapter;[m
[32m++        [m
[32m++        private bool _backupDataSetBeforeUpdate;[m
[32m++        [m
[32m++        private global::System.Data.IDbConnection _connection;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public UpdateOrderOption UpdateOrder {[m
[32m++            get {[m
[32m++                return this._updateOrder;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._updateOrder = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[32m++            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[32m++            "a", "System.Drawing.Design.UITypeEditor")][m
[32m++        public QueueDataTableAdapter QueueDataTableAdapter {[m
[32m++            get {[m
[32m++                return this._queueDataTableAdapter;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._queueDataTableAdapter = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public bool BackupDataSetBeforeUpdate {[m
[32m++            get {[m
[32m++                return this._backupDataSetBeforeUpdate;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._backupDataSetBeforeUpdate = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        public global::System.Data.IDbConnection Connection {[m
[32m++            get {[m
[32m++                if ((this._connection != null)) {[m
[32m++                    return this._connection;[m
[32m++                }[m
[32m++                if (((this._queueDataTableAdapter != null) [m
[32m++                            && (this._queueDataTableAdapter.Connection != null))) {[m
[32m++                    return this._queueDataTableAdapter.Connection;[m
[32m++                }[m
[32m++                return null;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._connection = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        public int TableAdapterInstanceCount {[m
[32m++            get {[m
[32m++                int count = 0;[m
[32m++                if ((this._queueDataTableAdapter != null)) {[m
[32m++                    count = (count + 1);[m
[32m++                }[m
[32m++                return count;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update rows in top-down order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateUpdatedRows(loginformDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] updatedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[32m++                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[32m++                if (((updatedRows != null) [m
[32m++                            && (0 < updatedRows.Length))) {[m
[32m++                    result = (result + this._queueDataTableAdapter.Update(updatedRows));[m
[32m++                    allChangedRows.AddRange(updatedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Insert rows in top-down order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateInsertedRows(loginformDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] addedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[32m++                if (((addedRows != null) [m
[32m++                            && (0 < addedRows.Length))) {[m
[32m++                    result = (result + this._queueDataTableAdapter.Update(addedRows));[m
[32m++                    allAddedRows.AddRange(addedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Delete rows in bottom-up order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateDeletedRows(loginformDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] deletedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[32m++                if (((deletedRows != null) [m
[32m++                            && (0 < deletedRows.Length))) {[m
[32m++                    result = (result + this._queueDataTableAdapter.Update(deletedRows));[m
[32m++                    allChangedRows.AddRange(deletedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            if (((updatedRows == null) [m
[32m++                        || (updatedRows.Length < 1))) {[m
[32m++                return updatedRows;[m
[32m++            }[m
[32m++            if (((allAddedRows == null) [m
[32m++                        || (allAddedRows.Count < 1))) {[m
[32m++                return updatedRows;[m
[32m++            }[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[32m++                global::System.Data.DataRow row = updatedRows[i];[m
[32m++                if ((allAddedRows.Contains(row) == false)) {[m
[32m++                    realUpdatedRows.Add(row);[m
[32m++                }[m
[32m++            }[m
[32m++            return realUpdatedRows.ToArray();[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update all changes to the dataset.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public virtual int UpdateAll(loginformDataSet2 dataSet) {[m
[32m++            if ((dataSet == null)) {[m
[32m++                throw new global::System.ArgumentNullException("dataSet");[m
[32m++            }[m
[32m++            if ((dataSet.HasChanges() == false)) {[m
[32m++                return 0;[m
[32m++            }[m
[32m++            if (((this._queueDataTableAdapter != null) [m
[32m++                        && (this.MatchTableAdapterConnection(this._queueDataTableAdapter.Connection) == false))) {[m
[32m++                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[32m++                        "tring.");[m
[32m++            }[m
[32m++            global::System.Data.IDbConnection workConnection = this.Connection;[m
[32m++            if ((workConnection == null)) {[m
[32m++                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[32m++                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[32m++            }[m
[32m++            bool workConnOpened = false;[m
[32m++            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[32m++                        == global::System.Data.ConnectionState.Broken)) {[m
[32m++                workConnection.Close();[m
[32m++            }[m
[32m++            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[32m++                workConnection.Open();[m
[32m++                workConnOpened = true;[m
[32m++            }[m
[32m++            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[32m++            if ((workTransaction == null)) {[m
[32m++                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[32m++                        "ctions or the current state is not allowing the transaction to begin.");[m
[32m++            }[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[32m++            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[32m++            int result = 0;[m
[32m++            global::System.Data.DataSet backupDataSet = null;[m
[32m++            if (this.BackupDataSetBeforeUpdate) {[m
[32m++                backupDataSet = new global::System.Data.DataSet();[m
[32m++                backupDataSet.Merge(dataSet);[m
[32m++            }[m
[32m++            try {[m
[32m++                // ---- Prepare for update -----------[m
[32m++                //[m
[32m++                if ((this._queueDataTableAdapter != null)) {[m
[32m++                    revertConnections.Add(this._queueDataTableAdapter, this._queueDataTableAdapter.Connection);[m
[32m++                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[32m++                    this._queueDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[32m++                    if (this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[32m++                        this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[32m++                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueDataTableAdapter.Adapter);[m
[32m++                    }[m
[32m++                }[m
[32m++                // [m
[32m++                //---- Perform updates -----------[m
[32m++                //[m
[32m++                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[32m++                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m++                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m++                }[m
[32m++                else {[m
[32m++                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m++                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m++                }[m
[32m++                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[32m++                // [m
[32m++                //---- Commit updates -----------[m
[32m++                //[m
[32m++                workTransaction.Commit();[m
[32m++                if ((0 < allAddedRows.Count)) {[m
[32m++                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m++                    allAddedRows.CopyTo(rows);[m
[32m++                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.DataRow row = rows[i];[m
[32m++                        row.AcceptChanges();[m
[32m++                    }[m
[32m++                }[m
[32m++                if ((0 < allChangedRows.Count)) {[m
[32m++                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[32m++                    allChangedRows.CopyTo(rows);[m
[32m++                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.DataRow row = rows[i];[m
[32m++                        row.AcceptChanges();[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            catch (global::System.Exception ex) {[m
[32m++                workTransaction.Rollback();[m
[32m++                // ---- Restore the dataset -----------[m
[32m++                if (this.BackupDataSetBeforeUpdate) {[m
[32m++                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[32m++                    dataSet.Clear();[m
[32m++                    dataSet.Merge(backupDataSet);[m
[32m++                }[m
[32m++                else {[m
[32m++                    if ((0 < allAddedRows.Count)) {[m
[32m++                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m++                        allAddedRows.CopyTo(rows);[m
[32m++                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                            global::System.Data.DataRow row = rows[i];[m
[32m++                            row.AcceptChanges();[m
[32m++                            row.SetAdded();[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                throw ex;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if (workConnOpened) {[m
[32m++                    workConnection.Close();[m
[32m++                }[m
[32m++                if ((this._queueDataTableAdapter != null)) {[m
[32m++                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueDataTableAdapter]));[m
[32m++                    this._queueDataTableAdapter.Transaction = null;[m
[32m++                }[m
[32m++                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[32m++                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[32m++                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[32m++                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[32m++                        adapter.AcceptChangesDuringUpdate = true;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[32m++            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[32m++            if ((this._connection != null)) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            if (((this.Connection == null) [m
[32m++                        || (inputConnection == null))) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update Order Option[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public enum UpdateOrderOption {[m
[32m++            [m
[32m++            InsertUpdateDelete = 0,[m
[32m++            [m
[32m++            UpdateInsertDelete = 1,[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Used to sort self-referenced table's rows[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[32m++            [m
[32m++            private global::System.Data.DataRelation _relation;[m
[32m++            [m
[32m++            private int _childFirst;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[32m++                this._relation = relation;[m
[32m++                if (childFirst) {[m
[32m++                    this._childFirst = -1;[m
[32m++                }[m
[32m++                else {[m
[32m++                    this._childFirst = 1;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[32m++                global::System.Diagnostics.Debug.Assert((row != null));[m
[32m++                global::System.Data.DataRow root = row;[m
[32m++                distance = 0;[m
[32m++[m
[32m++                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[32m++                traversedRows[row] = row;[m
[32m++[m
[32m++                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m++                for ([m
[32m++                ; ((parent != null) [m
[32m++                            && (traversedRows.ContainsKey(parent) == false)); [m
[32m++                ) {[m
[32m++                    distance = (distance + 1);[m
[32m++                    root = parent;[m
[32m++                    traversedRows[parent] = parent;[m
[32m++                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m++                }[m
[32m++[m
[32m++                if ((distance == 0)) {[m
[32m++                    traversedRows.Clear();[m
[32m++                    traversedRows[row] = row;[m
[32m++                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m++                    for ([m
[32m++                    ; ((parent != null) [m
[32m++                                && (traversedRows.ContainsKey(parent) == false)); [m
[32m++                    ) {[m
[32m++                        distance = (distance + 1);[m
[32m++                        root = parent;[m
[32m++                        traversedRows[parent] = parent;[m
[32m++                        parent = parent.GetParentRow(thiswarning: in the working copy of 'capstoneproject/loginformDataSet2.xsd', LF will be replaced by CRLF the next time Git touches it
._relation, global::System.Data.DataRowVersion.Original);[m
[32m++                    }[m
[32m++                }[m
[32m++[m
[32m++                return root;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[32m++                if (object.ReferenceEquals(row1, row2)) {[m
[32m++                    return 0;[m
[32m++                }[m
[32m++                if ((row1 == null)) {[m
[32m++                    return -1;[m
[32m++                }[m
[32m++                if ((row2 == null)) {[m
[32m++                    return 1;[m
[32m++                }[m
[32m++[m
[32m++                int distance1 = 0;[m
[32m++                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[32m++[m
[32m++                int distance2 = 0;[m
[32m++                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[32m++[m
[32m++                if (object.ReferenceEquals(root1, root2)) {[m
[32m++                    return (this._childFirst * distance1.CompareTo(distance2));[m
[32m++                }[m
[32m++                else {[m
[32m++                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[32m++                                    && (root2.Table != null)));[m
[32m++                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[32m++                        return -1;[m
[32m++                    }[m
[32m++                    else {[m
[32m++                        return 1;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++}[m
[32m++[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  #pragma warning restore 1591[m
[1mdiff --cc capstoneproject/loginformDataSet2.xsd[m
[1mindex 833acef,e5c4a45..0000000[m
[1m--- a/capstoneproject/loginformDataSet2.xsd[m
[1m+++ b/capstoneproject/loginformDataSet2.xsd[m
[36m@@@ -1,122 -1,122 +1,246 @@@[m
[31m -ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[31m -<xs:schema id="loginformDataSet2" targetNamespace="http://tempuri.org/loginformDataSet2.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet2.xsd" xmlns="http://tempuri.org/loginformDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[31m -  <xs:annotation>[m
[31m -    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[31m -      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[31m -        <Connections>[m
[31m -          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[31m -        </Connections>[m
[31m -        <Tables>[m
[31m -          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueDataTableAdapter" GeneratorDataComponentClassName="QueueDataTableAdapter" Name="QueueData" UserDataComponentName="QueueDataTableAdapter">[m
[31m -            <MainSource>[m
[31m -              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[31m -                <DeleteCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)))</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </DeleteCommand>[m
[31m -                <InsertCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [date]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @date);[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </InsertCommand>[m
[31m -                <SelectCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, date FROM dbo.QueueData</CommandText>[m
[31m -                    <Parameters />[m
[31m -                  </DbCommand>[m
[31m -                </SelectCommand>[m
[31m -                <UpdateCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [date] = @date WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)));[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = @id)</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </UpdateCommand>[m
[31m -              </DbSource>[m
[31m -            </MainSource>[m
[31m -            <Mappings>[m
[31m -              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[31m -              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[31m -              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[31m -              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[31m -              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[31m -              <Mapping SourceColumn="date" DataSetColumn="date" />[m
[31m -            </Mappings>[m
[31m -            <Sources />[m
[31m -          </TableAdapter>[m
[31m -        </Tables>[m
[31m -        <Sources />[m
[31m -      </DataSource>[m
[31m -    </xs:appinfo>[m
[31m -  </xs:annotation>[m
[31m -  <xs:element name="loginformDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet2" msprop:Generator_UserDSName="loginformDataSet2">[m
[31m -    <xs:complexType>[m
[31m -      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[31m -        <xs:element name="QueueData" msprop:Generator_TableClassName="QueueDataDataTable" msprop:Generator_TableVarName="tableQueueData" msprop:Generator_TablePropName="QueueData" msprop:Generator_RowDeletingName="QueueDataRowDeleting" msprop:Generator_RowChangingName="QueueDataRowChanging" msprop:Generator_RowEvHandlerName="QueueDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueDataRowDeleted" msprop:Generator_UserTableName="QueueData" msprop:Generator_RowChangedName="QueueDataRowChanged" msprop:Generator_RowEvArgName="QueueDataRowChangeEvent" msprop:Generator_RowClassName="QueueDataRow">[m
[31m -          <xs:complexType>[m
[31m -            <xs:sequence>[m
[31m -              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[31m -              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="2147483647" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[31m -              <xs:element name="date" msprop:Generator_ColumnVarNameInTable="columndate" msprop:Generator_ColumnPropNameInRow="date" msprop:Generator_ColumnPropNameInTable="dateColumn" msprop:Generator_UserColumnName="date" type="xs:dateTime" minOccurs="0" />[m
[31m -            </xs:sequence>[m
[31m -          </xs:complexType>[m
[31m -        </xs:element>[m
[31m -      </xs:choice>[m
[31m -    </xs:complexType>[m
[31m -    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[31m -      <xs:selector xpath=".//mstns:QueueData" />[m
[31m -      <xs:field xpath="mstns:id" />[m
[31m -    </xs:unique>[m
[31m -  </xs:element>[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m +<xs:schema id="loginformDataSet2" targetNamespace="http://tempuri.org/loginformDataSet2.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet2.xsd" xmlns="http://tempuri.org/loginformDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[32m +  <xs:annotation>[m
[32m +    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m +      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m +        <Connections>[m
[32m +          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[32m +        </Connections>[m
[32m +        <Tables>[m
[32m +          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueDataTableAdapter" GeneratorDataComponentClassName="QueueDataTableAdapter" Name="QueueData" UserDataComponentName="QueueDataTableAdapter">[m
[32m +            <MainSource>[m
[32m +              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[32m +                <DeleteCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)))</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </DeleteCommand>[m
[32m +                <InsertCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [date]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @date);[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </InsertCommand>[m
[32m +                <SelectCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, date FROM dbo.QueueData</CommandText>[m
[32m +                    <Parameters />[m
[32m +                  </DbCommand>[m
[32m +                </SelectCommand>[m
[32m +                <UpdateCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [date] = @date WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)));[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = @id)</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </UpdateCommand>[m
[32m +              </DbSource>[m
[32m +            </MainSource>[m
[32m +            <Mappings>[m
[32m +              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[32m +              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[32m +              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[32m +              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[32m +              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[32m +              <Mapping SourceColumn="date" DataSetColumn="date" />[m
[32m +            </Mappings>[m
[32m +            <Sources />[m
[32m +          </TableAdapter>[m
[32m +        </Tables>[m
[32m +        <Sources />[m
[32m +      </DataSource>[m
[32m +    </xs:appinfo>[m
[32m +  </xs:annotation>[m
[32m +  <xs:element name="loginformDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet2" msprop:Generator_UserDSName="loginformDataSet2">[m
[32m +    <xs:complexType>[m
[32m +      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[32m +        <xs:element name="QueueData" msprop:Generator_TableClassName="QueueDataDataTable" msprop:Generator_TableVarName="tableQueueData" msprop:Generator_TablePropName="QueueData" msprop:Generator_RowDeletingName="QueueDataRowDeleting" msprop:Generator_RowChangingName="QueueDataRowChanging" msprop:Generator_RowEvHandlerName="QueueDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueDataRowDeleted" msprop:Generator_UserTableName="QueueData" msprop:Generator_RowChangedName="QueueDataRowChanged" msprop:Generator_RowEvArgName="QueueDataRowChangeEvent" msprop:Generator_RowClassName="QueueDataRow">[m
[32m +          <xs:complexType>[m
[32m +            <xs:sequence>[m
[32m +              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[32m +              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="2147483647" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[32m +              <xs:element name="date" msprop:Generator_ColumnVarNameInTable="columndate" msprop:Generator_ColumnPropNameInRow="date" msprop:Generator_ColumnPropNameInTable="dateColumn" msprop:Generator_UserColumnName="date" type="xs:dateTime" minOccurs="0" />[m
[32m +            </xs:sequence>[m
[32m +          </xs:complexType>[m
[32m +        </xs:element>[m
[32m +      </xs:choice>[m
[32m +    </xs:complexType>[m
[32m +    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[32m +      <xs:selector xpath=".//mstns:QueueData" />[m
[32m +      <xs:field xpath="mstns:id" />[m
[32m +    </xs:unique>[m
[32m +  </xs:element>[m
[32m++=======[m
[32m++ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m++<xs:schema id="loginformDataSet2" targetNamespace="http://tempuri.org/loginformDataSet2.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet2.xsd" xmlns="http://tempuri.org/loginformDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[32m++  <xs:annotation>[m
[32m++    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m++      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m++        <Connections>[m
[32m++          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[32m++        </Connections>[m
[32m++        <Tables>[m
[32m++          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueDataTableAdapter" GeneratorDataComponentClassName="QueueDataTableAdapter" Name="QueueData" UserDataComponentName="QueueDataTableAdapter">[m
[32m++            <MainSource>[m
[32m++              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[32m++                <DeleteCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)))</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </DeleteCommand>[m
[32m++                <InsertCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [date]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @date);[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </InsertCommand>[m
[32m++                <SelectCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, date FROM dbo.QueueData</CommandText>[m
[32m++                    <Parameters />[m
[32m++                  </DbCommand>[m
[32m++                </SelectCommand>[m
[32m++                <UpdateCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [date] = @date WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)));[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = @id)</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </UpdateCommand>[m
[32m++              </DbSource>[m
[32m++            </MainSource>[m
[32m++            <Mappings>[m
[32m++              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[32m++              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[32m++              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[32m++              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[32m++              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[32m++              <Mapping SourceColumn="date" DataSetColumn="date" />[m
[32m++            </Mappings>[m
[32m++            <Sources />[m
[32m++          </TableAdapter>[m
[32m++        </Tables>[m
[32m++        <Sources />[m
[32m++      </DataSource>[m
[32m++    </xs:appinfo>[m
[32m++  </xs:annotation>[m
[32m++  <xs:element name="loginformDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet2" msprop:Generator_UserDSName="loginformDataSet2">[m
[32m++    <xs:complexType>[m
[32m++      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[32m++        <xs:element name="QueueData" msprop:Generator_TableClassName="QueueDataDataTable" msprop:Generator_TableVarName="tableQueueData" msprop:Generator_TablePropName="QueueData" msprop:Generator_RowDeletingName="QueueDataRowDeleting" msprop:Generator_RowChangingName="QueueDataRowChanging" msprop:Generator_RowEvHandlerName="QueueDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueDataRowDeleted" msprop:Generator_UserTableName="QueueData" msprop:Generator_RowChangedName="QueueDataRowChanged" msprop:Generator_RowEvArgName="QueueDataRowChangeEvent" msprop:Generator_RowClassName="QueueDataRow">[m
[32m++          <xs:complexType>[m
[32m++            <xs:sequence>[m
[32m++              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColuwarning: in the working copy of 'capstoneproject/loginformDataSet3.Designer.cs', LF will be replaced by CRLF the next time Git touches it
mnName="id" type="xs:int" />[m
[32m++              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="2147483647" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[32m++              <xs:element name="date" msprop:Generator_ColumnVarNameInTable="columndate" msprop:Generator_ColumnPropNameInRow="date" msprop:Generator_ColumnPropNameInTable="dateColumn" msprop:Generator_UserColumnName="date" type="xs:dateTime" minOccurs="0" />[m
[32m++            </xs:sequence>[m
[32m++          </xs:complexType>[m
[32m++        </xs:element>[m
[32m++      </xs:choice>[m
[32m++    </xs:complexType>[m
[32m++    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[32m++      <xs:selector xpath=".//mstns:QueueData" />[m
[32m++      <xs:field xpath="mstns:id" />[m
[32m++    </xs:unique>[m
[32m++  </xs:element>[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  </xs:schema>[m
[1mdiff --cc capstoneproject/loginformDataSet3.Designer.cs[m
[1mindex d2c1ebe,2d8e802..0000000[m
[1m--- a/capstoneproject/loginformDataSet3.Designer.cs[m
[1m+++ b/capstoneproject/loginformDataSet3.Designer.cs[m
[36m@@@ -1,1587 -1,1587 +1,3176 @@@[m
[31m -ï»¿//------------------------------------------------------------------------------[m
[31m -// <auto-generated>[m
[31m -//     This code was generated by a tool.[m
[31m -//     Runtime Version:4.0.30319.42000[m
[31m -//[m
[31m -//     Changes to this file may cause incorrect behavior and will be lost if[m
[31m -//     the code is regenerated.[m
[31m -// </auto-generated>[m
[31m -//------------------------------------------------------------------------------[m
[31m -[m
[31m -#pragma warning disable 1591[m
[31m -[m
[31m -namespace capstoneproject {[m
[31m -    [m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///Represents a strongly typed in-memory cache of data.[m
[31m -    ///</summary>[m
[31m -    [global::System.Serializable()][m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[31m -    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet3")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[31m -    public partial class loginformDataSet3 : global::System.Data.DataSet {[m
[31m -        [m
[31m -        private QueueDataDataTable tableQueueData;[m
[31m -        [m
[31m -        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public loginformDataSet3() {[m
[31m -            this.BeginInit();[m
[31m -            this.InitClass();[m
[31m -            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -            base.Tables.CollectionChanged += schemaChangedHandler;[m
[31m -            base.Relations.CollectionChanged += schemaChangedHandler;[m
[31m -            this.EndInit();[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected loginformDataSet3(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[31m -                base(info, context, false) {[m
[31m -            if ((this.IsBinarySerialized(info, context) == true)) {[m
[31m -                this.InitVars(false);[m
[31m -                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[31m -                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[31m -                return;[m
[31m -            }[m
[31m -            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[31m -            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[31m -                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[31m -                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[31m -                if ((ds.Tables["QueueData"] != null)) {[m
[31m -                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[31m -                }[m
[31m -                this.DataSetName = ds.DataSetName;[m
[31m -                this.Prefix = ds.Prefix;[m
[31m -                this.Namespace = ds.Namespace;[m
[31m -                this.Locale = ds.Locale;[m
[31m -                this.CaseSensitive = ds.CaseSensitive;[m
[31m -                this.EnforceConstraints = ds.EnforceConstraints;[m
[31m -                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            else {[m
[31m -                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[31m -            }[m
[31m -            this.GetSerializationData(info, context);[m
[31m -            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -            base.Tables.CollectionChanged += schemaChangedHandler;[m
[31m -            this.Relations.CollectionChanged += schemaChangedHandler;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[31m -        public QueueDataDataTable QueueData {[m
[31m -            get {[m
[31m -                return this.tableQueueData;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.BrowsableAttribute(true)][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[31m -        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[31m -            get {[m
[31m -                return this._schemaSerializationMode;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._schemaSerializationMode = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[31m -        public new global::System.Data.DataTableCollection Tables {[m
[31m -            get {[m
[31m -                return base.Tables;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[31m -        public new global::System.Data.DataRelationCollection Relations {[m
[31m -            get {[m
[31m -                return base.Relations;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override void InitializeDerivedDataSet() {[m
[31m -            this.BeginInit();[m
[31m -            this.InitClass();[m
[31m -            this.EndInit();[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public override global::System.Data.DataSet Clone() {[m
[31m -            loginformDataSet3 cln = ((loginformDataSet3)(base.Clone()));[m
[31m -            cln.InitVars();[m
[31m -            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[31m -            return cln;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override bool ShouldSerializeTables() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override bool ShouldSerializeRelations() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[31m -            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[31m -                this.Reset();[m
[31m -                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[31m -                ds.ReadXml(reader);[m
[31m -                if ((ds.Tables["QueueData"] != null)) {[m
[31m -                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[31m -                }[m
[31m -                this.DataSetName = ds.DataSetName;[m
[31m -                this.Prefix = ds.Prefix;[m
[31m -                this.Namespace = ds.Namespace;[m
[31m -                this.Locale = ds.Locale;[m
[31m -                this.CaseSensitive = ds.CaseSensitive;[m
[31m -                this.EnforceConstraints = ds.EnforceConstraints;[m
[31m -                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            else {[m
[31m -                this.ReadXml(reader);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[31m -            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[31m -            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[31m -            stream.Position = 0;[m
[31m -            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal void InitVars() {[m
[31m -            this.InitVars(true);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal void InitVars(bool initTable) {[m
[31m -            this.tableQueueData = ((QueueDataDataTable)(base.Tables["QueueData"]));[m
[31m -            if ((initTable == true)) {[m
[31m -                if ((this.tableQueueData != null)) {[m
[31m -                    this.tableQueueData.InitVars();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitClass() {[m
[31m -            this.DataSetName = "loginformDataSet3";[m
[31m -            this.Prefix = "";[m
[31m -            this.Namespace = "http://tempuri.org/loginformDataSet3.xsd";[m
[31m -            this.EnforceConstraints = true;[m
[31m -            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -            this.tableQueueData = new QueueDataDataTable();[m
[31m -            base.Tables.Add(this.tableQueueData);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private bool ShouldSerializeQueueData() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[31m -            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[31m -            loginformDataSet3 ds = new loginformDataSet3();[m
[31m -            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[31m -            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[31m -            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -            any.Namespace = ds.Namespace;[m
[31m -            sequence.Items.Add(any);[m
[31m -            type.Particle = sequence;[m
[31m -            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[31m -            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[31m -                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[31m -                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[31m -                try {[m
[31m -                    global::System.Xml.Schema.XmlSchema schema = null;[m
[31m -                    dsSchema.Write(s1);[m
[31m -                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[31m -                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[31m -                        s2.SetLength(0);[m
[31m -                        schema.Write(s2);[m
[31m -                        if ((s1.Length == s2.Length)) {[m
[31m -                            s1.Position = 0;[m
[31m -                            s2.Position = 0;[m
[31m -                            for (; ((s1.Position != s1.Length) [m
[31m -                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[31m -                                ;[m
[31m -                            }[m
[31m -                            if ((s1.Position == s1.Length)) {[m
[31m -                                return type;[m
[31m -                            }[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                finally {[m
[31m -                    if ((s1 != null)) {[m
[31m -                        s1.Close();[m
[31m -                    }[m
[31m -                    if ((s2 != null)) {[m
[31m -                        s2.Close();[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            xs.Add(dsSchema);[m
[31m -            return type;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public delegate void QueueDataRowChangeEventHandler(object sender, QueueDataRowChangeEvent e);[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Represents the strongly named DataTable class.[m
[31m -        ///</summary>[m
[31m -        [global::System.Serializable()][m
[31m -        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[31m -        public partial class QueueDataDataTable : global::System.Data.TypedTableBase<QueueDataRow> {[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnid;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnName;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnDepartment;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnPurpose;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnQueueNumber;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columndate;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataDataTable() {[m
[31m -                this.TableName = "QueueData";[m
[31m -                this.BeginInit();[m
[31m -                this.InitClass();[m
[31m -                this.EndInit();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal QueueDataDataTable(global::System.Data.DataTable table) {[m
[31m -                this.TableName = table.TableName;[m
[31m -                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[31m -                    this.CaseSensitive = table.CaseSensitive;[m
[31m -                }[m
[31m -                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[31m -                    this.Locale = table.Locale;[m
[31m -                }[m
[31m -                if ((table.Namespace != table.DataSet.Namespace)) {[m
[31m -                    this.Namespace = table.Namespace;[m
[31m -                }[m
[31m -                this.Prefix = table.Prefix;[m
[31m -                this.MinimumCapacity = table.MinimumCapacity;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected QueueDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[31m -                    base(info, context) {[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn idColumn {[m
[31m -                get {[m
[31m -                    return this.columnid;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn NameColumn {[m
[31m -                get {[m
[31m -                    return this.columnName;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn DepartmentColumn {[m
[31m -                get {[m
[31m -                    return this.columnDepartment;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn PurposeColumn {[m
[31m -                get {[m
[31m -                    return this.columnPurpose;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn QueueNumberColumn {[m
[31m -                get {[m
[31m -                    return this.columnQueueNumber;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn dateColumn {[m
[31m -                get {[m
[31m -                    return this.columndate;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            [global::System.ComponentModel.Browsable(false)][m
[31m -            public int Count {[m
[31m -                get {[m
[31m -                    return this.Rows.Count;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow this[int index] {[m
[31m -                get {[m
[31m -                    return ((QueueDataRow)(this.Rows[index]));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowChanging;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowChanged;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowDeleting;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowDeleted;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void AddQueueDataRow(QueueDataRow row) {[m
[31m -                this.Rows.Add(row);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow AddQueueDataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime date) {[m
[31m -                QueueDataRow rowQueueDataRow = ((QueueDataRow)(this.NewRow()));[m
[31m -                object[] columnValuesArray = new object[] {[m
[31m -                        null,[m
[31m -                        Name,[m
[31m -                        Department,[m
[31m -                        Purpose,[m
[31m -                        QueueNumber,[m
[31m -                        date};[m
[31m -                rowQueueDataRow.ItemArray = columnValuesArray;[m
[31m -                this.Rows.Add(rowQueueDataRow);[m
[31m -                return rowQueueDataRow;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow FindByid(int id) {[m
[31m -                return ((QueueDataRow)(this.Rows.Find(new object[] {[m
[31m -                            id})));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public override global::System.Data.DataTable Clone() {[m
[31m -                QueueDataDataTable cln = ((QueueDataDataTable)(base.Clone()));[m
[31m -                cln.InitVars();[m
[31m -                return cln;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Data.DataTable CreateInstance() {[m
[31m -                return new QueueDataDataTable();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal void InitVars() {[m
[31m -                this.columnid = base.Columns["id"];[m
[31m -                this.columnName = base.Columns["Name"];[m
[31m -                this.columnDepartment = base.Columns["Department"];[m
[31m -                this.columnPurpose = base.Columns["Purpose"];[m
[31m -                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[31m -                this.columndate = base.Columns["date"];[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            private void InitClass() {[m
[31m -                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnid);[m
[31m -                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnName);[m
[31m -                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnDepartment);[m
[31m -                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnPurpose);[m
[31m -                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnQueueNumber);[m
[31m -                this.columndate = new global::System.Data.DataColumn("date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columndate);[m
[31m -                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[31m -                                this.columnid}, true));[m
[31m -                this.columnid.AutoIncrement = true;[m
[31m -                this.columnid.AutoIncrementSeed = -1;[m
[31m -                this.columnid.AutoIncrementStep = -1;[m
[31m -                this.columnid.AllowDBNull = false;[m
[31m -                this.columnid.ReadOnly = true;[m
[31m -                this.columnid.Unique = true;[m
[31m -                this.columnName.AllowDBNull = false;[m
[31m -                this.columnName.MaxLength = 50;[m
[31m -                this.columnDepartment.AllowDBNull = false;[m
[31m -                this.columnDepartment.MaxLength = 50;[m
[31m -                this.columnPurpose.AllowDBNull = false;[m
[31m -                this.columnPurpose.MaxLength = 2147483647;[m
[31m -                this.columnQueueNumber.AllowDBNull = false;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow NewQueueDataRow() {[m
[31m -                return ((QueueDataRow)(this.NewRow()));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[31m -                return new QueueDataRow(builder);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Type GetRowType() {[m
[31m -                return typeof(QueueDataRow);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowChanged(e);[m
[31m -                if ((this.QueueDataRowChanged != null)) {[m
[31m -                    this.QueueDataRowChanged(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowChanging(e);[m
[31m -                if ((this.QueueDataRowChanging != null)) {[m
[31m -                    this.QueueDataRowChanging(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowDeleted(e);[m
[31m -                if ((this.QueueDataRowDeleted != null)) {[m
[31m -                    this.QueueDataRowDeleted(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowDeleting(e);[m
[31m -                if ((this.QueueDataRowDeleting != null)) {[m
[31m -                    this.QueueDataRowDeleting(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void RemoveQueueDataRow(QueueDataRow row) {[m
[31m -                this.Rows.Remove(row);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[31m -                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[31m -                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[31m -                loginformDataSet3 ds = new loginformDataSet3();[m
[31m -                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[31m -                any1.MinOccurs = new decimal(0);[m
[31m -                any1.MaxOccurs = decimal.MaxValue;[m
[31m -                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[31m -                sequence.Items.Add(any1);[m
[31m -                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[31m -                any2.MinOccurs = new decimal(1);[m
[31m -                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[31m -                sequence.Items.Add(any2);[m
[31m -                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[31m -                attribute1.Name = "namespace";[m
[31m -                attribute1.FixedValue = ds.Namespace;[m
[31m -                type.Attributes.Add(attribute1);[m
[31m -                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[31m -                attribute2.Name = "tableTypeName";[m
[31m -                attribute2.FixedValue = "QueueDataDataTable";[m
[31m -                type.Attributes.Add(attribute2);[m
[31m -                type.Particle = sequence;[m
[31m -                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[31m -                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[31m -                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[31m -                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[31m -                    try {[m
[31m -                        global::System.Xml.Schema.XmlSchema schema = null;[m
[31m -                        dsSchema.Write(s1);[m
[31m -                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[31m -                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[31m -                            s2.SetLength(0);[m
[31m -                            schema.Write(s2);[m
[31m -                            if ((s1.Length == s2.Length)) {[m
[31m -                                s1.Position = 0;[m
[31m -                                s2.Position = 0;[m
[31m -                                for (; ((s1.Position != s1.Length) [m
[31m -                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[31m -                                    ;[m
[31m -                                }[m
[31m -                                if ((s1.Position == s1.Length)) {[m
[31m -                                    return type;[m
[31m -                                }[m
[31m -                            }[m
[31m -                        }[m
[31m -                    }[m
[31m -                    finally {[m
[31m -                        if ((s1 != null)) {[m
[31m -                            s1.Close();[m
[31m -                        }[m
[31m -                        if ((s2 != null)) {[m
[31m -                            s2.Close();[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                xs.Add(dsSchema);[m
[31m -                return type;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Represents strongly named DataRow class.[m
[31m -        ///</summary>[m
[31m -        public partial class QueueDataRow : global::System.Data.DataRow {[m
[31m -            [m
[31m -            private QueueDataDataTable tableQueueData;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal QueueDataRow(global::System.Data.DataRowBuilder rb) : [m
[31m -                    base(rb) {[m
[31m -                this.tableQueueData = ((QueueDataDataTable)(this.Table));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int id {[m
[31m -                get {[m
[31m -                    return ((int)(this[this.tableQueueData.idColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.idColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Name {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueData.NameColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.NameColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Department {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueData.DepartmentColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.DepartmentColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Purpose {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueData.PurposeColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.PurposeColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int QueueNumber {[m
[31m -                get {[m
[31m -                    return ((int)(this[this.tableQueueData.QueueNumberColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.QueueNumberColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public System.DateTime date {[m
[31m -                get {[m
[31m -                    try {[m
[31m -                        return ((global::System.DateTime)(this[this.tableQueueData.dateColumn]));[m
[31m -                    }[m
[31m -                    catch (global::System.InvalidCastException e) {[m
[31m -                        throw new global::System.Data.StrongTypingException("The value for column \'date\' in table \'QueueData\' is DBNull.", e);[m
[31m -                    }[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.dateColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public bool IsdateNull() {[m
[31m -                return this.IsNull(this.tableQueueData.dateColumn);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void SetdateNull() {[m
[31m -                this[this.tableQueueData.dateColumn] = global::System.Convert.DBNull;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Row event argument class[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public class QueueDataRowChangeEvent : global::System.EventArgs {[m
[31m -            [m
[31m -            private QueueDataRow eventRow;[m
[31m -            [m
[31m -            private global::System.Data.DataRowAction eventAction;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRowChangeEvent(QueueDataRow row, global::System.Data.DataRowAction action) {[m
[31m -                this.eventRow = row;[m
[31m -                this.eventAction = action;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow Row {[m
[31m -                get {[m
[31m -                    return this.eventRow;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataRowAction Action {[m
[31m -                get {[m
[31m -                    return this.eventAction;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -}[m
[31m -namespace capstoneproject.loginformDataSet3TableAdapters {[m
[31m -    [m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///Represents the connection and commands used to retrieve and save data.[m
[31m -    ///</summary>[m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.ComponentModel.DataObjectAttribute(true)][m
[31m -    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[31m -        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -    public partial class QueueDataTableAdapter : global::System.ComponentModel.Component {[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlConnection _connection;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[31m -        [m
[31m -        private bool _clearBeforeFill;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public QueueDataTableAdapter() {[m
[31m -            this.ClearBeforeFill = true;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[31m -            get {[m
[31m -                if ((this._adapter == null)) {[m
[31m -                    this.InitAdapter();[m
[31m -                }[m
[31m -                return this._adapter;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[31m -            get {[m
[31m -                if ((this._connection == null)) {[m
[31m -                    this.InitConnection();[m
[31m -                }[m
[31m -                return this._connection;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._connection = value;[m
[31m -                if ((this.Adapter.InsertCommand != null)) {[m
[31m -                    this.Adapter.InsertCommand.Connection = value;[m
[31m -                }[m
[31m -                if ((this.Adapter.DeleteCommand != null)) {[m
[31m -                    this.Adapter.DeleteCommand.Connection = value;[m
[31m -                }[m
[31m -                if ((this.Adapter.UpdateCommand != null)) {[m
[31m -                    this.Adapter.UpdateCommand.Connection = value;[m
[31m -                }[m
[31m -                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[31m -                    if ((this.CommandCollection[i] != null)) {[m
[31m -                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[31m -            get {[m
[31m -                return this._transaction;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._transaction = value;[m
[31m -                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[31m -                    this.CommandCollection[i].Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.DeleteCommand != null))) {[m
[31m -                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.InsertCommand != null))) {[m
[31m -                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.UpdateCommand != null))) {[m
[31m -                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[31m -            get {[m
[31m -                if ((this._commandCollection == null)) {[m
[31m -                    this.InitCommandCollection();[m
[31m -                }[m
[31m -                return this._commandCollection;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public bool ClearBeforeFill {[m
[31m -            get {[m
[31m -                return this._clearBeforeFill;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._clearBeforeFill = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitAdapter() {[m
[31m -            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[31m -            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[31m -            tableMapping.SourceTable = "Table";[m
[31m -            tableMapping.DataSetTable = "QueueData";[m
[31m -            tableMapping.ColumnMappings.Add("id", "id");[m
[31m -            tableMapping.ColumnMappings.Add("Name", "Name");[m
[31m -            tableMapping.ColumnMappings.Add("Department", "Department");[m
[31m -            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[31m -            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[31m -            tableMapping.ColumnMappings.Add("date", "date");[m
[31m -            this._adapter.TableMappings.Add(tableMapping);[m
[31m -            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.DeleteCommand.Connection = this.Connection;[m
[31m -            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Origina" +[m
[31m -                "l_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original" +[m
[31m -                "_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_" +[m
[31m -                "date)))";[m
[31m -            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.InsertCommand.Connection = this.Connection;[m
[31m -            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [d" +[m
[31m -                "ate]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @date);\r\nSELECT id, Na" +[m
[31m -                "me, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = SCOPE_IDEN" +[m
[31m -                "TITY())";[m
[31m -            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.UpdateCommand.Connection = this.Connection;[m
[31m -            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [date] = @date WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)));[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = @id)";[m
[31m -            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitConnection() {[m
[31m -            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[31m -            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitCommandCollection() {[m
[31m -            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[31m -            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._commandCollection[0].Connection = this.Connection;[m
[31m -            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, date FROM dbo.QueueData";[m
[31m -            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[31m -        public virtual int Fill(loginformDataSet3.QueueDataDataTable dataTable) {[m
[31m -            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[31m -            if ((this.ClearBeforeFill == true)) {[m
[31m -                dataTable.Clear();[m
[31m -            }[m
[31m -            int returnValue = this.Adapter.Fill(dataTable);[m
[31m -            return returnValue;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[31m -        public virtual loginformDataSet3.QueueDataDataTable GetData() {[m
[31m -            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[31m -            loginformDataSet3.QueueDataDataTable dataTable = new loginformDataSet3.QueueDataDataTable();[m
[31m -            this.Adapter.Fill(dataTable);[m
[31m -            return dataTable;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(loginformDataSet3.QueueDataDataTable dataTable) {[m
[31m -            return this.Adapter.Update(dataTable);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(loginformDataSet3 dataSet) {[m
[31m -            return this.Adapter.Update(dataSet, "QueueData");[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[31m -            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[31m -                        dataRow});[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[31m -            return this.Adapter.Update(dataRows);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[31m -        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date) {[m
[31m -            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[31m -            if ((Original_Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[31m -            }[m
[31m -            if ((Original_Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[31m -            }[m
[31m -            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[31m -            if ((Original_date.HasValue == true)) {[m
[31m -                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));[m
[31m -                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_date.Value));[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));[m
[31m -                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;[m
[31m -            }[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[31m -            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.DeleteCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.DeleteCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[31m -        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date) {[m
[31m -            if ((Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[31m -            }[m
[31m -            if ((Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[31m -            }[m
[31m -            if ((Purpose == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Purpose");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[31m -            }[m
[31m -            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[31m -            if ((date.HasValue == true)) {[m
[31m -                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(date.Value));[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[31m -            }[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[31m -            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.InsertCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.InsertCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[31m -        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date, int id) {[m
[31m -            if ((Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[31m -            }[m
[31m -            if ((Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[31m -            }[m
[31m -            if ((Purpose == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Purpose");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[31m -            if ((date.HasValue == true)) {[m
[31m -                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(date.Value));[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));[m
[31m -            if ((Original_Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));[m
[31m -            }[m
[31m -            if ((Original_Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Department));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_QueueNumber));[m
[31m -            if ((Original_date.HasValue == true)) {[m
[31m -                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));[m
[31m -                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_date.Value));[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));[m
[31m -                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(id));[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[31m -            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.UpdateCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.UpdateCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[31m -        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date) {[m
[31m -            return this.Update(Name, Department, Purpose, QueueNumber, date, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_date, Original_id);[m
[31m -        }[m
[31m -    }[m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[31m -    ///</summary>[m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[31m -        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[31m -    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[31m -        [m
[31m -        private UpdateOrderOption _updateOrder;[m
[31m -        [m
[31m -        private QueueDataTableAdapter _queueDataTableAdapter;[m
[31m -        [m
[31m -        private bool _backupDataSetBeforeUpdate;[m
[31m -        [m
[31m -        private global::System.Data.IDbConnection _connection;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public UpdateOrderOption UpdateOrder {[m
[31m -            get {[m
[31m -                return this._updateOrder;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._updateOrder = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[31m -            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[31m -            "a", "System.Drawing.Design.UITypeEditor")][m
[31m -        public QueueDataTableAdapter QueueDataTableAdapter {[m
[31m -            get {[m
[31m -                return this._queueDataTableAdapter;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._queueDataTableAdapter = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public bool BackupDataSetBeforeUpdate {[m
[31m -            get {[m
[31m -                return this._backupDataSetBeforeUpdate;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._backupDataSetBeforeUpdate = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        public global::System.Data.IDbConnection Connection {[m
[31m -            get {[m
[31m -                if ((this._connection != null)) {[m
[31m -                    return this._connection;[m
[31m -                }[m
[31m -                if (((this._queueDataTableAdapter != null) [m
[31m -                            && (this._queueDataTableAdapter.Connection != null))) {[m
[31m -                    return this._queueDataTableAdapter.Connection;[m
[31m -                }[m
[31m -                return null;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._connection = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        public int TableAdapterInstanceCount {[m
[31m -            get {[m
[31m -                int count = 0;[m
[31m -                if ((this._queueDataTableAdapter != null)) {[m
[31m -                    count = (count + 1);[m
[31m -                }[m
[31m -                return count;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update rows in top-down order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateUpdatedRows(loginformDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] updatedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[31m -                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[31m -                if (((updatedRows != null) [m
[31m -                            && (0 < updatedRows.Length))) {[m
[31m -                    result = (result + this._queueDataTableAdapter.Update(updatedRows));[m
[31m -                    allChangedRows.AddRange(updatedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Insert rows in top-down order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateInsertedRows(loginformDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] addedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[31m -                if (((addedRows != null) [m
[31m -                            && (0 < addedRows.Length))) {[m
[31m -                    result = (result + this._queueDataTableAdapter.Update(addedRows));[m
[31m -                    allAddedRows.AddRange(addedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Delete rows in bottom-up order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateDeletedRows(loginformDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] deletedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[31m -                if (((deletedRows != null) [m
[31m -                            && (0 < deletedRows.Length))) {[m
[31m -                    result = (result + this._queueDataTableAdapter.Update(deletedRows));[m
[31m -                    allChangedRows.AddRange(deletedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            if (((updatedRows == null) [m
[31m -                        || (updatedRows.Length < 1))) {[m
[31m -                return updatedRows;[m
[31m -            }[m
[31m -            if (((allAddedRows == null) [m
[31m -                        || (allAddedRows.Count < 1))) {[m
[31m -                return updatedRows;[m
[31m -            }[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[31m -                global::System.Data.DataRow row = updatedRows[i];[m
[31m -                if ((allAddedRows.Contains(row) == false)) {[m
[31m -                    realUpdatedRows.Add(row);[m
[31m -                }[m
[31m -            }[m
[31m -            return realUpdatedRows.ToArray();[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update all changes to the dataset.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public virtual int UpdateAll(loginformDataSet3 dataSet) {[m
[31m -            if ((dataSet == null)) {[m
[31m -                throw new global::System.ArgumentNullException("dataSet");[m
[31m -            }[m
[31m -            if ((dataSet.HasChanges() == false)) {[m
[31m -                return 0;[m
[31m -            }[m
[31m -            if (((this._queueDataTableAdapter != null) [m
[31m -                        && (this.MatchTableAdapterConnection(this._queueDataTableAdapter.Connection) == false))) {[m
[31m -                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[31m -                        "tring.");[m
[31m -            }[m
[31m -            global::System.Data.IDbConnection workConnection = this.Connection;[m
[31m -            if ((workConnection == null)) {[m
[31m -                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[31m -                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[31m -            }[m
[31m -            bool workConnOpened = false;[m
[31m -            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[31m -                        == global::System.Data.ConnectionState.Broken)) {[m
[31m -                workConnection.Close();[m
[31m -            }[m
[31m -            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[31m -                workConnection.Open();[m
[31m -                workConnOpened = true;[m
[31m -            }[m
[31m -            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[31m -            if ((workTransaction == null)) {[m
[31m -                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[31m -                        "ctions or the current state is not allowing the transaction to begin.");[m
[31m -            }[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[31m -            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[31m -            int result = 0;[m
[31m -            global::System.Data.DataSet backupDataSet = null;[m
[31m -            if (this.BackupDataSetBeforeUpdate) {[m
[31m -                backupDataSet = new global::System.Data.DataSet();[m
[31m -                backupDataSet.Merge(dataSet);[m
[31m -            }[m
[31m -            try {[m
[31m -                // ---- Prepare for update -----------[m
[31m -                //[m
[31m -                if ((this._queueDataTableAdapter != null)) {[m
[31m -                    revertConnections.Add(this._queueDataTableAdapter, this._queueDataTableAdapter.Connection);[m
[31m -                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[31m -                    this._queueDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[31m -                    if (this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[31m -                        this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[31m -                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueDataTableAdapter.Adapter);[m
[31m -                    }[m
[31m -                }[m
[31m -                // [m
[31m -                //---- Perform updates -----------[m
[31m -                //[m
[31m -                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[31m -                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[31m -                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[31m -                }[m
[31m -                else {[m
[31m -                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[31m -                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[31m -                }[m
[31m -                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[31m -                // [m
[31m -                //---- Commit updates -----------[m
[31m -                //[m
[31m -                workTransaction.Commit();[m
[31m -                if ((0 < allAddedRows.Count)) {[m
[31m -                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[31m -                    allAddedRows.CopyTo(rows);[m
[31m -                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.DataRow row = rows[i];[m
[31m -                        row.AcceptChanges();[m
[31m -                    }[m
[31m -                }[m
[31m -                if ((0 < allChangedRows.Count)) {[m
[31m -                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[31m -                    allChangedRows.CopyTo(rows);[m
[31m -                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.DataRow row = rows[i];[m
[31m -                        row.AcceptChanges();[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            catch (global::System.Exception ex) {[m
[31m -                workTransaction.Rollback();[m
[31m -                // ---- Restore the dataset -----------[m
[31m -                if (this.BackupDataSetBeforeUpdate) {[m
[31m -                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[31m -                    dataSet.Clear();[m
[31m -                    dataSet.Merge(backupDataSet);[m
[31m -                }[m
[31m -                else {[m
[31m -                    if ((0 < allAddedRows.Count)) {[m
[31m -                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[31m -                        allAddedRows.CopyTo(rows);[m
[31m -                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                            global::System.Data.DataRow row = rows[i];[m
[31m -                            row.AcceptChanges();[m
[31m -                            row.SetAdded();[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                throw ex;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if (workConnOpened) {[m
[31m -                    workConnection.Close();[m
[31m -                }[m
[31m -                if ((this._queueDataTableAdapter != null)) {[m
[31m -                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueDataTableAdapter]));[m
[31m -                    this._queueDataTableAdapter.Transaction = null;[m
[31m -                }[m
[31m -                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[31m -                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[31m -                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[31m -                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[31m -                        adapter.AcceptChangesDuringUpdate = true;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[31m -            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[31m -            if ((this._connection != null)) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            if (((this.Connection == null) [m
[31m -                        || (inputConnection == null))) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update Order Option[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public enum UpdateOrderOption {[m
[31m -            [m
[31m -            InsertUpdateDelete = 0,[m
[31m -            [m
[31m -            UpdateInsertDelete = 1,[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Used to sort self-referenced table's rows[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[31m -            [m
[31m -            private global::System.Data.DataRelation _relation;[m
[31m -            [m
[31m -            private int _childFirst;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[31m -                this._relation = relation;[m
[31m -                if (childFirst) {[m
[31m -                    this._childFirst = -1;[m
[31m -                }[m
[31m -                else {[m
[31m -                    this._childFirst = 1;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[31m -                global::System.Diagnostics.Debug.Assert((row != null));[m
[31m -                global::System.Data.DataRow root = row;[m
[31m -                distance = 0;[m
[31m -[m
[31m -                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[31m -                traversedRows[row] = row;[m
[31m -[m
[31m -                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[31m -                for ([m
[31m -                ; ((parent != null) [m
[31m -                            && (traversedRows.ContainsKey(parent) == false)); [m
[31m -                ) {[m
[31m -                    distance = (distance + 1);[m
[31m -                    root = parent;[m
[31m -                    traversedRows[parent] = parent;[m
[31m -                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[31m -                }[m
[31m -[m
[31m -                if ((distance == 0)) {[m
[31m -                    traversedRows.Clear();[m
[31m -                    traversedRows[row] = row;[m
[31m -                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[31m -                    for ([m
[31m -                    ; ((parent != null) [m
[31m -                                && (traversedRows.ContainsKey(parent) == false)); [m
[31m -                    ) {[m
[31m -                        distance = (distance + 1);[m
[31m -                        root = parent;[m
[31m -                        traversedRows[parent] = parent;[m
[31m -                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[31m -                    }[m
[31m -                }[m
[31m -[m
[31m -                return root;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[31m -                if (object.ReferenceEquals(row1, row2)) {[m
[31m -                    return 0;[m
[31m -                }[m
[31m -                if ((row1 == null)) {[m
[31m -                    return -1;[m
[31m -                }[m
[31m -                if ((row2 == null)) {[m
[31m -                    return 1;[m
[31m -                }[m
[31m -[m
[31m -                int distance1 = 0;[m
[31m -                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[31m -[m
[31m -                int distance2 = 0;[m
[31m -                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[31m -[m
[31m -                if (object.ReferenceEquals(root1, root2)) {[m
[31m -                    return (this._childFirst * distance1.CompareTo(distance2));[m
[31m -                }[m
[31m -                else {[m
[31m -                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[31m -                                    && (root2.Table != null)));[m
[31m -                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[31m -                        return -1;[m
[31m -                    }[m
[31m -                    else {[m
[31m -                        return 1;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -}[m
[31m -[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿//------------------------------------------------------------------------------[m
[32m +// <auto-generated>[m
[32m +//     This code was generated by a tool.[m
[32m +//     Runtime Version:4.0.30319.42000[m
[32m +//[m
[32m +//     Changes to this file may cause incorrect behavior and will be lost if[m
[32m +//     the code is regenerated.[m
[32m +// </auto-generated>[m
[32m +//------------------------------------------------------------------------------[m
[32m +[m
[32m +#pragma warning disable 1591[m
[32m +[m
[32m +namespace capstoneproject {[m
[32m +    [m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///Represents a strongly typed in-memory cache of data.[m
[32m +    ///</summary>[m
[32m +    [global::System.Serializable()][m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[32m +    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet3")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[32m +    public partial class loginformDataSet3 : global::System.Data.DataSet {[m
[32m +        [m
[32m +        private QueueDataDataTable tableQueueData;[m
[32m +        [m
[32m +        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public loginformDataSet3() {[m
[32m +            this.BeginInit();[m
[32m +            this.InitClass();[m
[32m +            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m +            base.Relations.CollectionChanged += schemaChangedHandler;[m
[32m +            this.EndInit();[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected loginformDataSet3(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m +                base(info, context, false) {[m
[32m +            if ((this.IsBinarySerialized(info, context) == true)) {[m
[32m +                this.InitVars(false);[m
[32m +                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[32m +                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[32m +                return;[m
[32m +            }[m
[32m +            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[32m +            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m +                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m +                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m +                if ((ds.Tables["QueueData"] != null)) {[m
[32m +                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m +                }[m
[32m +                this.DataSetName = ds.DataSetName;[m
[32m +                this.Prefix = ds.Prefix;[m
[32m +                this.Namespace = ds.Namespace;[m
[32m +                this.Locale = ds.Locale;[m
[32m +                this.CaseSensitive = ds.CaseSensitive;[m
[32m +                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m +                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            else {[m
[32m +                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m +            }[m
[32m +            this.GetSerializationData(info, context);[m
[32m +            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m +            this.Relations.CollectionChanged += schemaChangedHandler;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[32m +        public QueueDataDataTable QueueData {[m
[32m +            get {[m
[32m +                return this.tableQueueData;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.BrowsableAttribute(true)][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[32m +        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[32m +            get {[m
[32m +                return this._schemaSerializationMode;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._schemaSerializationMode = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m +        public new global::System.Data.DataTableCollection Tables {[m
[32m +            get {[m
[32m +                return base.Tables;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m +        public new global::System.Data.DataRelationCollection Relations {[m
[32m +            get {[m
[32m +                return base.Relations;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override void InitializeDerivedDataSet() {[m
[32m +            this.BeginInit();[m
[32m +            this.InitClass();[m
[32m +            this.EndInit();[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public override global::System.Data.DataSet Clone() {[m
[32m +            loginformDataSet3 cln = ((loginformDataSet3)(base.Clone()));[m
[32m +            cln.InitVars();[m
[32m +            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[32m +            return cln;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override bool ShouldSerializeTables() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override bool ShouldSerializeRelations() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[32m +            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m +                this.Reset();[m
[32m +                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m +                ds.ReadXml(reader);[m
[32m +                if ((ds.Tables["QueueData"] != null)) {[m
[32m +                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m +                }[m
[32m +                this.DataSetName = ds.DataSetName;[m
[32m +                this.Prefix = ds.Prefix;[m
[32m +                this.Namespace = ds.Namespace;[m
[32m +                this.Locale = ds.Locale;[m
[32m +                this.CaseSensitive = ds.CaseSensitive;[m
[32m +                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m +                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            else {[m
[32m +                this.ReadXml(reader);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[32m +            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[32m +            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[32m +            stream.Position = 0;[m
[32m +            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal void InitVars() {[m
[32m +            this.InitVars(true);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal void InitVars(bool initTable) {[m
[32m +            this.tableQueueData = ((QueueDataDataTable)(base.Tables["QueueData"]));[m
[32m +            if ((initTable == true)) {[m
[32m +                if ((this.tableQueueData != null)) {[m
[32m +                    this.tableQueueData.InitVars();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitClass() {[m
[32m +            this.DataSetName = "loginformDataSet3";[m
[32m +            this.Prefix = "";[m
[32m +            this.Namespace = "http://tempuri.org/loginformDataSet3.xsd";[m
[32m +            this.EnforceConstraints = true;[m
[32m +            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +            this.tableQueueData = new QueueDataDataTable();[m
[32m +            base.Tables.Add(this.tableQueueData);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private bool ShouldSerializeQueueData() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[32m +            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m +            loginformDataSet3 ds = new loginformDataSet3();[m
[32m +            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m +            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m +            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +            any.Namespace = ds.Namespace;[m
[32m +            sequence.Items.Add(any);[m
[32m +            type.Particle = sequence;[m
[32m +            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m +            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m +                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m +                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m +                try {[m
[32m +                    global::System.Xml.Schema.XmlSchema schema = null;[m
[32m +                    dsSchema.Write(s1);[m
[32m +                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m +                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m +                        s2.SetLength(0);[m
[32m +                        schema.Write(s2);[m
[32m +                        if ((s1.Length == s2.Length)) {[m
[32m +                            s1.Position = 0;[m
[32m +                            s2.Position = 0;[m
[32m +                            for (; ((s1.Position != s1.Length) [m
[32m +                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m +                                ;[m
[32m +                            }[m
[32m +                            if ((s1.Position == s1.Length)) {[m
[32m +                                return type;[m
[32m +                            }[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                finally {[m
[32m +                    if ((s1 != null)) {[m
[32m +                        s1.Close();[m
[32m +                    }[m
[32m +                    if ((s2 != null)) {[m
[32m +                        s2.Close();[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            xs.Add(dsSchema);[m
[32m +            return type;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public delegate void QueueDataRowChangeEventHandler(object sender, QueueDataRowChangeEvent e);[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Represents the strongly named DataTable class.[m
[32m +        ///</summary>[m
[32m +        [global::System.Serializable()][m
[32m +        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[32m +        public partial class QueueDataDataTable : global::System.Data.TypedTableBase<QueueDataRow> {[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnid;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnName;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnDepartment;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnPurpose;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnQueueNumber;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columndate;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataDataTable() {[m
[32m +                this.TableName = "QueueData";[m
[32m +                this.BeginInit();[m
[32m +                this.InitClass();[m
[32m +                this.EndInit();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal QueueDataDataTable(global::System.Data.DataTable table) {[m
[32m +                this.TableName = table.TableName;[m
[32m +                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[32m +                    this.CaseSensitive = table.CaseSensitive;[m
[32m +                }[m
[32m +                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[32m +                    this.Locale = table.Locale;[m
[32m +                }[m
[32m +                if ((table.Namespace != table.DataSet.Namespace)) {[m
[32m +                    this.Namespace = table.Namespace;[m
[32m +                }[m
[32m +                this.Prefix = table.Prefix;[m
[32m +                this.MinimumCapacity = table.MinimumCapacity;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected QueueDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m +                    base(info, context) {[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn idColumn {[m
[32m +                get {[m
[32m +                    return this.columnid;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn NameColumn {[m
[32m +                get {[m
[32m +                    return this.columnName;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn DepartmentColumn {[m
[32m +                get {[m
[32m +                    return this.columnDepartment;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn PurposeColumn {[m
[32m +                get {[m
[32m +                    return this.columnPurpose;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn QueueNumberColumn {[m
[32m +                get {[m
[32m +                    return this.columnQueueNumber;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn dateColumn {[m
[32m +                get {[m
[32m +                    return this.columndate;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            [global::System.ComponentModel.Browsable(false)][m
[32m +            public int Count {[m
[32m +                get {[m
[32m +                    return this.Rows.Count;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow this[int index] {[m
[32m +                get {[m
[32m +                    return ((QueueDataRow)(this.Rows[index]));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowChanging;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowChanged;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowDeleting;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowDeleted;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void AddQueueDataRow(QueueDataRow row) {[m
[32m +                this.Rows.Add(row);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow AddQueueDataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime date) {[m
[32m +                QueueDataRow rowQueueDataRow = ((QueueDataRow)(this.NewRow()));[m
[32m +                object[] columnValuesArray = new object[] {[m
[32m +                        null,[m
[32m +                        Name,[m
[32m +                        Department,[m
[32m +                        Purpose,[m
[32m +                        QueueNumber,[m
[32m +                        date};[m
[32m +                rowQueueDataRow.ItemArray = columnValuesArray;[m
[32m +                this.Rows.Add(rowQueueDataRow);[m
[32m +                return rowQueueDataRow;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow FindByid(int id) {[m
[32m +                return ((QueueDataRow)(this.Rows.Find(new object[] {[m
[32m +                            id})));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public override global::System.Data.DataTable Clone() {[m
[32m +                QueueDataDataTable cln = ((QueueDataDataTable)(base.Clone()));[m
[32m +                cln.InitVars();[m
[32m +                return cln;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Data.DataTable CreateInstance() {[m
[32m +                return new QueueDataDataTable();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal void InitVars() {[m
[32m +                this.columnid = base.Columns["id"];[m
[32m +                this.columnName = base.Columns["Name"];[m
[32m +                this.columnDepartment = base.Columns["Department"];[m
[32m +                this.columnPurpose = base.Columns["Purpose"];[m
[32m +                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[32m +                this.columndate = base.Columns["date"];[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            private void InitClass() {[m
[32m +                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnid);[m
[32m +                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnName);[m
[32m +                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnDepartment);[m
[32m +                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnPurpose);[m
[32m +                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnQueueNumber);[m
[32m +                this.columndate = new global::System.Data.DataColumn("date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columndate);[m
[32m +                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[32m +                                this.columnid}, true));[m
[32m +                this.columnid.AutoIncrement = true;[m
[32m +                this.columnid.AutoIncrementSeed = -1;[m
[32m +                this.columnid.AutoIncrementStep = -1;[m
[32m +                this.columnid.AllowDBNull = false;[m
[32m +                this.columnid.ReadOnly = true;[m
[32m +                this.columnid.Unique = true;[m
[32m +                this.columnName.AllowDBNull = false;[m
[32m +                this.columnName.MaxLength = 50;[m
[32m +                this.columnDepartment.AllowDBNull = false;[m
[32m +                this.columnDepartment.MaxLength = 50;[m
[32m +                this.columnPurpose.AllowDBNull = false;[m
[32m +                this.columnPurpose.MaxLength = 2147483647;[m
[32m +                this.columnQueueNumber.AllowDBNull = false;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow NewQueueDataRow() {[m
[32m +                return ((QueueDataRow)(this.NewRow()));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[32m +                return new QueueDataRow(builder);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Type GetRowType() {[m
[32m +                return typeof(QueueDataRow);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowChanged(e);[m
[32m +                if ((this.QueueDataRowChanged != null)) {[m
[32m +                    this.QueueDataRowChanged(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowChanging(e);[m
[32m +                if ((this.QueueDataRowChanging != null)) {[m
[32m +                    this.QueueDataRowChanging(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowDeleted(e);[m
[32m +                if ((this.QueueDataRowDeleted != null)) {[m
[32m +                    this.QueueDataRowDeleted(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowDeleting(e);[m
[32m +                if ((this.QueueDataRowDeleting != null)) {[m
[32m +                    this.QueueDataRowDeleting(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void RemoveQueueDataRow(QueueDataRow row) {[m
[32m +                this.Rows.Remove(row);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m +                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m +                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m +                loginformDataSet3 ds = new loginformDataSet3();[m
[32m +                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[32m +                any1.MinOccurs = new decimal(0);[m
[32m +                any1.MaxOccurs = decimal.MaxValue;[m
[32m +                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m +                sequence.Items.Add(any1);[m
[32m +                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[32m +                any2.MinOccurs = new decimal(1);[m
[32m +                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m +                sequence.Items.Add(any2);[m
[32m +                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m +                attribute1.Name = "namespace";[m
[32m +                attribute1.FixedValue = ds.Namespace;[m
[32m +                type.Attributes.Add(attribute1);[m
[32m +                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m +                attribute2.Name = "tableTypeName";[m
[32m +                attribute2.FixedValue = "QueueDataDataTable";[m
[32m +                type.Attributes.Add(attribute2);[m
[32m +                type.Particle = sequence;[m
[32m +                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m +                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m +                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m +                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m +                    try {[m
[32m +                        global::System.Xml.Schema.XmlSchema schema = null;[m
[32m +                        dsSchema.Write(s1);[m
[32m +                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m +                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m +                            s2.SetLength(0);[m
[32m +                            schema.Write(s2);[m
[32m +                            if ((s1.Length == s2.Length)) {[m
[32m +                                s1.Position = 0;[m
[32m +                                s2.Position = 0;[m
[32m +                                for (; ((s1.Position != s1.Length) [m
[32m +                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m +                                    ;[m
[32m +                                }[m
[32m +                                if ((s1.Position == s1.Length)) {[m
[32m +                                    return type;[m
[32m +                                }[m
[32m +                            }[m
[32m +                        }[m
[32m +                    }[m
[32m +                    finally {[m
[32m +                        if ((s1 != null)) {[m
[32m +                            s1.Close();[m
[32m +                        }[m
[32m +                        if ((s2 != null)) {[m
[32m +                            s2.Close();[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                xs.Add(dsSchema);[m
[32m +                return type;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Represents strongly named DataRow class.[m
[32m +        ///</summary>[m
[32m +        public partial class QueueDataRow : global::System.Data.DataRow {[m
[32m +            [m
[32m +            private QueueDataDataTable tableQueueData;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal QueueDataRow(global::System.Data.DataRowBuilder rb) : [m
[32m +                    base(rb) {[m
[32m +                this.tableQueueData = ((QueueDataDataTable)(this.Table));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int id {[m
[32m +                get {[m
[32m +                    return ((int)(this[this.tableQueueData.idColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.idColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Name {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueData.NameColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.NameColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Department {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueData.DepartmentColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.DepartmentColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Purpose {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueData.PurposeColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.PurposeColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int QueueNumber {[m
[32m +                get {[m
[32m +                    return ((int)(this[this.tableQueueData.QueueNumberColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.QueueNumberColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public System.DateTime date {[m
[32m +                get {[m
[32m +                    try {[m
[32m +                        return ((global::System.DateTime)(this[this.tableQueueData.dateColumn]));[m
[32m +                    }[m
[32m +                    catch (global::System.InvalidCastException e) {[m
[32m +                        throw new global::System.Data.StrongTypingException("The value for column \'date\' in table \'QueueData\' is DBNull.", e);[m
[32m +                    }[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.dateColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public bool IsdateNull() {[m
[32m +                return this.IsNull(this.tableQueueData.dateColumn);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void SetdateNull() {[m
[32m +                this[this.tableQueueData.dateColumn] = global::System.Convert.DBNull;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Row event argument class[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public class QueueDataRowChangeEvent : global::System.EventArgs {[m
[32m +            [m
[32m +            private QueueDataRow eventRow;[m
[32m +            [m
[32m +            private global::System.Data.DataRowAction eventAction;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRowChangeEvent(QueueDataRow row, global::System.Data.DataRowAction action) {[m
[32m +                this.eventRow = row;[m
[32m +                this.eventAction = action;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow Row {[m
[32m +                get {[m
[32m +                    return this.eventRow;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataRowAction Action {[m
[32m +                get {[m
[32m +                    return this.eventAction;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +namespace capstoneproject.loginformDataSet3TableAdapters {[m
[32m +    [m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///Represents the connection and commands used to retrieve and save data.[m
[32m +    ///</summary>[m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.ComponentModel.DataObjectAttribute(true)][m
[32m +    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[32m +        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +    public partial class QueueDataTableAdapter : global::System.ComponentModel.Component {[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlConnection _connection;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[32m +        [m
[32m +        private bool _clearBeforeFill;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public QueueDataTableAdapter() {[m
[32m +            this.ClearBeforeFill = true;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[32m +            get {[m
[32m +                if ((this._adapter == null)) {[m
[32m +                    this.InitAdapter();[m
[32m +                }[m
[32m +                return this._adapter;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[32m +            get {[m
[32m +                if ((this._connection == null)) {[m
[32m +                    this.InitConnection();[m
[32m +                }[m
[32m +                return this._connection;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._connection = value;[m
[32m +                if ((this.Adapter.InsertCommand != null)) {[m
[32m +                    this.Adapter.InsertCommand.Connection = value;[m
[32m +                }[m
[32m +                if ((this.Adapter.DeleteCommand != null)) {[m
[32m +                    this.Adapter.DeleteCommand.Connection = value;[m
[32m +                }[m
[32m +                if ((this.Adapter.UpdateCommand != null)) {[m
[32m +                    this.Adapter.UpdateCommand.Connection = value;[m
[32m +                }[m
[32m +                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m +                    if ((this.CommandCollection[i] != null)) {[m
[32m +                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[32m +            get {[m
[32m +                return this._transaction;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._transaction = value;[m
[32m +                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m +                    this.CommandCollection[i].Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.DeleteCommand != null))) {[m
[32m +                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.InsertCommand != null))) {[m
[32m +                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.UpdateCommand != null))) {[m
[32m +                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[32m +            get {[m
[32m +                if ((this._commandCollection == null)) {[m
[32m +                    this.InitCommandCollection();[m
[32m +                }[m
[32m +                return this._commandCollection;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public bool ClearBeforeFill {[m
[32m +            get {[m
[32m +                return this._clearBeforeFill;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._clearBeforeFill = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitAdapter() {[m
[32m +            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[32m +            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[32m +            tableMapping.SourceTable = "Table";[m
[32m +            tableMapping.DataSetTable = "QueueData";[m
[32m +            tableMapping.ColumnMappings.Add("id", "id");[m
[32m +            tableMapping.ColumnMappings.Add("Name", "Name");[m
[32m +            tableMapping.ColumnMappings.Add("Department", "Department");[m
[32m +            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[32m +            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[32m +            tableMapping.ColumnMappings.Add("date", "date");[m
[32m +            this._adapter.TableMappings.Add(tableMapping);[m
[32m +            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.DeleteCommand.Connection = this.Connection;[m
[32m +            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Origina" +[m
[32m +                "l_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original" +[m
[32m +                "_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_" +[m
[32m +                "date)))";[m
[32m +            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.InsertCommand.Connection = this.Connection;[m
[32m +            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [d" +[m
[32m +                "ate]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @date);\r\nSELECT id, Na" +[m
[32m +                "me, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = SCOPE_IDEN" +[m
[32m +                "TITY())";[m
[32m +            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.UpdateCommand.Connection = this.Connection;[m
[32m +            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [date] = @date WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)));[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = @id)";[m
[32m +            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitConnection() {[m
[32m +            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[32m +            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitCommandCollection() {[m
[32m +            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[32m +            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._commandCollection[0].Connection = this.Connection;[m
[32m +            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, date FROM dbo.QueueData";[m
[32m +            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[32m +        public virtual int Fill(loginformDataSet3.QueueDataDataTable dataTable) {[m
[32m +            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m +            if ((this.ClearBeforeFill == true)) {[m
[32m +                dataTable.Clear();[m
[32m +            }[m
[32m +            int returnValue = this.Adapter.Fill(dataTable);[m
[32m +            return returnValue;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[32m +        public virtual loginformDataSet3.QueueDataDataTable GetData() {[m
[32m +            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m +            loginformDataSet3.QueueDataDataTable dataTable = new loginformDataSet3.QueueDataDataTable();[m
[32m +            this.Adapter.Fill(dataTable);[m
[32m +            return dataTable;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(loginformDataSet3.QueueDataDataTable dataTable) {[m
[32m +            return this.Adapter.Update(dataTable);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(loginformDataSet3 dataSet) {[m
[32m +            return this.Adapter.Update(dataSet, "QueueData");[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[32m +            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[32m +                        dataRow});[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[32m +            return this.Adapter.Update(dataRows);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[32m +        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date) {[m
[32m +            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[32m +            if ((Original_Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[32m +            }[m
[32m +            if ((Original_Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[32m +            }[m
[32m +            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[32m +            if ((Original_date.HasValue == true)) {[m
[32m +                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));[m
[32m +                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_date.Value));[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));[m
[32m +                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;[m
[32m +            }[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[32m +            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.DeleteCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.DeleteCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[32m +        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date) {[m
[32m +            if ((Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[32m +            }[m
[32m +            if ((Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[32m +            }[m
[32m +            if ((Purpose == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Purpose");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m +            }[m
[32m +            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m +            if ((date.HasValue == true)) {[m
[32m +                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(date.Value));[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[32m +            }[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[32m +            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.InsertCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.InsertCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m +        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date, int id) {[m
[32m +            if ((Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[32m +            }[m
[32m +            if ((Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[32m +            }[m
[32m +            if ((Purpose == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Purpose");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m +            if ((date.HasValue == true)) {[m
[32m +                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(date.Value));[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));[m
[32m +            if ((Original_Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));[m
[32m +            }[m
[32m +            if ((Original_Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Department));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_QueueNumber));[m
[32m +            if ((Original_date.HasValue == true)) {[m
[32m +                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));[m
[32m +                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_date.Value));[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));[m
[32m +                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(id));[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[32m +            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.UpdateCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.UpdateCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m +        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date) {[m
[32m +            return this.Update(Name, Department, Purpose, QueueNumber, date, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_date, Original_id);[m
[32m +        }[m
[32m +    }[m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[32m +    ///</summary>[m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[32m +        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[32m +    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[32m +        [m
[32m +        private UpdateOrderOption _updateOrder;[m
[32m +        [m
[32m +        private QueueDataTableAdapter _queueDataTableAdapter;[m
[32m +        [m
[32m +        private bool _backupDataSetBeforeUpdate;[m
[32m +        [m
[32m +        private global::System.Data.IDbConnection _connection;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public UpdateOrderOption UpdateOrder {[m
[32m +            get {[m
[32m +                return this._updateOrder;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._updateOrder = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[32m +            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[32m +            "a", "System.Drawing.Design.UITypeEditor")][m
[32m +        public QueueDataTableAdapter QueueDataTableAdapter {[m
[32m +            get {[m
[32m +                return this._queueDataTableAdapter;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._queueDataTableAdapter = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public bool BackupDataSetBeforeUpdate {[m
[32m +            get {[m
[32m +                return this._backupDataSetBeforeUpdate;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._backupDataSetBeforeUpdate = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        public global::System.Data.IDbConnection Connection {[m
[32m +            get {[m
[32m +                if ((this._connection != null)) {[m
[32m +                    return this._connection;[m
[32m +                }[m
[32m +                if (((this._queueDataTableAdapter != null) [m
[32m +                            && (this._queueDataTableAdapter.Connection != null))) {[m
[32m +                    return this._queueDataTableAdapter.Connection;[m
[32m +                }[m
[32m +                return null;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._connection = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        public int TableAdapterInstanceCount {[m
[32m +            get {[m
[32m +                int count = 0;[m
[32m +                if ((this._queueDataTableAdapter != null)) {[m
[32m +                    count = (count + 1);[m
[32m +                }[m
[32m +                return count;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update rows in top-down order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateUpdatedRows(loginformDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] updatedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[32m +                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[32m +                if (((updatedRows != null) [m
[32m +                            && (0 < updatedRows.Length))) {[m
[32m +                    result = (result + this._queueDataTableAdapter.Update(updatedRows));[m
[32m +                    allChangedRows.AddRange(updatedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Insert rows in top-down order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateInsertedRows(loginformDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] addedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[32m +                if (((addedRows != null) [m
[32m +                            && (0 < addedRows.Length))) {[m
[32m +                    result = (result + this._queueDataTableAdapter.Update(addedRows));[m
[32m +                    allAddedRows.AddRange(addedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Delete rows in bottom-up order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateDeletedRows(loginformDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] deletedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[32m +                if (((deletedRows != null) [m
[32m +                            && (0 < deletedRows.Length))) {[m
[32m +                    result = (result + this._queueDataTableAdapter.Update(deletedRows));[m
[32m +                    allChangedRows.AddRange(deletedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            if (((updatedRows == null) [m
[32m +                        || (updatedRows.Length < 1))) {[m
[32m +                return updatedRows;[m
[32m +            }[m
[32m +            if (((allAddedRows == null) [m
[32m +                        || (allAddedRows.Count < 1))) {[m
[32m +                return updatedRows;[m
[32m +            }[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[32m +                global::System.Data.DataRow row = updatedRows[i];[m
[32m +                if ((allAddedRows.Contains(row) == false)) {[m
[32m +                    realUpdatedRows.Add(row);[m
[32m +                }[m
[32m +            }[m
[32m +            return realUpdatedRows.ToArray();[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update all changes to the dataset.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public virtual int UpdateAll(loginformDataSet3 dataSet) {[m
[32m +            if ((dataSet == null)) {[m
[32m +                throw new global::System.ArgumentNullException("dataSet");[m
[32m +            }[m
[32m +            if ((dataSet.HasChanges() == false)) {[m
[32m +                return 0;[m
[32m +            }[m
[32m +            if (((this._queueDataTableAdapter != null) [m
[32m +                        && (this.MatchTableAdapterConnection(this._queueDataTableAdapter.Connection) == false))) {[m
[32m +                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[32m +                        "tring.");[m
[32m +            }[m
[32m +            global::System.Data.IDbConnection workConnection = this.Connection;[m
[32m +            if ((workConnection == null)) {[m
[32m +                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[32m +                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[32m +            }[m
[32m +            bool workConnOpened = false;[m
[32m +            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[32m +                        == global::System.Data.ConnectionState.Broken)) {[m
[32m +                workConnection.Close();[m
[32m +            }[m
[32m +            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[32m +                workConnection.Open();[m
[32m +                workConnOpened = true;[m
[32m +            }[m
[32m +            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[32m +            if ((workTransaction == null)) {[m
[32m +                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[32m +                        "ctions or the current state is not allowing the transaction to begin.");[m
[32m +            }[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[32m +            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[32m +            int result = 0;[m
[32m +            global::System.Data.DataSet backupDataSet = null;[m
[32m +            if (this.BackupDataSetBeforeUpdate) {[m
[32m +                backupDataSet = new global::System.Data.DataSet();[m
[32m +                backupDataSet.Merge(dataSet);[m
[32m +            }[m
[32m +            try {[m
[32m +                // ---- Prepare for update -----------[m
[32m +                //[m
[32m +                if ((this._queueDataTableAdapter != null)) {[m
[32m +                    revertConnections.Add(this._queueDataTableAdapter, this._queueDataTableAdapter.Connection);[m
[32m +                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[32m +                    this._queueDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[32m +                    if (this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[32m +                        this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[32m +                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueDataTableAdapter.Adapter);[m
[32m +                    }[m
[32m +                }[m
[32m +                // [m
[32m +                //---- Perform updates -----------[m
[32m +                //[m
[32m +                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[32m +                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m +                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m +                }[m
[32m +                else {[m
[32m +                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m +                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m +                }[m
[32m +                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[32m +                // [m
[32m +                //---- Commit updates -----------[m
[32m +                //[m
[32m +                workTransaction.Commit();[m
[32m +                if ((0 < allAddedRows.Count)) {[m
[32m +                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m +                    allAddedRows.CopyTo(rows);[m
[32m +                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.DataRow row = rows[i];[m
[32m +                        row.AcceptChanges();[m
[32m +                    }[m
[32m +                }[m
[32m +                if ((0 < allChangedRows.Count)) {[m
[32m +                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[32m +                    allChangedRows.CopyTo(rows);[m
[32m +                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.DataRow row = rows[i];[m
[32m +                        row.AcceptChanges();[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            catch (global::System.Exception ex) {[m
[32m +                workTransaction.Rollback();[m
[32m +                // ---- Restore the dataset -----------[m
[32m +                if (this.BackupDataSetBeforeUpdate) {[m
[32m +                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[32m +                    dataSet.Clear();[m
[32m +                    dataSet.Merge(backupDataSet);[m
[32m +                }[m
[32m +                else {[m
[32m +                    if ((0 < allAddedRows.Count)) {[m
[32m +                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m +                        allAddedRows.CopyTo(rows);[m
[32m +                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                            global::System.Data.DataRow row = rows[i];[m
[32m +                            row.AcceptChanges();[m
[32m +                            row.SetAdded();[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                throw ex;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if (workConnOpened) {[m
[32m +                    workConnection.Close();[m
[32m +                }[m
[32m +                if ((this._queueDataTableAdapter != null)) {[m
[32m +                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueDataTableAdapter]));[m
[32m +                    this._queueDataTableAdapter.Transaction = null;[m
[32m +                }[m
[32m +                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[32m +                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[32m +                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[32m +                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[32m +                        adapter.AcceptChangesDuringUpdate = true;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[32m +            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[32m +            if ((this._connection != null)) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            if (((this.Connection == null) [m
[32m +                        || (inputConnection == null))) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update Order Option[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public enum UpdateOrderOption {[m
[32m +            [m
[32m +            InsertUpdateDelete = 0,[m
[32m +            [m
[32m +            UpdateInsertDelete = 1,[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Used to sort self-referenced table's rows[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[32m +            [m
[32m +            private global::System.Data.DataRelation _relation;[m
[32m +            [m
[32m +            private int _childFirst;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[32m +                this._relation = relation;[m
[32m +                if (childFirst) {[m
[32m +                    this._childFirst = -1;[m
[32m +                }[m
[32m +                else {[m
[32m +                    this._childFirst = 1;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[32m +                global::System.Diagnostics.Debug.Assert((row != null));[m
[32m +                global::System.Data.DataRow root = row;[m
[32m +                distance = 0;[m
[32m +[m
[32m +                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[32m +                traversedRows[row] = row;[m
[32m +[m
[32m +                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m +                for ([m
[32m +                ; ((parent != null) [m
[32m +                            && (traversedRows.ContainsKey(parent) == false)); [m
[32m +                ) {[m
[32m +                    distance = (distance + 1);[m
[32m +                    root = parent;[m
[32m +                    traversedRows[parent] = parent;[m
[32m +                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m +                }[m
[32m +[m
[32m +                if ((distance == 0)) {[m
[32m +                    traversedRows.Clear();[m
[32m +                    traversedRows[row] = row;[m
[32m +                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m +                    for ([m
[32m +                    ; ((parent != null) [m
[32m +                                && (traversedRows.ContainsKey(parent) == false)); [m
[32m +                    ) {[m
[32m +                        distance = (distance + 1);[m
[32m +                        root = parent;[m
[32m +                        traversedRows[parent] = parent;[m
[32m +                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m +                    }[m
[32m +                }[m
[32m +[m
[32m +                return root;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[32m +                if (object.ReferenceEquals(row1, row2)) {[m
[32m +                    return 0;[m
[32m +                }[m
[32m +                if ((row1 == null)) {[m
[32m +                    return -1;[m
[32m +                }[m
[32m +                if ((row2 == null)) {[m
[32m +                    return 1;[m
[32m +                }[m
[32m +[m
[32m +                int distance1 = 0;[m
[32m +                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[32m +[m
[32m +                int distance2 = 0;[m
[32m +                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[32m +[m
[32m +                if (object.ReferenceEquals(root1, root2)) {[m
[32m +                    return (this._childFirst * distance1.CompareTo(distance2));[m
[32m +                }[m
[32m +                else {[m
[32m +                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[32m +                                    && (root2.Table != null)));[m
[32m +                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[32m +                        return -1;[m
[32m +                    }[m
[32m +                    else {[m
[32m +                        return 1;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +[m
[32m++=======[m
[32m++ï»¿//------------------------------------------------------------------------------[m
[32m++// <auto-generated>[m
[32m++//     This code was generated by a tool.[m
[32m++//     Runtime Version:4.0.30319.42000[m
[32m++//[m
[32m++//     Changes to this file may cause incorrect behavior and will be lost if[m
[32m++//     the code is regenerated.[m
[32m++// </auto-generated>[m
[32m++//------------------------------------------------------------------------------[m
[32m++[m
[32m++#pragma warning disable 1591[m
[32m++[m
[32m++namespace capstoneproject {[m
[32m++    [m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///Represents a strongly typed in-memory cache of data.[m
[32m++    ///</summary>[m
[32m++    [global::System.Serializable()][m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[32m++    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet3")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[32m++    public partial class loginformDataSet3 : global::System.Data.DataSet {[m
[32m++        [m
[32m++        private QueueDataDataTable tableQueueData;[m
[32m++        [m
[32m++        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public loginformDataSet3() {[m
[32m++            this.BeginInit();[m
[32m++            this.InitClass();[m
[32m++            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m++            base.Relations.CollectionChanged += schemaChangedHandler;[m
[32m++            this.EndInit();[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected loginformDataSet3(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m++                base(info, context, false) {[m
[32m++            if ((this.IsBinarySerialized(info, context) == true)) {[m
[32m++                this.InitVars(false);[m
[32m++                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[32m++                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[32m++                return;[m
[32m++            }[m
[32m++            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[32m++            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m++                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m++                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m++                if ((ds.Tables["QueueData"] != null)) {[m
[32m++                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m++                }[m
[32m++                this.DataSetName = ds.DataSetName;[m
[32m++                this.Prefix = ds.Prefix;[m
[32m++                this.Namespace = ds.Namespace;[m
[32m++                this.Locale = ds.Locale;[m
[32m++                this.CaseSensitive = ds.CaseSensitive;[m
[32m++                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m++                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            else {[m
[32m++                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m++            }[m
[32m++            this.GetSerializationData(info, context);[m
[32m++            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m++            this.Relations.CollectionChanged += schemaChangedHandler;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[32m++        public QueueDataDataTable QueueData {[m
[32m++            get {[m
[32m++                return this.tableQueueData;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.BrowsableAttribute(true)][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[32m++        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[32m++            get {[m
[32m++                return this._schemaSerializationMode;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._schemaSerializationMode = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m++        public new global::System.Data.DataTableCollection Tables {[m
[32m++            get {[m
[32m++                return base.Tables;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m++        public new global::System.Data.DataRelationCollection Relations {[m
[32m++            get {[m
[32m++                return base.Relations;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override void InitializeDerivedDataSet() {[m
[32m++            this.BeginInit();[m
[32m++            this.InitClass();[m
[32m++            this.EndInit();[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public override global::System.Data.DataSet Clone() {[m
[32m++            loginformDataSet3 cln = ((loginformDataSet3)(base.Clone()));[m
[32m++            cln.InitVars();[m
[32m++            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[32m++            return cln;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override bool ShouldSerializeTables() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override bool ShouldSerializeRelations() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[32m++            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m++                this.Reset();[m
[32m++                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m++                ds.ReadXml(reader);[m
[32m++                if ((ds.Tables["QueueData"] != null)) {[m
[32m++                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m++                }[m
[32m++                this.DataSetName = ds.DataSetName;[m
[32m++                this.Prefix = ds.Prefix;[m
[32m++                this.Namespace = ds.Namespace;[m
[32m++                this.Locale = ds.Locale;[m
[32m++                this.CaseSensitive = ds.CaseSensitive;[m
[32m++                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m++                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            else {[m
[32m++                this.ReadXml(reader);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[32m++            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[32m++            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[32m++            stream.Position = 0;[m
[32m++            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal void InitVars() {[m
[32m++            this.InitVars(true);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal void InitVars(bool initTable) {[m
[32m++            this.tableQueueData = ((QueueDataDataTable)(base.Tables["QueueData"]));[m
[32m++            if ((initTable == true)) {[m
[32m++                if ((this.tableQueueData != null)) {[m
[32m++                    this.tableQueueData.InitVars();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitClass() {[m
[32m++            this.DataSetName = "loginformDataSet3";[m
[32m++            this.Prefix = "";[m
[32m++            this.Namespace = "http://tempuri.org/loginformDataSet3.xsd";[m
[32m++            this.EnforceConstraints = true;[m
[32m++            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++            this.tableQueueData = new QueueDataDataTable();[m
[32m++            base.Tables.Add(this.tableQueueData);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private bool ShouldSerializeQueueData() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[32m++            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m++            loginformDataSet3 ds = new loginformDataSet3();[m
[32m++            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m++            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m++            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++            any.Namespace = ds.Namespace;[m
[32m++            sequence.Items.Add(any);[m
[32m++            type.Particle = sequence;[m
[32m++            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m++            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m++                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m++                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m++                try {[m
[32m++                    global::System.Xml.Schema.XmlSchema schema = null;[m
[32m++                    dsSchema.Write(s1);[m
[32m++                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m++                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m++                        s2.SetLength(0);[m
[32m++                        schema.Write(s2);[m
[32m++                        if ((s1.Length == s2.Length)) {[m
[32m++                            s1.Position = 0;[m
[32m++                            s2.Position = 0;[m
[32m++                            for (; ((s1.Position != s1.Length) [m
[32m++                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m++                                ;[m
[32m++                            }[m
[32m++                            if ((s1.Position == s1.Length)) {[m
[32m++                                return type;[m
[32m++                            }[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                finally {[m
[32m++                    if ((s1 != null)) {[m
[32m++                        s1.Close();[m
[32m++                    }[m
[32m++                    if ((s2 != null)) {[m
[32m++                        s2.Close();[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            xs.Add(dsSchema);[m
[32m++            return type;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public delegate void QueueDataRowChangeEventHandler(object sender, QueueDataRowChangeEvent e);[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Represents the strongly named DataTable class.[m
[32m++        ///</summary>[m
[32m++        [global::System.Serializable()][m
[32m++        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[32m++        public partial class QueueDataDataTable : global::System.Data.TypedTableBase<QueueDataRow> {[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnid;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnName;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnDepartment;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnPurpose;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnQueueNumber;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columndate;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataDataTable() {[m
[32m++                this.TableName = "QueueData";[m
[32m++                this.BeginInit();[m
[32m++                this.InitClass();[m
[32m++                this.EndInit();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal QueueDataDataTable(global::System.Data.DataTable table) {[m
[32m++                this.TableName = table.TableName;[m
[32m++                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[32m++                    this.CaseSensitive = table.CaseSensitive;[m
[32m++                }[m
[32m++                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[32m++                    this.Locale = table.Locale;[m
[32m++                }[m
[32m++                if ((table.Namespace != table.DataSet.Namespace)) {[m
[32m++                    this.Namespace = table.Namespace;[m
[32m++                }[m
[32m++                this.Prefix = table.Prefix;[m
[32m++                this.MinimumCapacity = table.MinimumCapacity;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected QueueDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m++                    base(info, context) {[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn idColumn {[m
[32m++                get {[m
[32m++                    return this.columnid;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn NameColumn {[m
[32m++                get {[m
[32m++                    return this.columnName;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn DepartmentColumn {[m
[32m++                get {[m
[32m++                    return this.columnDepartment;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn PurposeColumn {[m
[32m++                get {[m
[32m++                    return this.columnPurpose;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn QueueNumberColumn {[m
[32m++                get {[m
[32m++                    return this.columnQueueNumber;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn dateColumn {[m
[32m++                get {[m
[32m++                    return this.columndate;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            [global::System.ComponentModel.Browsable(false)][m
[32m++            public int Count {[m
[32m++                get {[m
[32m++                    return this.Rows.Count;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow this[int index] {[m
[32m++                get {[m
[32m++                    return ((QueueDataRow)(this.Rows[index]));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowChanging;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowChanged;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowDeleting;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowDeleted;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void AddQueueDataRow(QueueDataRow row) {[m
[32m++                this.Rows.Add(row);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow AddQueueDataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime date) {[m
[32m++                QueueDataRow rowQueueDataRow = ((QueueDataRow)(this.NewRow()));[m
[32m++                object[] columnValuesArray = new object[] {[m
[32m++                        null,[m
[32m++                        Name,[m
[32m++                        Department,[m
[32m++                        Purpose,[m
[32m++                        QueueNumber,[m
[32m++                        date};[m
[32m++                rowQueueDataRow.ItemArray = columnValuesArray;[m
[32m++                this.Rows.Add(rowQueueDataRow);[m
[32m++                return rowQueueDataRow;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow FindByid(int id) {[m
[32m++                return ((QueueDataRow)(this.Rows.Find(new object[] {[m
[32m++                            id})));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public override global::System.Data.DataTable Clone() {[m
[32m++                QueueDataDataTable cln = ((QueueDataDataTable)(base.Clone()));[m
[32m++                cln.InitVars();[m
[32m++                return cln;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Data.DataTable CreateInstance() {[m
[32m++                return new QueueDataDataTable();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal void InitVars() {[m
[32m++                this.columnid = base.Columns["id"];[m
[32m++                this.columnName = base.Columns["Name"];[m
[32m++                this.columnDepartment = base.Columns["Department"];[m
[32m++                this.columnPurpose = base.Columns["Purpose"];[m
[32m++                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[32m++                this.columndate = base.Columns["date"];[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            private void InitClass() {[m
[32m++                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnid);[m
[32m++                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnName);[m
[32m++                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnDepartment);[m
[32m++                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnPurpose);[m
[32m++                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnQueueNumber);[m
[32m++                this.columndate = new global::System.Data.DataColumn("date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columndate);[m
[32m++                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[32m++                                this.columnid}, true));[m
[32m++                this.columnid.AutoIncrement = true;[m
[32m++                this.columnid.AutoIncrementSeed = -1;[m
[32m++                this.columnid.AutoIncrementStep = -1;[m
[32m++                this.columnid.AllowDBNull = false;[m
[32m++                this.columnid.ReadOnly = true;[m
[32m++                this.columnid.Unique = true;[m
[32m++                this.columnName.AllowDBNull = false;[m
[32m++                this.columnName.MaxLength = 50;[m
[32m++                this.columnDepartment.AllowDBNull = false;[m
[32m++                this.columnDepartment.MaxLength = 50;[m
[32m++                this.columnPurpose.AllowDBNull = false;[m
[32m++                this.columnPurpose.MaxLength = 2147483647;[m
[32m++                this.columnQueueNumber.AllowDBNull = false;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow NewQueueDataRow() {[m
[32m++                return ((QueueDataRow)(this.NewRow()));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[32m++                return new QueueDataRow(builder);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Type GetRowType() {[m
[32m++                return typeof(QueueDataRow);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowChanged(e);[m
[32m++                if ((this.QueueDataRowChanged != null)) {[m
[32m++                    this.QueueDataRowChanged(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowChanging(e);[m
[32m++                if ((this.QueueDataRowChanging != null)) {[m
[32m++                    this.QueueDataRowChanging(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowDeleted(e);[m
[32m++                if ((this.QueueDataRowDeleted != null)) {[m
[32m++                    this.QueueDataRowDeleted(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowDeleting(e);[m
[32m++                if ((this.QueueDataRowDeleting != null)) {[m
[32m++                    this.QueueDataRowDeleting(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void RemoveQueueDataRow(QueueDataRow row) {[m
[32m++                this.Rows.Remove(row);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m++                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m++                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m++                loginformDataSet3 ds = new loginformDataSet3();[m
[32m++                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[32m++                any1.MinOccurs = new decimal(0);[m
[32m++                any1.MaxOccurs = decimal.MaxValue;[m
[32m++                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m++                sequence.Items.Add(any1);[m
[32m++                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[32m++                any2.MinOccurs = new decimal(1);[m
[32m++                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m++                sequence.Items.Add(any2);[m
[32m++                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m++                attribute1.Name = "namespace";[m
[32m++                attribute1.FixedValue = ds.Namespace;[m
[32m++                type.Attributes.Add(attribute1);[m
[32m++                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m++                attribute2.Name = "tableTypeName";[m
[32m++                attribute2.FixedValue = "QueueDataDataTable";[m
[32m++                type.Attributes.Add(attribute2);[m
[32m++                type.Particle = sequence;[m
[32m++                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m++                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m++                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m++                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m++                    try {[m
[32m++                        global::System.Xml.Schema.XmlSchema schema = null;[m
[32m++                        dsSchema.Write(s1);[m
[32m++                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m++                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m++                            s2.SetLength(0);[m
[32m++                            schema.Write(s2);[m
[32m++                            if ((s1.Length == s2.Length)) {[m
[32m++                                s1.Position = 0;[m
[32m++                                s2.Position = 0;[m
[32m++                                for (; ((s1.Position != s1.Length) [m
[32m++                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m++                                    ;[m
[32m++                                }[m
[32m++                                if ((s1.Position == s1.Length)) {[m
[32m++                                    return type;[m
[32m++                                }[m
[32m++                            }[m
[32m++                        }[m
[32m++                    }[m
[32m++                    finally {[m
[32m++                        if ((s1 != null)) {[m
[32m++                            s1.Close();[m
[32m++                        }[m
[32m++                        if ((s2 != null)) {[m
[32m++                            s2.Close();[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                xs.Add(dsSchema);[m
[32m++                return type;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Represents strongly named DataRow class.[m
[32m++        ///</summary>[m
[32m++        public partial class QueueDataRow : global::System.Data.DataRow {[m
[32m++            [m
[32m++            private QueueDataDataTable tableQueueData;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal QueueDataRow(global::System.Data.DataRowBuilder rb) : [m
[32m++                    base(rb) {[m
[32m++                this.tableQueueData = ((QueueDataDataTable)(this.Table));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int id {[m
[32m++                get {[m
[32m++                    return ((int)(this[this.tableQueueData.idColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.idColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Name {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueData.NameColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.NameColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Department {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueData.DepartmentColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.DepartmentColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Purpose {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueData.PurposeColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.PurposeColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int QueueNumber {[m
[32m++                get {[m
[32m++                    return ((int)(this[this.tableQueueData.QueueNumberColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.QueueNumberColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public System.DateTime date {[m
[32m++                get {[m
[32m++                    try {[m
[32m++                        return ((global::System.DateTime)(this[this.tableQueueData.dateColumn]));[m
[32m++                    }[m
[32m++                    catch (global::System.InvalidCastException e) {[m
[32m++                        throw new global::System.Data.StrongTypingException("The value for column \'date\' in table \'QueueData\' is DBNull.", e);[m
[32m++                    }[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.dateColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public bool IsdateNull() {[m
[32m++                return this.IsNull(this.tableQueueData.dateColumn);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void SetdateNull() {[m
[32m++                this[this.tableQueueData.dateColumn] = global::System.Convert.DBNull;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Row event argument class[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public class QueueDataRowChangeEvent : global::System.EventArgs {[m
[32m++            [m
[32m++            private QueueDataRow eventRow;[m
[32m++            [m
[32m++            private global::System.Data.DataRowAction eventAction;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRowChangeEvent(QueueDataRow row, global::System.Data.DataRowAction action) {[m
[32m++                this.eventRow = row;[m
[32m++                this.eventAction = action;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow Row {[m
[32m++                get {[m
[32m++                    return this.eventRow;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataRowAction Action {[m
[32m++                get {[m
[32m++                    return this.eventAction;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++}[m
[32m++namespace capstoneproject.loginformDataSet3TableAdapters {[m
[32m++    [m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///Represents the connection and commands used to retrieve and save data.[m
[32m++    ///</summary>[m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.ComponentModel.DataObjectAttribute(true)][m
[32m++    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[32m++        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++    public partial class QueueDataTableAdapter : global::System.ComponentModel.Component {[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlConnection _connection;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[32m++        [m
[32m++        private bool _clearBeforeFill;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public QueueDataTableAdapter() {[m
[32m++            this.ClearBeforeFill = true;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[32m++            get {[m
[32m++                if ((this._adapter == null)) {[m
[32m++                    this.InitAdapter();[m
[32m++                }[m
[32m++                return this._adapter;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[32m++            get {[m
[32m++                if ((this._connection == null)) {[m
[32m++                    this.InitConnection();[m
[32m++                }[m
[32m++                return this._connection;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._connection = value;[m
[32m++                if ((this.Adapter.InsertCommand != null)) {[m
[32m++                    this.Adapter.InsertCommand.Connection = value;[m
[32m++                }[m
[32m++                if ((this.Adapter.DeleteCommand != null)) {[m
[32m++                    this.Adapter.DeleteCommand.Connection = value;[m
[32m++                }[m
[32m++                if ((this.Adapter.UpdateCommand != null)) {[m
[32m++                    this.Adapter.UpdateCommand.Connection = value;[m
[32m++                }[m
[32m++                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m++                    if ((this.CommandCollection[i] != null)) {[m
[32m++                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[32m++            get {[m
[32m++                return this._transaction;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._transaction = value;[m
[32m++                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m++                    this.CommandCollection[i].Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.DeleteCommand != null))) {[m
[32m++                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.InsertCommand != null))) {[m
[32m++                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.UpdateCommand != null))) {[m
[32m++                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[32m++            get {[m
[32m++                if ((this._commandCollection == null)) {[m
[32m++                    this.InitCommandCollection();[m
[32m++                }[m
[32m++                return this._commandCollection;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public bool ClearBeforeFill {[m
[32m++            get {[m
[32m++                return this._clearBeforeFill;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._clearBeforeFill = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitAdapter() {[m
[32m++            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[32m++            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[32m++            tableMapping.SourceTable = "Table";[m
[32m++            tableMapping.DataSetTable = "QueueData";[m
[32m++            tableMapping.ColumnMappings.Add("id", "id");[m
[32m++            tableMapping.ColumnMappings.Add("Name", "Name");[m
[32m++            tableMapping.ColumnMappings.Add("Department", "Department");[m
[32m++            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[32m++            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[32m++            tableMapping.ColumnMappings.Add("date", "date");[m
[32m++            this._adapter.TableMappings.Add(tableMapping);[m
[32m++            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.DeleteCommand.Connection = this.Connection;[m
[32m++            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Origina" +[m
[32m++                "l_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original" +[m
[32m++                "_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_" +[m
[32m++                "date)))";[m
[32m++            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.InsertCommand.Connection = this.Connection;[m
[32m++            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [d" +[m
[32m++                "ate]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @date);\r\nSELECT id, Na" +[m
[32m++                "me, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = SCOPE_IDEN" +[m
[32m++                "TITY())";[m
[32m++            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.UpdateCommand.Connection = this.Connection;[m
[32m++            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [date] = @date WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)));[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = @id)";[m
[32m++            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitConnection() {[m
[32m++            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[32m++            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitCommandCollection() {[m
[32m++            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[32m++            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._commandCollection[0].Connection = this.Connection;[m
[32m++            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, date FROM dbo.QueueData";[m
[32m++            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[32m++        public virtual int Fill(loginformDataSet3.QueueDataDataTable dataTable) {[m
[32m++            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m++            if ((this.ClearBeforeFill == true)) {[m
[32m++                dataTable.Clear();[m
[32m++            }[m
[32m++            int returnValue = this.Adapter.Fill(dataTable);[m
[32m++            return returnValue;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[32m++        public virtual loginformDataSet3.QueueDataDataTable GetData() {[m
[32m++            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m++            loginformDataSet3.QueueDataDataTable dataTable = new loginformDataSet3.QueueDataDataTable();[m
[32m++            this.Adapter.Fill(dataTable);[m
[32m++            return dataTable;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(loginformDataSet3.QueueDataDataTable dataTable) {[m
[32m++            return this.Adapter.Update(dataTable);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(loginformDataSet3 dataSet) {[m
[32m++            return this.Adapter.Update(dataSet, "QueueData");[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[32m++            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[32m++                        dataRow});[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[32m++            return this.Adapter.Update(dataRows);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[32m++        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date) {[m
[32m++            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[32m++            if ((Original_Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[32m++            }[m
[32m++            if ((Original_Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[32m++            }[m
[32m++            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[32m++            if ((Original_date.HasValue == true)) {[m
[32m++                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));[m
[32m++                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_date.Value));[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));[m
[32m++                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;[m
[32m++            }[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[32m++            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.DeleteCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.DeleteCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[32m++        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date) {[m
[32m++            if ((Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[32m++            }[m
[32m++            if ((Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[32m++            }[m
[32m++            if ((Purpose == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Purpose");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m++            }[m
[32m++            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m++            if ((date.HasValue == true)) {[m
[32m++                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(date.Value));[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[32m++            }[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[32m++            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.InsertCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.InsertCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m++        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date, int id) {[m
[32m++            if ((Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[32m++            }[m
[32m++            if ((Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[32m++            }[m
[32m++            if ((Purpose == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Purpose");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m++            if ((date.HasValue == true)) {[m
[32m++                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(date.Value));[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));[m
[32m++            if ((Original_Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));[m
[32m++            }[m
[32m++            if ((Original_Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Department));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_QueueNumber));[m
[32m++            if ((Original_date.HasValue == true)) {[m
[32m++                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));[m
[32m++                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_date.Value));[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));[m
[32m++                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(id));[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[32m++            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.UpdateCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.UpdateCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m++        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> date, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_date) {[m
[32m++            return this.Update(Name, Department, Purpose, QueueNumber, date, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_date, Original_id);[m
[32m++        }[m
[32m++    }[m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[32m++    ///</summary>[m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[32m++        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[32m++    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[32m++        [m
[32m++        private UpdateOrderOption _updateOrder;[m
[32m++        [m
[32m++        private QueueDataTableAdapter _queueDataTableAdapter;[m
[32m++        [m
[32m++        private bool _backupDataSetBeforeUpdate;[m
[32m++        [m
[32m++        private global::System.Data.IDbConnection _connection;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public UpdateOrderOption UpdateOrder {[m
[32m++            get {[m
[32m++                return this._updateOrder;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._updateOrder = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[32m++            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[32m++            "a", "System.Drawing.Design.UITypeEditor")][m
[32m++        public QueueDataTableAdapter QueueDataTableAdapter {[m
[32m++            get {[m
[32m++                return this._queueDataTableAdapter;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._queueDataTableAdapter = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public bool BackupDataSetBeforeUpdate {[m
[32m++            get {[m
[32m++                return this._backupDataSetBeforeUpdate;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._backupDataSetBeforeUpdate = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        public global::System.Data.IDbConnection Connection {[m
[32m++            get {[m
[32m++                if ((this._connection != null)) {[m
[32m++                    return this._connection;[m
[32m++                }[m
[32m++                if (((this._queueDataTableAdapter != null) [m
[32m++                            && (this._queueDataTableAdapter.Connection != null))) {[m
[32m++                    return this._queueDataTableAdapter.Connection;[m
[32m++                }[m
[32m++                return null;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._connection = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        public int TableAdapterInstanceCount {[m
[32m++            get {[m
[32m++                int count = 0;[m
[32m++                if ((this._queueDataTableAdapter != null)) {[m
[32m++                    count = (count + 1);[m
[32m++                }[m
[32m++                return count;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update rows in top-down order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateUpdatedRows(loginformDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] updatedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[32m++                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[32m++                if (((updatedRows != null) [m
[32m++                            && (0 < updatedRows.Length))) {[m
[32m++                    result = (result + this._queueDataTableAdapter.Update(updatedRows));[m
[32m++                    allChangedRows.AddRange(updatedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Insert rows in top-down order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateInsertedRows(loginformDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] addedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[32m++                if (((addedRows != null) [m
[32m++                            && (0 < addedRows.Length))) {[m
[32m++                    result = (result + this._queueDataTableAdapter.Update(addedRows));[m
[32m++                    allAddedRows.AddRange(addedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Delete rows in bottom-up order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateDeletedRows(loginformDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] deletedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[32m++                if (((deletedRows != null) [m
[32m++                            && (0 < deletedRows.Length))) {[m
[32m++                    result = (result + this._queueDataTableAdapter.Update(deletedRows));[m
[32m++                    allChangedRows.AddRange(deletedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            if (((updatedRows == null) [m
[32m++                        || (updatedRows.Length < 1))) {[m
[32m++                return updatedRows;[m
[32m++            }[m
[32m++            if (((allAddedRows == null) [m
[32m++                        || (allAddedRows.Count < 1))) {[m
[32m++                return updatedRows;[m
[32m++            }[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[32m++                global::System.Data.DataRow row = updatedRows[i];[m
[32m++                if ((allAddedRows.Contains(row) == false)) {[m
[32m++                    realUpdatedRows.Add(row);[m
[32m++                }[m
[32m++            }[m
[32m++            return realUpdatedRows.ToArray();[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update all changes to the dataset.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public virtual int UpdateAll(loginformDataSet3 dataSet) {[m
[32m++            if ((dataSet == null)) {[m
[32m++                throw new global::System.ArgumentNullException("dataSet");[m
[32m++            }[m
[32m++            if ((dataSet.HasChanges() == false)) {[m
[32m++                return 0;[m
[32m++            }[m
[32m++            if (((this._queueDataTableAdapter != null) [m
[32m++                        && (this.MatchTableAdapterConnection(this._queueDataTableAdapter.Connection) == false))) {[m
[32m++                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[32m++                        "tring.");[m
[32m++            }[m
[32m++            global::System.Data.IDbConnection workConnection = this.Connection;[m
[32m++            if ((workConnection == null)) {[m
[32m++                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[32m++                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[32m++            }[m
[32m++            bool workConnOpened = false;[m
[32m++            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[32m++                        == global::System.Data.ConnectionState.Broken)) {[m
[32m++                workConnection.Close();[m
[32m++            }[m
[32m++            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[32m++                workConnection.Open();[m
[32m++                workConnOpened = true;[m
[32m++            }[m
[32m++            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[32m++            if ((workTransaction == null)) {[m
[32m++                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[32m++                        "ctions or the current state is not allowing the transaction to begin.");[m
[32m++            }[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[32m++            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[32m++            int result = 0;[m
[32m++            global::System.Data.DataSet backupDataSet = null;[m
[32m++            if (this.BackupDataSetBeforeUpdate) {[m
[32m++                backupDataSet = new global::System.Data.DataSet();[m
[32m++                backupDataSet.Merge(dataSet);[m
[32m++            }[m
[32m++            try {[m
[32m++                // ---- Prepare for update -----------[m
[32m++                //[m
[32m++                if ((this._queueDataTableAdapter != null)) {[m
[32m++                    revertConnections.Add(this._queueDataTableAdapter, this._queueDataTableAdapter.Connection);[m
[32m++                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[32m++                    this._queueDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[32m++                    if (this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[32m++                        this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[32m++                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueDataTableAdapter.Adapter);[m
[32m++                    }[m
[32m++                }[m
[32m++                // [m
[32m++                //---- Perform updates -----------[m
[32m++                //[m
[32m++                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[32m++                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m++                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m++                }[m
[32m++                else {[m
[32m++                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m++                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m++                }[m
[32m++                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[32m++                // [m
[32m++                //---- Commit updates -----------[m
[32m++                //[m
[32m++                workTransaction.Commit();[m
[32m++                if ((0 < allAddedRows.Count)) {[m
[32m++                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m++                    allAddedRows.CopyTo(rows);[m
[32m++                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.DataRow row = rows[i];[m
[32m++                        row.AcceptChanges();[m
[32m++                    }[m
[32m++                }[m
[32m++                if ((0 < allChangedRows.Count)) {[m
[32m++                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[32m++                    allChangedRows.CopyTo(rows);[m
[32m++                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.DataRow row = rows[i];[m
[32m++                        row.AcceptChanges();[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            catch (global::System.Exception ex) {[m
[32m++                workTransaction.Rollback();[m
[32m++                // ---- Restore the dataset -----------[m
[32m++                if (this.BackupDataSetBeforeUpdate) {[m
[32m++                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[32m++                    dataSet.Clear();[m
[32m++                    dataSet.Merge(backupDataSet);[m
[32m++                }[m
[32m++                else {[m
[32m++                    if ((0 < allAddedRows.Count)) {[m
[32m++                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m++                        allAddedRows.CopyTo(rows);[m
[32m++                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                            global::System.Data.DataRow row = rows[i];[m
[32m++                            row.AcceptChanges();[m
[32m++                            row.SetAdded();[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                throw ex;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if (workConnOpened) {[m
[32m++                    workConnection.Close();[m
[32m++                }[m
[32m++                if ((this._queueDataTableAdapter != null)) {[m
[32m++                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueDataTableAdapter]));[m
[32m++                    this._queueDataTableAdapter.Transaction = null;[m
[32m++                }[m
[32m++                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[32m++                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[32m++                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[32m++                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[32m++                        adapter.AcceptChangesDuringUpdate = true;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[32m++            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[32m++            if ((this._connection != null)) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            if (((this.Connection == null) [m
[32m++                        || (inputConnection == null))) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update Order Option[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public enum UpdateOrderOption {[m
[32m++            [m
[32m++            InsertUpdateDelete = 0,[m
[32m++            [m
[32m++            UpdateInsertDelete = 1,[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Used to sort self-referenced table's rows[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[32m++            [m
[32m++            private global::System.Data.DataRelation _relation;[m
[32m++            [m
[32m++            private int _childFirst;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[32m++                this._relation = relation;[m
[32m++                if (childFirst) {[m
[32m++                    this._childFirst = -1;[m
[32m++                }[m
[32m++                else {[m
[32m++                    this._childFirst = 1;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[32m++                global::System.Diagnostics.Debug.Assert((row != null));[m
[32m++                global::System.Data.DataRow root = row;[m
[32m++                distance = 0;[m
[32m++[m
[32m++                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[32m++                traversedRows[row] = row;[m
[32m++[m
[32m++                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVewarning: in the working copy of 'capstoneproject/loginformDataSet3.xsd', LF will be replaced by CRLF the next time Git touches it
rsion.Default);[m
[32m++                for ([m
[32m++                ; ((parent != null) [m
[32m++                            && (traversedRows.ContainsKey(parent) == false)); [m
[32m++                ) {[m
[32m++                    distance = (distance + 1);[m
[32m++                    root = parent;[m
[32m++                    traversedRows[parent] = parent;[m
[32m++                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m++                }[m
[32m++[m
[32m++                if ((distance == 0)) {[m
[32m++                    traversedRows.Clear();[m
[32m++                    traversedRows[row] = row;[m
[32m++                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m++                    for ([m
[32m++                    ; ((parent != null) [m
[32m++                                && (traversedRows.ContainsKey(parent) == false)); [m
[32m++                    ) {[m
[32m++                        distance = (distance + 1);[m
[32m++                        root = parent;[m
[32m++                        traversedRows[parent] = parent;[m
[32m++                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m++                    }[m
[32m++                }[m
[32m++[m
[32m++                return root;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[32m++                if (object.ReferenceEquals(row1, row2)) {[m
[32m++                    return 0;[m
[32m++                }[m
[32m++                if ((row1 == null)) {[m
[32m++                    return -1;[m
[32m++                }[m
[32m++                if ((row2 == null)) {[m
[32m++                    return 1;[m
[32m++                }[m
[32m++[m
[32m++                int distance1 = 0;[m
[32m++                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[32m++[m
[32m++                int distance2 = 0;[m
[32m++                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[32m++[m
[32m++                if (object.ReferenceEquals(root1, root2)) {[m
[32m++                    return (this._childFirst * distance1.CompareTo(distance2));[m
[32m++                }[m
[32m++                else {[m
[32m++                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[32m++                                    && (root2.Table != null)));[m
[32m++                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[32m++                        return -1;[m
[32m++                    }[m
[32m++                    else {[m
[32m++                        return 1;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++}[m
[32m++[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  #pragma warning restore 1591[m
[1mdiff --cc capstoneproject/loginformDataSet3.xsd[m
[1mindex 14854bf,a9f3dce..0000000[m
[1m--- a/capstoneproject/loginformDataSet3.xsd[m
[1m+++ b/capstoneproject/loginformDataSet3.xsd[m
[36m@@@ -1,122 -1,122 +1,246 @@@[m
[31m -ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[31m -<xs:schema id="loginformDataSet3" targetNamespace="http://tempuri.org/loginformDataSet3.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet3.xsd" xmlns="http://tempuri.org/loginformDataSet3.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[31m -  <xs:annotation>[m
[31m -    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[31m -      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[31m -        <Connections>[m
[31m -          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[31m -        </Connections>[m
[31m -        <Tables>[m
[31m -          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueDataTableAdapter" GeneratorDataComponentClassName="QueueDataTableAdapter" Name="QueueData" UserDataComponentName="QueueDataTableAdapter">[m
[31m -            <MainSource>[m
[31m -              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[31m -                <DeleteCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)))</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </DeleteCommand>[m
[31m -                <InsertCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [date]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @date);[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </InsertCommand>[m
[31m -                <SelectCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, date FROM dbo.QueueData</CommandText>[m
[31m -                    <Parameters />[m
[31m -                  </DbCommand>[m
[31m -                </SelectCommand>[m
[31m -                <UpdateCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [date] = @date WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)));[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = @id)</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </UpdateCommand>[m
[31m -              </DbSource>[m
[31m -            </MainSource>[m
[31m -            <Mappings>[m
[31m -              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[31m -              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[31m -              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[31m -              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[31m -              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[31m -              <Mapping SourceColumn="date" DataSetColumn="date" />[m
[31m -            </Mappings>[m
[31m -            <Sources />[m
[31m -          </TableAdapter>[m
[31m -        </Tables>[m
[31m -        <Sources />[m
[31m -      </DataSource>[m
[31m -    </xs:appinfo>[m
[31m -  </xs:annotation>[m
[31m -  <xs:element name="loginformDataSet3" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet3" msprop:Generator_UserDSName="loginformDataSet3">[m
[31m -    <xs:complexType>[m
[31m -      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[31m -        <xs:element name="QueueData" msprop:Generator_TableClassName="QueueDataDataTable" msprop:Generator_TableVarName="tableQueueData" msprop:Generator_TablePropName="QueueData" msprop:Generator_RowDeletingName="QueueDataRowDeleting" msprop:Generator_RowChangingName="QueueDataRowChanging" msprop:Generator_RowEvHandlerName="QueueDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueDataRowDeleted" msprop:Generator_UserTableName="QueueData" msprop:Generator_RowChangedName="QueueDataRowChanged" msprop:Generator_RowEvArgName="QueueDataRowChangeEvent" msprop:Generator_RowClassName="QueueDataRow">[m
[31m -          <xs:complexType>[m
[31m -            <xs:sequence>[m
[31m -              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[31m -              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="2147483647" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[31m -              <xs:element name="date" msprop:Generator_ColumnVarNameInTable="columndate" msprop:Generator_ColumnPropNameInRow="date" msprop:Generator_ColumnPropNameInTable="dateColumn" msprop:Generator_UserColumnName="date" type="xs:dateTime" minOccurs="0" />[m
[31m -            </xs:sequence>[m
[31m -          </xs:complexType>[m
[31m -        </xs:element>[m
[31m -      </xs:choice>[m
[31m -    </xs:complexType>[m
[31m -    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[31m -      <xs:selector xpath=".//mstns:QueueData" />[m
[31m -      <xs:field xpath="mstns:id" />[m
[31m -    </xs:unique>[m
[31m -  </xs:element>[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m +<xs:schema id="loginformDataSet3" targetNamespace="http://tempuri.org/loginformDataSet3.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet3.xsd" xmlns="http://tempuri.org/loginformDataSet3.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[32m +  <xs:annotation>[m
[32m +    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m +      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m +        <Connections>[m
[32m +          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[32m +        </Connections>[m
[32m +        <Tables>[m
[32m +          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueDataTableAdapter" GeneratorDataComponentClassName="QueueDataTableAdapter" Name="QueueData" UserDataComponentName="QueueDataTableAdapter">[m
[32m +            <MainSource>[m
[32m +              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[32m +                <DeleteCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)))</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </DeleteCommand>[m
[32m +                <InsertCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [date]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @date);[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </InsertCommand>[m
[32m +                <SelectCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, date FROM dbo.QueueData</CommandText>[m
[32m +                    <Parameters />[m
[32m +                  </DbCommand>[m
[32m +                </SelectCommand>[m
[32m +                <UpdateCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [date] = @date WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)));[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = @id)</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </UpdateCommand>[m
[32m +              </DbSource>[m
[32m +            </MainSource>[m
[32m +            <Mappings>[m
[32m +              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[32m +              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[32m +              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[32m +              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[32m +              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[32m +              <Mapping SourceColumn="date" DataSetColumn="date" />[m
[32m +            </Mappings>[m
[32m +            <Sources />[m
[32m +          </TableAdapter>[m
[32m +        </Tables>[m
[32m +        <Sources />[m
[32m +      </DataSource>[m
[32m +    </xs:appinfo>[m
[32m +  </xs:annotation>[m
[32m +  <xs:element name="loginformDataSet3" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet3" msprop:Generator_UserDSName="loginformDataSet3">[m
[32m +    <xs:complexType>[m
[32m +      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[32m +        <xs:element name="QueueData" msprop:Generator_TableClassName="QueueDataDataTable" msprop:Generator_TableVarName="tableQueueData" msprop:Generator_TablePropName="QueueData" msprop:Generator_RowDeletingName="QueueDataRowDeleting" msprop:Generator_RowChangingName="QueueDataRowChanging" msprop:Generator_RowEvHandlerName="QueueDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueDataRowDeleted" msprop:Generator_UserTableName="QueueData" msprop:Generator_RowChangedName="QueueDataRowChanged" msprop:Generator_RowEvArgName="QueueDataRowChangeEvent" msprop:Generator_RowClassName="QueueDataRow">[m
[32m +          <xs:complexType>[m
[32m +            <xs:sequence>[m
[32m +              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[32m +              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="2147483647" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[32m +              <xs:element name="date" msprop:Generator_ColumnVarNameInTable="columndate" msprop:Generator_ColumnPropNameInRow="date" msprop:Generator_ColumnPropNameInTable="dateColumn" msprop:Generator_UserColumnName="date" type="xs:dateTime" minOccurs="0" />[m
[32m +            </xs:sequence>[m
[32m +          </xs:complexType>[m
[32m +        </xs:element>[m
[32m +      </xs:choice>[m
[32m +    </xs:complexType>[m
[32m +    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[32m +      <xs:selector xpath=".//mstns:QueueData" />[m
[32m +      <xs:field xpath="mstns:id" />[m
[32m +    </xs:unique>[m
[32m +  </xs:element>[m
[32m++=======[m
[32m++ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m++<xs:schema id="loginformDataSet3" targetNamespace="http://tempuri.org/loginformDataSet3.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet3.xsd" xmlns="http://tempuri.org/loginformDataSet3.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[32m++  <xs:annotation>[m
[32m++    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m++      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m++        <Connections>[m
[32m++          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[32m++        </Connections>[m
[32m++        <Tables>[m
[32m++          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueDataTableAdapter" GeneratorDataComponentClassName="QueueDataTableAdapter" Name="QueueData" UserDataComponentName="QueueDataTableAdapter">[m
[32m++            <MainSource>[m
[32m++              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[32m++                <DeleteCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)))</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </DeleteCommand>[m
[32m++                <InsertCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [date]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @date);[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </InsertCommand>[m
[32m++                <SelectCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, date FROM dbo.QueueData</CommandText>[m
[32m++                    <Parameters />[m
[32m++                  </DbCommand>[m
[32m++                </SelectCommand>[m
[32m++                <UpdateCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [date] = @date WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_date = 1 AND [date] IS NULL) OR ([date] = @Original_date)));[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber, date FROM QueueData WHERE (id = @id)</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </UpdateCommand>[m
[32m++              </DbSource>[m
[32m++            </MainSource>[m
[32m++            <Mappings>[m
[32m++              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[32m++              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[32m++              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[32m++              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[32m++              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[32m++              <Mapping SourceColumn="date" DataSetColumn="date" />[m
[32m++            </Mappings>[m
[32m++            <Sources />[m
[32m++          </TableAdapter>[m
[32m++        </Tables>[m
[32m++        <Sources />[m
[32m++      </DataSource>[m
[32m++    </xs:appinfo>[m
[32m++  </xs:annotation>[m
[32m++  <xs:element name="loginformDataSet3" msdata:IsDataSet="true" msdata:UseCuwarning: in the working copy of 'capstoneproject/loginformDataSet4.Designer.cs', LF will be replaced by CRLF the next time Git touches it
rrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet3" msprop:Generator_UserDSName="loginformDataSet3">[m
[32m++    <xs:complexType>[m
[32m++      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[32m++        <xs:element name="QueueData" msprop:Generator_TableClassName="QueueDataDataTable" msprop:Generator_TableVarName="tableQueueData" msprop:Generator_TablePropName="QueueData" msprop:Generator_RowDeletingName="QueueDataRowDeleting" msprop:Generator_RowChangingName="QueueDataRowChanging" msprop:Generator_RowEvHandlerName="QueueDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueDataRowDeleted" msprop:Generator_UserTableName="QueueData" msprop:Generator_RowChangedName="QueueDataRowChanged" msprop:Generator_RowEvArgName="QueueDataRowChangeEvent" msprop:Generator_RowClassName="QueueDataRow">[m
[32m++          <xs:complexType>[m
[32m++            <xs:sequence>[m
[32m++              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[32m++              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="2147483647" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[32m++              <xs:element name="date" msprop:Generator_ColumnVarNameInTable="columndate" msprop:Generator_ColumnPropNameInRow="date" msprop:Generator_ColumnPropNameInTable="dateColumn" msprop:Generator_UserColumnName="date" type="xs:dateTime" minOccurs="0" />[m
[32m++            </xs:sequence>[m
[32m++          </xs:complexType>[m
[32m++        </xs:element>[m
[32m++      </xs:choice>[m
[32m++    </xs:complexType>[m
[32m++    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[32m++      <xs:selector xpath=".//mstns:QueueData" />[m
[32m++      <xs:field xpath="mstns:id" />[m
[32m++    </xs:unique>[m
[32m++  </xs:element>[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  </xs:schema>[m
[1mdiff --cc capstoneproject/loginformDataSet4.Designer.cs[m
[1mindex 0f1b803,eb07eac..0000000[m
[1m--- a/capstoneproject/loginformDataSet4.Designer.cs[m
[1m+++ b/capstoneproject/loginformDataSet4.Designer.cs[m
[36m@@@ -1,1582 -1,1582 +1,3166 @@@[m
[31m -ï»¿//------------------------------------------------------------------------------[m
[31m -// <auto-generated>[m
[31m -//     This code was generated by a tool.[m
[31m -//     Runtime Version:4.0.30319.42000[m
[31m -//[m
[31m -//     Changes to this file may cause incorrect behavior and will be lost if[m
[31m -//     the code is regenerated.[m
[31m -// </auto-generated>[m
[31m -//------------------------------------------------------------------------------[m
[31m -[m
[31m -#pragma warning disable 1591[m
[31m -[m
[31m -namespace capstoneproject {[m
[31m -    [m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///Represents a strongly typed in-memory cache of data.[m
[31m -    ///</summary>[m
[31m -    [global::System.Serializable()][m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[31m -    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet4")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[31m -    public partial class loginformDataSet4 : global::System.Data.DataSet {[m
[31m -        [m
[31m -        private QueueDataDataTable tableQueueData;[m
[31m -        [m
[31m -        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public loginformDataSet4() {[m
[31m -            this.BeginInit();[m
[31m -            this.InitClass();[m
[31m -            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -            base.Tables.CollectionChanged += schemaChangedHandler;[m
[31m -            base.Relations.CollectionChanged += schemaChangedHandler;[m
[31m -            this.EndInit();[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected loginformDataSet4(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[31m -                base(info, context, false) {[m
[31m -            if ((this.IsBinarySerialized(info, context) == true)) {[m
[31m -                this.InitVars(false);[m
[31m -                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[31m -                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[31m -                return;[m
[31m -            }[m
[31m -            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[31m -            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[31m -                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[31m -                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[31m -                if ((ds.Tables["QueueData"] != null)) {[m
[31m -                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[31m -                }[m
[31m -                this.DataSetName = ds.DataSetName;[m
[31m -                this.Prefix = ds.Prefix;[m
[31m -                this.Namespace = ds.Namespace;[m
[31m -                this.Locale = ds.Locale;[m
[31m -                this.CaseSensitive = ds.CaseSensitive;[m
[31m -                this.EnforceConstraints = ds.EnforceConstraints;[m
[31m -                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            else {[m
[31m -                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[31m -            }[m
[31m -            this.GetSerializationData(info, context);[m
[31m -            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -            base.Tables.CollectionChanged += schemaChangedHandler;[m
[31m -            this.Relations.CollectionChanged += schemaChangedHandler;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[31m -        public QueueDataDataTable QueueData {[m
[31m -            get {[m
[31m -                return this.tableQueueData;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.BrowsableAttribute(true)][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[31m -        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[31m -            get {[m
[31m -                return this._schemaSerializationMode;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._schemaSerializationMode = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[31m -        public new global::System.Data.DataTableCollection Tables {[m
[31m -            get {[m
[31m -                return base.Tables;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[31m -        public new global::System.Data.DataRelationCollection Relations {[m
[31m -            get {[m
[31m -                return base.Relations;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override void InitializeDerivedDataSet() {[m
[31m -            this.BeginInit();[m
[31m -            this.InitClass();[m
[31m -            this.EndInit();[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public override global::System.Data.DataSet Clone() {[m
[31m -            loginformDataSet4 cln = ((loginformDataSet4)(base.Clone()));[m
[31m -            cln.InitVars();[m
[31m -            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[31m -            return cln;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override bool ShouldSerializeTables() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override bool ShouldSerializeRelations() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[31m -            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[31m -                this.Reset();[m
[31m -                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[31m -                ds.ReadXml(reader);[m
[31m -                if ((ds.Tables["QueueData"] != null)) {[m
[31m -                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[31m -                }[m
[31m -                this.DataSetName = ds.DataSetName;[m
[31m -                this.Prefix = ds.Prefix;[m
[31m -                this.Namespace = ds.Namespace;[m
[31m -                this.Locale = ds.Locale;[m
[31m -                this.CaseSensitive = ds.CaseSensitive;[m
[31m -                this.EnforceConstraints = ds.EnforceConstraints;[m
[31m -                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            else {[m
[31m -                this.ReadXml(reader);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[31m -            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[31m -            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[31m -            stream.Position = 0;[m
[31m -            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal void InitVars() {[m
[31m -            this.InitVars(true);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal void InitVars(bool initTable) {[m
[31m -            this.tableQueueData = ((QueueDataDataTable)(base.Tables["QueueData"]));[m
[31m -            if ((initTable == true)) {[m
[31m -                if ((this.tableQueueData != null)) {[m
[31m -                    this.tableQueueData.InitVars();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitClass() {[m
[31m -            this.DataSetName = "loginformDataSet4";[m
[31m -            this.Prefix = "";[m
[31m -            this.Namespace = "http://tempuri.org/loginformDataSet4.xsd";[m
[31m -            this.EnforceConstraints = true;[m
[31m -            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -            this.tableQueueData = new QueueDataDataTable();[m
[31m -            base.Tables.Add(this.tableQueueData);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private bool ShouldSerializeQueueData() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[31m -            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[31m -            loginformDataSet4 ds = new loginformDataSet4();[m
[31m -            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[31m -            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[31m -            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -            any.Namespace = ds.Namespace;[m
[31m -            sequence.Items.Add(any);[m
[31m -            type.Particle = sequence;[m
[31m -            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[31m -            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[31m -                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[31m -                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[31m -                try {[m
[31m -                    global::System.Xml.Schema.XmlSchema schema = null;[m
[31m -                    dsSchema.Write(s1);[m
[31m -                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[31m -                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[31m -                        s2.SetLength(0);[m
[31m -                        schema.Write(s2);[m
[31m -                        if ((s1.Length == s2.Length)) {[m
[31m -                            s1.Position = 0;[m
[31m -                            s2.Position = 0;[m
[31m -                            for (; ((s1.Position != s1.Length) [m
[31m -                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[31m -                                ;[m
[31m -                            }[m
[31m -                            if ((s1.Position == s1.Length)) {[m
[31m -                                return type;[m
[31m -                            }[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                finally {[m
[31m -                    if ((s1 != null)) {[m
[31m -                        s1.Close();[m
[31m -                    }[m
[31m -                    if ((s2 != null)) {[m
[31m -                        s2.Close();[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            xs.Add(dsSchema);[m
[31m -            return type;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public delegate void QueueDataRowChangeEventHandler(object sender, QueueDataRowChangeEvent e);[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Represents the strongly named DataTable class.[m
[31m -        ///</summary>[m
[31m -        [global::System.Serializable()][m
[31m -        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[31m -        public partial class QueueDataDataTable : global::System.Data.TypedTableBase<QueueDataRow> {[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnid;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnName;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnDepartment;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnPurpose;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnQueueNumber;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnQueueDate;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataDataTable() {[m
[31m -                this.TableName = "QueueData";[m
[31m -                this.BeginInit();[m
[31m -                this.InitClass();[m
[31m -                this.EndInit();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal QueueDataDataTable(global::System.Data.DataTable table) {[m
[31m -                this.TableName = table.TableName;[m
[31m -                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[31m -                    this.CaseSensitive = table.CaseSensitive;[m
[31m -                }[m
[31m -                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[31m -                    this.Locale = table.Locale;[m
[31m -                }[m
[31m -                if ((table.Namespace != table.DataSet.Namespace)) {[m
[31m -                    this.Namespace = table.Namespace;[m
[31m -                }[m
[31m -                this.Prefix = table.Prefix;[m
[31m -                this.MinimumCapacity = table.MinimumCapacity;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected QueueDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[31m -                    base(info, context) {[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn idColumn {[m
[31m -                get {[m
[31m -                    return this.columnid;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn NameColumn {[m
[31m -                get {[m
[31m -                    return this.columnName;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn DepartmentColumn {[m
[31m -                get {[m
[31m -                    return this.columnDepartment;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn PurposeColumn {[m
[31m -                get {[m
[31m -                    return this.columnPurpose;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn QueueNumberColumn {[m
[31m -                get {[m
[31m -                    return this.columnQueueNumber;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn QueueDateColumn {[m
[31m -                get {[m
[31m -                    return this.columnQueueDate;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            [global::System.ComponentModel.Browsable(false)][m
[31m -            public int Count {[m
[31m -                get {[m
[31m -                    return this.Rows.Count;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow this[int index] {[m
[31m -                get {[m
[31m -                    return ((QueueDataRow)(this.Rows[index]));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowChanging;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowChanged;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowDeleting;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueDataRowChangeEventHandler QueueDataRowDeleted;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void AddQueueDataRow(QueueDataRow row) {[m
[31m -                this.Rows.Add(row);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow AddQueueDataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate) {[m
[31m -                QueueDataRow rowQueueDataRow = ((QueueDataRow)(this.NewRow()));[m
[31m -                object[] columnValuesArray = new object[] {[m
[31m -                        null,[m
[31m -                        Name,[m
[31m -                        Department,[m
[31m -                        Purpose,[m
[31m -                        QueueNumber,[m
[31m -                        QueueDate};[m
[31m -                rowQueueDataRow.ItemArray = columnValuesArray;[m
[31m -                this.Rows.Add(rowQueueDataRow);[m
[31m -                return rowQueueDataRow;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow FindByid(int id) {[m
[31m -                return ((QueueDataRow)(this.Rows.Find(new object[] {[m
[31m -                            id})));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public override global::System.Data.DataTable Clone() {[m
[31m -                QueueDataDataTable cln = ((QueueDataDataTable)(base.Clone()));[m
[31m -                cln.InitVars();[m
[31m -                return cln;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Data.DataTable CreateInstance() {[m
[31m -                return new QueueDataDataTable();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal void InitVars() {[m
[31m -                this.columnid = base.Columns["id"];[m
[31m -                this.columnName = base.Columns["Name"];[m
[31m -                this.columnDepartment = base.Columns["Department"];[m
[31m -                this.columnPurpose = base.Columns["Purpose"];[m
[31m -                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[31m -                this.columnQueueDate = base.Columns["QueueDate"];[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            private void InitClass() {[m
[31m -                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnid);[m
[31m -                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnName);[m
[31m -                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnDepartment);[m
[31m -                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnPurpose);[m
[31m -                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnQueueNumber);[m
[31m -                this.columnQueueDate = new global::System.Data.DataColumn("QueueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnQueueDate);[m
[31m -                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[31m -                                this.columnid}, true));[m
[31m -                this.columnid.AutoIncrement = true;[m
[31m -                this.columnid.AutoIncrementSeed = -1;[m
[31m -                this.columnid.AutoIncrementStep = -1;[m
[31m -                this.columnid.AllowDBNull = false;[m
[31m -                this.columnid.ReadOnly = true;[m
[31m -                this.columnid.Unique = true;[m
[31m -                this.columnName.AllowDBNull = false;[m
[31m -                this.columnName.MaxLength = 50;[m
[31m -                this.columnDepartment.AllowDBNull = false;[m
[31m -                this.columnDepartment.MaxLength = 50;[m
[31m -                this.columnPurpose.AllowDBNull = false;[m
[31m -                this.columnPurpose.MaxLength = 2147483647;[m
[31m -                this.columnQueueNumber.AllowDBNull = false;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow NewQueueDataRow() {[m
[31m -                return ((QueueDataRow)(this.NewRow()));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[31m -                return new QueueDataRow(builder);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Type GetRowType() {[m
[31m -                return typeof(QueueDataRow);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowChanged(e);[m
[31m -                if ((this.QueueDataRowChanged != null)) {[m
[31m -                    this.QueueDataRowChanged(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowChanging(e);[m
[31m -                if ((this.QueueDataRowChanging != null)) {[m
[31m -                    this.QueueDataRowChanging(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowDeleted(e);[m
[31m -                if ((this.QueueDataRowDeleted != null)) {[m
[31m -                    this.QueueDataRowDeleted(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowDeleting(e);[m
[31m -                if ((this.QueueDataRowDeleting != null)) {[m
[31m -                    this.QueueDataRowDeleting(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void RemoveQueueDataRow(QueueDataRow row) {[m
[31m -                this.Rows.Remove(row);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[31m -                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[31m -                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[31m -                loginformDataSet4 ds = new loginformDataSet4();[m
[31m -                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[31m -                any1.MinOccurs = new decimal(0);[m
[31m -                any1.MaxOccurs = decimal.MaxValue;[m
[31m -                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[31m -                sequence.Items.Add(any1);[m
[31m -                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[31m -                any2.MinOccurs = new decimal(1);[m
[31m -                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[31m -                sequence.Items.Add(any2);[m
[31m -                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[31m -                attribute1.Name = "namespace";[m
[31m -                attribute1.FixedValue = ds.Namespace;[m
[31m -                type.Attributes.Add(attribute1);[m
[31m -                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[31m -                attribute2.Name = "tableTypeName";[m
[31m -                attribute2.FixedValue = "QueueDataDataTable";[m
[31m -                type.Attributes.Add(attribute2);[m
[31m -                type.Particle = sequence;[m
[31m -                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[31m -                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[31m -                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[31m -                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[31m -                    try {[m
[31m -                        global::System.Xml.Schema.XmlSchema schema = null;[m
[31m -                        dsSchema.Write(s1);[m
[31m -                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[31m -                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[31m -                            s2.SetLength(0);[m
[31m -                            schema.Write(s2);[m
[31m -                            if ((s1.Length == s2.Length)) {[m
[31m -                                s1.Position = 0;[m
[31m -                                s2.Position = 0;[m
[31m -                                for (; ((s1.Position != s1.Length) [m
[31m -                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[31m -                                    ;[m
[31m -                                }[m
[31m -                                if ((s1.Position == s1.Length)) {[m
[31m -                                    return type;[m
[31m -                                }[m
[31m -                            }[m
[31m -                        }[m
[31m -                    }[m
[31m -                    finally {[m
[31m -                        if ((s1 != null)) {[m
[31m -                            s1.Close();[m
[31m -                        }[m
[31m -                        if ((s2 != null)) {[m
[31m -                            s2.Close();[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                xs.Add(dsSchema);[m
[31m -                return type;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Represents strongly named DataRow class.[m
[31m -        ///</summary>[m
[31m -        public partial class QueueDataRow : global::System.Data.DataRow {[m
[31m -            [m
[31m -            private QueueDataDataTable tableQueueData;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal QueueDataRow(global::System.Data.DataRowBuilder rb) : [m
[31m -                    base(rb) {[m
[31m -                this.tableQueueData = ((QueueDataDataTable)(this.Table));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int id {[m
[31m -                get {[m
[31m -                    return ((int)(this[this.tableQueueData.idColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.idColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Name {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueData.NameColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.NameColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Department {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueData.DepartmentColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.DepartmentColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Purpose {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueData.PurposeColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.PurposeColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int QueueNumber {[m
[31m -                get {[m
[31m -                    return ((int)(this[this.tableQueueData.QueueNumberColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.QueueNumberColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public System.DateTime QueueDate {[m
[31m -                get {[m
[31m -                    try {[m
[31m -                        return ((global::System.DateTime)(this[this.tableQueueData.QueueDateColumn]));[m
[31m -                    }[m
[31m -                    catch (global::System.InvalidCastException e) {[m
[31m -                        throw new global::System.Data.StrongTypingException("The value for column \'QueueDate\' in table \'QueueData\' is DBNull.", e);[m
[31m -                    }[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueData.QueueDateColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public bool IsQueueDateNull() {[m
[31m -                return this.IsNull(this.tableQueueData.QueueDateColumn);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void SetQueueDateNull() {[m
[31m -                this[this.tableQueueData.QueueDateColumn] = global::System.Convert.DBNull;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Row event argument class[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public class QueueDataRowChangeEvent : global::System.EventArgs {[m
[31m -            [m
[31m -            private QueueDataRow eventRow;[m
[31m -            [m
[31m -            private global::System.Data.DataRowAction eventAction;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRowChangeEvent(QueueDataRow row, global::System.Data.DataRowAction action) {[m
[31m -                this.eventRow = row;[m
[31m -                this.eventAction = action;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueDataRow Row {[m
[31m -                get {[m
[31m -                    return this.eventRow;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataRowAction Action {[m
[31m -                get {[m
[31m -                    return this.eventAction;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -}[m
[31m -namespace capstoneproject.loginformDataSet4TableAdapters {[m
[31m -    [m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///Represents the connection and commands used to retrieve and save data.[m
[31m -    ///</summary>[m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.ComponentModel.DataObjectAttribute(true)][m
[31m -    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[31m -        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -    public partial class QueueDataTableAdapter : global::System.ComponentModel.Component {[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlConnection _connection;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[31m -        [m
[31m -        private bool _clearBeforeFill;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public QueueDataTableAdapter() {[m
[31m -            this.ClearBeforeFill = true;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[31m -            get {[m
[31m -                if ((this._adapter == null)) {[m
[31m -                    this.InitAdapter();[m
[31m -                }[m
[31m -                return this._adapter;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[31m -            get {[m
[31m -                if ((this._connection == null)) {[m
[31m -                    this.InitConnection();[m
[31m -                }[m
[31m -                return this._connection;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._connection = value;[m
[31m -                if ((this.Adapter.InsertCommand != null)) {[m
[31m -                    this.Adapter.InsertCommand.Connection = value;[m
[31m -                }[m
[31m -                if ((this.Adapter.DeleteCommand != null)) {[m
[31m -                    this.Adapter.DeleteCommand.Connection = value;[m
[31m -                }[m
[31m -                if ((this.Adapter.UpdateCommand != null)) {[m
[31m -                    this.Adapter.UpdateCommand.Connection = value;[m
[31m -                }[m
[31m -                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[31m -                    if ((this.CommandCollection[i] != null)) {[m
[31m -                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[31m -            get {[m
[31m -                return this._transaction;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._transaction = value;[m
[31m -                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[31m -                    this.CommandCollection[i].Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.DeleteCommand != null))) {[m
[31m -                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.InsertCommand != null))) {[m
[31m -                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.UpdateCommand != null))) {[m
[31m -                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[31m -            get {[m
[31m -                if ((this._commandCollection == null)) {[m
[31m -                    this.InitCommandCollection();[m
[31m -                }[m
[31m -                return this._commandCollection;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public bool ClearBeforeFill {[m
[31m -            get {[m
[31m -                return this._clearBeforeFill;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._clearBeforeFill = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitAdapter() {[m
[31m -            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[31m -            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[31m -            tableMapping.SourceTable = "Table";[m
[31m -            tableMapping.DataSetTable = "QueueData";[m
[31m -            tableMapping.ColumnMappings.Add("id", "id");[m
[31m -            tableMapping.ColumnMappings.Add("Name", "Name");[m
[31m -            tableMapping.ColumnMappings.Add("Department", "Department");[m
[31m -            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[31m -            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[31m -            tableMapping.ColumnMappings.Add("QueueDate", "QueueDate");[m
[31m -            this._adapter.TableMappings.Add(tableMapping);[m
[31m -            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.DeleteCommand.Connection = this.Connection;[m
[31m -            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_QueueDate = 1 AND [QueueDate] IS NULL) OR ([QueueDate] = @Original_QueueDate)))";[m
[31m -            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QueueDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.InsertCommand.Connection = this.Connection;[m
[31m -            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate);[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM QueueData WHERE (id = SCOPE_IDENTITY())";[m
[31m -            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.UpdateCommand.Connection = this.Connection;[m
[31m -            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [QueueDate] = @QueueDate WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_QueueDate = 1 AND [QueueDate] IS NULL) OR ([QueueDate] = @Original_QueueDate)));[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM QueueData WHERE (id = @id)";[m
[31m -            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QueueDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitConnection() {[m
[31m -            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[31m -            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitCommandCollection() {[m
[31m -            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[31m -            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._commandCollection[0].Connection = this.Connection;[m
[31m -            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM dbo.QueueData";[m
[31m -            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[31m -        public virtual int Fill(loginformDataSet4.QueueDataDataTable dataTable) {[m
[31m -            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[31m -            if ((this.ClearBeforeFill == true)) {[m
[31m -                dataTable.Clear();[m
[31m -            }[m
[31m -            int returnValue = this.Adapter.Fill(dataTable);[m
[31m -            return returnValue;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[31m -        public virtual loginformDataSet4.QueueDataDataTable GetData() {[m
[31m -            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[31m -            loginformDataSet4.QueueDataDataTable dataTable = new loginformDataSet4.QueueDataDataTable();[m
[31m -            this.Adapter.Fill(dataTable);[m
[31m -            return dataTable;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(loginformDataSet4.QueueDataDataTable dataTable) {[m
[31m -            return this.Adapter.Update(dataTable);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(loginformDataSet4 dataSet) {[m
[31m -            return this.Adapter.Update(dataSet, "QueueData");[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[31m -            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[31m -                        dataRow});[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[31m -            return this.Adapter.Update(dataRows);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[31m -        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_QueueDate) {[m
[31m -            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[31m -            if ((Original_Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[31m -            }[m
[31m -            if ((Original_Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[31m -            }[m
[31m -            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[31m -            if ((Original_QueueDate.HasValue == true)) {[m
[31m -                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));[m
[31m -                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_QueueDate.Value));[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));[m
[31m -                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;[m
[31m -            }[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[31m -            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.DeleteCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.DeleteCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[31m -        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> QueueDate) {[m
[31m -            if ((Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[31m -            }[m
[31m -            if ((Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[31m -            }[m
[31m -            if ((Purpose == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Purpose");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[31m -            }[m
[31m -            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[31m -            if ((QueueDate.HasValue == true)) {[m
[31m -                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(QueueDate.Value));[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[31m -            }[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[31m -            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.InsertCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.InsertCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[31m -        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> QueueDate, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_QueueDate, int id) {[m
[31m -            if ((Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[31m -            }[m
[31m -            if ((Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[31m -            }[m
[31m -            if ((Purpose == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Purpose");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[31m -            if ((QueueDate.HasValue == true)) {[m
[31m -                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(QueueDate.Value));[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));[m
[31m -            if ((Original_Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));[m
[31m -            }[m
[31m -            if ((Original_Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Department));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_QueueNumber));[m
[31m -            if ((Original_QueueDate.HasValue == true)) {[m
[31m -                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));[m
[31m -                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_QueueDate.Value));[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));[m
[31m -                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(id));[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[31m -            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.UpdateCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.UpdateCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[31m -        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> QueueDate, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_QueueDate) {[m
[31m -            return this.Update(Name, Department, Purpose, QueueNumber, QueueDate, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_QueueDate, Original_id);[m
[31m -        }[m
[31m -    }[m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[31m -    ///</summary>[m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[31m -        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[31m -    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[31m -        [m
[31m -        private UpdateOrderOption _updateOrder;[m
[31m -        [m
[31m -        private QueueDataTableAdapter _queueDataTableAdapter;[m
[31m -        [m
[31m -        private bool _backupDataSetBeforeUpdate;[m
[31m -        [m
[31m -        private global::System.Data.IDbConnection _connection;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public UpdateOrderOption UpdateOrder {[m
[31m -            get {[m
[31m -                return this._updateOrder;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._updateOrder = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[31m -            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[31m -            "a", "System.Drawing.Design.UITypeEditor")][m
[31m -        public QueueDataTableAdapter QueueDataTableAdapter {[m
[31m -            get {[m
[31m -                return this._queueDataTableAdapter;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._queueDataTableAdapter = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public bool BackupDataSetBeforeUpdate {[m
[31m -            get {[m
[31m -                return this._backupDataSetBeforeUpdate;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._backupDataSetBeforeUpdate = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        public global::System.Data.IDbConnection Connection {[m
[31m -            get {[m
[31m -                if ((this._connection != null)) {[m
[31m -                    return this._connection;[m
[31m -                }[m
[31m -                if (((this._queueDataTableAdapter != null) [m
[31m -                            && (this._queueDataTableAdapter.Connection != null))) {[m
[31m -                    return this._queueDataTableAdapter.Connection;[m
[31m -                }[m
[31m -                return null;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._connection = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        public int TableAdapterInstanceCount {[m
[31m -            get {[m
[31m -                int count = 0;[m
[31m -                if ((this._queueDataTableAdapter != null)) {[m
[31m -                    count = (count + 1);[m
[31m -                }[m
[31m -                return count;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update rows in top-down order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateUpdatedRows(loginformDataSet4 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] updatedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[31m -                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[31m -                if (((updatedRows != null) [m
[31m -                            && (0 < updatedRows.Length))) {[m
[31m -                    result = (result + this._queueDataTableAdapter.Update(updatedRows));[m
[31m -                    allChangedRows.AddRange(updatedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Insert rows in top-down order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateInsertedRows(loginformDataSet4 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] addedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[31m -                if (((addedRows != null) [m
[31m -                            && (0 < addedRows.Length))) {[m
[31m -                    result = (result + this._queueDataTableAdapter.Update(addedRows));[m
[31m -                    allAddedRows.AddRange(addedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Delete rows in bottom-up order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateDeletedRows(loginformDataSet4 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] deletedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[31m -                if (((deletedRows != null) [m
[31m -                            && (0 < deletedRows.Length))) {[m
[31m -                    result = (result + this._queueDataTableAdapter.Update(deletedRows));[m
[31m -                    allChangedRows.AddRange(deletedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            if (((updatedRows == null) [m
[31m -                        || (updatedRows.Length < 1))) {[m
[31m -                return updatedRows;[m
[31m -            }[m
[31m -            if (((allAddedRows == null) [m
[31m -                        || (allAddedRows.Count < 1))) {[m
[31m -                return updatedRows;[m
[31m -            }[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[31m -                global::System.Data.DataRow row = updatedRows[i];[m
[31m -                if ((allAddedRows.Contains(row) == false)) {[m
[31m -                    realUpdatedRows.Add(row);[m
[31m -                }[m
[31m -            }[m
[31m -            return realUpdatedRows.ToArray();[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update all changes to the dataset.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public virtual int UpdateAll(loginformDataSet4 dataSet) {[m
[31m -            if ((dataSet == null)) {[m
[31m -                throw new global::System.ArgumentNullException("dataSet");[m
[31m -            }[m
[31m -            if ((dataSet.HasChanges() == false)) {[m
[31m -                return 0;[m
[31m -            }[m
[31m -            if (((this._queueDataTableAdapter != null) [m
[31m -                        && (this.MatchTableAdapterConnection(this._queueDataTableAdapter.Connection) == false))) {[m
[31m -                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[31m -                        "tring.");[m
[31m -            }[m
[31m -            global::System.Data.IDbConnection workConnection = this.Connection;[m
[31m -            if ((workConnection == null)) {[m
[31m -                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[31m -                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[31m -            }[m
[31m -            bool workConnOpened = false;[m
[31m -            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[31m -                        == global::System.Data.ConnectionState.Broken)) {[m
[31m -                workConnection.Close();[m
[31m -            }[m
[31m -            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[31m -                workConnection.Open();[m
[31m -                workConnOpened = true;[m
[31m -            }[m
[31m -            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[31m -            if ((workTransaction == null)) {[m
[31m -                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[31m -                        "ctions or the current state is not allowing the transaction to begin.");[m
[31m -            }[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[31m -            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[31m -            int result = 0;[m
[31m -            global::System.Data.DataSet backupDataSet = null;[m
[31m -            if (this.BackupDataSetBeforeUpdate) {[m
[31m -                backupDataSet = new global::System.Data.DataSet();[m
[31m -                backupDataSet.Merge(dataSet);[m
[31m -            }[m
[31m -            try {[m
[31m -                // ---- Prepare for update -----------[m
[31m -                //[m
[31m -                if ((this._queueDataTableAdapter != null)) {[m
[31m -                    revertConnections.Add(this._queueDataTableAdapter, this._queueDataTableAdapter.Connection);[m
[31m -                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[31m -                    this._queueDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[31m -                    if (this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[31m -                        this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[31m -                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueDataTableAdapter.Adapter);[m
[31m -                    }[m
[31m -                }[m
[31m -                // [m
[31m -                //---- Perform updates -----------[m
[31m -                //[m
[31m -                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[31m -                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[31m -                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[31m -                }[m
[31m -                else {[m
[31m -                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[31m -                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[31m -                }[m
[31m -                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[31m -                // [m
[31m -                //---- Commit updates -----------[m
[31m -                //[m
[31m -                workTransaction.Commit();[m
[31m -                if ((0 < allAddedRows.Count)) {[m
[31m -                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[31m -                    allAddedRows.CopyTo(rows);[m
[31m -                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.DataRow row = rows[i];[m
[31m -                        row.AcceptChanges();[m
[31m -                    }[m
[31m -                }[m
[31m -                if ((0 < allChangedRows.Count)) {[m
[31m -                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[31m -                    allChangedRows.CopyTo(rows);[m
[31m -                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.DataRow row = rows[i];[m
[31m -                        row.AcceptChanges();[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            catch (global::System.Exception ex) {[m
[31m -                workTransaction.Rollback();[m
[31m -                // ---- Restore the dataset -----------[m
[31m -                if (this.BackupDataSetBeforeUpdate) {[m
[31m -                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[31m -                    dataSet.Clear();[m
[31m -                    dataSet.Merge(backupDataSet);[m
[31m -                }[m
[31m -                else {[m
[31m -                    if ((0 < allAddedRows.Count)) {[m
[31m -                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[31m -                        allAddedRows.CopyTo(rows);[m
[31m -                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                            global::System.Data.DataRow row = rows[i];[m
[31m -                            row.AcceptChanges();[m
[31m -                            row.SetAdded();[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                throw ex;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if (workConnOpened) {[m
[31m -                    workConnection.Close();[m
[31m -                }[m
[31m -                if ((this._queueDataTableAdapter != null)) {[m
[31m -                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueDataTableAdapter]));[m
[31m -                    this._queueDataTableAdapter.Transaction = null;[m
[31m -                }[m
[31m -                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[31m -                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[31m -                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[31m -                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[31m -                        adapter.AcceptChangesDuringUpdate = true;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[31m -            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[31m -            if ((this._connection != null)) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            if (((this.Connection == null) [m
[31m -                        || (inputConnection == null))) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update Order Option[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public enum UpdateOrderOption {[m
[31m -            [m
[31m -            InsertUpdateDelete = 0,[m
[31m -            [m
[31m -            UpdateInsertDelete = 1,[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Used to sort self-referenced table's rows[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[31m -            [m
[31m -            private global::System.Data.DataRelation _relation;[m
[31m -            [m
[31m -            private int _childFirst;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[31m -                this._relation = relation;[m
[31m -                if (childFirst) {[m
[31m -                    this._childFirst = -1;[m
[31m -                }[m
[31m -                else {[m
[31m -                    this._childFirst = 1;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[31m -                global::System.Diagnostics.Debug.Assert((row != null));[m
[31m -                global::System.Data.DataRow root = row;[m
[31m -                distance = 0;[m
[31m -[m
[31m -                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[31m -                traversedRows[row] = row;[m
[31m -[m
[31m -                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[31m -                for ([m
[31m -                ; ((parent != null) [m
[31m -                            && (traversedRows.ContainsKey(parent) == false)); [m
[31m -                ) {[m
[31m -                    distance = (distance + 1);[m
[31m -                    root = parent;[m
[31m -                    traversedRows[parent] = parent;[m
[31m -                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[31m -                }[m
[31m -[m
[31m -                if ((distance == 0)) {[m
[31m -                    traversedRows.Clear();[m
[31m -                    traversedRows[row] = row;[m
[31m -                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[31m -                    for ([m
[31m -                    ; ((parent != null) [m
[31m -                                && (traversedRows.ContainsKey(parent) == false)); [m
[31m -                    ) {[m
[31m -                        distance = (distance + 1);[m
[31m -                        root = parent;[m
[31m -                        traversedRows[parent] = parent;[m
[31m -                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[31m -                    }[m
[31m -                }[m
[31m -[m
[31m -                return root;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[31m -                if (object.ReferenceEquals(row1, row2)) {[m
[31m -                    return 0;[m
[31m -                }[m
[31m -                if ((row1 == null)) {[m
[31m -                    return -1;[m
[31m -                }[m
[31m -                if ((row2 == null)) {[m
[31m -                    return 1;[m
[31m -                }[m
[31m -[m
[31m -                int distance1 = 0;[m
[31m -                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[31m -[m
[31m -                int distance2 = 0;[m
[31m -                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[31m -[m
[31m -                if (object.ReferenceEquals(root1, root2)) {[m
[31m -                    return (this._childFirst * distance1.CompareTo(distance2));[m
[31m -                }[m
[31m -                else {[m
[31m -                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[31m -                                    && (root2.Table != null)));[m
[31m -                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[31m -                        return -1;[m
[31m -                    }[m
[31m -                    else {[m
[31m -                        return 1;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -}[m
[31m -[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿//------------------------------------------------------------------------------[m
[32m +// <auto-generated>[m
[32m +//     This code was generated by a tool.[m
[32m +//     Runtime Version:4.0.30319.42000[m
[32m +//[m
[32m +//     Changes to this file may cause incorrect behavior and will be lost if[m
[32m +//     the code is regenerated.[m
[32m +// </auto-generated>[m
[32m +//------------------------------------------------------------------------------[m
[32m +[m
[32m +#pragma warning disable 1591[m
[32m +[m
[32m +namespace capstoneproject {[m
[32m +    [m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///Represents a strongly typed in-memory cache of data.[m
[32m +    ///</summary>[m
[32m +    [global::System.Serializable()][m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[32m +    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet4")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[32m +    public partial class loginformDataSet4 : global::System.Data.DataSet {[m
[32m +        [m
[32m +        private QueueDataDataTable tableQueueData;[m
[32m +        [m
[32m +        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public loginformDataSet4() {[m
[32m +            this.BeginInit();[m
[32m +            this.InitClass();[m
[32m +            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m +            base.Relations.CollectionChanged += schemaChangedHandler;[m
[32m +            this.EndInit();[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected loginformDataSet4(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m +                base(info, context, false) {[m
[32m +            if ((this.IsBinarySerialized(info, context) == true)) {[m
[32m +                this.InitVars(false);[m
[32m +                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[32m +                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[32m +                return;[m
[32m +            }[m
[32m +            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[32m +            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m +                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m +                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m +                if ((ds.Tables["QueueData"] != null)) {[m
[32m +                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m +                }[m
[32m +                this.DataSetName = ds.DataSetName;[m
[32m +                this.Prefix = ds.Prefix;[m
[32m +                this.Namespace = ds.Namespace;[m
[32m +                this.Locale = ds.Locale;[m
[32m +                this.CaseSensitive = ds.CaseSensitive;[m
[32m +                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m +                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            else {[m
[32m +                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m +            }[m
[32m +            this.GetSerializationData(info, context);[m
[32m +            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m +            this.Relations.CollectionChanged += schemaChangedHandler;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[32m +        public QueueDataDataTable QueueData {[m
[32m +            get {[m
[32m +                return this.tableQueueData;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.BrowsableAttribute(true)][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[32m +        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[32m +            get {[m
[32m +                return this._schemaSerializationMode;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._schemaSerializationMode = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m +        public new global::System.Data.DataTableCollection Tables {[m
[32m +            get {[m
[32m +                return base.Tables;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m +        public new global::System.Data.DataRelationCollection Relations {[m
[32m +            get {[m
[32m +                return base.Relations;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override void InitializeDerivedDataSet() {[m
[32m +            this.BeginInit();[m
[32m +            this.InitClass();[m
[32m +            this.EndInit();[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public override global::System.Data.DataSet Clone() {[m
[32m +            loginformDataSet4 cln = ((loginformDataSet4)(base.Clone()));[m
[32m +            cln.InitVars();[m
[32m +            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[32m +            return cln;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override bool ShouldSerializeTables() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override bool ShouldSerializeRelations() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[32m +            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m +                this.Reset();[m
[32m +                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m +                ds.ReadXml(reader);[m
[32m +                if ((ds.Tables["QueueData"] != null)) {[m
[32m +                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m +                }[m
[32m +                this.DataSetName = ds.DataSetName;[m
[32m +                this.Prefix = ds.Prefix;[m
[32m +                this.Namespace = ds.Namespace;[m
[32m +                this.Locale = ds.Locale;[m
[32m +                this.CaseSensitive = ds.CaseSensitive;[m
[32m +                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m +                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            else {[m
[32m +                this.ReadXml(reader);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[32m +            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[32m +            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[32m +            stream.Position = 0;[m
[32m +            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal void InitVars() {[m
[32m +            this.InitVars(true);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal void InitVars(bool initTable) {[m
[32m +            this.tableQueueData = ((QueueDataDataTable)(base.Tables["QueueData"]));[m
[32m +            if ((initTable == true)) {[m
[32m +                if ((this.tableQueueData != null)) {[m
[32m +                    this.tableQueueData.InitVars();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitClass() {[m
[32m +            this.DataSetName = "loginformDataSet4";[m
[32m +            this.Prefix = "";[m
[32m +            this.Namespace = "http://tempuri.org/loginformDataSet4.xsd";[m
[32m +            this.EnforceConstraints = true;[m
[32m +            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +            this.tableQueueData = new QueueDataDataTable();[m
[32m +            base.Tables.Add(this.tableQueueData);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private bool ShouldSerializeQueueData() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[32m +            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m +            loginformDataSet4 ds = new loginformDataSet4();[m
[32m +            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m +            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m +            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +            any.Namespace = ds.Namespace;[m
[32m +            sequence.Items.Add(any);[m
[32m +            type.Particle = sequence;[m
[32m +            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m +            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m +                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m +                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m +                try {[m
[32m +                    global::System.Xml.Schema.XmlSchema schema = null;[m
[32m +                    dsSchema.Write(s1);[m
[32m +                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m +                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m +                        s2.SetLength(0);[m
[32m +                        schema.Write(s2);[m
[32m +                        if ((s1.Length == s2.Length)) {[m
[32m +                            s1.Position = 0;[m
[32m +                            s2.Position = 0;[m
[32m +                            for (; ((s1.Position != s1.Length) [m
[32m +                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m +                                ;[m
[32m +                            }[m
[32m +                            if ((s1.Position == s1.Length)) {[m
[32m +                                return type;[m
[32m +                            }[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                finally {[m
[32m +                    if ((s1 != null)) {[m
[32m +                        s1.Close();[m
[32m +                    }[m
[32m +                    if ((s2 != null)) {[m
[32m +                        s2.Close();[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            xs.Add(dsSchema);[m
[32m +            return type;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public delegate void QueueDataRowChangeEventHandler(object sender, QueueDataRowChangeEvent e);[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Represents the strongly named DataTable class.[m
[32m +        ///</summary>[m
[32m +        [global::System.Serializable()][m
[32m +        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[32m +        public partial class QueueDataDataTable : global::System.Data.TypedTableBase<QueueDataRow> {[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnid;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnName;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnDepartment;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnPurpose;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnQueueNumber;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnQueueDate;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataDataTable() {[m
[32m +                this.TableName = "QueueData";[m
[32m +                this.BeginInit();[m
[32m +                this.InitClass();[m
[32m +                this.EndInit();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal QueueDataDataTable(global::System.Data.DataTable table) {[m
[32m +                this.TableName = table.TableName;[m
[32m +                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[32m +                    this.CaseSensitive = table.CaseSensitive;[m
[32m +                }[m
[32m +                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[32m +                    this.Locale = table.Locale;[m
[32m +                }[m
[32m +                if ((table.Namespace != table.DataSet.Namespace)) {[m
[32m +                    this.Namespace = table.Namespace;[m
[32m +                }[m
[32m +                this.Prefix = table.Prefix;[m
[32m +                this.MinimumCapacity = table.MinimumCapacity;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected QueueDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m +                    base(info, context) {[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn idColumn {[m
[32m +                get {[m
[32m +                    return this.columnid;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn NameColumn {[m
[32m +                get {[m
[32m +                    return this.columnName;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn DepartmentColumn {[m
[32m +                get {[m
[32m +                    return this.columnDepartment;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn PurposeColumn {[m
[32m +                get {[m
[32m +                    return this.columnPurpose;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn QueueNumberColumn {[m
[32m +                get {[m
[32m +                    return this.columnQueueNumber;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn QueueDateColumn {[m
[32m +                get {[m
[32m +                    return this.columnQueueDate;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            [global::System.ComponentModel.Browsable(false)][m
[32m +            public int Count {[m
[32m +                get {[m
[32m +                    return this.Rows.Count;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow this[int index] {[m
[32m +                get {[m
[32m +                    return ((QueueDataRow)(this.Rows[index]));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowChanging;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowChanged;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowDeleting;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueDataRowChangeEventHandler QueueDataRowDeleted;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void AddQueueDataRow(QueueDataRow row) {[m
[32m +                this.Rows.Add(row);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow AddQueueDataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate) {[m
[32m +                QueueDataRow rowQueueDataRow = ((QueueDataRow)(this.NewRow()));[m
[32m +                object[] columnValuesArray = new object[] {[m
[32m +                        null,[m
[32m +                        Name,[m
[32m +                        Department,[m
[32m +                        Purpose,[m
[32m +                        QueueNumber,[m
[32m +                        QueueDate};[m
[32m +                rowQueueDataRow.ItemArray = columnValuesArray;[m
[32m +                this.Rows.Add(rowQueueDataRow);[m
[32m +                return rowQueueDataRow;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow FindByid(int id) {[m
[32m +                return ((QueueDataRow)(this.Rows.Find(new object[] {[m
[32m +                            id})));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public override global::System.Data.DataTable Clone() {[m
[32m +                QueueDataDataTable cln = ((QueueDataDataTable)(base.Clone()));[m
[32m +                cln.InitVars();[m
[32m +                return cln;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Data.DataTable CreateInstance() {[m
[32m +                return new QueueDataDataTable();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal void InitVars() {[m
[32m +                this.columnid = base.Columns["id"];[m
[32m +                this.columnName = base.Columns["Name"];[m
[32m +                this.columnDepartment = base.Columns["Department"];[m
[32m +                this.columnPurpose = base.Columns["Purpose"];[m
[32m +                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[32m +                this.columnQueueDate = base.Columns["QueueDate"];[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            private void InitClass() {[m
[32m +                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnid);[m
[32m +                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnName);[m
[32m +                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnDepartment);[m
[32m +                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnPurpose);[m
[32m +                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnQueueNumber);[m
[32m +                this.columnQueueDate = new global::System.Data.DataColumn("QueueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnQueueDate);[m
[32m +                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[32m +                                this.columnid}, true));[m
[32m +                this.columnid.AutoIncrement = true;[m
[32m +                this.columnid.AutoIncrementSeed = -1;[m
[32m +                this.columnid.AutoIncrementStep = -1;[m
[32m +                this.columnid.AllowDBNull = false;[m
[32m +                this.columnid.ReadOnly = true;[m
[32m +                this.columnid.Unique = true;[m
[32m +                this.columnName.AllowDBNull = false;[m
[32m +                this.columnName.MaxLength = 50;[m
[32m +                this.columnDepartment.AllowDBNull = false;[m
[32m +                this.columnDepartment.MaxLength = 50;[m
[32m +                this.columnPurpose.AllowDBNull = false;[m
[32m +                this.columnPurpose.MaxLength = 2147483647;[m
[32m +                this.columnQueueNumber.AllowDBNull = false;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow NewQueueDataRow() {[m
[32m +                return ((QueueDataRow)(this.NewRow()));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[32m +                return new QueueDataRow(builder);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Type GetRowType() {[m
[32m +                return typeof(QueueDataRow);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowChanged(e);[m
[32m +                if ((this.QueueDataRowChanged != null)) {[m
[32m +                    this.QueueDataRowChanged(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowChanging(e);[m
[32m +                if ((this.QueueDataRowChanging != null)) {[m
[32m +                    this.QueueDataRowChanging(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowDeleted(e);[m
[32m +                if ((this.QueueDataRowDeleted != null)) {[m
[32m +                    this.QueueDataRowDeleted(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowDeleting(e);[m
[32m +                if ((this.QueueDataRowDeleting != null)) {[m
[32m +                    this.QueueDataRowDeleting(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void RemoveQueueDataRow(QueueDataRow row) {[m
[32m +                this.Rows.Remove(row);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m +                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m +                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m +                loginformDataSet4 ds = new loginformDataSet4();[m
[32m +                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[32m +                any1.MinOccurs = new decimal(0);[m
[32m +                any1.MaxOccurs = decimal.MaxValue;[m
[32m +                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m +                sequence.Items.Add(any1);[m
[32m +                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[32m +                any2.MinOccurs = new decimal(1);[m
[32m +                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m +                sequence.Items.Add(any2);[m
[32m +                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m +                attribute1.Name = "namespace";[m
[32m +                attribute1.FixedValue = ds.Namespace;[m
[32m +                type.Attributes.Add(attribute1);[m
[32m +                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m +                attribute2.Name = "tableTypeName";[m
[32m +                attribute2.FixedValue = "QueueDataDataTable";[m
[32m +                type.Attributes.Add(attribute2);[m
[32m +                type.Particle = sequence;[m
[32m +                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m +                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m +                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m +                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m +                    try {[m
[32m +                        global::System.Xml.Schema.XmlSchema schema = null;[m
[32m +                        dsSchema.Write(s1);[m
[32m +                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m +                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m +                            s2.SetLength(0);[m
[32m +                            schema.Write(s2);[m
[32m +                            if ((s1.Length == s2.Length)) {[m
[32m +                                s1.Position = 0;[m
[32m +                                s2.Position = 0;[m
[32m +                                for (; ((s1.Position != s1.Length) [m
[32m +                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m +                                    ;[m
[32m +                                }[m
[32m +                                if ((s1.Position == s1.Length)) {[m
[32m +                                    return type;[m
[32m +                                }[m
[32m +                            }[m
[32m +                        }[m
[32m +                    }[m
[32m +                    finally {[m
[32m +                        if ((s1 != null)) {[m
[32m +                            s1.Close();[m
[32m +                        }[m
[32m +                        if ((s2 != null)) {[m
[32m +                            s2.Close();[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                xs.Add(dsSchema);[m
[32m +                return type;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Represents strongly named DataRow class.[m
[32m +        ///</summary>[m
[32m +        public partial class QueueDataRow : global::System.Data.DataRow {[m
[32m +            [m
[32m +            private QueueDataDataTable tableQueueData;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal QueueDataRow(global::System.Data.DataRowBuilder rb) : [m
[32m +                    base(rb) {[m
[32m +                this.tableQueueData = ((QueueDataDataTable)(this.Table));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int id {[m
[32m +                get {[m
[32m +                    return ((int)(this[this.tableQueueData.idColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.idColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Name {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueData.NameColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.NameColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Department {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueData.DepartmentColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.DepartmentColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Purpose {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueData.PurposeColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.PurposeColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int QueueNumber {[m
[32m +                get {[m
[32m +                    return ((int)(this[this.tableQueueData.QueueNumberColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.QueueNumberColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public System.DateTime QueueDate {[m
[32m +                get {[m
[32m +                    try {[m
[32m +                        return ((global::System.DateTime)(this[this.tableQueueData.QueueDateColumn]));[m
[32m +                    }[m
[32m +                    catch (global::System.InvalidCastException e) {[m
[32m +                        throw new global::System.Data.StrongTypingException("The value for column \'QueueDate\' in table \'QueueData\' is DBNull.", e);[m
[32m +                    }[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueData.QueueDateColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public bool IsQueueDateNull() {[m
[32m +                return this.IsNull(this.tableQueueData.QueueDateColumn);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void SetQueueDateNull() {[m
[32m +                this[this.tableQueueData.QueueDateColumn] = global::System.Convert.DBNull;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Row event argument class[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public class QueueDataRowChangeEvent : global::System.EventArgs {[m
[32m +            [m
[32m +            private QueueDataRow eventRow;[m
[32m +            [m
[32m +            private global::System.Data.DataRowAction eventAction;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRowChangeEvent(QueueDataRow row, global::System.Data.DataRowAction action) {[m
[32m +                this.eventRow = row;[m
[32m +                this.eventAction = action;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueDataRow Row {[m
[32m +                get {[m
[32m +                    return this.eventRow;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataRowAction Action {[m
[32m +                get {[m
[32m +                    return this.eventAction;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +namespace capstoneproject.loginformDataSet4TableAdapters {[m
[32m +    [m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///Represents the connection and commands used to retrieve and save data.[m
[32m +    ///</summary>[m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.ComponentModel.DataObjectAttribute(true)][m
[32m +    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[32m +        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +    public partial class QueueDataTableAdapter : global::System.ComponentModel.Component {[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlConnection _connection;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[32m +        [m
[32m +        private bool _clearBeforeFill;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public QueueDataTableAdapter() {[m
[32m +            this.ClearBeforeFill = true;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[32m +            get {[m
[32m +                if ((this._adapter == null)) {[m
[32m +                    this.InitAdapter();[m
[32m +                }[m
[32m +                return this._adapter;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[32m +            get {[m
[32m +                if ((this._connection == null)) {[m
[32m +                    this.InitConnection();[m
[32m +                }[m
[32m +                return this._connection;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._connection = value;[m
[32m +                if ((this.Adapter.InsertCommand != null)) {[m
[32m +                    this.Adapter.InsertCommand.Connection = value;[m
[32m +                }[m
[32m +                if ((this.Adapter.DeleteCommand != null)) {[m
[32m +                    this.Adapter.DeleteCommand.Connection = value;[m
[32m +                }[m
[32m +                if ((this.Adapter.UpdateCommand != null)) {[m
[32m +                    this.Adapter.UpdateCommand.Connection = value;[m
[32m +                }[m
[32m +                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m +                    if ((this.CommandCollection[i] != null)) {[m
[32m +                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[32m +            get {[m
[32m +                return this._transaction;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._transaction = value;[m
[32m +                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m +                    this.CommandCollection[i].Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.DeleteCommand != null))) {[m
[32m +                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.InsertCommand != null))) {[m
[32m +                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.UpdateCommand != null))) {[m
[32m +                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[32m +            get {[m
[32m +                if ((this._commandCollection == null)) {[m
[32m +                    this.InitCommandCollection();[m
[32m +                }[m
[32m +                return this._commandCollection;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public bool ClearBeforeFill {[m
[32m +            get {[m
[32m +                return this._clearBeforeFill;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._clearBeforeFill = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitAdapter() {[m
[32m +            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[32m +            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[32m +            tableMapping.SourceTable = "Table";[m
[32m +            tableMapping.DataSetTable = "QueueData";[m
[32m +            tableMapping.ColumnMappings.Add("id", "id");[m
[32m +            tableMapping.ColumnMappings.Add("Name", "Name");[m
[32m +            tableMapping.ColumnMappings.Add("Department", "Department");[m
[32m +            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[32m +            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[32m +            tableMapping.ColumnMappings.Add("QueueDate", "QueueDate");[m
[32m +            this._adapter.TableMappings.Add(tableMapping);[m
[32m +            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.DeleteCommand.Connection = this.Connection;[m
[32m +            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_QueueDate = 1 AND [QueueDate] IS NULL) OR ([QueueDate] = @Original_QueueDate)))";[m
[32m +            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QueueDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.InsertCommand.Connection = this.Connection;[m
[32m +            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate);[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM QueueData WHERE (id = SCOPE_IDENTITY())";[m
[32m +            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.UpdateCommand.Connection = this.Connection;[m
[32m +            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [QueueDate] = @QueueDate WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_QueueDate = 1 AND [QueueDate] IS NULL) OR ([QueueDate] = @Original_QueueDate)));[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM QueueData WHERE (id = @id)";[m
[32m +            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QueueDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitConnection() {[m
[32m +            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[32m +            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitCommandCollection() {[m
[32m +            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[32m +            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._commandCollection[0].Connection = this.Connection;[m
[32m +            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM dbo.QueueData";[m
[32m +            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[32m +        public virtual int Fill(loginformDataSet4.QueueDataDataTable dataTable) {[m
[32m +            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m +            if ((this.ClearBeforeFill == true)) {[m
[32m +                dataTable.Clear();[m
[32m +            }[m
[32m +            int returnValue = this.Adapter.Fill(dataTable);[m
[32m +            return returnValue;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[32m +        public virtual loginformDataSet4.QueueDataDataTable GetData() {[m
[32m +            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m +            loginformDataSet4.QueueDataDataTable dataTable = new loginformDataSet4.QueueDataDataTable();[m
[32m +            this.Adapter.Fill(dataTable);[m
[32m +            return dataTable;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(loginformDataSet4.QueueDataDataTable dataTable) {[m
[32m +            return this.Adapter.Update(dataTable);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(loginformDataSet4 dataSet) {[m
[32m +            return this.Adapter.Update(dataSet, "QueueData");[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[32m +            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[32m +                        dataRow});[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[32m +            return this.Adapter.Update(dataRows);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[32m +        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_QueueDate) {[m
[32m +            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[32m +            if ((Original_Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[32m +            }[m
[32m +            if ((Original_Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[32m +            }[m
[32m +            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[32m +            if ((Original_QueueDate.HasValue == true)) {[m
[32m +                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));[m
[32m +                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_QueueDate.Value));[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));[m
[32m +                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;[m
[32m +            }[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[32m +            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.DeleteCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.DeleteCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[32m +        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> QueueDate) {[m
[32m +            if ((Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[32m +            }[m
[32m +            if ((Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[32m +            }[m
[32m +            if ((Purpose == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Purpose");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m +            }[m
[32m +            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m +            if ((QueueDate.HasValue == true)) {[m
[32m +                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(QueueDate.Value));[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[32m +            }[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[32m +            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.InsertCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.InsertCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m +        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> QueueDate, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_QueueDate, int id) {[m
[32m +            if ((Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[32m +            }[m
[32m +            if ((Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[32m +            }[m
[32m +            if ((Purpose == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Purpose");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m +            if ((QueueDate.HasValue == true)) {[m
[32m +                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(QueueDate.Value));[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));[m
[32m +            if ((Original_Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));[m
[32m +            }[m
[32m +            if ((Original_Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Department));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_QueueNumber));[m
[32m +            if ((Original_QueueDate.HasValue == true)) {[m
[32m +                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));[m
[32m +                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_QueueDate.Value));[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));[m
[32m +                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(id));[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[32m +            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.UpdateCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.UpdateCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m +        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> QueueDate, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_QueueDate) {[m
[32m +            return this.Update(Name, Department, Purpose, QueueNumber, QueueDate, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_QueueDate, Original_id);[m
[32m +        }[m
[32m +    }[m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[32m +    ///</summary>[m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[32m +        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[32m +    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[32m +        [m
[32m +        private UpdateOrderOption _updateOrder;[m
[32m +        [m
[32m +        private QueueDataTableAdapter _queueDataTableAdapter;[m
[32m +        [m
[32m +        private bool _backupDataSetBeforeUpdate;[m
[32m +        [m
[32m +        private global::System.Data.IDbConnection _connection;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public UpdateOrderOption UpdateOrder {[m
[32m +            get {[m
[32m +                return this._updateOrder;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._updateOrder = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[32m +            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[32m +            "a", "System.Drawing.Design.UITypeEditor")][m
[32m +        public QueueDataTableAdapter QueueDataTableAdapter {[m
[32m +            get {[m
[32m +                return this._queueDataTableAdapter;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._queueDataTableAdapter = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public bool BackupDataSetBeforeUpdate {[m
[32m +            get {[m
[32m +                return this._backupDataSetBeforeUpdate;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._backupDataSetBeforeUpdate = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        public global::System.Data.IDbConnection Connection {[m
[32m +            get {[m
[32m +                if ((this._connection != null)) {[m
[32m +                    return this._connection;[m
[32m +                }[m
[32m +                if (((this._queueDataTableAdapter != null) [m
[32m +                            && (this._queueDataTableAdapter.Connection != null))) {[m
[32m +                    return this._queueDataTableAdapter.Connection;[m
[32m +                }[m
[32m +                return null;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._connection = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        public int TableAdapterInstanceCount {[m
[32m +            get {[m
[32m +                int count = 0;[m
[32m +                if ((this._queueDataTableAdapter != null)) {[m
[32m +                    count = (count + 1);[m
[32m +                }[m
[32m +                return count;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update rows in top-down order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateUpdatedRows(loginformDataSet4 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] updatedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[32m +                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[32m +                if (((updatedRows != null) [m
[32m +                            && (0 < updatedRows.Length))) {[m
[32m +                    result = (result + this._queueDataTableAdapter.Update(updatedRows));[m
[32m +                    allChangedRows.AddRange(updatedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Insert rows in top-down order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateInsertedRows(loginformDataSet4 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] addedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[32m +                if (((addedRows != null) [m
[32m +                            && (0 < addedRows.Length))) {[m
[32m +                    result = (result + this._queueDataTableAdapter.Update(addedRows));[m
[32m +                    allAddedRows.AddRange(addedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Delete rows in bottom-up order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateDeletedRows(loginformDataSet4 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] deletedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[32m +                if (((deletedRows != null) [m
[32m +                            && (0 < deletedRows.Length))) {[m
[32m +                    result = (result + this._queueDataTableAdapter.Update(deletedRows));[m
[32m +                    allChangedRows.AddRange(deletedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            if (((updatedRows == null) [m
[32m +                        || (updatedRows.Length < 1))) {[m
[32m +                return updatedRows;[m
[32m +            }[m
[32m +            if (((allAddedRows == null) [m
[32m +                        || (allAddedRows.Count < 1))) {[m
[32m +                return updatedRows;[m
[32m +            }[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[32m +                global::System.Data.DataRow row = updatedRows[i];[m
[32m +                if ((allAddedRows.Contains(row) == false)) {[m
[32m +                    realUpdatedRows.Add(row);[m
[32m +                }[m
[32m +            }[m
[32m +            return realUpdatedRows.ToArray();[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update all changes to the dataset.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public virtual int UpdateAll(loginformDataSet4 dataSet) {[m
[32m +            if ((dataSet == null)) {[m
[32m +                throw new global::System.ArgumentNullException("dataSet");[m
[32m +            }[m
[32m +            if ((dataSet.HasChanges() == false)) {[m
[32m +                return 0;[m
[32m +            }[m
[32m +            if (((this._queueDataTableAdapter != null) [m
[32m +                        && (this.MatchTableAdapterConnection(this._queueDataTableAdapter.Connection) == false))) {[m
[32m +                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[32m +                        "tring.");[m
[32m +            }[m
[32m +            global::System.Data.IDbConnection workConnection = this.Connection;[m
[32m +            if ((workConnection == null)) {[m
[32m +                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[32m +                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[32m +            }[m
[32m +            bool workConnOpened = false;[m
[32m +            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[32m +                        == global::System.Data.ConnectionState.Broken)) {[m
[32m +                workConnection.Close();[m
[32m +            }[m
[32m +            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[32m +                workConnection.Open();[m
[32m +                workConnOpened = true;[m
[32m +            }[m
[32m +            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[32m +            if ((workTransaction == null)) {[m
[32m +                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[32m +                        "ctions or the current state is not allowing the transaction to begin.");[m
[32m +            }[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[32m +            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[32m +            int result = 0;[m
[32m +            global::System.Data.DataSet backupDataSet = null;[m
[32m +            if (this.BackupDataSetBeforeUpdate) {[m
[32m +                backupDataSet = new global::System.Data.DataSet();[m
[32m +                backupDataSet.Merge(dataSet);[m
[32m +            }[m
[32m +            try {[m
[32m +                // ---- Prepare for update -----------[m
[32m +                //[m
[32m +                if ((this._queueDataTableAdapter != null)) {[m
[32m +                    revertConnections.Add(this._queueDataTableAdapter, this._queueDataTableAdapter.Connection);[m
[32m +                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[32m +                    this._queueDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[32m +                    if (this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[32m +                        this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[32m +                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueDataTableAdapter.Adapter);[m
[32m +                    }[m
[32m +                }[m
[32m +                // [m
[32m +                //---- Perform updates -----------[m
[32m +                //[m
[32m +                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[32m +                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m +                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m +                }[m
[32m +                else {[m
[32m +                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m +                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m +                }[m
[32m +                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[32m +                // [m
[32m +                //---- Commit updates -----------[m
[32m +                //[m
[32m +                workTransaction.Commit();[m
[32m +                if ((0 < allAddedRows.Count)) {[m
[32m +                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m +                    allAddedRows.CopyTo(rows);[m
[32m +                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.DataRow row = rows[i];[m
[32m +                        row.AcceptChanges();[m
[32m +                    }[m
[32m +                }[m
[32m +                if ((0 < allChangedRows.Count)) {[m
[32m +                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[32m +                    allChangedRows.CopyTo(rows);[m
[32m +                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.DataRow row = rows[i];[m
[32m +                        row.AcceptChanges();[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            catch (global::System.Exception ex) {[m
[32m +                workTransaction.Rollback();[m
[32m +                // ---- Restore the dataset -----------[m
[32m +                if (this.BackupDataSetBeforeUpdate) {[m
[32m +                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[32m +                    dataSet.Clear();[m
[32m +                    dataSet.Merge(backupDataSet);[m
[32m +                }[m
[32m +                else {[m
[32m +                    if ((0 < allAddedRows.Count)) {[m
[32m +                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m +                        allAddedRows.CopyTo(rows);[m
[32m +                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                            global::System.Data.DataRow row = rows[i];[m
[32m +                            row.AcceptChanges();[m
[32m +                            row.SetAdded();[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                throw ex;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if (workConnOpened) {[m
[32m +                    workConnection.Close();[m
[32m +                }[m
[32m +                if ((this._queueDataTableAdapter != null)) {[m
[32m +                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueDataTableAdapter]));[m
[32m +                    this._queueDataTableAdapter.Transaction = null;[m
[32m +                }[m
[32m +                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[32m +                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[32m +                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[32m +                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[32m +                        adapter.AcceptChangesDuringUpdate = true;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[32m +            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[32m +            if ((this._connection != null)) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            if (((this.Connection == null) [m
[32m +                        || (inputConnection == null))) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update Order Option[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public enum UpdateOrderOption {[m
[32m +            [m
[32m +            InsertUpdateDelete = 0,[m
[32m +            [m
[32m +            UpdateInsertDelete = 1,[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Used to sort self-referenced table's rows[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[32m +            [m
[32m +            private global::System.Data.DataRelation _relation;[m
[32m +            [m
[32m +            private int _childFirst;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[32m +                this._relation = relation;[m
[32m +                if (childFirst) {[m
[32m +                    this._childFirst = -1;[m
[32m +                }[m
[32m +                else {[m
[32m +                    this._childFirst = 1;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[32m +                global::System.Diagnostics.Debug.Assert((row != null));[m
[32m +                global::System.Data.DataRow root = row;[m
[32m +                distance = 0;[m
[32m +[m
[32m +                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[32m +                traversedRows[row] = row;[m
[32m +[m
[32m +                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m +                for ([m
[32m +                ; ((parent != null) [m
[32m +                            && (traversedRows.ContainsKey(parent) == false)); [m
[32m +                ) {[m
[32m +                    distance = (distance + 1);[m
[32m +                    root = parent;[m
[32m +                    traversedRows[parent] = parent;[m
[32m +                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m +                }[m
[32m +[m
[32m +                if ((distance == 0)) {[m
[32m +                    traversedRows.Clear();[m
[32m +                    traversedRows[row] = row;[m
[32m +                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m +                    for ([m
[32m +                    ; ((parent != null) [m
[32m +                                && (traversedRows.ContainsKey(parent) == false)); [m
[32m +                    ) {[m
[32m +                        distance = (distance + 1);[m
[32m +                        root = parent;[m
[32m +                        traversedRows[parent] = parent;[m
[32m +                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m +                    }[m
[32m +                }[m
[32m +[m
[32m +                return root;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[32m +                if (object.ReferenceEquals(row1, row2)) {[m
[32m +                    return 0;[m
[32m +                }[m
[32m +                if ((row1 == null)) {[m
[32m +                    return -1;[m
[32m +                }[m
[32m +                if ((row2 == null)) {[m
[32m +                    return 1;[m
[32m +                }[m
[32m +[m
[32m +                int distance1 = 0;[m
[32m +                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[32m +[m
[32m +                int distance2 = 0;[m
[32m +                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[32m +[m
[32m +                if (object.ReferenceEquals(root1, root2)) {[m
[32m +                    return (this._childFirst * distance1.CompareTo(distance2));[m
[32m +                }[m
[32m +                else {[m
[32m +                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[32m +                                    && (root2.Table != null)));[m
[32m +                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[32m +                        return -1;[m
[32m +                    }[m
[32m +                    else {[m
[32m +                        return 1;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +[m
[32m++=======[m
[32m++ï»¿//------------------------------------------------------------------------------[m
[32m++// <auto-generated>[m
[32m++//     This code was generated by a tool.[m
[32m++//     Runtime Version:4.0.30319.42000[m
[32m++//[m
[32m++//     Changes to this file may cause incorrect behavior and will be lost if[m
[32m++//     the code is regenerated.[m
[32m++// </auto-generated>[m
[32m++//------------------------------------------------------------------------------[m
[32m++[m
[32m++#pragma warning disable 1591[m
[32m++[m
[32m++namespace capstoneproject {[m
[32m++    [m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///Represents a strongly typed in-memory cache of data.[m
[32m++    ///</summary>[m
[32m++    [global::System.Serializable()][m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[32m++    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet4")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[32m++    public partial class loginformDataSet4 : global::System.Data.DataSet {[m
[32m++        [m
[32m++        private QueueDataDataTable tableQueueData;[m
[32m++        [m
[32m++        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public loginformDataSet4() {[m
[32m++            this.BeginInit();[m
[32m++            this.InitClass();[m
[32m++            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m++            base.Relations.CollectionChanged += schemaChangedHandler;[m
[32m++            this.EndInit();[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected loginformDataSet4(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m++                base(info, context, false) {[m
[32m++            if ((this.IsBinarySerialized(info, context) == true)) {[m
[32m++                this.InitVars(false);[m
[32m++                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[32m++                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[32m++                return;[m
[32m++            }[m
[32m++            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[32m++            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m++                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m++                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m++                if ((ds.Tables["QueueData"] != null)) {[m
[32m++                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m++                }[m
[32m++                this.DataSetName = ds.DataSetName;[m
[32m++                this.Prefix = ds.Prefix;[m
[32m++                this.Namespace = ds.Namespace;[m
[32m++                this.Locale = ds.Locale;[m
[32m++                this.CaseSensitive = ds.CaseSensitive;[m
[32m++                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m++                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            else {[m
[32m++                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m++            }[m
[32m++            this.GetSerializationData(info, context);[m
[32m++            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m++            this.Relations.CollectionChanged += schemaChangedHandler;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[32m++        public QueueDataDataTable QueueData {[m
[32m++            get {[m
[32m++                return this.tableQueueData;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.BrowsableAttribute(true)][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[32m++        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[32m++            get {[m
[32m++                return this._schemaSerializationMode;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._schemaSerializationMode = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m++        public new global::System.Data.DataTableCollection Tables {[m
[32m++            get {[m
[32m++                return base.Tables;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m++        public new global::System.Data.DataRelationCollection Relations {[m
[32m++            get {[m
[32m++                return base.Relations;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override void InitializeDerivedDataSet() {[m
[32m++            this.BeginInit();[m
[32m++            this.InitClass();[m
[32m++            this.EndInit();[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public override global::System.Data.DataSet Clone() {[m
[32m++            loginformDataSet4 cln = ((loginformDataSet4)(base.Clone()));[m
[32m++            cln.InitVars();[m
[32m++            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[32m++            return cln;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override bool ShouldSerializeTables() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override bool ShouldSerializeRelations() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[32m++            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m++                this.Reset();[m
[32m++                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m++                ds.ReadXml(reader);[m
[32m++                if ((ds.Tables["QueueData"] != null)) {[m
[32m++                    base.Tables.Add(new QueueDataDataTable(ds.Tables["QueueData"]));[m
[32m++                }[m
[32m++                this.DataSetName = ds.DataSetName;[m
[32m++                this.Prefix = ds.Prefix;[m
[32m++                this.Namespace = ds.Namespace;[m
[32m++                this.Locale = ds.Locale;[m
[32m++                this.CaseSensitive = ds.CaseSensitive;[m
[32m++                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m++                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            else {[m
[32m++                this.ReadXml(reader);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[32m++            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[32m++            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[32m++            stream.Position = 0;[m
[32m++            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal void InitVars() {[m
[32m++            this.InitVars(true);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal void InitVars(bool initTable) {[m
[32m++            this.tableQueueData = ((QueueDataDataTable)(base.Tables["QueueData"]));[m
[32m++            if ((initTable == true)) {[m
[32m++                if ((this.tableQueueData != null)) {[m
[32m++                    this.tableQueueData.InitVars();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitClass() {[m
[32m++            this.DataSetName = "loginformDataSet4";[m
[32m++            this.Prefix = "";[m
[32m++            this.Namespace = "http://tempuri.org/loginformDataSet4.xsd";[m
[32m++            this.EnforceConstraints = true;[m
[32m++            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++            this.tableQueueData = new QueueDataDataTable();[m
[32m++            base.Tables.Add(this.tableQueueData);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private bool ShouldSerializeQueueData() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[32m++            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m++            loginformDataSet4 ds = new loginformDataSet4();[m
[32m++            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m++            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m++            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++            any.Namespace = ds.Namespace;[m
[32m++            sequence.Items.Add(any);[m
[32m++            type.Particle = sequence;[m
[32m++            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m++            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m++                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m++                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m++                try {[m
[32m++                    global::System.Xml.Schema.XmlSchema schema = null;[m
[32m++                    dsSchema.Write(s1);[m
[32m++                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m++                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m++                        s2.SetLength(0);[m
[32m++                        schema.Write(s2);[m
[32m++                        if ((s1.Length == s2.Length)) {[m
[32m++                            s1.Position = 0;[m
[32m++                            s2.Position = 0;[m
[32m++                            for (; ((s1.Position != s1.Length) [m
[32m++                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m++                                ;[m
[32m++                            }[m
[32m++                            if ((s1.Position == s1.Length)) {[m
[32m++                                return type;[m
[32m++                            }[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                finally {[m
[32m++                    if ((s1 != null)) {[m
[32m++                        s1.Close();[m
[32m++                    }[m
[32m++                    if ((s2 != null)) {[m
[32m++                        s2.Close();[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            xs.Add(dsSchema);[m
[32m++            return type;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public delegate void QueueDataRowChangeEventHandler(object sender, QueueDataRowChangeEvent e);[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Represents the strongly named DataTable class.[m
[32m++        ///</summary>[m
[32m++        [global::System.Serializable()][m
[32m++        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[32m++        public partial class QueueDataDataTable : global::System.Data.TypedTableBase<QueueDataRow> {[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnid;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnName;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnDepartment;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnPurpose;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnQueueNumber;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnQueueDate;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataDataTable() {[m
[32m++                this.TableName = "QueueData";[m
[32m++                this.BeginInit();[m
[32m++                this.InitClass();[m
[32m++                this.EndInit();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal QueueDataDataTable(global::System.Data.DataTable table) {[m
[32m++                this.TableName = table.TableName;[m
[32m++                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[32m++                    this.CaseSensitive = table.CaseSensitive;[m
[32m++                }[m
[32m++                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[32m++                    this.Locale = table.Locale;[m
[32m++                }[m
[32m++                if ((table.Namespace != table.DataSet.Namespace)) {[m
[32m++                    this.Namespace = table.Namespace;[m
[32m++                }[m
[32m++                this.Prefix = table.Prefix;[m
[32m++                this.MinimumCapacity = table.MinimumCapacity;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected QueueDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m++                    base(info, context) {[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn idColumn {[m
[32m++                get {[m
[32m++                    return this.columnid;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn NameColumn {[m
[32m++                get {[m
[32m++                    return this.columnName;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn DepartmentColumn {[m
[32m++                get {[m
[32m++                    return this.columnDepartment;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn PurposeColumn {[m
[32m++                get {[m
[32m++                    return this.columnPurpose;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn QueueNumberColumn {[m
[32m++                get {[m
[32m++                    return this.columnQueueNumber;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn QueueDateColumn {[m
[32m++                get {[m
[32m++                    return this.columnQueueDate;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            [global::System.ComponentModel.Browsable(false)][m
[32m++            public int Count {[m
[32m++                get {[m
[32m++                    return this.Rows.Count;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow this[int index] {[m
[32m++                get {[m
[32m++                    return ((QueueDataRow)(this.Rows[index]));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowChanging;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowChanged;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowDeleting;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueDataRowChangeEventHandler QueueDataRowDeleted;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void AddQueueDataRow(QueueDataRow row) {[m
[32m++                this.Rows.Add(row);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow AddQueueDataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate) {[m
[32m++                QueueDataRow rowQueueDataRow = ((QueueDataRow)(this.NewRow()));[m
[32m++                object[] columnValuesArray = new object[] {[m
[32m++                        null,[m
[32m++                        Name,[m
[32m++                        Department,[m
[32m++                        Purpose,[m
[32m++                        QueueNumber,[m
[32m++                        QueueDate};[m
[32m++                rowQueueDataRow.ItemArray = columnValuesArray;[m
[32m++                this.Rows.Add(rowQueueDataRow);[m
[32m++                return rowQueueDataRow;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow FindByid(int id) {[m
[32m++                return ((QueueDataRow)(this.Rows.Find(new object[] {[m
[32m++                            id})));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public override global::System.Data.DataTable Clone() {[m
[32m++                QueueDataDataTable cln = ((QueueDataDataTable)(base.Clone()));[m
[32m++                cln.InitVars();[m
[32m++                return cln;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Data.DataTable CreateInstance() {[m
[32m++                return new QueueDataDataTable();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal void InitVars() {[m
[32m++                this.columnid = base.Columns["id"];[m
[32m++                this.columnName = base.Columns["Name"];[m
[32m++                this.columnDepartment = base.Columns["Department"];[m
[32m++                this.columnPurpose = base.Columns["Purpose"];[m
[32m++                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[32m++                this.columnQueueDate = base.Columns["QueueDate"];[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            private void InitClass() {[m
[32m++                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnid);[m
[32m++                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnName);[m
[32m++                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnDepartment);[m
[32m++                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnPurpose);[m
[32m++                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnQueueNumber);[m
[32m++                this.columnQueueDate = new global::System.Data.DataColumn("QueueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnQueueDate);[m
[32m++                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[32m++                                this.columnid}, true));[m
[32m++                this.columnid.AutoIncrement = true;[m
[32m++                this.columnid.AutoIncrementSeed = -1;[m
[32m++                this.columnid.AutoIncrementStep = -1;[m
[32m++                this.columnid.AllowDBNull = false;[m
[32m++                this.columnid.ReadOnly = true;[m
[32m++                this.columnid.Unique = true;[m
[32m++                this.columnName.AllowDBNull = false;[m
[32m++                this.columnName.MaxLength = 50;[m
[32m++                this.columnDepartment.AllowDBNull = false;[m
[32m++                this.columnDepartment.MaxLength = 50;[m
[32m++                this.columnPurpose.AllowDBNull = false;[m
[32m++                this.columnPurpose.MaxLength = 2147483647;[m
[32m++                this.columnQueueNumber.AllowDBNull = false;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow NewQueueDataRow() {[m
[32m++                return ((QueueDataRow)(this.NewRow()));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[32m++                return new QueueDataRow(builder);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Type GetRowType() {[m
[32m++                return typeof(QueueDataRow);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowChanged(e);[m
[32m++                if ((this.QueueDataRowChanged != null)) {[m
[32m++                    this.QueueDataRowChanged(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowChanging(e);[m
[32m++                if ((this.QueueDataRowChanging != null)) {[m
[32m++                    this.QueueDataRowChanging(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowDeleted(e);[m
[32m++                if ((this.QueueDataRowDeleted != null)) {[m
[32m++                    this.QueueDataRowDeleted(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowDeleting(e);[m
[32m++                if ((this.QueueDataRowDeleting != null)) {[m
[32m++                    this.QueueDataRowDeleting(this, new QueueDataRowChangeEvent(((QueueDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void RemoveQueueDataRow(QueueDataRow row) {[m
[32m++                this.Rows.Remove(row);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m++                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m++                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m++                loginformDataSet4 ds = new loginformDataSet4();[m
[32m++                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[32m++                any1.MinOccurs = new decimal(0);[m
[32m++                any1.MaxOccurs = decimal.MaxValue;[m
[32m++                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m++                sequence.Items.Add(any1);[m
[32m++                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[32m++                any2.MinOccurs = new decimal(1);[m
[32m++                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m++                sequence.Items.Add(any2);[m
[32m++                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m++                attribute1.Name = "namespace";[m
[32m++                attribute1.FixedValue = ds.Namespace;[m
[32m++                type.Attributes.Add(attribute1);[m
[32m++                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m++                attribute2.Name = "tableTypeName";[m
[32m++                attribute2.FixedValue = "QueueDataDataTable";[m
[32m++                type.Attributes.Add(attribute2);[m
[32m++                type.Particle = sequence;[m
[32m++                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m++                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m++                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m++                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m++                    try {[m
[32m++                        global::System.Xml.Schema.XmlSchema schema = null;[m
[32m++                        dsSchema.Write(s1);[m
[32m++                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m++                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m++                            s2.SetLength(0);[m
[32m++                            schema.Write(s2);[m
[32m++                            if ((s1.Length == s2.Length)) {[m
[32m++                                s1.Position = 0;[m
[32m++                                s2.Position = 0;[m
[32m++                                for (; ((s1.Position != s1.Length) [m
[32m++                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m++                                    ;[m
[32m++                                }[m
[32m++                                if ((s1.Position == s1.Length)) {[m
[32m++                                    return type;[m
[32m++                                }[m
[32m++                            }[m
[32m++                        }[m
[32m++                    }[m
[32m++                    finally {[m
[32m++                        if ((s1 != null)) {[m
[32m++                            s1.Close();[m
[32m++                        }[m
[32m++                        if ((s2 != null)) {[m
[32m++                            s2.Close();[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                xs.Add(dsSchema);[m
[32m++                return type;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Represents strongly named DataRow class.[m
[32m++        ///</summary>[m
[32m++        public partial class QueueDataRow : global::System.Data.DataRow {[m
[32m++            [m
[32m++            private QueueDataDataTable tableQueueData;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal QueueDataRow(global::System.Data.DataRowBuilder rb) : [m
[32m++                    base(rb) {[m
[32m++                this.tableQueueData = ((QueueDataDataTable)(this.Table));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int id {[m
[32m++                get {[m
[32m++                    return ((int)(this[this.tableQueueData.idColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.idColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Name {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueData.NameColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.NameColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Department {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueData.DepartmentColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.DepartmentColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Purpose {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueData.PurposeColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.PurposeColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int QueueNumber {[m
[32m++                get {[m
[32m++                    return ((int)(this[this.tableQueueData.QueueNumberColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.QueueNumberColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public System.DateTime QueueDate {[m
[32m++                get {[m
[32m++                    try {[m
[32m++                        return ((global::System.DateTime)(this[this.tableQueueData.QueueDateColumn]));[m
[32m++                    }[m
[32m++                    catch (global::System.InvalidCastException e) {[m
[32m++                        throw new global::System.Data.StrongTypingException("The value for column \'QueueDate\' in table \'QueueData\' is DBNull.", e);[m
[32m++                    }[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueData.QueueDateColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public bool IsQueueDateNull() {[m
[32m++                return this.IsNull(this.tableQueueData.QueueDateColumn);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void SetQueueDateNull() {[m
[32m++                this[this.tableQueueData.QueueDateColumn] = global::System.Convert.DBNull;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Row event argument class[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public class QueueDataRowChangeEvent : global::System.EventArgs {[m
[32m++            [m
[32m++            private QueueDataRow eventRow;[m
[32m++            [m
[32m++            private global::System.Data.DataRowAction eventAction;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRowChangeEvent(QueueDataRow row, global::System.Data.DataRowAction action) {[m
[32m++                this.eventRow = row;[m
[32m++                this.eventAction = action;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueDataRow Row {[m
[32m++                get {[m
[32m++                    return this.eventRow;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataRowAction Action {[m
[32m++                get {[m
[32m++                    return this.eventAction;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++}[m
[32m++namespace capstoneproject.loginformDataSet4TableAdapters {[m
[32m++    [m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///Represents the connection and commands used to retrieve and save data.[m
[32m++    ///</summary>[m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.ComponentModel.DataObjectAttribute(true)][m
[32m++    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[32m++        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++    public partial class QueueDataTableAdapter : global::System.ComponentModel.Component {[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlConnection _connection;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[32m++        [m
[32m++        private bool _clearBeforeFill;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public QueueDataTableAdapter() {[m
[32m++            this.ClearBeforeFill = true;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[32m++            get {[m
[32m++                if ((this._adapter == null)) {[m
[32m++                    this.InitAdapter();[m
[32m++                }[m
[32m++                return this._adapter;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[32m++            get {[m
[32m++                if ((this._connection == null)) {[m
[32m++                    this.InitConnection();[m
[32m++                }[m
[32m++                return this._connection;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._connection = value;[m
[32m++                if ((this.Adapter.InsertCommand != null)) {[m
[32m++                    this.Adapter.InsertCommand.Connection = value;[m
[32m++                }[m
[32m++                if ((this.Adapter.DeleteCommand != null)) {[m
[32m++                    this.Adapter.DeleteCommand.Connection = value;[m
[32m++                }[m
[32m++                if ((this.Adapter.UpdateCommand != null)) {[m
[32m++                    this.Adapter.UpdateCommand.Connection = value;[m
[32m++                }[m
[32m++                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m++                    if ((this.CommandCollection[i] != null)) {[m
[32m++                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[32m++            get {[m
[32m++                return this._transaction;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._transaction = value;[m
[32m++                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m++                    this.CommandCollection[i].Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.DeleteCommand != null))) {[m
[32m++                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.InsertCommand != null))) {[m
[32m++                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.UpdateCommand != null))) {[m
[32m++                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[32m++            get {[m
[32m++                if ((this._commandCollection == null)) {[m
[32m++                    this.InitCommandCollection();[m
[32m++                }[m
[32m++                return this._commandCollection;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public bool ClearBeforeFill {[m
[32m++            get {[m
[32m++                return this._clearBeforeFill;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._clearBeforeFill = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitAdapter() {[m
[32m++            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[32m++            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[32m++            tableMapping.SourceTable = "Table";[m
[32m++            tableMapping.DataSetTable = "QueueData";[m
[32m++            tableMapping.ColumnMappings.Add("id", "id");[m
[32m++            tableMapping.ColumnMappings.Add("Name", "Name");[m
[32m++            tableMapping.ColumnMappings.Add("Department", "Department");[m
[32m++            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[32m++            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[32m++            tableMapping.ColumnMappings.Add("QueueDate", "QueueDate");[m
[32m++            this._adapter.TableMappings.Add(tableMapping);[m
[32m++            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.DeleteCommand.Connection = this.Connection;[m
[32m++            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_QueueDate = 1 AND [QueueDate] IS NULL) OR ([QueueDate] = @Original_QueueDate)))";[m
[32m++            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QueueDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.InsertCommand.Connection = this.Connection;[m
[32m++            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate);[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM QueueData WHERE (id = SCOPE_IDENTITY())";[m
[32m++            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.UpdateCommand.Connection = this.Connection;[m
[32m++            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [QueueDate] = @QueueDate WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_QueueDate = 1 AND [QueueDate] IS NULL) OR ([QueueDate] = @Original_QueueDate)));[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM QueueData WHERE (id = @id)";[m
[32m++            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QueueDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitConnection() {[m
[32m++            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[32m++            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitCommandCollection() {[m
[32m++            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[32m++            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._commandCollection[0].Connection = this.Connection;[m
[32m++            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM dbo.QueueData";[m
[32m++            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[32m++        public virtual int Fill(loginformDataSet4.QueueDataDataTable dataTable) {[m
[32m++            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m++            if ((this.ClearBeforeFill == true)) {[m
[32m++                dataTable.Clear();[m
[32m++            }[m
[32m++            int returnValue = this.Adapter.Fill(dataTable);[m
[32m++            return returnValue;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[32m++        public virtual loginformDataSet4.QueueDataDataTable GetData() {[m
[32m++            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m++            loginformDataSet4.QueueDataDataTable dataTable = new loginformDataSet4.QueueDataDataTable();[m
[32m++            this.Adapter.Fill(dataTable);[m
[32m++            return dataTable;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(loginformDataSet4.QueueDataDataTable dataTable) {[m
[32m++            return this.Adapter.Update(dataTable);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(loginformDataSet4 dataSet) {[m
[32m++            return this.Adapter.Update(dataSet, "QueueData");[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[32m++            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[32m++                        dataRow});[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[32m++            return this.Adapter.Update(dataRows);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[32m++        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_QueueDate) {[m
[32m++            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[32m++            if ((Original_Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[32m++            }[m
[32m++            if ((Original_Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[32m++            }[m
[32m++            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[32m++            if ((Original_QueueDate.HasValue == true)) {[m
[32m++                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));[m
[32m++                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_QueueDate.Value));[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));[m
[32m++                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;[m
[32m++            }[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[32m++            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.DeleteCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.DeleteCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[32m++        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> QueueDate) {[m
[32m++            if ((Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[32m++            }[m
[32m++            if ((Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[32m++            }[m
[32m++            if ((Purpose == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Purpose");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m++            }[m
[32m++            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m++            if ((QueueDate.HasValue == true)) {[m
[32m++                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(QueueDate.Value));[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[32m++            }[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[32m++            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.InsertCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.InsertCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m++        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> QueueDate, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_QueueDate, int id) {[m
[32m++            if ((Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[32m++            }[m
[32m++            if ((Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[32m++            }[m
[32m++            if ((Purpose == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Purpose");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m++            if ((QueueDate.HasValue == true)) {[m
[32m++                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(QueueDate.Value));[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));[m
[32m++            if ((Original_Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));[m
[32m++            }[m
[32m++            if ((Original_Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Department));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_QueueNumber));[m
[32m++            if ((Original_QueueDate.HasValue == true)) {[m
[32m++                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));[m
[32m++                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_QueueDate.Value));[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));[m
[32m++                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(id));[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[32m++            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.UpdateCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.UpdateCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m++        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, global::System.Nullable<global::System.DateTime> QueueDate, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, global::System.Nullable<global::System.DateTime> Original_QueueDate) {[m
[32m++            return this.Update(Name, Department, Purpose, QueueNumber, QueueDate, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_QueueDate, Original_id);[m
[32m++        }[m
[32m++    }[m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[32m++    ///</summary>[m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[32m++        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[32m++    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[32m++        [m
[32m++        private UpdateOrderOption _updateOrder;[m
[32m++        [m
[32m++        private QueueDataTableAdapter _queueDataTableAdapter;[m
[32m++        [m
[32m++        private bool _backupDataSetBeforeUpdate;[m
[32m++        [m
[32m++        private global::System.Data.IDbConnection _connection;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public UpdateOrderOption UpdateOrder {[m
[32m++            get {[m
[32m++                return this._updateOrder;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._updateOrder = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[32m++            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[32m++            "a", "System.Drawing.Design.UITypeEditor")][m
[32m++        public QueueDataTableAdapter QueueDataTableAdapter {[m
[32m++            get {[m
[32m++                return this._queueDataTableAdapter;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._queueDataTableAdapter = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public bool BackupDataSetBeforeUpdate {[m
[32m++            get {[m
[32m++                return this._backupDataSetBeforeUpdate;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._backupDataSetBeforeUpdate = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        public global::System.Data.IDbConnection Connection {[m
[32m++            get {[m
[32m++                if ((this._connection != null)) {[m
[32m++                    return this._connection;[m
[32m++                }[m
[32m++                if (((this._queueDataTableAdapter != null) [m
[32m++                            && (this._queueDataTableAdapter.Connection != null))) {[m
[32m++                    return this._queueDataTableAdapter.Connection;[m
[32m++                }[m
[32m++                return null;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._connection = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        public int TableAdapterInstanceCount {[m
[32m++            get {[m
[32m++                int count = 0;[m
[32m++                if ((this._queueDataTableAdapter != null)) {[m
[32m++                    count = (count + 1);[m
[32m++                }[m
[32m++                return count;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update rows in top-down order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateUpdatedRows(loginformDataSet4 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] updatedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[32m++                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[32m++                if (((updatedRows != null) [m
[32m++                            && (0 < updatedRows.Length))) {[m
[32m++                    result = (result + this._queueDataTableAdapter.Update(updatedRows));[m
[32m++                    allChangedRows.AddRange(updatedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Insert rows in top-down order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateInsertedRows(loginformDataSet4 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] addedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[32m++                if (((addedRows != null) [m
[32m++                            && (0 < addedRows.Length))) {[m
[32m++                    result = (result + this._queueDataTableAdapter.Update(addedRows));[m
[32m++                    allAddedRows.AddRange(addedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Delete rows in bottom-up order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateDeletedRows(loginformDataSet4 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] deletedRows = dataSet.QueueData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[32m++                if (((deletedRows != null) [m
[32m++                            && (0 < deletedRows.Length))) {[m
[32m++                    result = (result + this._queueDataTableAdapter.Update(deletedRows));[m
[32m++                    allChangedRows.AddRange(deletedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            if (((updatedRows == null) [m
[32m++                        || (updatedRows.Length < 1))) {[m
[32m++                return updatedRows;[m
[32m++            }[m
[32m++            if (((allAddedRows == null) [m
[32m++                        || (allAddedRows.Count < 1))) {[m
[32m++                return updatedRows;[m
[32m++            }[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[32m++                global::System.Data.DataRow row = updatedRows[i];[m
[32m++                if ((allAddedRows.Contains(row) == false)) {[m
[32m++                    realUpdatedRows.Add(row);[m
[32m++                }[m
[32m++            }[m
[32m++            return realUpdatedRows.ToArray();[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update all changes to the dataset.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public virtual int UpdateAll(loginformDataSet4 dataSet) {[m
[32m++            if ((dataSet == null)) {[m
[32m++                throw new global::System.ArgumentNullException("dataSet");[m
[32m++            }[m
[32m++            if ((dataSet.HasChanges() == false)) {[m
[32m++                return 0;[m
[32m++            }[m
[32m++            if (((this._queueDataTableAdapter != null) [m
[32m++                        && (this.MatchTableAdapterConnection(this._queueDataTableAdapter.Connection) == false))) {[m
[32m++                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[32m++                        "tring.");[m
[32m++            }[m
[32m++            global::System.Data.IDbConnection workConnection = this.Connection;[m
[32m++            if ((workConnection == null)) {[m
[32m++                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[32m++                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[32m++            }[m
[32m++            bool workConnOpened = false;[m
[32m++            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[32m++                        == global::System.Data.ConnectionState.Broken)) {[m
[32m++                workConnection.Close();[m
[32m++            }[m
[32m++            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[32m++                workConnection.Open();[m
[32m++                workConnOpened = true;[m
[32m++            }[m
[32m++            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[32m++            if ((workTransaction == null)) {[m
[32m++                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[32m++                        "ctions or the current state is not allowing the transaction to begin.");[m
[32m++            }[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[32m++            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[32m++            int result = 0;[m
[32m++            global::System.Data.DataSet backupDataSet = null;[m
[32m++            if (this.BackupDataSetBeforeUpdate) {[m
[32m++                backupDataSet = new global::System.Data.DataSet();[m
[32m++                backupDataSet.Merge(dataSet);[m
[32m++            }[m
[32m++            try {[m
[32m++                // ---- Prepare for update -----------[m
[32m++                //[m
[32m++                if ((this._queueDataTableAdapter != null)) {[m
[32m++                    revertConnections.Add(this._queueDataTableAdapter, this._queueDataTableAdapter.Connection);[m
[32m++                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[32m++                    this._queueDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[32m++                    if (this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[32m++                        this._queueDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[32m++                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueDataTableAdapter.Adapter);[m
[32m++                    }[m
[32m++                }[m
[32m++                // [m
[32m++                //---- Perform updates -----------[m
[32m++                //[m
[32m++                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[32m++                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m++                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m++                }[m
[32m++                else {[m
[32m++                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m++                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m++                }[m
[32m++                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[32m++                // [m
[32m++                //---- Commit updates -----------[m
[32m++                //[m
[32m++                workTransaction.Commit();[m
[32m++                if ((0 < allAddedRows.Count)) {[m
[32m++                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m++                    allAddedRows.CopyTo(rows);[m
[32m++                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.DataRow row = rows[i];[m
[32m++                        row.AcceptChanges();[m
[32m++                    }[m
[32m++                }[m
[32m++                if ((0 < allChangedRows.Count)) {[m
[32m++                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[32m++                    allChangedRows.CopyTo(rows);[m
[32m++                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.DataRow row = rows[i];[m
[32m++                        row.AcceptChanges();[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            catch (global::System.Exception ex) {[m
[32m++                workTransaction.Rollback();[m
[32m++                // ---- Restore the dataset -----------[m
[32m++                if (this.BackupDataSetBeforeUpdate) {[m
[32m++                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[32m++                    dataSet.Clear();[m
[32m++                    dataSet.Merge(backupDataSet);[m
[32m++                }[m
[32m++                else {[m
[32m++                    if ((0 < allAddedRows.Count)) {[m
[32m++                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m++                        allAddedRows.CopyTo(rows);[m
[32m++                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                            global::System.Data.DataRow row = rows[i];[m
[32m++                            row.AcceptChanges();[m
[32m++                            row.SetAdded();[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                throw ex;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if (workConnOpened) {[m
[32m++                    workConnection.Close();[m
[32m++                }[m
[32m++                if ((this._queueDataTableAdapter != null)) {[m
[32m++                    this._queueDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueDataTableAdapter]));[m
[32m++                    this._queueDataTableAdapter.Transaction = null;[m
[32m++                }[m
[32m++                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[32m++                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[32m++                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[32m++                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[32m++                        adapter.AcceptChangesDuringUpdate = true;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[32m++            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[32m++            if ((this._connection != null)) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            if (((this.Connection == null) [m
[32m++                        || (inputConnection == null))) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update Order Option[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public enum UpdateOrderOption {[m
[32m++            [m
[32m++            InsertUpdateDelete = 0,[m
[32m++            [m
[32m++            UpdateInsertDelete = 1,[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Used to sort self-referenced table's rows[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[32m++            [m
[32m++            private global::System.Data.DataRelation _relation;[m
[32m++            [m
[32m++            private int _childFirst;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[32m++                this._relation = relation;[m
[32m++                if (childFirst) {[m
[32m++                    this._childFirst = -1;[m
[32m++                }[m
[32m++                else {[m
[32m++                    this._childFirst = 1;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[32m++                global::System.Diagnostics.Debug.Assert((row != null));[m
[32m++                global::System.Data.DataRow root = row;[m
[32m++                distance = 0;[m
[32m++[m
[32m++                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[32m++                traversedRows[row] = row;[m
[32m++[m
[32m++                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m++                for ([m
[32m++                ; ((parent != null) [m
[32m++                            && (traversedRows.ContainsKey(parent) == false)); [m
[32m++                ) {[m
[32m++                    distance = (distance + 1);[m
[32m++                    root = parent;[m
[32m++                    traversedRows[parent] = parent;[m
[32m++                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m++                }[m
[32m++[m
[32m++                if ((distance == 0)) {[m
[32m++                    traversedRows.Clear();[m
[32m++                    traversedRows[row] = row;[m
[32m++                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m++                    for ([m
[32m++                    ; ((parent != null) [m
[32m++                                && (traversedRows.ContainsKey(parent) == false)); [m
[32m++                    ) {[m
[32m++                        distance = (distance + 1);[m
[32m++                        root = parent;[m
[32m++                        traversedRows[parent] = parent;[m
[32m++                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m++                    }[m
[32m++                }[m
[32m++[m
[32m++                return root;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[32m++                if (object.ReferenceEquals(row1, row2)) {[m
[32m++                    return 0;[m
[32m++                }[m
[32m++                if ((row1 == null)) {[m
[32m++                    return -1;[m
[32m++                }[m
[32m++                if ((row2 == null)) {[m
[32m++                    return 1;[m
[32m++                }[m
[32m++[m
[32m++                int distance1 = 0;[m
[32m++                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[32m++[m
[32m++                int distance2 = 0;[m
[32m++                gwarning: in the working copy of 'capstoneproject/loginformDataSet4.xsd', LF will be replaced by CRLF the next time Git touches it
lobal::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[32m++[m
[32m++                if (object.ReferenceEquals(root1, root2)) {[m
[32m++                    return (this._childFirst * distance1.CompareTo(distance2));[m
[32m++                }[m
[32m++                else {[m
[32m++                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[32m++                                    && (root2.Table != null)));[m
[32m++                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[32m++                        return -1;[m
[32m++                    }[m
[32m++                    else {[m
[32m++                        return 1;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++}[m
[32m++[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  #pragma warning restore 1591[m
[1mdiff --cc capstoneproject/loginformDataSet4.xsd[m
[1mindex 2c82418,7ab2724..0000000[m
[1m--- a/capstoneproject/loginformDataSet4.xsd[m
[1m+++ b/capstoneproject/loginformDataSet4.xsd[m
[36m@@@ -1,122 -1,122 +1,246 @@@[m
[31m -ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[31m -<xs:schema id="loginformDataSet4" targetNamespace="http://tempuri.org/loginformDataSet4.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet4.xsd" xmlns="http://tempuri.org/loginformDataSet4.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[31m -  <xs:annotation>[m
[31m -    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[31m -      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[31m -        <Connections>[m
[31m -          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[31m -        </Connections>[m
[31m -        <Tables>[m
[31m -          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueDataTableAdapter" GeneratorDataComponentClassName="QueueDataTableAdapter" Name="QueueData" UserDataComponentName="QueueDataTableAdapter">[m
[31m -            <MainSource>[m
[31m -              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[31m -                <DeleteCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_QueueDate = 1 AND [QueueDate] IS NULL) OR ([QueueDate] = @Original_QueueDate)))</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_QueueDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </DeleteCommand>[m
[31m -                <InsertCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate);[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM QueueData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </InsertCommand>[m
[31m -                <SelectCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM dbo.QueueData</CommandText>[m
[31m -                    <Parameters />[m
[31m -                  </DbCommand>[m
[31m -                </SelectCommand>[m
[31m -                <UpdateCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [QueueDate] = @QueueDate WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_QueueDate = 1 AND [QueueDate] IS NULL) OR ([QueueDate] = @Original_QueueDate)));[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM QueueData WHERE (id = @id)</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_QueueDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </UpdateCommand>[m
[31m -              </DbSource>[m
[31m -            </MainSource>[m
[31m -            <Mappings>[m
[31m -              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[31m -              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[31m -              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[31m -              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[31m -              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[31m -              <Mapping SourceColumn="QueueDate" DataSetColumn="QueueDate" />[m
[31m -            </Mappings>[m
[31m -            <Sources />[m
[31m -          </TableAdapter>[m
[31m -        </Tables>[m
[31m -        <Sources />[m
[31m -      </DataSource>[m
[31m -    </xs:appinfo>[m
[31m -  </xs:annotation>[m
[31m -  <xs:element name="loginformDataSet4" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet4" msprop:Generator_UserDSName="loginformDataSet4">[m
[31m -    <xs:complexType>[m
[31m -      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[31m -        <xs:element name="QueueData" msprop:Generator_TableClassName="QueueDataDataTable" msprop:Generator_TableVarName="tableQueueData" msprop:Generator_TablePropName="QueueData" msprop:Generator_RowDeletingName="QueueDataRowDeleting" msprop:Generator_RowChangingName="QueueDataRowChanging" msprop:Generator_RowEvHandlerName="QueueDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueDataRowDeleted" msprop:Generator_UserTableName="QueueData" msprop:Generator_RowChangedName="QueueDataRowChanged" msprop:Generator_RowEvArgName="QueueDataRowChangeEvent" msprop:Generator_RowClassName="QueueDataRow">[m
[31m -          <xs:complexType>[m
[31m -            <xs:sequence>[m
[31m -              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[31m -              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="2147483647" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[31m -              <xs:element name="QueueDate" msprop:Generator_ColumnVarNameInTable="columnQueueDate" msprop:Generator_ColumnPropNameInRow="QueueDate" msprop:Generator_ColumnPropNameInTable="QueueDateColumn" msprop:Generator_UserColumnName="QueueDate" type="xs:dateTime" minOccurs="0" />[m
[31m -            </xs:sequence>[m
[31m -          </xs:complexType>[m
[31m -        </xs:element>[m
[31m -      </xs:choice>[m
[31m -    </xs:complexType>[m
[31m -    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[31m -      <xs:selector xpath=".//mstns:QueueData" />[m
[31m -      <xs:field xpath="mstns:id" />[m
[31m -    </xs:unique>[m
[31m -  </xs:element>[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m +<xs:schema id="loginformDataSet4" targetNamespace="http://tempuri.org/loginformDataSet4.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet4.xsd" xmlns="http://tempuri.org/loginformDataSet4.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[32m +  <xs:annotation>[m
[32m +    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m +      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m +        <Connections>[m
[32m +          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[32m +        </Connections>[m
[32m +        <Tables>[m
[32m +          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueDataTableAdapter" GeneratorDataComponentClassName="QueueDataTableAdapter" Name="QueueData" UserDataComponentName="QueueDataTableAdapter">[m
[32m +            <MainSource>[m
[32m +              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[32m +                <DeleteCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_QueueDate = 1 AND [QueueDate] IS NULL) OR ([QueueDate] = @Original_QueueDate)))</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_QueueDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </DeleteCommand>[m
[32m +                <InsertCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate);[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM QueueData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </InsertCommand>[m
[32m +                <SelectCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM dbo.QueueData</CommandText>[m
[32m +                    <Parameters />[m
[32m +                  </DbCommand>[m
[32m +                </SelectCommand>[m
[32m +                <UpdateCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [QueueDate] = @QueueDate WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_QueueDate = 1 AND [QueueDate] IS NULL) OR ([QueueDate] = @Original_QueueDate)));[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM QueueData WHERE (id = @id)</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_QueueDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </UpdateCommand>[m
[32m +              </DbSource>[m
[32m +            </MainSource>[m
[32m +            <Mappings>[m
[32m +              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[32m +              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[32m +              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[32m +              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[32m +              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[32m +              <Mapping SourceColumn="QueueDate" DataSetColumn="QueueDate" />[m
[32m +            </Mappings>[m
[32m +            <Sources />[m
[32m +          </TableAdapter>[m
[32m +        </Tables>[m
[32m +        <Sources />[m
[32m +      </DataSource>[m
[32m +    </xs:appinfo>[m
[32m +  </xs:annotation>[m
[32m +  <xs:element name="loginformDataSet4" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet4" msprop:Generator_UserDSName="loginformDataSet4">[m
[32m +    <xs:complexType>[m
[32m +      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[32m +        <xs:element name="QueueData" msprop:Generator_TableClassName="QueueDataDataTable" msprop:Generator_TableVarName="tableQueueData" msprop:Generator_TablePropName="QueueData" msprop:Generator_RowDeletingName="QueueDataRowDeleting" msprop:Generator_RowChangingName="QueueDataRowChanging" msprop:Generator_RowEvHandlerName="QueueDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueDataRowDeleted" msprop:Generator_UserTableName="QueueData" msprop:Generator_RowChangedName="QueueDataRowChanged" msprop:Generator_RowEvArgName="QueueDataRowChangeEvent" msprop:Generator_RowClassName="QueueDataRow">[m
[32m +          <xs:complexType>[m
[32m +            <xs:sequence>[m
[32m +              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[32m +              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="2147483647" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[32m +              <xs:element name="QueueDate" msprop:Generator_ColumnVarNameInTable="columnQueueDate" msprop:Generator_ColumnPropNameInRow="QueueDate" msprop:Generator_ColumnPropNameInTable="QueueDateColumn" msprop:Generator_UserColumnName="QueueDate" type="xs:dateTime" minOccurs="0" />[m
[32m +            </xs:sequence>[m
[32m +          </xs:complexType>[m
[32m +        </xs:element>[m
[32m +      </xs:choice>[m
[32m +    </xs:complexType>[m
[32m +    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[32m +      <xs:selector xpath=".//mstns:QueueData" />[m
[32m +      <xs:field xpath="mstns:id" />[m
[32m +    </xs:unique>[m
[32m +  </xs:element>[m
[32m++=======[m
[32m++ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m++<xs:schema id="loginformDataSet4" targetNamespace="http://tempuri.org/loginformDataSet4.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet4.xsd" xmlns="http://tempuri.org/loginformDataSet4.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[32m++  <xs:annotation>[m
[32m++    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m++      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m++        <Connections>[m
[32m++          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[32m++        </Connections>[m
[32m++        <Tables>[m
[32m++          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueDataTableAdapter" GeneratorDataComponentClassName="QueueDataTableAdapter" Name="QueueData" UserDataComponentName="QueueDataTableAdapter">[m
[32m++            <MainSource>[m
[32m++              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[32m++                <DeleteCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>DELETE FROM [dbo].[QueueData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_QueueDate = 1 AND [QueueDate] IS NULL) OR ([QueueDate] = @Original_QueueDate)))</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_QueueDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </DeleteCommand>[m
[32m++                <InsertCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>INSERT INTO [dbo].[QueueData] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate);[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM QueueData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </InsertCommand>[m
[32m++                <SelectCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM dbo.QueueData</CommandText>[m
[32m++                    <Parameters />[m
[32m++                  </DbCommand>[m
[32m++                </SelectCommand>[m
[32m++                <UpdateCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>UPDATE [dbo].[QueueData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [QueueDate] = @QueueDate WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ((@IsNull_QueueDate = 1 AND [QueueDate] IS NULL) OR ([QueueDate] = @Original_QueueDate)));[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber, QueueDate FROM QueueData WHERE (id = @id)</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_QueueDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="true" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </UpdateCommand>[m
[32m++              </DbSource>[m
[32m++            </MainSource>[m
[32m++            <Mappings>[m
[32m++              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[32m++              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[32m++              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[32m++              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[32m++              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[32m++              <Mapping SourceColumn="QueueDate" DataSetColumn="QueueDate" />[m
[32m++            </Mappings>[m
[32m++            <Sources />[m
[32m++          </TableAdapter>[m
[32m++        </Tables>[m
[32m++        <Sources />[m
[32m++      </DataSource>[m
[32m++    </xs:appinfo>[m
[32m++  </xs:annotation>[m
[32m++  <xs:element name="loginformDataSet4" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet4" msprop:Generator_UserDSName="loginformDataSet4">[m
[32m++    <xs:complexType>[m
[32m++      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[32m++        <xs:element name="QueueData" msprop:Generator_TableClassName="QueueDataDataTable" msprop:Generator_TableVarName="tableQueueData" msprop:Generator_TablePropName="QueueData" msprop:Generator_RowDeletingName="QueueDataRowDeleting" msprop:Generator_RowChangingName="QueueDataRowChanging" msprop:Generator_RowEvHandlerName="QueueDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueDataRowDeleted" msprop:Generator_UserTableName="QueueData" msprop:Generator_RowChangedName="QueueDataRowChanged" msprop:Generator_RowEvArgName="QueueDataRowChangeEvent" msprop:Generator_RowClassName="QueueDataRow">[m
[32m++          <xs:complexType>[m
[32m++            <xs:sequence>[m
[32m++              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[32m++              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartmentwarning: in the working copy of 'capstoneproject/loginformDataSet5.Designer.cs', LF will be replaced by CRLF the next time Git touches it
" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="2147483647" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[32m++              <xs:element name="QueueDate" msprop:Generator_ColumnVarNameInTable="columnQueueDate" msprop:Generator_ColumnPropNameInRow="QueueDate" msprop:Generator_ColumnPropNameInTable="QueueDateColumn" msprop:Generator_UserColumnName="QueueDate" type="xs:dateTime" minOccurs="0" />[m
[32m++            </xs:sequence>[m
[32m++          </xs:complexType>[m
[32m++        </xs:element>[m
[32m++      </xs:choice>[m
[32m++    </xs:complexType>[m
[32m++    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[32m++      <xs:selector xpath=".//mstns:QueueData" />[m
[32m++      <xs:field xpath="mstns:id" />[m
[32m++    </xs:unique>[m
[32m++  </xs:element>[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  </xs:schema>[m
[1mdiff --cc capstoneproject/loginformDataSet5.Designer.cs[m
[1mindex d3fedb7,9ef25a2..0000000[m
[1m--- a/capstoneproject/loginformDataSet5.Designer.cs[m
[1m+++ b/capstoneproject/loginformDataSet5.Designer.cs[m
[36m@@@ -1,1597 -1,1597 +1,3196 @@@[m
[31m -ï»¿//------------------------------------------------------------------------------[m
[31m -// <auto-generated>[m
[31m -//     This code was generated by a tool.[m
[31m -//     Runtime Version:4.0.30319.42000[m
[31m -//[m
[31m -//     Changes to this file may cause incorrect behavior and will be lost if[m
[31m -//     the code is regenerated.[m
[31m -// </auto-generated>[m
[31m -//------------------------------------------------------------------------------[m
[31m -[m
[31m -#pragma warning disable 1591[m
[31m -[m
[31m -namespace capstoneproject {[m
[31m -    [m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///Represents a strongly typed in-memory cache of data.[m
[31m -    ///</summary>[m
[31m -    [global::System.Serializable()][m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[31m -    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet5")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[31m -    public partial class loginformDataSet5 : global::System.Data.DataSet {[m
[31m -        [m
[31m -        private QueueStudentDataDataTable tableQueueStudentData;[m
[31m -        [m
[31m -        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public loginformDataSet5() {[m
[31m -            this.BeginInit();[m
[31m -            this.InitClass();[m
[31m -            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -            base.Tables.CollectionChanged += schemaChangedHandler;[m
[31m -            base.Relations.CollectionChanged += schemaChangedHandler;[m
[31m -            this.EndInit();[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected loginformDataSet5(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[31m -                base(info, context, false) {[m
[31m -            if ((this.IsBinarySerialized(info, context) == true)) {[m
[31m -                this.InitVars(false);[m
[31m -                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[31m -                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[31m -                return;[m
[31m -            }[m
[31m -            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[31m -            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[31m -                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[31m -                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[31m -                if ((ds.Tables["QueueStudentData"] != null)) {[m
[31m -                    base.Tables.Add(new QueueStudentDataDataTable(ds.Tables["QueueStudentData"]));[m
[31m -                }[m
[31m -                this.DataSetName = ds.DataSetName;[m
[31m -                this.Prefix = ds.Prefix;[m
[31m -                this.Namespace = ds.Namespace;[m
[31m -                this.Locale = ds.Locale;[m
[31m -                this.CaseSensitive = ds.CaseSensitive;[m
[31m -                this.EnforceConstraints = ds.EnforceConstraints;[m
[31m -                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            else {[m
[31m -                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[31m -            }[m
[31m -            this.GetSerializationData(info, context);[m
[31m -            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -            base.Tables.CollectionChanged += schemaChangedHandler;[m
[31m -            this.Relations.CollectionChanged += schemaChangedHandler;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[31m -        public QueueStudentDataDataTable QueueStudentData {[m
[31m -            get {[m
[31m -                return this.tableQueueStudentData;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.BrowsableAttribute(true)][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[31m -        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[31m -            get {[m
[31m -                return this._schemaSerializationMode;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._schemaSerializationMode = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[31m -        public new global::System.Data.DataTableCollection Tables {[m
[31m -            get {[m
[31m -                return base.Tables;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[31m -        public new global::System.Data.DataRelationCollection Relations {[m
[31m -            get {[m
[31m -                return base.Relations;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override void InitializeDerivedDataSet() {[m
[31m -            this.BeginInit();[m
[31m -            this.InitClass();[m
[31m -            this.EndInit();[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public override global::System.Data.DataSet Clone() {[m
[31m -            loginformDataSet5 cln = ((loginformDataSet5)(base.Clone()));[m
[31m -            cln.InitVars();[m
[31m -            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[31m -            return cln;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override bool ShouldSerializeTables() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override bool ShouldSerializeRelations() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[31m -            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[31m -                this.Reset();[m
[31m -                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[31m -                ds.ReadXml(reader);[m
[31m -                if ((ds.Tables["QueueStudentData"] != null)) {[m
[31m -                    base.Tables.Add(new QueueStudentDataDataTable(ds.Tables["QueueStudentData"]));[m
[31m -                }[m
[31m -                this.DataSetName = ds.DataSetName;[m
[31m -                this.Prefix = ds.Prefix;[m
[31m -                this.Namespace = ds.Namespace;[m
[31m -                this.Locale = ds.Locale;[m
[31m -                this.CaseSensitive = ds.CaseSensitive;[m
[31m -                this.EnforceConstraints = ds.EnforceConstraints;[m
[31m -                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            else {[m
[31m -                this.ReadXml(reader);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[31m -            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[31m -            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[31m -            stream.Position = 0;[m
[31m -            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal void InitVars() {[m
[31m -            this.InitVars(true);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal void InitVars(bool initTable) {[m
[31m -            this.tableQueueStudentData = ((QueueStudentDataDataTable)(base.Tables["QueueStudentData"]));[m
[31m -            if ((initTable == true)) {[m
[31m -                if ((this.tableQueueStudentData != null)) {[m
[31m -                    this.tableQueueStudentData.InitVars();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitClass() {[m
[31m -            this.DataSetName = "loginformDataSet5";[m
[31m -            this.Prefix = "";[m
[31m -            this.Namespace = "http://tempuri.org/loginformDataSet5.xsd";[m
[31m -            this.EnforceConstraints = true;[m
[31m -            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -            this.tableQueueStudentData = new QueueStudentDataDataTable();[m
[31m -            base.Tables.Add(this.tableQueueStudentData);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private bool ShouldSerializeQueueStudentData() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[31m -            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[31m -            loginformDataSet5 ds = new loginformDataSet5();[m
[31m -            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[31m -            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[31m -            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -            any.Namespace = ds.Namespace;[m
[31m -            sequence.Items.Add(any);[m
[31m -            type.Particle = sequence;[m
[31m -            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[31m -            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[31m -                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[31m -                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[31m -                try {[m
[31m -                    global::System.Xml.Schema.XmlSchema schema = null;[m
[31m -                    dsSchema.Write(s1);[m
[31m -                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[31m -                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[31m -                        s2.SetLength(0);[m
[31m -                        schema.Write(s2);[m
[31m -                        if ((s1.Length == s2.Length)) {[m
[31m -                            s1.Position = 0;[m
[31m -                            s2.Position = 0;[m
[31m -                            for (; ((s1.Position != s1.Length) [m
[31m -                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[31m -                                ;[m
[31m -                            }[m
[31m -                            if ((s1.Position == s1.Length)) {[m
[31m -                                return type;[m
[31m -                            }[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                finally {[m
[31m -                    if ((s1 != null)) {[m
[31m -                        s1.Close();[m
[31m -                    }[m
[31m -                    if ((s2 != null)) {[m
[31m -                        s2.Close();[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            xs.Add(dsSchema);[m
[31m -            return type;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public delegate void QueueStudentDataRowChangeEventHandler(object sender, QueueStudentDataRowChangeEvent e);[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Represents the strongly named DataTable class.[m
[31m -        ///</summary>[m
[31m -        [global::System.Serializable()][m
[31m -        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[31m -        public partial class QueueStudentDataDataTable : global::System.Data.TypedTableBase<QueueStudentDataRow> {[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnid;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnName;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnDepartment;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnPurpose;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnQueueNumber;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnQueueDate;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnQueueCode;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueStudentDataDataTable() {[m
[31m -                this.TableName = "QueueStudentData";[m
[31m -                this.BeginInit();[m
[31m -                this.InitClass();[m
[31m -                this.EndInit();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal QueueStudentDataDataTable(global::System.Data.DataTable table) {[m
[31m -                this.TableName = table.TableName;[m
[31m -                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[31m -                    this.CaseSensitive = table.CaseSensitive;[m
[31m -                }[m
[31m -                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[31m -                    this.Locale = table.Locale;[m
[31m -                }[m
[31m -                if ((table.Namespace != table.DataSet.Namespace)) {[m
[31m -                    this.Namespace = table.Namespace;[m
[31m -                }[m
[31m -                this.Prefix = table.Prefix;[m
[31m -                this.MinimumCapacity = table.MinimumCapacity;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected QueueStudentDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[31m -                    base(info, context) {[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn idColumn {[m
[31m -                get {[m
[31m -                    return this.columnid;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn NameColumn {[m
[31m -                get {[m
[31m -                    return this.columnName;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn DepartmentColumn {[m
[31m -                get {[m
[31m -                    return this.columnDepartment;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn PurposeColumn {[m
[31m -                get {[m
[31m -                    return this.columnPurpose;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn QueueNumberColumn {[m
[31m -                get {[m
[31m -                    return this.columnQueueNumber;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn QueueDateColumn {[m
[31m -                get {[m
[31m -                    return this.columnQueueDate;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn QueueCodeColumn {[m
[31m -                get {[m
[31m -                    return this.columnQueueCode;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            [global::System.ComponentModel.Browsable(false)][m
[31m -            public int Count {[m
[31m -                get {[m
[31m -                    return this.Rows.Count;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueStudentDataRow this[int index] {[m
[31m -                get {[m
[31m -                    return ((QueueStudentDataRow)(this.Rows[index]));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowChanging;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowChanged;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowDeleting;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowDeleted;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void AddQueueStudentDataRow(QueueStudentDataRow row) {[m
[31m -                this.Rows.Add(row);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueStudentDataRow AddQueueStudentDataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode) {[m
[31m -                QueueStudentDataRow rowQueueStudentDataRow = ((QueueStudentDataRow)(this.NewRow()));[m
[31m -                object[] columnValuesArray = new object[] {[m
[31m -                        null,[m
[31m -                        Name,[m
[31m -                        Department,[m
[31m -                        Purpose,[m
[31m -                        QueueNumber,[m
[31m -                        QueueDate,[m
[31m -                        QueueCode};[m
[31m -                rowQueueStudentDataRow.ItemArray = columnValuesArray;[m
[31m -                this.Rows.Add(rowQueueStudentDataRow);[m
[31m -                return rowQueueStudentDataRow;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueStudentDataRow FindByid(int id) {[m
[31m -                return ((QueueStudentDataRow)(this.Rows.Find(new object[] {[m
[31m -                            id})));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public override global::System.Data.DataTable Clone() {[m
[31m -                QueueStudentDataDataTable cln = ((QueueStudentDataDataTable)(base.Clone()));[m
[31m -                cln.InitVars();[m
[31m -                return cln;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Data.DataTable CreateInstance() {[m
[31m -                return new QueueStudentDataDataTable();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal void InitVars() {[m
[31m -                this.columnid = base.Columns["id"];[m
[31m -                this.columnName = base.Columns["Name"];[m
[31m -                this.columnDepartment = base.Columns["Department"];[m
[31m -                this.columnPurpose = base.Columns["Purpose"];[m
[31m -                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[31m -                this.columnQueueDate = base.Columns["QueueDate"];[m
[31m -                this.columnQueueCode = base.Columns["QueueCode"];[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            private void InitClass() {[m
[31m -                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnid);[m
[31m -                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnName);[m
[31m -                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnDepartment);[m
[31m -                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnPurpose);[m
[31m -                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnQueueNumber);[m
[31m -                this.columnQueueDate = new global::System.Data.DataColumn("QueueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnQueueDate);[m
[31m -                this.columnQueueCode = new global::System.Data.DataColumn("QueueCode", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnQueueCode);[m
[31m -                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[31m -                                this.columnid}, true));[m
[31m -                this.columnid.AutoIncrement = true;[m
[31m -                this.columnid.AutoIncrementSeed = -1;[m
[31m -                this.columnid.AutoIncrementStep = -1;[m
[31m -                this.columnid.AllowDBNull = false;[m
[31m -                this.columnid.ReadOnly = true;[m
[31m -                this.columnid.Unique = true;[m
[31m -                this.columnName.AllowDBNull = false;[m
[31m -                this.columnName.MaxLength = 50;[m
[31m -                this.columnDepartment.AllowDBNull = false;[m
[31m -                this.columnDepartment.MaxLength = 50;[m
[31m -                this.columnPurpose.AllowDBNull = false;[m
[31m -                this.columnPurpose.MaxLength = 2147483647;[m
[31m -                this.columnQueueNumber.AllowDBNull = false;[m
[31m -                this.columnQueueDate.AllowDBNull = false;[m
[31m -                this.columnQueueCode.AllowDBNull = false;[m
[31m -                this.columnQueueCode.MaxLength = 10;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueStudentDataRow NewQueueStudentDataRow() {[m
[31m -                return ((QueueStudentDataRow)(this.NewRow()));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[31m -                return new QueueStudentDataRow(builder);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Type GetRowType() {[m
[31m -                return typeof(QueueStudentDataRow);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowChanged(e);[m
[31m -                if ((this.QueueStudentDataRowChanged != null)) {[m
[31m -                    this.QueueStudentDataRowChanged(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowChanging(e);[m
[31m -                if ((this.QueueStudentDataRowChanging != null)) {[m
[31m -                    this.QueueStudentDataRowChanging(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowDeleted(e);[m
[31m -                if ((this.QueueStudentDataRowDeleted != null)) {[m
[31m -                    this.QueueStudentDataRowDeleted(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowDeleting(e);[m
[31m -                if ((this.QueueStudentDataRowDeleting != null)) {[m
[31m -                    this.QueueStudentDataRowDeleting(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void RemoveQueueStudentDataRow(QueueStudentDataRow row) {[m
[31m -                this.Rows.Remove(row);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[31m -                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[31m -                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[31m -                loginformDataSet5 ds = new loginformDataSet5();[m
[31m -                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[31m -                any1.MinOccurs = new decimal(0);[m
[31m -                any1.MaxOccurs = decimal.MaxValue;[m
[31m -                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[31m -                sequence.Items.Add(any1);[m
[31m -                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[31m -                any2.MinOccurs = new decimal(1);[m
[31m -                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[31m -                sequence.Items.Add(any2);[m
[31m -                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[31m -                attribute1.Name = "namespace";[m
[31m -                attribute1.FixedValue = ds.Namespace;[m
[31m -                type.Attributes.Add(attribute1);[m
[31m -                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[31m -                attribute2.Name = "tableTypeName";[m
[31m -                attribute2.FixedValue = "QueueStudentDataDataTable";[m
[31m -                type.Attributes.Add(attribute2);[m
[31m -                type.Particle = sequence;[m
[31m -                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[31m -                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[31m -                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[31m -                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[31m -                    try {[m
[31m -                        global::System.Xml.Schema.XmlSchema schema = null;[m
[31m -                        dsSchema.Write(s1);[m
[31m -                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[31m -                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[31m -                            s2.SetLength(0);[m
[31m -                            schema.Write(s2);[m
[31m -                            if ((s1.Length == s2.Length)) {[m
[31m -                                s1.Position = 0;[m
[31m -                                s2.Position = 0;[m
[31m -                                for (; ((s1.Position != s1.Length) [m
[31m -                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[31m -                                    ;[m
[31m -                                }[m
[31m -                                if ((s1.Position == s1.Length)) {[m
[31m -                                    return type;[m
[31m -                                }[m
[31m -                            }[m
[31m -                        }[m
[31m -                    }[m
[31m -                    finally {[m
[31m -                        if ((s1 != null)) {[m
[31m -                            s1.Close();[m
[31m -                        }[m
[31m -                        if ((s2 != null)) {[m
[31m -                            s2.Close();[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                xs.Add(dsSchema);[m
[31m -                return type;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Represents strongly named DataRow class.[m
[31m -        ///</summary>[m
[31m -        public partial class QueueStudentDataRow : global::System.Data.DataRow {[m
[31m -            [m
[31m -            private QueueStudentDataDataTable tableQueueStudentData;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal QueueStudentDataRow(global::System.Data.DataRowBuilder rb) : [m
[31m -                    base(rb) {[m
[31m -                this.tableQueueStudentData = ((QueueStudentDataDataTable)(this.Table));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int id {[m
[31m -                get {[m
[31m -                    return ((int)(this[this.tableQueueStudentData.idColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueStudentData.idColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Name {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueStudentData.NameColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueStudentData.NameColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Department {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueStudentData.DepartmentColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueStudentData.DepartmentColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Purpose {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueStudentData.PurposeColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueStudentData.PurposeColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int QueueNumber {[m
[31m -                get {[m
[31m -                    return ((int)(this[this.tableQueueStudentData.QueueNumberColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueStudentData.QueueNumberColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public System.DateTime QueueDate {[m
[31m -                get {[m
[31m -                    return ((global::System.DateTime)(this[this.tableQueueStudentData.QueueDateColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueStudentData.QueueDateColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string QueueCode {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueStudentData.QueueCodeColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueStudentData.QueueCodeColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Row event argument class[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public class QueueStudentDataRowChangeEvent : global::System.EventArgs {[m
[31m -            [m
[31m -            private QueueStudentDataRow eventRow;[m
[31m -            [m
[31m -            private global::System.Data.DataRowAction eventAction;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueStudentDataRowChangeEvent(QueueStudentDataRow row, global::System.Data.DataRowAction action) {[m
[31m -                this.eventRow = row;[m
[31m -                this.eventAction = action;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueStudentDataRow Row {[m
[31m -                get {[m
[31m -                    return this.eventRow;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataRowAction Action {[m
[31m -                get {[m
[31m -                    return this.eventAction;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -}[m
[31m -namespace capstoneproject.loginformDataSet5TableAdapters {[m
[31m -    [m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///Represents the connection and commands used to retrieve and save data.[m
[31m -    ///</summary>[m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.ComponentModel.DataObjectAttribute(true)][m
[31m -    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[31m -        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -    public partial class QueueStudentDataTableAdapter : global::System.ComponentModel.Component {[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlConnection _connection;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[31m -        [m
[31m -        private bool _clearBeforeFill;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public QueueStudentDataTableAdapter() {[m
[31m -            this.ClearBeforeFill = true;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[31m -            get {[m
[31m -                if ((this._adapter == null)) {[m
[31m -                    this.InitAdapter();[m
[31m -                }[m
[31m -                return this._adapter;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[31m -            get {[m
[31m -                if ((this._connection == null)) {[m
[31m -                    this.InitConnection();[m
[31m -                }[m
[31m -                return this._connection;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._connection = value;[m
[31m -                if ((this.Adapter.InsertCommand != null)) {[m
[31m -                    this.Adapter.InsertCommand.Connection = value;[m
[31m -                }[m
[31m -                if ((this.Adapter.DeleteCommand != null)) {[m
[31m -                    this.Adapter.DeleteCommand.Connection = value;[m
[31m -                }[m
[31m -                if ((this.Adapter.UpdateCommand != null)) {[m
[31m -                    this.Adapter.UpdateCommand.Connection = value;[m
[31m -                }[m
[31m -                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[31m -                    if ((this.CommandCollection[i] != null)) {[m
[31m -                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[31m -            get {[m
[31m -                return this._transaction;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._transaction = value;[m
[31m -                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[31m -                    this.CommandCollection[i].Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.DeleteCommand != null))) {[m
[31m -                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.InsertCommand != null))) {[m
[31m -                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.UpdateCommand != null))) {[m
[31m -                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[31m -            get {[m
[31m -                if ((this._commandCollection == null)) {[m
[31m -                    this.InitCommandCollection();[m
[31m -                }[m
[31m -                return this._commandCollection;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public bool ClearBeforeFill {[m
[31m -            get {[m
[31m -                return this._clearBeforeFill;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._clearBeforeFill = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitAdapter() {[m
[31m -            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[31m -            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[31m -            tableMapping.SourceTable = "Table";[m
[31m -            tableMapping.DataSetTable = "QueueStudentData";[m
[31m -            tableMapping.ColumnMappings.Add("id", "id");[m
[31m -            tableMapping.ColumnMappings.Add("Name", "Name");[m
[31m -            tableMapping.ColumnMappings.Add("Department", "Department");[m
[31m -            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[31m -            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[31m -            tableMapping.ColumnMappings.Add("QueueDate", "QueueDate");[m
[31m -            tableMapping.ColumnMappings.Add("QueueCode", "QueueCode");[m
[31m -            this._adapter.TableMappings.Add(tableMapping);[m
[31m -            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.DeleteCommand.Connection = this.Connection;[m
[31m -            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[QueueStudentData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode))";[m
[31m -            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.InsertCommand.Connection = this.Connection;[m
[31m -            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[QueueStudentData] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate, @QueueCode);[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM QueueStudentData WHERE (id = SCOPE_IDENTITY())";[m
[31m -            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.UpdateCommand.Connection = this.Connection;[m
[31m -            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueStudentData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [QueueDate] = @QueueDate, [QueueCode] = @QueueCode WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode));[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM QueueStudentData WHERE (id = @id)";[m
[31m -            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitConnection() {[m
[31m -            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[31m -            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitCommandCollection() {[m
[31m -            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[31m -            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._commandCollection[0].Connection = this.Connection;[m
[31m -            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM dbo." +[m
[31m -                "QueueStudentData";[m
[31m -            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[31m -        public virtual int Fill(loginformDataSet5.QueueStudentDataDataTable dataTable) {[m
[31m -            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[31m -            if ((this.ClearBeforeFill == true)) {[m
[31m -                dataTable.Clear();[m
[31m -            }[m
[31m -            int returnValue = this.Adapter.Fill(dataTable);[m
[31m -            return returnValue;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[31m -        public virtual loginformDataSet5.QueueStudentDataDataTable GetData() {[m
[31m -            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[31m -            loginformDataSet5.QueueStudentDataDataTable dataTable = new loginformDataSet5.QueueStudentDataDataTable();[m
[31m -            this.Adapter.Fill(dataTable);[m
[31m -            return dataTable;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(loginformDataSet5.QueueStudentDataDataTable dataTable) {[m
[31m -            return this.Adapter.Update(dataTable);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(loginformDataSet5 dataSet) {[m
[31m -            return this.Adapter.Update(dataSet, "QueueStudentData");[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[31m -            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[31m -                        dataRow});[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[31m -            return this.Adapter.Update(dataRows);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[31m -        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, System.DateTime Original_QueueDate, string Original_QueueCode) {[m
[31m -            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[31m -            if ((Original_Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[31m -            }[m
[31m -            if ((Original_Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[31m -            }[m
[31m -            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[31m -            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_QueueDate));[m
[31m -            if ((Original_QueueCode == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_QueueCode");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_QueueCode));[m
[31m -            }[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[31m -            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.DeleteCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.DeleteCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[31m -        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode) {[m
[31m -            if ((Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[31m -            }[m
[31m -            if ((Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[31m -            }[m
[31m -            if ((Purpose == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Purpose");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[31m -            }[m
[31m -            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[31m -            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(QueueDate));[m
[31m -            if ((QueueCode == null)) {[m
[31m -                throw new global::System.ArgumentNullException("QueueCode");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(QueueCode));[m
[31m -            }[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[31m -            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.InsertCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.InsertCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[31m -        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, System.DateTime Original_QueueDate, string Original_QueueCode, int id) {[m
[31m -            if ((Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[31m -            }[m
[31m -            if ((Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[31m -            }[m
[31m -            if ((Purpose == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Purpose");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[31m -            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(QueueDate));[m
[31m -            if ((QueueCode == null)) {[m
[31m -                throw new global::System.ArgumentNullException("QueueCode");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(QueueCode));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_id));[m
[31m -            if ((Original_Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Name));[m
[31m -            }[m
[31m -            if ((Original_Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Department));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_QueueNumber));[m
[31m -            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_QueueDate));[m
[31m -            if ((Original_QueueCode == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_QueueCode");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_QueueCode));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(id));[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[31m -            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.UpdateCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.UpdateCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[31m -        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, System.DateTime Original_QueueDate, string Original_QueueCode) {[m
[31m -            return this.Update(Name, Department, Purpose, QueueNumber, QueueDate, QueueCode, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_QueueDate, Original_QueueCode, Original_id);[m
[31m -        }[m
[31m -    }[m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[31m -    ///</summary>[m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[31m -        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[31m -    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[31m -        [m
[31m -        private UpdateOrderOption _updateOrder;[m
[31m -        [m
[31m -        private QueueStudentDataTableAdapter _queueStudentDataTableAdapter;[m
[31m -        [m
[31m -        private bool _backupDataSetBeforeUpdate;[m
[31m -        [m
[31m -        private global::System.Data.IDbConnection _connection;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public UpdateOrderOption UpdateOrder {[m
[31m -            get {[m
[31m -                return this._updateOrder;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._updateOrder = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[31m -            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[31m -            "a", "System.Drawing.Design.UITypeEditor")][m
[31m -        public QueueStudentDataTableAdapter QueueStudentDataTableAdapter {[m
[31m -            get {[m
[31m -                return this._queueStudentDataTableAdapter;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._queueStudentDataTableAdapter = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public bool BackupDataSetBeforeUpdate {[m
[31m -            get {[m
[31m -                return this._backupDataSetBeforeUpdate;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._backupDataSetBeforeUpdate = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        public global::System.Data.IDbConnection Connection {[m
[31m -            get {[m
[31m -                if ((this._connection != null)) {[m
[31m -                    return this._connection;[m
[31m -                }[m
[31m -                if (((this._queueStudentDataTableAdapter != null) [m
[31m -                            && (this._queueStudentDataTableAdapter.Connection != null))) {[m
[31m -                    return this._queueStudentDataTableAdapter.Connection;[m
[31m -                }[m
[31m -                return null;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._connection = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        public int TableAdapterInstanceCount {[m
[31m -            get {[m
[31m -                int count = 0;[m
[31m -                if ((this._queueStudentDataTableAdapter != null)) {[m
[31m -                    count = (count + 1);[m
[31m -                }[m
[31m -                return count;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update rows in top-down order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateUpdatedRows(loginformDataSet5 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueStudentDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] updatedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[31m -                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[31m -                if (((updatedRows != null) [m
[31m -                            && (0 < updatedRows.Length))) {[m
[31m -                    result = (result + this._queueStudentDataTableAdapter.Update(updatedRows));[m
[31m -                    allChangedRows.AddRange(updatedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Insert rows in top-down order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateInsertedRows(loginformDataSet5 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueStudentDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] addedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[31m -                if (((addedRows != null) [m
[31m -                            && (0 < addedRows.Length))) {[m
[31m -                    result = (result + this._queueStudentDataTableAdapter.Update(addedRows));[m
[31m -                    allAddedRows.AddRange(addedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Delete rows in bottom-up order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateDeletedRows(loginformDataSet5 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueStudentDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] deletedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[31m -                if (((deletedRows != null) [m
[31m -                            && (0 < deletedRows.Length))) {[m
[31m -                    result = (result + this._queueStudentDataTableAdapter.Update(deletedRows));[m
[31m -                    allChangedRows.AddRange(deletedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            if (((updatedRows == null) [m
[31m -                        || (updatedRows.Length < 1))) {[m
[31m -                return updatedRows;[m
[31m -            }[m
[31m -            if (((allAddedRows == null) [m
[31m -                        || (allAddedRows.Count < 1))) {[m
[31m -                return updatedRows;[m
[31m -            }[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[31m -                global::System.Data.DataRow row = updatedRows[i];[m
[31m -                if ((allAddedRows.Contains(row) == false)) {[m
[31m -                    realUpdatedRows.Add(row);[m
[31m -                }[m
[31m -            }[m
[31m -            return realUpdatedRows.ToArray();[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update all changes to the dataset.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public virtual int UpdateAll(loginformDataSet5 dataSet) {[m
[31m -            if ((dataSet == null)) {[m
[31m -                throw new global::System.ArgumentNullException("dataSet");[m
[31m -            }[m
[31m -            if ((dataSet.HasChanges() == false)) {[m
[31m -                return 0;[m
[31m -            }[m
[31m -            if (((this._queueStudentDataTableAdapter != null) [m
[31m -                        && (this.MatchTableAdapterConnection(this._queueStudentDataTableAdapter.Connection) == false))) {[m
[31m -                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[31m -                        "tring.");[m
[31m -            }[m
[31m -            global::System.Data.IDbConnection workConnection = this.Connection;[m
[31m -            if ((workConnection == null)) {[m
[31m -                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[31m -                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[31m -            }[m
[31m -            bool workConnOpened = false;[m
[31m -            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[31m -                        == global::System.Data.ConnectionState.Broken)) {[m
[31m -                workConnection.Close();[m
[31m -            }[m
[31m -            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[31m -                workConnection.Open();[m
[31m -                workConnOpened = true;[m
[31m -            }[m
[31m -            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[31m -            if ((workTransaction == null)) {[m
[31m -                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[31m -                        "ctions or the current state is not allowing the transaction to begin.");[m
[31m -            }[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[31m -            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[31m -            int result = 0;[m
[31m -            global::System.Data.DataSet backupDataSet = null;[m
[31m -            if (this.BackupDataSetBeforeUpdate) {[m
[31m -                backupDataSet = new global::System.Data.DataSet();[m
[31m -                backupDataSet.Merge(dataSet);[m
[31m -            }[m
[31m -            try {[m
[31m -                // ---- Prepare for update -----------[m
[31m -                //[m
[31m -                if ((this._queueStudentDataTableAdapter != null)) {[m
[31m -                    revertConnections.Add(this._queueStudentDataTableAdapter, this._queueStudentDataTableAdapter.Connection);[m
[31m -                    this._queueStudentDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[31m -                    this._queueStudentDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[31m -                    if (this._queueStudentDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[31m -                        this._queueStudentDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[31m -                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueStudentDataTableAdapter.Adapter);[m
[31m -                    }[m
[31m -                }[m
[31m -                // [m
[31m -                //---- Perform updates -----------[m
[31m -                //[m
[31m -                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[31m -                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[31m -                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[31m -                }[m
[31m -                else {[m
[31m -                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[31m -                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[31m -                }[m
[31m -                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[31m -                // [m
[31m -                //---- Commit updates -----------[m
[31m -                //[m
[31m -                workTransaction.Commit();[m
[31m -                if ((0 < allAddedRows.Count)) {[m
[31m -                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[31m -                    allAddedRows.CopyTo(rows);[m
[31m -                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.DataRow row = rows[i];[m
[31m -                        row.AcceptChanges();[m
[31m -                    }[m
[31m -                }[m
[31m -                if ((0 < allChangedRows.Count)) {[m
[31m -                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[31m -                    allChangedRows.CopyTo(rows);[m
[31m -                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.DataRow row = rows[i];[m
[31m -                        row.AcceptChanges();[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            catch (global::System.Exception ex) {[m
[31m -                workTransaction.Rollback();[m
[31m -                // ---- Restore the dataset -----------[m
[31m -                if (this.BackupDataSetBeforeUpdate) {[m
[31m -                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[31m -                    dataSet.Clear();[m
[31m -                    dataSet.Merge(backupDataSet);[m
[31m -                }[m
[31m -                else {[m
[31m -                    if ((0 < allAddedRows.Count)) {[m
[31m -                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[31m -                        allAddedRows.CopyTo(rows);[m
[31m -                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                            global::System.Data.DataRow row = rows[i];[m
[31m -                            row.AcceptChanges();[m
[31m -                            row.SetAdded();[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                throw ex;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if (workConnOpened) {[m
[31m -                    workConnection.Close();[m
[31m -                }[m
[31m -                if ((this._queueStudentDataTableAdapter != null)) {[m
[31m -                    this._queueStudentDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueStudentDataTableAdapter]));[m
[31m -                    this._queueStudentDataTableAdapter.Transaction = null;[m
[31m -                }[m
[31m -                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[31m -                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[31m -                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[31m -                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[31m -                        adapter.AcceptChangesDuringUpdate = true;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[31m -            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[31m -            if ((this._connection != null)) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            if (((this.Connection == null) [m
[31m -                        || (inputConnection == null))) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update Order Option[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public enum UpdateOrderOption {[m
[31m -            [m
[31m -            InsertUpdateDelete = 0,[m
[31m -            [m
[31m -            UpdateInsertDelete = 1,[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Used to sort self-referenced table's rows[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[31m -            [m
[31m -            private global::System.Data.DataRelation _relation;[m
[31m -            [m
[31m -            private int _childFirst;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[31m -                this._relation = relation;[m
[31m -                if (childFirst) {[m
[31m -                    this._childFirst = -1;[m
[31m -                }[m
[31m -                else {[m
[31m -                    this._childFirst = 1;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[31m -                global::System.Diagnostics.Debug.Assert((row != null));[m
[31m -                global::System.Data.DataRow root = row;[m
[31m -                distance = 0;[m
[31m -[m
[31m -                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[31m -                traversedRows[row] = row;[m
[31m -[m
[31m -                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[31m -                for ([m
[31m -                ; ((parent != null) [m
[31m -                            && (traversedRows.ContainsKey(parent) == false)); [m
[31m -                ) {[m
[31m -                    distance = (distance + 1);[m
[31m -                    root = parent;[m
[31m -                    traversedRows[parent] = parent;[m
[31m -                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[31m -                }[m
[31m -[m
[31m -                if ((distance == 0)) {[m
[31m -                    traversedRows.Clear();[m
[31m -                    traversedRows[row] = row;[m
[31m -                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[31m -                    for ([m
[31m -                    ; ((parent != null) [m
[31m -                                && (traversedRows.ContainsKey(parent) == false)); [m
[31m -                    ) {[m
[31m -                        distance = (distance + 1);[m
[31m -                        root = parent;[m
[31m -                        traversedRows[parent] = parent;[m
[31m -                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[31m -                    }[m
[31m -                }[m
[31m -[m
[31m -                return root;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[31m -                if (object.ReferenceEquals(row1, row2)) {[m
[31m -                    return 0;[m
[31m -                }[m
[31m -                if ((row1 == null)) {[m
[31m -                    return -1;[m
[31m -                }[m
[31m -                if ((row2 == null)) {[m
[31m -                    return 1;[m
[31m -                }[m
[31m -[m
[31m -                int distance1 = 0;[m
[31m -                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[31m -[m
[31m -                int distance2 = 0;[m
[31m -                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[31m -[m
[31m -                if (object.ReferenceEquals(root1, root2)) {[m
[31m -                    return (this._childFirst * distance1.CompareTo(distance2));[m
[31m -                }[m
[31m -                else {[m
[31m -                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[31m -                                    && (root2.Table != null)));[m
[31m -                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[31m -                        return -1;[m
[31m -                    }[m
[31m -                    else {[m
[31m -                        return 1;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -}[m
[31m -[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿//------------------------------------------------------------------------------[m
[32m +// <auto-generated>[m
[32m +//     This code was generated by a tool.[m
[32m +//     Runtime Version:4.0.30319.42000[m
[32m +//[m
[32m +//     Changes to this file may cause incorrect behavior and will be lost if[m
[32m +//     the code is regenerated.[m
[32m +// </auto-generated>[m
[32m +//------------------------------------------------------------------------------[m
[32m +[m
[32m +#pragma warning disable 1591[m
[32m +[m
[32m +namespace capstoneproject {[m
[32m +    [m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///Represents a strongly typed in-memory cache of data.[m
[32m +    ///</summary>[m
[32m +    [global::System.Serializable()][m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[32m +    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet5")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[32m +    public partial class loginformDataSet5 : global::System.Data.DataSet {[m
[32m +        [m
[32m +        private QueueStudentDataDataTable tableQueueStudentData;[m
[32m +        [m
[32m +        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public loginformDataSet5() {[m
[32m +            this.BeginInit();[m
[32m +            this.InitClass();[m
[32m +            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m +            base.Relations.CollectionChanged += schemaChangedHandler;[m
[32m +            this.EndInit();[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected loginformDataSet5(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m +                base(info, context, false) {[m
[32m +            if ((this.IsBinarySerialized(info, context) == true)) {[m
[32m +                this.InitVars(false);[m
[32m +                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[32m +                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[32m +                return;[m
[32m +            }[m
[32m +            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[32m +            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m +                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m +                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m +                if ((ds.Tables["QueueStudentData"] != null)) {[m
[32m +                    base.Tables.Add(new QueueStudentDataDataTable(ds.Tables["QueueStudentData"]));[m
[32m +                }[m
[32m +                this.DataSetName = ds.DataSetName;[m
[32m +                this.Prefix = ds.Prefix;[m
[32m +                this.Namespace = ds.Namespace;[m
[32m +                this.Locale = ds.Locale;[m
[32m +                this.CaseSensitive = ds.CaseSensitive;[m
[32m +                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m +                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            else {[m
[32m +                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m +            }[m
[32m +            this.GetSerializationData(info, context);[m
[32m +            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m +            this.Relations.CollectionChanged += schemaChangedHandler;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[32m +        public QueueStudentDataDataTable QueueStudentData {[m
[32m +            get {[m
[32m +                return this.tableQueueStudentData;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.BrowsableAttribute(true)][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[32m +        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[32m +            get {[m
[32m +                return this._schemaSerializationMode;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._schemaSerializationMode = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m +        public new global::System.Data.DataTableCollection Tables {[m
[32m +            get {[m
[32m +                return base.Tables;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m +        public new global::System.Data.DataRelationCollection Relations {[m
[32m +            get {[m
[32m +                return base.Relations;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override void InitializeDerivedDataSet() {[m
[32m +            this.BeginInit();[m
[32m +            this.InitClass();[m
[32m +            this.EndInit();[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public override global::System.Data.DataSet Clone() {[m
[32m +            loginformDataSet5 cln = ((loginformDataSet5)(base.Clone()));[m
[32m +            cln.InitVars();[m
[32m +            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[32m +            return cln;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override bool ShouldSerializeTables() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override bool ShouldSerializeRelations() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[32m +            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m +                this.Reset();[m
[32m +                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m +                ds.ReadXml(reader);[m
[32m +                if ((ds.Tables["QueueStudentData"] != null)) {[m
[32m +                    base.Tables.Add(new QueueStudentDataDataTable(ds.Tables["QueueStudentData"]));[m
[32m +                }[m
[32m +                this.DataSetName = ds.DataSetName;[m
[32m +                this.Prefix = ds.Prefix;[m
[32m +                this.Namespace = ds.Namespace;[m
[32m +                this.Locale = ds.Locale;[m
[32m +                this.CaseSensitive = ds.CaseSensitive;[m
[32m +                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m +                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            else {[m
[32m +                this.ReadXml(reader);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[32m +            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[32m +            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[32m +            stream.Position = 0;[m
[32m +            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal void InitVars() {[m
[32m +            this.InitVars(true);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal void InitVars(bool initTable) {[m
[32m +            this.tableQueueStudentData = ((QueueStudentDataDataTable)(base.Tables["QueueStudentData"]));[m
[32m +            if ((initTable == true)) {[m
[32m +                if ((this.tableQueueStudentData != null)) {[m
[32m +                    this.tableQueueStudentData.InitVars();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitClass() {[m
[32m +            this.DataSetName = "loginformDataSet5";[m
[32m +            this.Prefix = "";[m
[32m +            this.Namespace = "http://tempuri.org/loginformDataSet5.xsd";[m
[32m +            this.EnforceConstraints = true;[m
[32m +            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +            this.tableQueueStudentData = new QueueStudentDataDataTable();[m
[32m +            base.Tables.Add(this.tableQueueStudentData);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private bool ShouldSerializeQueueStudentData() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[32m +            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m +            loginformDataSet5 ds = new loginformDataSet5();[m
[32m +            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m +            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m +            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +            any.Namespace = ds.Namespace;[m
[32m +            sequence.Items.Add(any);[m
[32m +            type.Particle = sequence;[m
[32m +            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m +            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m +                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m +                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m +                try {[m
[32m +                    global::System.Xml.Schema.XmlSchema schema = null;[m
[32m +                    dsSchema.Write(s1);[m
[32m +                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m +                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m +                        s2.SetLength(0);[m
[32m +                        schema.Write(s2);[m
[32m +                        if ((s1.Length == s2.Length)) {[m
[32m +                            s1.Position = 0;[m
[32m +                            s2.Position = 0;[m
[32m +                            for (; ((s1.Position != s1.Length) [m
[32m +                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m +                                ;[m
[32m +                            }[m
[32m +                            if ((s1.Position == s1.Length)) {[m
[32m +                                return type;[m
[32m +                            }[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                finally {[m
[32m +                    if ((s1 != null)) {[m
[32m +                        s1.Close();[m
[32m +                    }[m
[32m +                    if ((s2 != null)) {[m
[32m +                        s2.Close();[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            xs.Add(dsSchema);[m
[32m +            return type;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public delegate void QueueStudentDataRowChangeEventHandler(object sender, QueueStudentDataRowChangeEvent e);[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Represents the strongly named DataTable class.[m
[32m +        ///</summary>[m
[32m +        [global::System.Serializable()][m
[32m +        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[32m +        public partial class QueueStudentDataDataTable : global::System.Data.TypedTableBase<QueueStudentDataRow> {[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnid;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnName;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnDepartment;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnPurpose;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnQueueNumber;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnQueueDate;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnQueueCode;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueStudentDataDataTable() {[m
[32m +                this.TableName = "QueueStudentData";[m
[32m +                this.BeginInit();[m
[32m +                this.InitClass();[m
[32m +                this.EndInit();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal QueueStudentDataDataTable(global::System.Data.DataTable table) {[m
[32m +                this.TableName = table.TableName;[m
[32m +                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[32m +                    this.CaseSensitive = table.CaseSensitive;[m
[32m +                }[m
[32m +                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[32m +                    this.Locale = table.Locale;[m
[32m +                }[m
[32m +                if ((table.Namespace != table.DataSet.Namespace)) {[m
[32m +                    this.Namespace = table.Namespace;[m
[32m +                }[m
[32m +                this.Prefix = table.Prefix;[m
[32m +                this.MinimumCapacity = table.MinimumCapacity;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected QueueStudentDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m +                    base(info, context) {[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn idColumn {[m
[32m +                get {[m
[32m +                    return this.columnid;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn NameColumn {[m
[32m +                get {[m
[32m +                    return this.columnName;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn DepartmentColumn {[m
[32m +                get {[m
[32m +                    return this.columnDepartment;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn PurposeColumn {[m
[32m +                get {[m
[32m +                    return this.columnPurpose;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn QueueNumberColumn {[m
[32m +                get {[m
[32m +                    return this.columnQueueNumber;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn QueueDateColumn {[m
[32m +                get {[m
[32m +                    return this.columnQueueDate;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn QueueCodeColumn {[m
[32m +                get {[m
[32m +                    return this.columnQueueCode;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            [global::System.ComponentModel.Browsable(false)][m
[32m +            public int Count {[m
[32m +                get {[m
[32m +                    return this.Rows.Count;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueStudentDataRow this[int index] {[m
[32m +                get {[m
[32m +                    return ((QueueStudentDataRow)(this.Rows[index]));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowChanging;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowChanged;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowDeleting;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowDeleted;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void AddQueueStudentDataRow(QueueStudentDataRow row) {[m
[32m +                this.Rows.Add(row);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueStudentDataRow AddQueueStudentDataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode) {[m
[32m +                QueueStudentDataRow rowQueueStudentDataRow = ((QueueStudentDataRow)(this.NewRow()));[m
[32m +                object[] columnValuesArray = new object[] {[m
[32m +                        null,[m
[32m +                        Name,[m
[32m +                        Department,[m
[32m +                        Purpose,[m
[32m +                        QueueNumber,[m
[32m +                        QueueDate,[m
[32m +                        QueueCode};[m
[32m +                rowQueueStudentDataRow.ItemArray = columnValuesArray;[m
[32m +                this.Rows.Add(rowQueueStudentDataRow);[m
[32m +                return rowQueueStudentDataRow;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueStudentDataRow FindByid(int id) {[m
[32m +                return ((QueueStudentDataRow)(this.Rows.Find(new object[] {[m
[32m +                            id})));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public override global::System.Data.DataTable Clone() {[m
[32m +                QueueStudentDataDataTable cln = ((QueueStudentDataDataTable)(base.Clone()));[m
[32m +                cln.InitVars();[m
[32m +                return cln;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Data.DataTable CreateInstance() {[m
[32m +                return new QueueStudentDataDataTable();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal void InitVars() {[m
[32m +                this.columnid = base.Columns["id"];[m
[32m +                this.columnName = base.Columns["Name"];[m
[32m +                this.columnDepartment = base.Columns["Department"];[m
[32m +                this.columnPurpose = base.Columns["Purpose"];[m
[32m +                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[32m +                this.columnQueueDate = base.Columns["QueueDate"];[m
[32m +                this.columnQueueCode = base.Columns["QueueCode"];[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            private void InitClass() {[m
[32m +                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnid);[m
[32m +                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnName);[m
[32m +                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnDepartment);[m
[32m +                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnPurpose);[m
[32m +                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnQueueNumber);[m
[32m +                this.columnQueueDate = new global::System.Data.DataColumn("QueueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnQueueDate);[m
[32m +                this.columnQueueCode = new global::System.Data.DataColumn("QueueCode", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnQueueCode);[m
[32m +                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[32m +                                this.columnid}, true));[m
[32m +                this.columnid.AutoIncrement = true;[m
[32m +                this.columnid.AutoIncrementSeed = -1;[m
[32m +                this.columnid.AutoIncrementStep = -1;[m
[32m +                this.columnid.AllowDBNull = false;[m
[32m +                this.columnid.ReadOnly = true;[m
[32m +                this.columnid.Unique = true;[m
[32m +                this.columnName.AllowDBNull = false;[m
[32m +                this.columnName.MaxLength = 50;[m
[32m +                this.columnDepartment.AllowDBNull = false;[m
[32m +                this.columnDepartment.MaxLength = 50;[m
[32m +                this.columnPurpose.AllowDBNull = false;[m
[32m +                this.columnPurpose.MaxLength = 2147483647;[m
[32m +                this.columnQueueNumber.AllowDBNull = false;[m
[32m +                this.columnQueueDate.AllowDBNull = false;[m
[32m +                this.columnQueueCode.AllowDBNull = false;[m
[32m +                this.columnQueueCode.MaxLength = 10;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueStudentDataRow NewQueueStudentDataRow() {[m
[32m +                return ((QueueStudentDataRow)(this.NewRow()));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[32m +                return new QueueStudentDataRow(builder);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Type GetRowType() {[m
[32m +                return typeof(QueueStudentDataRow);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowChanged(e);[m
[32m +                if ((this.QueueStudentDataRowChanged != null)) {[m
[32m +                    this.QueueStudentDataRowChanged(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowChanging(e);[m
[32m +                if ((this.QueueStudentDataRowChanging != null)) {[m
[32m +                    this.QueueStudentDataRowChanging(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowDeleted(e);[m
[32m +                if ((this.QueueStudentDataRowDeleted != null)) {[m
[32m +                    this.QueueStudentDataRowDeleted(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowDeleting(e);[m
[32m +                if ((this.QueueStudentDataRowDeleting != null)) {[m
[32m +                    this.QueueStudentDataRowDeleting(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void RemoveQueueStudentDataRow(QueueStudentDataRow row) {[m
[32m +                this.Rows.Remove(row);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m +                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m +                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m +                loginformDataSet5 ds = new loginformDataSet5();[m
[32m +                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[32m +                any1.MinOccurs = new decimal(0);[m
[32m +                any1.MaxOccurs = decimal.MaxValue;[m
[32m +                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m +                sequence.Items.Add(any1);[m
[32m +                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[32m +                any2.MinOccurs = new decimal(1);[m
[32m +                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m +                sequence.Items.Add(any2);[m
[32m +                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m +                attribute1.Name = "namespace";[m
[32m +                attribute1.FixedValue = ds.Namespace;[m
[32m +                type.Attributes.Add(attribute1);[m
[32m +                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m +                attribute2.Name = "tableTypeName";[m
[32m +                attribute2.FixedValue = "QueueStudentDataDataTable";[m
[32m +                type.Attributes.Add(attribute2);[m
[32m +                type.Particle = sequence;[m
[32m +                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m +                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m +                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m +                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m +                    try {[m
[32m +                        global::System.Xml.Schema.XmlSchema schema = null;[m
[32m +                        dsSchema.Write(s1);[m
[32m +                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m +                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m +                            s2.SetLength(0);[m
[32m +                            schema.Write(s2);[m
[32m +                            if ((s1.Length == s2.Length)) {[m
[32m +                                s1.Position = 0;[m
[32m +                                s2.Position = 0;[m
[32m +                                for (; ((s1.Position != s1.Length) [m
[32m +                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m +                                    ;[m
[32m +                                }[m
[32m +                                if ((s1.Position == s1.Length)) {[m
[32m +                                    return type;[m
[32m +                                }[m
[32m +                            }[m
[32m +                        }[m
[32m +                    }[m
[32m +                    finally {[m
[32m +                        if ((s1 != null)) {[m
[32m +                            s1.Close();[m
[32m +                        }[m
[32m +                        if ((s2 != null)) {[m
[32m +                            s2.Close();[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                xs.Add(dsSchema);[m
[32m +                return type;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Represents strongly named DataRow class.[m
[32m +        ///</summary>[m
[32m +        public partial class QueueStudentDataRow : global::System.Data.DataRow {[m
[32m +            [m
[32m +            private QueueStudentDataDataTable tableQueueStudentData;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal QueueStudentDataRow(global::System.Data.DataRowBuilder rb) : [m
[32m +                    base(rb) {[m
[32m +                this.tableQueueStudentData = ((QueueStudentDataDataTable)(this.Table));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int id {[m
[32m +                get {[m
[32m +                    return ((int)(this[this.tableQueueStudentData.idColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueStudentData.idColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Name {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueStudentData.NameColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueStudentData.NameColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Department {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueStudentData.DepartmentColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueStudentData.DepartmentColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Purpose {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueStudentData.PurposeColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueStudentData.PurposeColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int QueueNumber {[m
[32m +                get {[m
[32m +                    return ((int)(this[this.tableQueueStudentData.QueueNumberColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueStudentData.QueueNumberColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public System.DateTime QueueDate {[m
[32m +                get {[m
[32m +                    return ((global::System.DateTime)(this[this.tableQueueStudentData.QueueDateColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueStudentData.QueueDateColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string QueueCode {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueStudentData.QueueCodeColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueStudentData.QueueCodeColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Row event argument class[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public class QueueStudentDataRowChangeEvent : global::System.EventArgs {[m
[32m +            [m
[32m +            private QueueStudentDataRow eventRow;[m
[32m +            [m
[32m +            private global::System.Data.DataRowAction eventAction;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueStudentDataRowChangeEvent(QueueStudentDataRow row, global::System.Data.DataRowAction action) {[m
[32m +                this.eventRow = row;[m
[32m +                this.eventAction = action;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueStudentDataRow Row {[m
[32m +                get {[m
[32m +                    return this.eventRow;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataRowAction Action {[m
[32m +                get {[m
[32m +                    return this.eventAction;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +namespace capstoneproject.loginformDataSet5TableAdapters {[m
[32m +    [m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///Represents the connection and commands used to retrieve and save data.[m
[32m +    ///</summary>[m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.ComponentModel.DataObjectAttribute(true)][m
[32m +    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[32m +        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +    public partial class QueueStudentDataTableAdapter : global::System.ComponentModel.Component {[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlConnection _connection;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[32m +        [m
[32m +        private bool _clearBeforeFill;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public QueueStudentDataTableAdapter() {[m
[32m +            this.ClearBeforeFill = true;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[32m +            get {[m
[32m +                if ((this._adapter == null)) {[m
[32m +                    this.InitAdapter();[m
[32m +                }[m
[32m +                return this._adapter;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[32m +            get {[m
[32m +                if ((this._connection == null)) {[m
[32m +                    this.InitConnection();[m
[32m +                }[m
[32m +                return this._connection;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._connection = value;[m
[32m +                if ((this.Adapter.InsertCommand != null)) {[m
[32m +                    this.Adapter.InsertCommand.Connection = value;[m
[32m +                }[m
[32m +                if ((this.Adapter.DeleteCommand != null)) {[m
[32m +                    this.Adapter.DeleteCommand.Connection = value;[m
[32m +                }[m
[32m +                if ((this.Adapter.UpdateCommand != null)) {[m
[32m +                    this.Adapter.UpdateCommand.Connection = value;[m
[32m +                }[m
[32m +                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m +                    if ((this.CommandCollection[i] != null)) {[m
[32m +                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[32m +            get {[m
[32m +                return this._transaction;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._transaction = value;[m
[32m +                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m +                    this.CommandCollection[i].Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.DeleteCommand != null))) {[m
[32m +                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.InsertCommand != null))) {[m
[32m +                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.UpdateCommand != null))) {[m
[32m +                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[32m +            get {[m
[32m +                if ((this._commandCollection == null)) {[m
[32m +                    this.InitCommandCollection();[m
[32m +                }[m
[32m +                return this._commandCollection;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public bool ClearBeforeFill {[m
[32m +            get {[m
[32m +                return this._clearBeforeFill;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._clearBeforeFill = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitAdapter() {[m
[32m +            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[32m +            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[32m +            tableMapping.SourceTable = "Table";[m
[32m +            tableMapping.DataSetTable = "QueueStudentData";[m
[32m +            tableMapping.ColumnMappings.Add("id", "id");[m
[32m +            tableMapping.ColumnMappings.Add("Name", "Name");[m
[32m +            tableMapping.ColumnMappings.Add("Department", "Department");[m
[32m +            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[32m +            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[32m +            tableMapping.ColumnMappings.Add("QueueDate", "QueueDate");[m
[32m +            tableMapping.ColumnMappings.Add("QueueCode", "QueueCode");[m
[32m +            this._adapter.TableMappings.Add(tableMapping);[m
[32m +            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.DeleteCommand.Connection = this.Connection;[m
[32m +            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[QueueStudentData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode))";[m
[32m +            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.InsertCommand.Connection = this.Connection;[m
[32m +            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[QueueStudentData] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate, @QueueCode);[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM QueueStudentData WHERE (id = SCOPE_IDENTITY())";[m
[32m +            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.UpdateCommand.Connection = this.Connection;[m
[32m +            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueStudentData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [QueueDate] = @QueueDate, [QueueCode] = @QueueCode WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode));[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM QueueStudentData WHERE (id = @id)";[m
[32m +            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitConnection() {[m
[32m +            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[32m +            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitCommandCollection() {[m
[32m +            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[32m +            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._commandCollection[0].Connection = this.Connection;[m
[32m +            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM dbo." +[m
[32m +                "QueueStudentData";[m
[32m +            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[32m +        public virtual int Fill(loginformDataSet5.QueueStudentDataDataTable dataTable) {[m
[32m +            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m +            if ((this.ClearBeforeFill == true)) {[m
[32m +                dataTable.Clear();[m
[32m +            }[m
[32m +            int returnValue = this.Adapter.Fill(dataTable);[m
[32m +            return returnValue;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[32m +        public virtual loginformDataSet5.QueueStudentDataDataTable GetData() {[m
[32m +            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m +            loginformDataSet5.QueueStudentDataDataTable dataTable = new loginformDataSet5.QueueStudentDataDataTable();[m
[32m +            this.Adapter.Fill(dataTable);[m
[32m +            return dataTable;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(loginformDataSet5.QueueStudentDataDataTable dataTable) {[m
[32m +            return this.Adapter.Update(dataTable);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(loginformDataSet5 dataSet) {[m
[32m +            return this.Adapter.Update(dataSet, "QueueStudentData");[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[32m +            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[32m +                        dataRow});[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[32m +            return this.Adapter.Update(dataRows);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[32m +        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, System.DateTime Original_QueueDate, string Original_QueueCode) {[m
[32m +            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[32m +            if ((Original_Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[32m +            }[m
[32m +            if ((Original_Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[32m +            }[m
[32m +            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[32m +            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_QueueDate));[m
[32m +            if ((Original_QueueCode == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_QueueCode");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_QueueCode));[m
[32m +            }[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[32m +            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.DeleteCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.DeleteCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[32m +        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode) {[m
[32m +            if ((Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[32m +            }[m
[32m +            if ((Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[32m +            }[m
[32m +            if ((Purpose == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Purpose");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m +            }[m
[32m +            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m +            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(QueueDate));[m
[32m +            if ((QueueCode == null)) {[m
[32m +                throw new global::System.ArgumentNullException("QueueCode");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(QueueCode));[m
[32m +            }[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[32m +            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.InsertCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.InsertCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m +        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, System.DateTime Original_QueueDate, string Original_QueueCode, int id) {[m
[32m +            if ((Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[32m +            }[m
[32m +            if ((Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[32m +            }[m
[32m +            if ((Purpose == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Purpose");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m +            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(QueueDate));[m
[32m +            if ((QueueCode == null)) {[m
[32m +                throw new global::System.ArgumentNullException("QueueCode");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(QueueCode));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_id));[m
[32m +            if ((Original_Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Name));[m
[32m +            }[m
[32m +            if ((Original_Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Department));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_QueueNumber));[m
[32m +            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_QueueDate));[m
[32m +            if ((Original_QueueCode == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_QueueCode");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_QueueCode));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(id));[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[32m +            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.UpdateCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.UpdateCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m +        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, System.DateTime Original_QueueDate, string Original_QueueCode) {[m
[32m +            return this.Update(Name, Department, Purpose, QueueNumber, QueueDate, QueueCode, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_QueueDate, Original_QueueCode, Original_id);[m
[32m +        }[m
[32m +    }[m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[32m +    ///</summary>[m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[32m +        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[32m +    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[32m +        [m
[32m +        private UpdateOrderOption _updateOrder;[m
[32m +        [m
[32m +        private QueueStudentDataTableAdapter _queueStudentDataTableAdapter;[m
[32m +        [m
[32m +        private bool _backupDataSetBeforeUpdate;[m
[32m +        [m
[32m +        private global::System.Data.IDbConnection _connection;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public UpdateOrderOption UpdateOrder {[m
[32m +            get {[m
[32m +                return this._updateOrder;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._updateOrder = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[32m +            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[32m +            "a", "System.Drawing.Design.UITypeEditor")][m
[32m +        public QueueStudentDataTableAdapter QueueStudentDataTableAdapter {[m
[32m +            get {[m
[32m +                return this._queueStudentDataTableAdapter;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._queueStudentDataTableAdapter = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public bool BackupDataSetBeforeUpdate {[m
[32m +            get {[m
[32m +                return this._backupDataSetBeforeUpdate;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._backupDataSetBeforeUpdate = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        public global::System.Data.IDbConnection Connection {[m
[32m +            get {[m
[32m +                if ((this._connection != null)) {[m
[32m +                    return this._connection;[m
[32m +                }[m
[32m +                if (((this._queueStudentDataTableAdapter != null) [m
[32m +                            && (this._queueStudentDataTableAdapter.Connection != null))) {[m
[32m +                    return this._queueStudentDataTableAdapter.Connection;[m
[32m +                }[m
[32m +                return null;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._connection = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        public int TableAdapterInstanceCount {[m
[32m +            get {[m
[32m +                int count = 0;[m
[32m +                if ((this._queueStudentDataTableAdapter != null)) {[m
[32m +                    count = (count + 1);[m
[32m +                }[m
[32m +                return count;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update rows in top-down order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateUpdatedRows(loginformDataSet5 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueStudentDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] updatedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[32m +                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[32m +                if (((updatedRows != null) [m
[32m +                            && (0 < updatedRows.Length))) {[m
[32m +                    result = (result + this._queueStudentDataTableAdapter.Update(updatedRows));[m
[32m +                    allChangedRows.AddRange(updatedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Insert rows in top-down order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateInsertedRows(loginformDataSet5 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueStudentDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] addedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[32m +                if (((addedRows != null) [m
[32m +                            && (0 < addedRows.Length))) {[m
[32m +                    result = (result + this._queueStudentDataTableAdapter.Update(addedRows));[m
[32m +                    allAddedRows.AddRange(addedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Delete rows in bottom-up order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateDeletedRows(loginformDataSet5 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueStudentDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] deletedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[32m +                if (((deletedRows != null) [m
[32m +                            && (0 < deletedRows.Length))) {[m
[32m +                    result = (result + this._queueStudentDataTableAdapter.Update(deletedRows));[m
[32m +                    allChangedRows.AddRange(deletedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            if (((updatedRows == null) [m
[32m +                        || (updatedRows.Length < 1))) {[m
[32m +                return updatedRows;[m
[32m +            }[m
[32m +            if (((allAddedRows == null) [m
[32m +                        || (allAddedRows.Count < 1))) {[m
[32m +                return updatedRows;[m
[32m +            }[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[32m +                global::System.Data.DataRow row = updatedRows[i];[m
[32m +                if ((allAddedRows.Contains(row) == false)) {[m
[32m +                    realUpdatedRows.Add(row);[m
[32m +                }[m
[32m +            }[m
[32m +            return realUpdatedRows.ToArray();[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update all changes to the dataset.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public virtual int UpdateAll(loginformDataSet5 dataSet) {[m
[32m +            if ((dataSet == null)) {[m
[32m +                throw new global::System.ArgumentNullException("dataSet");[m
[32m +            }[m
[32m +            if ((dataSet.HasChanges() == false)) {[m
[32m +                return 0;[m
[32m +            }[m
[32m +            if (((this._queueStudentDataTableAdapter != null) [m
[32m +                        && (this.MatchTableAdapterConnection(this._queueStudentDataTableAdapter.Connection) == false))) {[m
[32m +                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[32m +                        "tring.");[m
[32m +            }[m
[32m +            global::System.Data.IDbConnection workConnection = this.Connection;[m
[32m +            if ((workConnection == null)) {[m
[32m +                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[32m +                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[32m +            }[m
[32m +            bool workConnOpened = false;[m
[32m +            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[32m +                        == global::System.Data.ConnectionState.Broken)) {[m
[32m +                workConnection.Close();[m
[32m +            }[m
[32m +            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[32m +                workConnection.Open();[m
[32m +                workConnOpened = true;[m
[32m +            }[m
[32m +            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[32m +            if ((workTransaction == null)) {[m
[32m +                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[32m +                        "ctions or the current state is not allowing the transaction to begin.");[m
[32m +            }[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[32m +            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[32m +            int result = 0;[m
[32m +            global::System.Data.DataSet backupDataSet = null;[m
[32m +            if (this.BackupDataSetBeforeUpdate) {[m
[32m +                backupDataSet = new global::System.Data.DataSet();[m
[32m +                backupDataSet.Merge(dataSet);[m
[32m +            }[m
[32m +            try {[m
[32m +                // ---- Prepare for update -----------[m
[32m +                //[m
[32m +                if ((this._queueStudentDataTableAdapter != null)) {[m
[32m +                    revertConnections.Add(this._queueStudentDataTableAdapter, this._queueStudentDataTableAdapter.Connection);[m
[32m +                    this._queueStudentDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[32m +                    this._queueStudentDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[32m +                    if (this._queueStudentDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[32m +                        this._queueStudentDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[32m +                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueStudentDataTableAdapter.Adapter);[m
[32m +                    }[m
[32m +                }[m
[32m +                // [m
[32m +                //---- Perform updates -----------[m
[32m +                //[m
[32m +                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[32m +                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m +                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m +                }[m
[32m +                else {[m
[32m +                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m +                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m +                }[m
[32m +                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[32m +                // [m
[32m +                //---- Commit updates -----------[m
[32m +                //[m
[32m +                workTransaction.Commit();[m
[32m +                if ((0 < allAddedRows.Count)) {[m
[32m +                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m +                    allAddedRows.CopyTo(rows);[m
[32m +                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.DataRow row = rows[i];[m
[32m +                        row.AcceptChanges();[m
[32m +                    }[m
[32m +                }[m
[32m +                if ((0 < allChangedRows.Count)) {[m
[32m +                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[32m +                    allChangedRows.CopyTo(rows);[m
[32m +                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.DataRow row = rows[i];[m
[32m +                        row.AcceptChanges();[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            catch (global::System.Exception ex) {[m
[32m +                workTransaction.Rollback();[m
[32m +                // ---- Restore the dataset -----------[m
[32m +                if (this.BackupDataSetBeforeUpdate) {[m
[32m +                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[32m +                    dataSet.Clear();[m
[32m +                    dataSet.Merge(backupDataSet);[m
[32m +                }[m
[32m +                else {[m
[32m +                    if ((0 < allAddedRows.Count)) {[m
[32m +                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m +                        allAddedRows.CopyTo(rows);[m
[32m +                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                            global::System.Data.DataRow row = rows[i];[m
[32m +                            row.AcceptChanges();[m
[32m +                            row.SetAdded();[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                throw ex;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if (workConnOpened) {[m
[32m +                    workConnection.Close();[m
[32m +                }[m
[32m +                if ((this._queueStudentDataTableAdapter != null)) {[m
[32m +                    this._queueStudentDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueStudentDataTableAdapter]));[m
[32m +                    this._queueStudentDataTableAdapter.Transaction = null;[m
[32m +                }[m
[32m +                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[32m +                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[32m +                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[32m +                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[32m +                        adapter.AcceptChangesDuringUpdate = true;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[32m +            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[32m +            if ((this._connection != null)) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            if (((this.Connection == null) [m
[32m +                        || (inputConnection == null))) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update Order Option[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public enum UpdateOrderOption {[m
[32m +            [m
[32m +            InsertUpdateDelete = 0,[m
[32m +            [m
[32m +            UpdateInsertDelete = 1,[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Used to sort self-referenced table's rows[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[32m +            [m
[32m +            private global::System.Data.DataRelation _relation;[m
[32m +            [m
[32m +            private int _childFirst;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[32m +                this._relation = relation;[m
[32m +                if (childFirst) {[m
[32m +                    this._childFirst = -1;[m
[32m +                }[m
[32m +                else {[m
[32m +                    this._childFirst = 1;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[32m +                global::System.Diagnostics.Debug.Assert((row != null));[m
[32m +                global::System.Data.DataRow root = row;[m
[32m +                distance = 0;[m
[32m +[m
[32m +                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[32m +                traversedRows[row] = row;[m
[32m +[m
[32m +                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m +                for ([m
[32m +                ; ((parent != null) [m
[32m +                            && (traversedRows.ContainsKey(parent) == false)); [m
[32m +                ) {[m
[32m +                    distance = (distance + 1);[m
[32m +                    root = parent;[m
[32m +                    traversedRows[parent] = parent;[m
[32m +                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m +                }[m
[32m +[m
[32m +                if ((distance == 0)) {[m
[32m +                    traversedRows.Clear();[m
[32m +                    traversedRows[row] = row;[m
[32m +                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m +                    for ([m
[32m +                    ; ((parent != null) [m
[32m +                                && (traversedRows.ContainsKey(parent) == false)); [m
[32m +                    ) {[m
[32m +                        distance = (distance + 1);[m
[32m +                        root = parent;[m
[32m +                        traversedRows[parent] = parent;[m
[32m +                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m +                    }[m
[32m +                }[m
[32m +[m
[32m +                return root;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[32m +                if (object.ReferenceEquals(row1, row2)) {[m
[32m +                    return 0;[m
[32m +                }[m
[32m +                if ((row1 == null)) {[m
[32m +                    return -1;[m
[32m +                }[m
[32m +                if ((row2 == null)) {[m
[32m +                    return 1;[m
[32m +                }[m
[32m +[m
[32m +                int distance1 = 0;[m
[32m +                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[32m +[m
[32m +                int distance2 = 0;[m
[32m +                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[32m +[m
[32m +                if (object.ReferenceEquals(root1, root2)) {[m
[32m +                    return (this._childFirst * distance1.CompareTo(distance2));[m
[32m +                }[m
[32m +                else {[m
[32m +                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[32m +                                    && (root2.Table != null)));[m
[32m +                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[32m +                        return -1;[m
[32m +                    }[m
[32m +                    else {[m
[32m +                        return 1;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +[m
[32m++=======[m
[32m++ï»¿//------------------------------------------------------------------------------[m
[32m++// <auto-generated>[m
[32m++//     This code was generated by a tool.[m
[32m++//     Runtime Version:4.0.30319.42000[m
[32m++//[m
[32m++//     Changes to this file may cause incorrect behavior and will be lost if[m
[32m++//     the code is regenerated.[m
[32m++// </auto-generated>[m
[32m++//------------------------------------------------------------------------------[m
[32m++[m
[32m++#pragma warning disable 1591[m
[32m++[m
[32m++namespace capstoneproject {[m
[32m++    [m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///Represents a strongly typed in-memory cache of data.[m
[32m++    ///</summary>[m
[32m++    [global::System.Serializable()][m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[32m++    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet5")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[32m++    public partial class loginformDataSet5 : global::System.Data.DataSet {[m
[32m++        [m
[32m++        private QueueStudentDataDataTable tableQueueStudentData;[m
[32m++        [m
[32m++        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public loginformDataSet5() {[m
[32m++            this.BeginInit();[m
[32m++            this.InitClass();[m
[32m++            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m++            base.Relations.CollectionChanged += schemaChangedHandler;[m
[32m++            this.EndInit();[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected loginformDataSet5(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m++                base(info, context, false) {[m
[32m++            if ((this.IsBinarySerialized(info, context) == true)) {[m
[32m++                this.InitVars(false);[m
[32m++                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[32m++                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[32m++                return;[m
[32m++            }[m
[32m++            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[32m++            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m++                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m++                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m++                if ((ds.Tables["QueueStudentData"] != null)) {[m
[32m++                    base.Tables.Add(new QueueStudentDataDataTable(ds.Tables["QueueStudentData"]));[m
[32m++                }[m
[32m++                this.DataSetName = ds.DataSetName;[m
[32m++                this.Prefix = ds.Prefix;[m
[32m++                this.Namespace = ds.Namespace;[m
[32m++                this.Locale = ds.Locale;[m
[32m++                this.CaseSensitive = ds.CaseSensitive;[m
[32m++                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m++                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            else {[m
[32m++                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m++            }[m
[32m++            this.GetSerializationData(info, context);[m
[32m++            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m++            this.Relations.CollectionChanged += schemaChangedHandler;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[32m++        public QueueStudentDataDataTable QueueStudentData {[m
[32m++            get {[m
[32m++                return this.tableQueueStudentData;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.BrowsableAttribute(true)][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[32m++        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[32m++            get {[m
[32m++                return this._schemaSerializationMode;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._schemaSerializationMode = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m++        public new global::System.Data.DataTableCollection Tables {[m
[32m++            get {[m
[32m++                return base.Tables;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m++        public new global::System.Data.DataRelationCollection Relations {[m
[32m++            get {[m
[32m++                return base.Relations;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override void InitializeDerivedDataSet() {[m
[32m++            this.BeginInit();[m
[32m++            this.InitClass();[m
[32m++            this.EndInit();[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public override global::System.Data.DataSet Clone() {[m
[32m++            loginformDataSet5 cln = ((loginformDataSet5)(base.Clone()));[m
[32m++            cln.InitVars();[m
[32m++            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[32m++            return cln;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override bool ShouldSerializeTables() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override bool ShouldSerializeRelations() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[32m++            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m++                this.Reset();[m
[32m++                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m++                ds.ReadXml(reader);[m
[32m++                if ((ds.Tables["QueueStudentData"] != null)) {[m
[32m++                    base.Tables.Add(new QueueStudentDataDataTable(ds.Tables["QueueStudentData"]));[m
[32m++                }[m
[32m++                this.DataSetName = ds.DataSetName;[m
[32m++                this.Prefix = ds.Prefix;[m
[32m++                this.Namespace = ds.Namespace;[m
[32m++                this.Locale = ds.Locale;[m
[32m++                this.CaseSensitive = ds.CaseSensitive;[m
[32m++                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m++                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            else {[m
[32m++                this.ReadXml(reader);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[32m++            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[32m++            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[32m++            stream.Position = 0;[m
[32m++            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal void InitVars() {[m
[32m++            this.InitVars(true);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal void InitVars(bool initTable) {[m
[32m++            this.tableQueueStudentData = ((QueueStudentDataDataTable)(base.Tables["QueueStudentData"]));[m
[32m++            if ((initTable == true)) {[m
[32m++                if ((this.tableQueueStudentData != null)) {[m
[32m++                    this.tableQueueStudentData.InitVars();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitClass() {[m
[32m++            this.DataSetName = "loginformDataSet5";[m
[32m++            this.Prefix = "";[m
[32m++            this.Namespace = "http://tempuri.org/loginformDataSet5.xsd";[m
[32m++            this.EnforceConstraints = true;[m
[32m++            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++            this.tableQueueStudentData = new QueueStudentDataDataTable();[m
[32m++            base.Tables.Add(this.tableQueueStudentData);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private bool ShouldSerializeQueueStudentData() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[32m++            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m++            loginformDataSet5 ds = new loginformDataSet5();[m
[32m++            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m++            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m++            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++            any.Namespace = ds.Namespace;[m
[32m++            sequence.Items.Add(any);[m
[32m++            type.Particle = sequence;[m
[32m++            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m++            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m++                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m++                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m++                try {[m
[32m++                    global::System.Xml.Schema.XmlSchema schema = null;[m
[32m++                    dsSchema.Write(s1);[m
[32m++                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m++                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m++                        s2.SetLength(0);[m
[32m++                        schema.Write(s2);[m
[32m++                        if ((s1.Length == s2.Length)) {[m
[32m++                            s1.Position = 0;[m
[32m++                            s2.Position = 0;[m
[32m++                            for (; ((s1.Position != s1.Length) [m
[32m++                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m++                                ;[m
[32m++                            }[m
[32m++                            if ((s1.Position == s1.Length)) {[m
[32m++                                return type;[m
[32m++                            }[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                finally {[m
[32m++                    if ((s1 != null)) {[m
[32m++                        s1.Close();[m
[32m++                    }[m
[32m++                    if ((s2 != null)) {[m
[32m++                        s2.Close();[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            xs.Add(dsSchema);[m
[32m++            return type;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public delegate void QueueStudentDataRowChangeEventHandler(object sender, QueueStudentDataRowChangeEvent e);[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Represents the strongly named DataTable class.[m
[32m++        ///</summary>[m
[32m++        [global::System.Serializable()][m
[32m++        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[32m++        public partial class QueueStudentDataDataTable : global::System.Data.TypedTableBase<QueueStudentDataRow> {[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnid;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnName;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnDepartment;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnPurpose;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnQueueNumber;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnQueueDate;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnQueueCode;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueStudentDataDataTable() {[m
[32m++                this.TableName = "QueueStudentData";[m
[32m++                this.BeginInit();[m
[32m++                this.InitClass();[m
[32m++                this.EndInit();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal QueueStudentDataDataTable(global::System.Data.DataTable table) {[m
[32m++                this.TableName = table.TableName;[m
[32m++                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[32m++                    this.CaseSensitive = table.CaseSensitive;[m
[32m++                }[m
[32m++                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[32m++                    this.Locale = table.Locale;[m
[32m++                }[m
[32m++                if ((table.Namespace != table.DataSet.Namespace)) {[m
[32m++                    this.Namespace = table.Namespace;[m
[32m++                }[m
[32m++                this.Prefix = table.Prefix;[m
[32m++                this.MinimumCapacity = table.MinimumCapacity;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected QueueStudentDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m++                    base(info, context) {[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn idColumn {[m
[32m++                get {[m
[32m++                    return this.columnid;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn NameColumn {[m
[32m++                get {[m
[32m++                    return this.columnName;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn DepartmentColumn {[m
[32m++                get {[m
[32m++                    return this.columnDepartment;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn PurposeColumn {[m
[32m++                get {[m
[32m++                    return this.columnPurpose;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn QueueNumberColumn {[m
[32m++                get {[m
[32m++                    return this.columnQueueNumber;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn QueueDateColumn {[m
[32m++                get {[m
[32m++                    return this.columnQueueDate;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn QueueCodeColumn {[m
[32m++                get {[m
[32m++                    return this.columnQueueCode;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            [global::System.ComponentModel.Browsable(false)][m
[32m++            public int Count {[m
[32m++                get {[m
[32m++                    return this.Rows.Count;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueStudentDataRow this[int index] {[m
[32m++                get {[m
[32m++                    return ((QueueStudentDataRow)(this.Rows[index]));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowChanging;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowChanged;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowDeleting;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowDeleted;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void AddQueueStudentDataRow(QueueStudentDataRow row) {[m
[32m++                this.Rows.Add(row);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueStudentDataRow AddQueueStudentDataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode) {[m
[32m++                QueueStudentDataRow rowQueueStudentDataRow = ((QueueStudentDataRow)(this.NewRow()));[m
[32m++                object[] columnValuesArray = new object[] {[m
[32m++                        null,[m
[32m++                        Name,[m
[32m++                        Department,[m
[32m++                        Purpose,[m
[32m++                        QueueNumber,[m
[32m++                        QueueDate,[m
[32m++                        QueueCode};[m
[32m++                rowQueueStudentDataRow.ItemArray = columnValuesArray;[m
[32m++                this.Rows.Add(rowQueueStudentDataRow);[m
[32m++                return rowQueueStudentDataRow;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueStudentDataRow FindByid(int id) {[m
[32m++                return ((QueueStudentDataRow)(this.Rows.Find(new object[] {[m
[32m++                            id})));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public override global::System.Data.DataTable Clone() {[m
[32m++                QueueStudentDataDataTable cln = ((QueueStudentDataDataTable)(base.Clone()));[m
[32m++                cln.InitVars();[m
[32m++                return cln;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Data.DataTable CreateInstance() {[m
[32m++                return new QueueStudentDataDataTable();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal void InitVars() {[m
[32m++                this.columnid = base.Columns["id"];[m
[32m++                this.columnName = base.Columns["Name"];[m
[32m++                this.columnDepartment = base.Columns["Department"];[m
[32m++                this.columnPurpose = base.Columns["Purpose"];[m
[32m++                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[32m++                this.columnQueueDate = base.Columns["QueueDate"];[m
[32m++                this.columnQueueCode = base.Columns["QueueCode"];[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            private void InitClass() {[m
[32m++                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnid);[m
[32m++                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnName);[m
[32m++                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnDepartment);[m
[32m++                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnPurpose);[m
[32m++                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnQueueNumber);[m
[32m++                this.columnQueueDate = new global::System.Data.DataColumn("QueueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnQueueDate);[m
[32m++                this.columnQueueCode = new global::System.Data.DataColumn("QueueCode", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnQueueCode);[m
[32m++                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[32m++                                this.columnid}, true));[m
[32m++                this.columnid.AutoIncrement = true;[m
[32m++                this.columnid.AutoIncrementSeed = -1;[m
[32m++                this.columnid.AutoIncrementStep = -1;[m
[32m++                this.columnid.AllowDBNull = false;[m
[32m++                this.columnid.ReadOnly = true;[m
[32m++                this.columnid.Unique = true;[m
[32m++                this.columnName.AllowDBNull = false;[m
[32m++                this.columnName.MaxLength = 50;[m
[32m++                this.columnDepartment.AllowDBNull = false;[m
[32m++                this.columnDepartment.MaxLength = 50;[m
[32m++                this.columnPurpose.AllowDBNull = false;[m
[32m++                this.columnPurpose.MaxLength = 2147483647;[m
[32m++                this.columnQueueNumber.AllowDBNull = false;[m
[32m++                this.columnQueueDate.AllowDBNull = false;[m
[32m++                this.columnQueueCode.AllowDBNull = false;[m
[32m++                this.columnQueueCode.MaxLength = 10;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueStudentDataRow NewQueueStudentDataRow() {[m
[32m++                return ((QueueStudentDataRow)(this.NewRow()));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[32m++                return new QueueStudentDataRow(builder);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Type GetRowType() {[m
[32m++                return typeof(QueueStudentDataRow);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowChanged(e);[m
[32m++                if ((this.QueueStudentDataRowChanged != null)) {[m
[32m++                    this.QueueStudentDataRowChanged(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowChanging(e);[m
[32m++                if ((this.QueueStudentDataRowChanging != null)) {[m
[32m++                    this.QueueStudentDataRowChanging(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowDeleted(e);[m
[32m++                if ((this.QueueStudentDataRowDeleted != null)) {[m
[32m++                    this.QueueStudentDataRowDeleted(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowDeleting(e);[m
[32m++                if ((this.QueueStudentDataRowDeleting != null)) {[m
[32m++                    this.QueueStudentDataRowDeleting(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void RemoveQueueStudentDataRow(QueueStudentDataRow row) {[m
[32m++                this.Rows.Remove(row);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m++                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m++                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m++                loginformDataSet5 ds = new loginformDataSet5();[m
[32m++                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[32m++                any1.MinOccurs = new decimal(0);[m
[32m++                any1.MaxOccurs = decimal.MaxValue;[m
[32m++                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m++                sequence.Items.Add(any1);[m
[32m++                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[32m++                any2.MinOccurs = new decimal(1);[m
[32m++                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m++                sequence.Items.Add(any2);[m
[32m++                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m++                attribute1.Name = "namespace";[m
[32m++                attribute1.FixedValue = ds.Namespace;[m
[32m++                type.Attributes.Add(attribute1);[m
[32m++                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m++                attribute2.Name = "tableTypeName";[m
[32m++                attribute2.FixedValue = "QueueStudentDataDataTable";[m
[32m++                type.Attributes.Add(attribute2);[m
[32m++                type.Particle = sequence;[m
[32m++                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m++                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m++                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m++                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m++                    try {[m
[32m++                        global::System.Xml.Schema.XmlSchema schema = null;[m
[32m++                        dsSchema.Write(s1);[m
[32m++                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m++                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m++                            s2.SetLength(0);[m
[32m++                            schema.Write(s2);[m
[32m++                            if ((s1.Length == s2.Length)) {[m
[32m++                                s1.Position = 0;[m
[32m++                                s2.Position = 0;[m
[32m++                                for (; ((s1.Position != s1.Length) [m
[32m++                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m++                                    ;[m
[32m++                                }[m
[32m++                                if ((s1.Position == s1.Length)) {[m
[32m++                                    return type;[m
[32m++                                }[m
[32m++                            }[m
[32m++                        }[m
[32m++                    }[m
[32m++                    finally {[m
[32m++                        if ((s1 != null)) {[m
[32m++                            s1.Close();[m
[32m++                        }[m
[32m++                        if ((s2 != null)) {[m
[32m++                            s2.Close();[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                xs.Add(dsSchema);[m
[32m++                return type;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Represents strongly named DataRow class.[m
[32m++        ///</summary>[m
[32m++        public partial class QueueStudentDataRow : global::System.Data.DataRow {[m
[32m++            [m
[32m++            private QueueStudentDataDataTable tableQueueStudentData;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal QueueStudentDataRow(global::System.Data.DataRowBuilder rb) : [m
[32m++                    base(rb) {[m
[32m++                this.tableQueueStudentData = ((QueueStudentDataDataTable)(this.Table));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int id {[m
[32m++                get {[m
[32m++                    return ((int)(this[this.tableQueueStudentData.idColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueStudentData.idColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Name {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueStudentData.NameColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueStudentData.NameColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Department {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueStudentData.DepartmentColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueStudentData.DepartmentColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Purpose {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueStudentData.PurposeColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueStudentData.PurposeColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int QueueNumber {[m
[32m++                get {[m
[32m++                    return ((int)(this[this.tableQueueStudentData.QueueNumberColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueStudentData.QueueNumberColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public System.DateTime QueueDate {[m
[32m++                get {[m
[32m++                    return ((global::System.DateTime)(this[this.tableQueueStudentData.QueueDateColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueStudentData.QueueDateColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string QueueCode {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueStudentData.QueueCodeColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueStudentData.QueueCodeColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Row event argument class[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public class QueueStudentDataRowChangeEvent : global::System.EventArgs {[m
[32m++            [m
[32m++            private QueueStudentDataRow eventRow;[m
[32m++            [m
[32m++            private global::System.Data.DataRowAction eventAction;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueStudentDataRowChangeEvent(QueueStudentDataRow row, global::System.Data.DataRowAction action) {[m
[32m++                this.eventRow = row;[m
[32m++                this.eventAction = action;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueStudentDataRow Row {[m
[32m++                get {[m
[32m++                    return this.eventRow;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataRowAction Action {[m
[32m++                get {[m
[32m++                    return this.eventAction;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++}[m
[32m++namespace capstoneproject.loginformDataSet5TableAdapters {[m
[32m++    [m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///Represents the connection and commands used to retrieve and save data.[m
[32m++    ///</summary>[m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.ComponentModel.DataObjectAttribute(true)][m
[32m++    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[32m++        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++    public partial class QueueStudentDataTableAdapter : global::System.ComponentModel.Component {[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlConnection _connection;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[32m++        [m
[32m++        private bool _clearBeforeFill;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public QueueStudentDataTableAdapter() {[m
[32m++            this.ClearBeforeFill = true;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[32m++            get {[m
[32m++                if ((this._adapter == null)) {[m
[32m++                    this.InitAdapter();[m
[32m++                }[m
[32m++                return this._adapter;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[32m++            get {[m
[32m++                if ((this._connection == null)) {[m
[32m++                    this.InitConnection();[m
[32m++                }[m
[32m++                return this._connection;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._connection = value;[m
[32m++                if ((this.Adapter.InsertCommand != null)) {[m
[32m++                    this.Adapter.InsertCommand.Connection = value;[m
[32m++                }[m
[32m++                if ((this.Adapter.DeleteCommand != null)) {[m
[32m++                    this.Adapter.DeleteCommand.Connection = value;[m
[32m++                }[m
[32m++                if ((this.Adapter.UpdateCommand != null)) {[m
[32m++                    this.Adapter.UpdateCommand.Connection = value;[m
[32m++                }[m
[32m++                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m++                    if ((this.CommandCollection[i] != null)) {[m
[32m++                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[32m++            get {[m
[32m++                return this._transaction;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._transaction = value;[m
[32m++                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m++                    this.CommandCollection[i].Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.DeleteCommand != null))) {[m
[32m++                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.InsertCommand != null))) {[m
[32m++                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.UpdateCommand != null))) {[m
[32m++                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[32m++            get {[m
[32m++                if ((this._commandCollection == null)) {[m
[32m++                    this.InitCommandCollection();[m
[32m++                }[m
[32m++                return this._commandCollection;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public bool ClearBeforeFill {[m
[32m++            get {[m
[32m++                return this._clearBeforeFill;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._clearBeforeFill = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitAdapter() {[m
[32m++            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[32m++            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[32m++            tableMapping.SourceTable = "Table";[m
[32m++            tableMapping.DataSetTable = "QueueStudentData";[m
[32m++            tableMapping.ColumnMappings.Add("id", "id");[m
[32m++            tableMapping.ColumnMappings.Add("Name", "Name");[m
[32m++            tableMapping.ColumnMappings.Add("Department", "Department");[m
[32m++            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[32m++            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[32m++            tableMapping.ColumnMappings.Add("QueueDate", "QueueDate");[m
[32m++            tableMapping.ColumnMappings.Add("QueueCode", "QueueCode");[m
[32m++            this._adapter.TableMappings.Add(tableMapping);[m
[32m++            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.DeleteCommand.Connection = this.Connection;[m
[32m++            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[QueueStudentData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode))";[m
[32m++            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.InsertCommand.Connection = this.Connection;[m
[32m++            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[QueueStudentData] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate, @QueueCode);[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM QueueStudentData WHERE (id = SCOPE_IDENTITY())";[m
[32m++            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.UpdateCommand.Connection = this.Connection;[m
[32m++            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueStudentData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [QueueDate] = @QueueDate, [QueueCode] = @QueueCode WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode));[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM QueueStudentData WHERE (id = @id)";[m
[32m++            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitConnection() {[m
[32m++            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[32m++            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitCommandCollection() {[m
[32m++            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[32m++            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._commandCollection[0].Connection = this.Connection;[m
[32m++            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM dbo." +[m
[32m++                "QueueStudentData";[m
[32m++            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[32m++        public virtual int Fill(loginformDataSet5.QueueStudentDataDataTable dataTable) {[m
[32m++            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m++            if ((this.ClearBeforeFill == true)) {[m
[32m++                dataTable.Clear();[m
[32m++            }[m
[32m++            int returnValue = this.Adapter.Fill(dataTable);[m
[32m++            return returnValue;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[32m++        public virtual loginformDataSet5.QueueStudentDataDataTable GetData() {[m
[32m++            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m++            loginformDataSet5.QueueStudentDataDataTable dataTable = new loginformDataSet5.QueueStudentDataDataTable();[m
[32m++            this.Adapter.Fill(dataTable);[m
[32m++            return dataTable;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(loginformDataSet5.QueueStudentDataDataTable dataTable) {[m
[32m++            return this.Adapter.Update(dataTable);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(loginformDataSet5 dataSet) {[m
[32m++            return this.Adapter.Update(dataSet, "QueueStudentData");[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[32m++            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[32m++                        dataRow});[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[32m++            return this.Adapter.Update(dataRows);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[32m++        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, System.DateTime Original_QueueDate, string Original_QueueCode) {[m
[32m++            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[32m++            if ((Original_Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[32m++            }[m
[32m++            if ((Original_Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[32m++            }[m
[32m++            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QueueNumber));[m
[32m++            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_QueueDate));[m
[32m++            if ((Original_QueueCode == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_QueueCode");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_QueueCode));[m
[32m++            }[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[32m++            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.DeleteCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.DeleteCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[32m++        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode) {[m
[32m++            if ((Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[32m++            }[m
[32m++            if ((Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[32m++            }[m
[32m++            if ((Purpose == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Purpose");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m++            }[m
[32m++            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m++            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(QueueDate));[m
[32m++            if ((QueueCode == null)) {[m
[32m++                throw new global::System.ArgumentNullException("QueueCode");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(QueueCode));[m
[32m++            }[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[32m++            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.InsertCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.InsertCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m++        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, System.DateTime Original_QueueDate, string Original_QueueCode, int id) {[m
[32m++            if ((Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[32m++            }[m
[32m++            if ((Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[32m++            }[m
[32m++            if ((Purpose == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Purpose");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m++            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(QueueDate));[m
[32m++            if ((QueueCode == null)) {[m
[32m++                throw new global::System.ArgumentNullException("QueueCode");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(QueueCode));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_id));[m
[32m++            if ((Original_Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Name));[m
[32m++            }[m
[32m++            if ((Original_Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Department));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_QueueNumber));[m
[32m++            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_QueueDate));[m
[32m++            if ((Original_QueueCode == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_QueueCode");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_QueueCode));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(id));[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[32m++            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.UpdateCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.UpdateCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m++        public virtual int Update(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode, int Original_id, string Original_Name, string Original_Department, int Original_QueueNumber, System.DateTime Original_QueueDate, string Original_QueueCode) {[m
[32m++            return this.Update(Name, Department, Purpose, QueueNumber, QueueDate, QueueCode, Original_id, Original_Name, Original_Department, Original_QueueNumber, Original_QueueDate, Original_QueueCode, Original_id);[m
[32m++        }[m
[32m++    }[m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[32m++    ///</summary>[m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[32m++        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[32m++    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[32m++        [m
[32m++        private UpdateOrderOption _updateOrder;[m
[32m++        [m
[32m++        private QueueStudentDataTableAdapter _queueStudentDataTableAdapter;[m
[32m++        [m
[32m++        private bool _backupDataSetBeforeUpdate;[m
[32m++        [m
[32m++        private global::System.Data.IDbConnection _connection;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public UpdateOrderOption UpdateOrder {[m
[32m++            get {[m
[32m++                return this._updateOrder;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._updateOrder = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[32m++            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[32m++            "a", "System.Drawing.Design.UITypeEditor")][m
[32m++        public QueueStudentDataTableAdapter QueueStudentDataTableAdapter {[m
[32m++            get {[m
[32m++                return this._queueStudentDataTableAdapter;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._queueStudentDataTableAdapter = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public bool BackupDataSetBeforeUpdate {[m
[32m++            get {[m
[32m++                return this._backupDataSetBeforeUpdate;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._backupDataSetBeforeUpdate = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        public global::System.Data.IDbConnection Connection {[m
[32m++            get {[m
[32m++                if ((this._connection != null)) {[m
[32m++                    return this._connection;[m
[32m++                }[m
[32m++                if (((this._queueStudentDataTableAdapter != null) [m
[32m++                            && (this._queueStudentDataTableAdapter.Connection != null))) {[m
[32m++                    return this._queueStudentDataTableAdapter.Connection;[m
[32m++                }[m
[32m++                return null;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._connection = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        public int TableAdapterInstanceCount {[m
[32m++            get {[m
[32m++                int count = 0;[m
[32m++                if ((this._queueStudentDataTableAdapter != null)) {[m
[32m++                    count = (count + 1);[m
[32m++                }[m
[32m++                return count;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update rows in top-down order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateUpdatedRows(loginformDataSet5 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueStudentDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] updatedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[32m++                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[32m++                if (((updatedRows != null) [m
[32m++                            && (0 < updatedRows.Length))) {[m
[32m++                    result = (result + this._queueStudentDataTableAdapter.Update(updatedRows));[m
[32m++                    allChangedRows.AddRange(updatedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Insert rows in top-down order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateInsertedRows(loginformDataSet5 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueStudentDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] addedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[32m++                if (((addedRows != null) [m
[32m++                            && (0 < addedRows.Length))) {[m
[32m++                    result = (result + this._queueStudentDataTableAdapter.Update(addedRows));[m
[32m++                    allAddedRows.AddRange(addedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Delete rows in bottom-up order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateDeletedRows(loginformDataSet5 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueStudentDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] deletedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[32m++                if (((deletedRows != null) [m
[32m++                            && (0 < deletedRows.Length))) {[m
[32m++                    result = (result + this._queueStudentDataTableAdapter.Update(deletedRows));[m
[32m++                    allChangedRows.AddRange(deletedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            if (((updatedRows == null) [m
[32m++                        || (updatedRows.Length < 1))) {[m
[32m++                return updatedRows;[m
[32m++            }[m
[32m++            if (((allAddedRows == null) [m
[32m++                        || (allAddedRows.Count < 1))) {[m
[32m++                return updatedRows;[m
[32m++            }[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[32m++                global::System.Data.DataRow row = updatedRows[i];[m
[32m++                if ((allAddedRows.Contains(row) == false)) {[m
[32m++                    realUpdatedRows.Add(row);[m
[32m++                }[m
[32m++            }[m
[32m++            return realUpdatedRows.ToArray();[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update all changes to the dataset.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public virtual int UpdateAll(loginformDataSet5 dataSet) {[m
[32m++            if ((dataSet == null)) {[m
[32m++                throw new global::System.ArgumentNullException("dataSet");[m
[32m++            }[m
[32m++            if ((dataSet.HasChanges() == false)) {[m
[32m++                return 0;[m
[32m++            }[m
[32m++            if (((this._queueStudentDataTableAdapter != null) [m
[32m++                        && (this.MatchTableAdapterConnection(this._queueStudentDataTableAdapter.Connection) == false))) {[m
[32m++                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[32m++                        "tring.");[m
[32m++            }[m
[32m++            global::System.Data.IDbConnection workConnection = this.Connection;[m
[32m++            if ((workConnection == null)) {[m
[32m++                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[32m++                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[32m++            }[m
[32m++            bool workConnOpened = false;[m
[32m++            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[32m++                        == global::System.Data.ConnectionState.Broken)) {[m
[32m++                workConnection.Close();[m
[32m++            }[m
[32m++            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[32m++                workConnection.Open();[m
[32m++                workConnOpened = true;[m
[32m++            }[m
[32m++            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[32m++            if ((workTransaction == null)) {[m
[32m++                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[32m++                        "ctions or the current state is not allowing the transaction to begin.");[m
[32m++            }[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[32m++            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[32m++            int result = 0;[m
[32m++            global::System.Data.DataSet backupDataSet = null;[m
[32m++            if (this.BackupDataSetBeforeUpdate) {[m
[32m++                backupDataSet = new global::System.Data.DataSet();[m
[32m++                backupDataSet.Merge(dataSet);[m
[32m++            }[m
[32m++            try {[m
[32m++                // ---- Prepare for update -----------[m
[32m++                //[m
[32m++                if ((this._queueStudentDataTableAdapter != null)) {[m
[32m++                    revertConnections.Add(this._queueStudentDataTableAdapter, this._queueStudentDataTableAdapter.Connection);[m
[32m++                    this._queueStudentDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[32m++                    this._queueStudentDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[32m++                    if (this._queueStudentDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[32m++                        this._queueStudentDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[32m++                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueStudentDataTableAdapter.Adapter);[m
[32m++                    }[m
[32m++                }[m
[32m++                // [m
[32m++                //---- Perform updates -----------[m
[32m++                //[m
[32m++                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[32m++                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m++                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m++                }[m
[32m++                else {[m
[32m++                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m++                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m++                }[m
[32m++                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[32m++                // [m
[32m++                //---- Commit updates -----------[m
[32m++                //[m
[32m++                workTransaction.Commit();[m
[32m++                if ((0 < allAddedRows.Count)) {[m
[32m++                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m++                    allAddedRows.CopyTo(rows);[m
[32m++                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.DataRow row = rows[i];[m
[32m++                        row.AcceptChanges();[m
[32m++                    }[m
[32m++                }[m
[32m++                if ((0 < allChangedRows.Count)) {[m
[32m++                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[32m++                    allChangedRows.CopyTo(rows);[m
[32m++                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.DataRow row = rows[i];[m
[32m++                        row.AcceptChanges();[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            catch (global::System.Exception ex) {[m
[32m++                workTransaction.Rollback();[m
[32m++                // ---- Restore the dataset -----------[m
[32m++                if (this.BackupDataSetBeforeUpdate) {[m
[32m++                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[32m++                    dataSet.Clear();[m
[32m++                    dataSet.Merge(backupDataSet);[m
[32m++                }[m
[32m++                else {[m
[32m++                    if ((0 < allAddedRows.Count)) {[m
[32m++                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m++                        allAddedRows.CopyTo(rows);[m
[32m++                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                            global::System.Data.DataRow row = rows[i];[m
[32m++                            row.AcceptChanges();[m
[32m++                            row.SetAdded();[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                throw ex;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if (workConnOpened) {[m
[32m++                    workConnection.Close();[m
[32m++                }[m
[32m++                if ((this._queueStudentDataTableAdapter != null)) {[m
[32m++                    this._queueStudentDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueStudentDataTableAdapter]));[m
[32m++                    this._queueStudentDataTableAdapter.Transaction = null;[m
[32m++                }[m
[32m++                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[32m++                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[32m++                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[32m++                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[32m++                        adapter.AcceptChangesDuringUpdate = true;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[32m++            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[32m++            if ((this._connection != null)) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            if (((this.Connection == null) [m
[32m++                        || (inputConnection == null))) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update Order Option[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public enum UpdateOrderOption {[m
[32m++            [m
[32m++            InsertUpdateDelete = 0,[m
[32m++            [m
[32m++            UpdateInsertDelete = 1,[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Used to sort self-referenced table's rows[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[32m++            [m
[32m++            private global::System.Data.DataRelation _relation;[m
[32m++            [m
[32m++            private int _childFirst;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[32m++                this._relation = relation;[m
[32m++                if (childFirst) {[m
[32m++                    this._childFirst = -1;[m
[32m++                }[m
[32m++                else {[m
[32m++                    this._childFirst = 1;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[32m++                global::System.Diagnostics.Debug.Assert((row != null));[m
[32m++                global::System.Data.DataRow root = row;[m
[32m++                distance = 0;[m
[32m++[m
[32m++                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[32m++                traversedRows[row] = row;[m
[32m++[m
[32m++                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m++                for ([m
[32m++                ; ((parent != null) [m
[32m++                            && (traversedRows.ContainsKey(parent) == false)); [m
[32m++                ) {[m
[32m++                    distance = (distance + 1);[m
[32m++                    root = parent;[m
[32m++                    traversedRows[parent] = parent;[m
[32m++                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m++                }[m
[32m++[m
[32m++                if ((distance == 0)) {[m
[32m++                    traversedRows.Clear();[m
[32m++                    traversedRows[row] = row;[m
[32m++                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m++                    for ([m
[32m++                    ; ((parent != null) [m
[32m++                                && (traversedRows.ContainsKey(parent) == false)); [m
[32m++                    ) {[m
[32m++                        distance = (distance + 1);[m
[32m++                        root = parent;[m
[32m++                        traversedRows[parent] = parent;[m
[32m++                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m++                    }[m
[32m++                }[m
[32m++[m
[32m++                return root;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diawarning: in the working copy of 'capstoneproject/loginformDataSet5.xsd', LF will be replaced by CRLF the next time Git touches it
gnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[32m++                if (object.ReferenceEquals(row1, row2)) {[m
[32m++                    return 0;[m
[32m++                }[m
[32m++                if ((row1 == null)) {[m
[32m++                    return -1;[m
[32m++                }[m
[32m++                if ((row2 == null)) {[m
[32m++                    return 1;[m
[32m++                }[m
[32m++[m
[32m++                int distance1 = 0;[m
[32m++                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[32m++[m
[32m++                int distance2 = 0;[m
[32m++                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[32m++[m
[32m++                if (object.ReferenceEquals(root1, root2)) {[m
[32m++                    return (this._childFirst * distance1.CompareTo(distance2));[m
[32m++                }[m
[32m++                else {[m
[32m++                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[32m++                                    && (root2.Table != null)));[m
[32m++                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[32m++                        return -1;[m
[32m++                    }[m
[32m++                    else {[m
[32m++                        return 1;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++}[m
[32m++[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  #pragma warning restore 1591[m
[1mdiff --cc capstoneproject/loginformDataSet5.xsd[m
[1mindex 4cfe141,ee7f33a..0000000[m
[1m--- a/capstoneproject/loginformDataSet5.xsd[m
[1m+++ b/capstoneproject/loginformDataSet5.xsd[m
[36m@@@ -1,132 -1,132 +1,266 @@@[m
[31m -ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[31m -<xs:schema id="loginformDataSet5" targetNamespace="http://tempuri.org/loginformDataSet5.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet5.xsd" xmlns="http://tempuri.org/loginformDataSet5.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[31m -  <xs:annotation>[m
[31m -    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[31m -      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[31m -        <Connections>[m
[31m -          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[31m -        </Connections>[m
[31m -        <Tables>[m
[31m -          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueStudentDataTableAdapter" GeneratorDataComponentClassName="QueueStudentDataTableAdapter" Name="QueueStudentData" UserDataComponentName="QueueStudentDataTableAdapter">[m
[31m -            <MainSource>[m
[31m -              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueStudentData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[31m -                <DeleteCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>DELETE FROM [dbo].[QueueStudentData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode))</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </DeleteCommand>[m
[31m -                <InsertCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>INSERT INTO [dbo].[QueueStudentData] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate, @QueueCode);[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM QueueStudentData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </InsertCommand>[m
[31m -                <SelectCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM dbo.QueueStudentData</CommandText>[m
[31m -                    <Parameters />[m
[31m -                  </DbCommand>[m
[31m -                </SelectCommand>[m
[31m -                <UpdateCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>UPDATE [dbo].[QueueStudentData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [QueueDate] = @QueueDate, [QueueCode] = @QueueCode WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode));[m
[31m -SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM QueueStudentData WHERE (id = @id)</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueStudentData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </UpdateCommand>[m
[31m -              </DbSource>[m
[31m -            </MainSource>[m
[31m -            <Mappings>[m
[31m -              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[31m -              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[31m -              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[31m -              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[31m -              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[31m -              <Mapping SourceColumn="QueueDate" DataSetColumn="QueueDate" />[m
[31m -              <Mapping SourceColumn="QueueCode" DataSetColumn="QueueCode" />[m
[31m -            </Mappings>[m
[31m -            <Sources />[m
[31m -          </TableAdapter>[m
[31m -        </Tables>[m
[31m -        <Sources />[m
[31m -      </DataSource>[m
[31m -    </xs:appinfo>[m
[31m -  </xs:annotation>[m
[31m -  <xs:element name="loginformDataSet5" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet5" msprop:Generator_UserDSName="loginformDataSet5">[m
[31m -    <xs:complexType>[m
[31m -      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[31m -        <xs:element name="QueueStudentData" msprop:Generator_TableClassName="QueueStudentDataDataTable" msprop:Generator_TableVarName="tableQueueStudentData" msprop:Generator_TablePropName="QueueStudentData" msprop:Generator_RowDeletingName="QueueStudentDataRowDeleting" msprop:Generator_RowChangingName="QueueStudentDataRowChanging" msprop:Generator_RowEvHandlerName="QueueStudentDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueStudentDataRowDeleted" msprop:Generator_UserTableName="QueueStudentData" msprop:Generator_RowChangedName="QueueStudentDataRowChanged" msprop:Generator_RowEvArgName="QueueStudentDataRowChangeEvent" msprop:Generator_RowClassName="QueueStudentDataRow">[m
[31m -          <xs:complexType>[m
[31m -            <xs:sequence>[m
[31m -              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[31m -              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="2147483647" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[31m -              <xs:element name="QueueDate" msprop:Generator_ColumnVarNameInTable="columnQueueDate" msprop:Generator_ColumnPropNameInRow="QueueDate" msprop:Generator_ColumnPropNameInTable="QueueDateColumn" msprop:Generator_UserColumnName="QueueDate" type="xs:dateTime" />[m
[31m -              <xs:element name="QueueCode" msprop:Generator_ColumnVarNameInTable="columnQueueCode" msprop:Generator_ColumnPropNameInRow="QueueCode" msprop:Generator_ColumnPropNameInTable="QueueCodeColumn" msprop:Generator_UserColumnName="QueueCode">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="10" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -            </xs:sequence>[m
[31m -          </xs:complexType>[m
[31m -        </xs:element>[m
[31m -      </xs:choice>[m
[31m -    </xs:complexType>[m
[31m -    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[31m -      <xs:selector xpath=".//mstns:QueueStudentData" />[m
[31m -      <xs:field xpath="mstns:id" />[m
[31m -    </xs:unique>[m
[31m -  </xs:element>[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m +<xs:schema id="loginformDataSet5" targetNamespace="http://tempuri.org/loginformDataSet5.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet5.xsd" xmlns="http://tempuri.org/loginformDataSet5.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[32m +  <xs:annotation>[m
[32m +    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m +      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m +        <Connections>[m
[32m +          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[32m +        </Connections>[m
[32m +        <Tables>[m
[32m +          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueStudentDataTableAdapter" GeneratorDataComponentClassName="QueueStudentDataTableAdapter" Name="QueueStudentData" UserDataComponentName="QueueStudentDataTableAdapter">[m
[32m +            <MainSource>[m
[32m +              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueStudentData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[32m +                <DeleteCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>DELETE FROM [dbo].[QueueStudentData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode))</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </DeleteCommand>[m
[32m +                <InsertCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>INSERT INTO [dbo].[QueueStudentData] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate, @QueueCode);[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM QueueStudentData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </InsertCommand>[m
[32m +                <SelectCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM dbo.QueueStudentData</CommandText>[m
[32m +                    <Parameters />[m
[32m +                  </DbCommand>[m
[32m +                </SelectCommand>[m
[32m +                <UpdateCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>UPDATE [dbo].[QueueStudentData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [QueueDate] = @QueueDate, [QueueCode] = @QueueCode WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode));[m
[32m +SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM QueueStudentData WHERE (id = @id)</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueStudentData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </UpdateCommand>[m
[32m +              </DbSource>[m
[32m +            </MainSource>[m
[32m +            <Mappings>[m
[32m +              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[32m +              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[32m +              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[32m +              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[32m +              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[32m +              <Mapping SourceColumn="QueueDate" DataSetColumn="QueueDate" />[m
[32m +              <Mapping SourceColumn="QueueCode" DataSetColumn="QueueCode" />[m
[32m +            </Mappings>[m
[32m +            <Sources />[m
[32m +          </TableAdapter>[m
[32m +        </Tables>[m
[32m +        <Sources />[m
[32m +      </DataSource>[m
[32m +    </xs:appinfo>[m
[32m +  </xs:annotation>[m
[32m +  <xs:element name="loginformDataSet5" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet5" msprop:Generator_UserDSName="loginformDataSet5">[m
[32m +    <xs:complexType>[m
[32m +      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[32m +        <xs:element name="QueueStudentData" msprop:Generator_TableClassName="QueueStudentDataDataTable" msprop:Generator_TableVarName="tableQueueStudentData" msprop:Generator_TablePropName="QueueStudentData" msprop:Generator_RowDeletingName="QueueStudentDataRowDeleting" msprop:Generator_RowChangingName="QueueStudentDataRowChanging" msprop:Generator_RowEvHandlerName="QueueStudentDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueStudentDataRowDeleted" msprop:Generator_UserTableName="QueueStudentData" msprop:Generator_RowChangedName="QueueStudentDataRowChanged" msprop:Generator_RowEvArgName="QueueStudentDataRowChangeEvent" msprop:Generator_RowClassName="QueueStudentDataRow">[m
[32m +          <xs:complexType>[m
[32m +            <xs:sequence>[m
[32m +              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[32m +              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="2147483647" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[32m +              <xs:element name="QueueDate" msprop:Generator_ColumnVarNameInTable="columnQueueDate" msprop:Generator_ColumnPropNameInRow="QueueDate" msprop:Generator_ColumnPropNameInTable="QueueDateColumn" msprop:Generator_UserColumnName="QueueDate" type="xs:dateTime" />[m
[32m +              <xs:element name="QueueCode" msprop:Generator_ColumnVarNameInTable="columnQueueCode" msprop:Generator_ColumnPropNameInRow="QueueCode" msprop:Generator_ColumnPropNameInTable="QueueCodeColumn" msprop:Generator_UserColumnName="QueueCode">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="10" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +            </xs:sequence>[m
[32m +          </xs:complexType>[m
[32m +        </xs:element>[m
[32m +      </xs:choice>[m
[32m +    </xs:complexType>[m
[32m +    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[32m +      <xs:selector xpath=".//mstns:QueueStudentData" />[m
[32m +      <xs:field xpath="mstns:id" />[m
[32m +    </xs:unique>[m
[32m +  </xs:element>[m
[32m++=======[m
[32m++ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m++<xs:schema id="loginformDataSet5" targetNamespace="http://tempuri.org/loginformDataSet5.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet5.xsd" xmlns="http://tempuri.org/loginformDataSet5.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[32m++  <xs:annotation>[m
[32m++    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m++      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m++        <Connections>[m
[32m++          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[32m++        </Connections>[m
[32m++        <Tables>[m
[32m++          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueStudentDataTableAdapter" GeneratorDataComponentClassName="QueueStudentDataTableAdapter" Name="QueueStudentData" UserDataComponentName="QueueStudentDataTableAdapter">[m
[32m++            <MainSource>[m
[32m++              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueStudentData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[32m++                <DeleteCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>DELETE FROM [dbo].[QueueStudentData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode))</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </DeleteCommand>[m
[32m++                <InsertCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>INSERT INTO [dbo].[QueueStudentData] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate, @QueueCode);[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM QueueStudentData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </InsertCommand>[m
[32m++                <SelectCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM dbo.QueueStudentData</CommandText>[m
[32m++                    <Parameters />[m
[32m++                  </DbCommand>[m
[32m++                </SelectCommand>[m
[32m++                <UpdateCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>UPDATE [dbo].[QueueStudentData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueNumber] = @QueueNumber, [QueueDate] = @QueueDate, [QueueCode] = @QueueCode WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueNumber] = @Original_QueueNumber) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode));[m
[32m++SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM QueueStudentData WHERE (id = @id)</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueStudentData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </UpdateCommand>[m
[32m++              </DbSource>[m
[32m++            </MainSource>[m
[32m++            <Mappings>[m
[32m++              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[32m++              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[32m++              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[32m++              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[32m++              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[32m++              <Mapping SourceColumn="QueueDate" DataSetColumn="QueueDate" />[m
[32m++              <Mapping SourceColumn="QueueCode" DataSetColumn="QueueCode" />[m
[32m++            </Mappings>[m
[32m++            <Sources />[m
[32m++          </TableAdapter>[m
[32m++        </Tables>[m
[32m++        <Sources />[m
[32m++      </DataSource>[m
[32m++    </xs:appinfo>[m
[32m++  </xs:annotation>[m
[32m++  <xs:element name="loginformDataSet5" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet5" msprop:Generator_UserDSName="loginformDataSet5">[m
[32m++    <xs:complexType>[m
[32m++      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[32m++        <xs:element name="QueueStudentData" msprop:Generator_TableClassName="QueueStudentDataDataTable" msprop:Generator_TableVarName="tableQueueStudentData" msprop:Generator_TablePropName="QueueStudentData" msprop:Generator_RowDeletingName="QueueStudentDataRowDeleting" msprop:Generator_RowChangingName="QueueStudentDataRowChanging" msprop:Generator_RowEvHandlerName="QueueStudentDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueStudentDataRowDeleted" msprop:Generator_UserTableName="QueueStudentData" msprop:Generator_RowChangedName="QueueStudentDataRowChanged" msprop:Generator_RowEvArgName="QueueStudentDataRowChangeEvent" msprop:Generator_RowClassName="QueueStudentDataRow">[m
[32m++          <xs:complexType>[m
[32m++            <xs:sequence>[m
[32m++              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Gwarning: in the working copy of 'capstoneproject/loginformDataSet6.Designer.cs', LF will be replaced by CRLF the next time Git touches it
enerator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[32m++              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="2147483647" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[32m++              <xs:element name="QueueDate" msprop:Generator_ColumnVarNameInTable="columnQueueDate" msprop:Generator_ColumnPropNameInRow="QueueDate" msprop:Generator_ColumnPropNameInTable="QueueDateColumn" msprop:Generator_UserColumnName="QueueDate" type="xs:dateTime" />[m
[32m++              <xs:element name="QueueCode" msprop:Generator_ColumnVarNameInTable="columnQueueCode" msprop:Generator_ColumnPropNameInRow="QueueCode" msprop:Generator_ColumnPropNameInTable="QueueCodeColumn" msprop:Generator_UserColumnName="QueueCode">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="10" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++            </xs:sequence>[m
[32m++          </xs:complexType>[m
[32m++        </xs:element>[m
[32m++      </xs:choice>[m
[32m++    </xs:complexType>[m
[32m++    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[32m++      <xs:selector xpath=".//mstns:QueueStudentData" />[m
[32m++      <xs:field xpath="mstns:id" />[m
[32m++    </xs:unique>[m
[32m++  </xs:element>[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  </xs:schema>[m
[1mdiff --cc capstoneproject/loginformDataSet6.Designer.cs[m
[1mindex f78c7c8,deb5d4b..0000000[m
[1m--- a/capstoneproject/loginformDataSet6.Designer.cs[m
[1m+++ b/capstoneproject/loginformDataSet6.Designer.cs[m
[36m@@@ -1,1564 -1,1564 +1,3130 @@@[m
[31m -ï»¿//------------------------------------------------------------------------------[m
[31m -// <auto-generated>[m
[31m -//     This code was generated by a tool.[m
[31m -//     Runtime Version:4.0.30319.42000[m
[31m -//[m
[31m -//     Changes to this file may cause incorrect behavior and will be lost if[m
[31m -//     the code is regenerated.[m
[31m -// </auto-generated>[m
[31m -//------------------------------------------------------------------------------[m
[31m -[m
[31m -#pragma warning disable 1591[m
[31m -[m
[31m -namespace capstoneproject {[m
[31m -    [m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///Represents a strongly typed in-memory cache of data.[m
[31m -    ///</summary>[m
[31m -    [global::System.Serializable()][m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[31m -    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet6")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[31m -    public partial class loginformDataSet6 : global::System.Data.DataSet {[m
[31m -        [m
[31m -        private QueueStudentDataDataTable tableQueueStudentData;[m
[31m -        [m
[31m -        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public loginformDataSet6() {[m
[31m -            this.BeginInit();[m
[31m -            this.InitClass();[m
[31m -            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -            base.Tables.CollectionChanged += schemaChangedHandler;[m
[31m -            base.Relations.CollectionChanged += schemaChangedHandler;[m
[31m -            this.EndInit();[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected loginformDataSet6(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[31m -                base(info, context, false) {[m
[31m -            if ((this.IsBinarySerialized(info, context) == true)) {[m
[31m -                this.InitVars(false);[m
[31m -                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[31m -                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[31m -                return;[m
[31m -            }[m
[31m -            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[31m -            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[31m -                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[31m -                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[31m -                if ((ds.Tables["QueueStudentData"] != null)) {[m
[31m -                    base.Tables.Add(new QueueStudentDataDataTable(ds.Tables["QueueStudentData"]));[m
[31m -                }[m
[31m -                this.DataSetName = ds.DataSetName;[m
[31m -                this.Prefix = ds.Prefix;[m
[31m -                this.Namespace = ds.Namespace;[m
[31m -                this.Locale = ds.Locale;[m
[31m -                this.CaseSensitive = ds.CaseSensitive;[m
[31m -                this.EnforceConstraints = ds.EnforceConstraints;[m
[31m -                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            else {[m
[31m -                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[31m -            }[m
[31m -            this.GetSerializationData(info, context);[m
[31m -            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -            base.Tables.CollectionChanged += schemaChangedHandler;[m
[31m -            this.Relations.CollectionChanged += schemaChangedHandler;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[31m -        public QueueStudentDataDataTable QueueStudentData {[m
[31m -            get {[m
[31m -                return this.tableQueueStudentData;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.BrowsableAttribute(true)][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[31m -        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[31m -            get {[m
[31m -                return this._schemaSerializationMode;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._schemaSerializationMode = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[31m -        public new global::System.Data.DataTableCollection Tables {[m
[31m -            get {[m
[31m -                return base.Tables;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[31m -        public new global::System.Data.DataRelationCollection Relations {[m
[31m -            get {[m
[31m -                return base.Relations;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override void InitializeDerivedDataSet() {[m
[31m -            this.BeginInit();[m
[31m -            this.InitClass();[m
[31m -            this.EndInit();[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public override global::System.Data.DataSet Clone() {[m
[31m -            loginformDataSet6 cln = ((loginformDataSet6)(base.Clone()));[m
[31m -            cln.InitVars();[m
[31m -            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[31m -            return cln;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override bool ShouldSerializeTables() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override bool ShouldSerializeRelations() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[31m -            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[31m -                this.Reset();[m
[31m -                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[31m -                ds.ReadXml(reader);[m
[31m -                if ((ds.Tables["QueueStudentData"] != null)) {[m
[31m -                    base.Tables.Add(new QueueStudentDataDataTable(ds.Tables["QueueStudentData"]));[m
[31m -                }[m
[31m -                this.DataSetName = ds.DataSetName;[m
[31m -                this.Prefix = ds.Prefix;[m
[31m -                this.Namespace = ds.Namespace;[m
[31m -                this.Locale = ds.Locale;[m
[31m -                this.CaseSensitive = ds.CaseSensitive;[m
[31m -                this.EnforceConstraints = ds.EnforceConstraints;[m
[31m -                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            else {[m
[31m -                this.ReadXml(reader);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[31m -            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[31m -            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[31m -            stream.Position = 0;[m
[31m -            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal void InitVars() {[m
[31m -            this.InitVars(true);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal void InitVars(bool initTable) {[m
[31m -            this.tableQueueStudentData = ((QueueStudentDataDataTable)(base.Tables["QueueStudentData"]));[m
[31m -            if ((initTable == true)) {[m
[31m -                if ((this.tableQueueStudentData != null)) {[m
[31m -                    this.tableQueueStudentData.InitVars();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitClass() {[m
[31m -            this.DataSetName = "loginformDataSet6";[m
[31m -            this.Prefix = "";[m
[31m -            this.Namespace = "http://tempuri.org/loginformDataSet6.xsd";[m
[31m -            this.EnforceConstraints = true;[m
[31m -            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -            this.tableQueueStudentData = new QueueStudentDataDataTable();[m
[31m -            base.Tables.Add(this.tableQueueStudentData);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private bool ShouldSerializeQueueStudentData() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[31m -            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[31m -            loginformDataSet6 ds = new loginformDataSet6();[m
[31m -            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[31m -            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[31m -            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -            any.Namespace = ds.Namespace;[m
[31m -            sequence.Items.Add(any);[m
[31m -            type.Particle = sequence;[m
[31m -            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[31m -            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[31m -                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[31m -                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[31m -                try {[m
[31m -                    global::System.Xml.Schema.XmlSchema schema = null;[m
[31m -                    dsSchema.Write(s1);[m
[31m -                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[31m -                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[31m -                        s2.SetLength(0);[m
[31m -                        schema.Write(s2);[m
[31m -                        if ((s1.Length == s2.Length)) {[m
[31m -                            s1.Position = 0;[m
[31m -                            s2.Position = 0;[m
[31m -                            for (; ((s1.Position != s1.Length) [m
[31m -                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[31m -                                ;[m
[31m -                            }[m
[31m -                            if ((s1.Position == s1.Length)) {[m
[31m -                                return type;[m
[31m -                            }[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                finally {[m
[31m -                    if ((s1 != null)) {[m
[31m -                        s1.Close();[m
[31m -                    }[m
[31m -                    if ((s2 != null)) {[m
[31m -                        s2.Close();[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            xs.Add(dsSchema);[m
[31m -            return type;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public delegate void QueueStudentDataRowChangeEventHandler(object sender, QueueStudentDataRowChangeEvent e);[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Represents the strongly named DataTable class.[m
[31m -        ///</summary>[m
[31m -        [global::System.Serializable()][m
[31m -        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[31m -        public partial class QueueStudentDataDataTable : global::System.Data.TypedTableBase<QueueStudentDataRow> {[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnid;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnName;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnDepartment;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnPurpose;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnQueueDate;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnQueueCode;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueStudentDataDataTable() {[m
[31m -                this.TableName = "QueueStudentData";[m
[31m -                this.BeginInit();[m
[31m -                this.InitClass();[m
[31m -                this.EndInit();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal QueueStudentDataDataTable(global::System.Data.DataTable table) {[m
[31m -                this.TableName = table.TableName;[m
[31m -                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[31m -                    this.CaseSensitive = table.CaseSensitive;[m
[31m -                }[m
[31m -                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[31m -                    this.Locale = table.Locale;[m
[31m -                }[m
[31m -                if ((table.Namespace != table.DataSet.Namespace)) {[m
[31m -                    this.Namespace = table.Namespace;[m
[31m -                }[m
[31m -                this.Prefix = table.Prefix;[m
[31m -                this.MinimumCapacity = table.MinimumCapacity;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected QueueStudentDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[31m -                    base(info, context) {[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn idColumn {[m
[31m -                get {[m
[31m -                    return this.columnid;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn NameColumn {[m
[31m -                get {[m
[31m -                    return this.columnName;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn DepartmentColumn {[m
[31m -                get {[m
[31m -                    return this.columnDepartment;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn PurposeColumn {[m
[31m -                get {[m
[31m -                    return this.columnPurpose;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn QueueDateColumn {[m
[31m -                get {[m
[31m -                    return this.columnQueueDate;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn QueueCodeColumn {[m
[31m -                get {[m
[31m -                    return this.columnQueueCode;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            [global::System.ComponentModel.Browsable(false)][m
[31m -            public int Count {[m
[31m -                get {[m
[31m -                    return this.Rows.Count;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueStudentDataRow this[int index] {[m
[31m -                get {[m
[31m -                    return ((QueueStudentDataRow)(this.Rows[index]));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowChanging;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowChanged;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowDeleting;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowDeleted;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void AddQueueStudentDataRow(QueueStudentDataRow row) {[m
[31m -                this.Rows.Add(row);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueStudentDataRow AddQueueStudentDataRow(string Name, string Department, string Purpose, System.DateTime QueueDate, string QueueCode) {[m
[31m -                QueueStudentDataRow rowQueueStudentDataRow = ((QueueStudentDataRow)(this.NewRow()));[m
[31m -                object[] columnValuesArray = new object[] {[m
[31m -                        null,[m
[31m -                        Name,[m
[31m -                        Department,[m
[31m -                        Purpose,[m
[31m -                        QueueDate,[m
[31m -                        QueueCode};[m
[31m -                rowQueueStudentDataRow.ItemArray = columnValuesArray;[m
[31m -                this.Rows.Add(rowQueueStudentDataRow);[m
[31m -                return rowQueueStudentDataRow;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueStudentDataRow FindByid(int id) {[m
[31m -                return ((QueueStudentDataRow)(this.Rows.Find(new object[] {[m
[31m -                            id})));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public override global::System.Data.DataTable Clone() {[m
[31m -                QueueStudentDataDataTable cln = ((QueueStudentDataDataTable)(base.Clone()));[m
[31m -                cln.InitVars();[m
[31m -                return cln;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Data.DataTable CreateInstance() {[m
[31m -                return new QueueStudentDataDataTable();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal void InitVars() {[m
[31m -                this.columnid = base.Columns["id"];[m
[31m -                this.columnName = base.Columns["Name"];[m
[31m -                this.columnDepartment = base.Columns["Department"];[m
[31m -                this.columnPurpose = base.Columns["Purpose"];[m
[31m -                this.columnQueueDate = base.Columns["QueueDate"];[m
[31m -                this.columnQueueCode = base.Columns["QueueCode"];[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            private void InitClass() {[m
[31m -                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnid);[m
[31m -                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnName);[m
[31m -                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnDepartment);[m
[31m -                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnPurpose);[m
[31m -                this.columnQueueDate = new global::System.Data.DataColumn("QueueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnQueueDate);[m
[31m -                this.columnQueueCode = new global::System.Data.DataColumn("QueueCode", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnQueueCode);[m
[31m -                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[31m -                                this.columnid}, true));[m
[31m -                this.columnid.AutoIncrement = true;[m
[31m -                this.columnid.AutoIncrementSeed = -1;[m
[31m -                this.columnid.AutoIncrementStep = -1;[m
[31m -                this.columnid.AllowDBNull = false;[m
[31m -                this.columnid.ReadOnly = true;[m
[31m -                this.columnid.Unique = true;[m
[31m -                this.columnName.AllowDBNull = false;[m
[31m -                this.columnName.MaxLength = 50;[m
[31m -                this.columnDepartment.AllowDBNull = false;[m
[31m -                this.columnDepartment.MaxLength = 50;[m
[31m -                this.columnPurpose.AllowDBNull = false;[m
[31m -                this.columnPurpose.MaxLength = 2147483647;[m
[31m -                this.columnQueueDate.AllowDBNull = false;[m
[31m -                this.columnQueueCode.AllowDBNull = false;[m
[31m -                this.columnQueueCode.MaxLength = 10;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueStudentDataRow NewQueueStudentDataRow() {[m
[31m -                return ((QueueStudentDataRow)(this.NewRow()));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[31m -                return new QueueStudentDataRow(builder);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Type GetRowType() {[m
[31m -                return typeof(QueueStudentDataRow);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowChanged(e);[m
[31m -                if ((this.QueueStudentDataRowChanged != null)) {[m
[31m -                    this.QueueStudentDataRowChanged(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowChanging(e);[m
[31m -                if ((this.QueueStudentDataRowChanging != null)) {[m
[31m -                    this.QueueStudentDataRowChanging(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowDeleted(e);[m
[31m -                if ((this.QueueStudentDataRowDeleted != null)) {[m
[31m -                    this.QueueStudentDataRowDeleted(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowDeleting(e);[m
[31m -                if ((this.QueueStudentDataRowDeleting != null)) {[m
[31m -                    this.QueueStudentDataRowDeleting(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void RemoveQueueStudentDataRow(QueueStudentDataRow row) {[m
[31m -                this.Rows.Remove(row);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[31m -                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[31m -                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[31m -                loginformDataSet6 ds = new loginformDataSet6();[m
[31m -                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[31m -                any1.MinOccurs = new decimal(0);[m
[31m -                any1.MaxOccurs = decimal.MaxValue;[m
[31m -                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[31m -                sequence.Items.Add(any1);[m
[31m -                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[31m -                any2.MinOccurs = new decimal(1);[m
[31m -                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[31m -                sequence.Items.Add(any2);[m
[31m -                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[31m -                attribute1.Name = "namespace";[m
[31m -                attribute1.FixedValue = ds.Namespace;[m
[31m -                type.Attributes.Add(attribute1);[m
[31m -                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[31m -                attribute2.Name = "tableTypeName";[m
[31m -                attribute2.FixedValue = "QueueStudentDataDataTable";[m
[31m -                type.Attributes.Add(attribute2);[m
[31m -                type.Particle = sequence;[m
[31m -                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[31m -                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[31m -                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[31m -                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[31m -                    try {[m
[31m -                        global::System.Xml.Schema.XmlSchema schema = null;[m
[31m -                        dsSchema.Write(s1);[m
[31m -                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[31m -                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[31m -                            s2.SetLength(0);[m
[31m -                            schema.Write(s2);[m
[31m -                            if ((s1.Length == s2.Length)) {[m
[31m -                                s1.Position = 0;[m
[31m -                                s2.Position = 0;[m
[31m -                                for (; ((s1.Position != s1.Length) [m
[31m -                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[31m -                                    ;[m
[31m -                                }[m
[31m -                                if ((s1.Position == s1.Length)) {[m
[31m -                                    return type;[m
[31m -                                }[m
[31m -                            }[m
[31m -                        }[m
[31m -                    }[m
[31m -                    finally {[m
[31m -                        if ((s1 != null)) {[m
[31m -                            s1.Close();[m
[31m -                        }[m
[31m -                        if ((s2 != null)) {[m
[31m -                            s2.Close();[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                xs.Add(dsSchema);[m
[31m -                return type;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Represents strongly named DataRow class.[m
[31m -        ///</summary>[m
[31m -        public partial class QueueStudentDataRow : global::System.Data.DataRow {[m
[31m -            [m
[31m -            private QueueStudentDataDataTable tableQueueStudentData;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal QueueStudentDataRow(global::System.Data.DataRowBuilder rb) : [m
[31m -                    base(rb) {[m
[31m -                this.tableQueueStudentData = ((QueueStudentDataDataTable)(this.Table));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int id {[m
[31m -                get {[m
[31m -                    return ((int)(this[this.tableQueueStudentData.idColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueStudentData.idColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Name {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueStudentData.NameColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueStudentData.NameColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Department {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueStudentData.DepartmentColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueStudentData.DepartmentColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Purpose {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueStudentData.PurposeColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueStudentData.PurposeColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public System.DateTime QueueDate {[m
[31m -                get {[m
[31m -                    return ((global::System.DateTime)(this[this.tableQueueStudentData.QueueDateColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueStudentData.QueueDateColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string QueueCode {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tableQueueStudentData.QueueCodeColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tableQueueStudentData.QueueCodeColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Row event argument class[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public class QueueStudentDataRowChangeEvent : global::System.EventArgs {[m
[31m -            [m
[31m -            private QueueStudentDataRow eventRow;[m
[31m -            [m
[31m -            private global::System.Data.DataRowAction eventAction;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueStudentDataRowChangeEvent(QueueStudentDataRow row, global::System.Data.DataRowAction action) {[m
[31m -                this.eventRow = row;[m
[31m -                this.eventAction = action;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public QueueStudentDataRow Row {[m
[31m -                get {[m
[31m -                    return this.eventRow;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataRowAction Action {[m
[31m -                get {[m
[31m -                    return this.eventAction;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -}[m
[31m -namespace capstoneproject.loginformDataSet6TableAdapters {[m
[31m -    [m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///Represents the connection and commands used to retrieve and save data.[m
[31m -    ///</summary>[m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.ComponentModel.DataObjectAttribute(true)][m
[31m -    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[31m -        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -    public partial class QueueStudentDataTableAdapter : global::System.ComponentModel.Component {[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlConnection _connection;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[31m -        [m
[31m -        private bool _clearBeforeFill;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public QueueStudentDataTableAdapter() {[m
[31m -            this.ClearBeforeFill = true;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[31m -            get {[m
[31m -                if ((this._adapter == null)) {[m
[31m -                    this.InitAdapter();[m
[31m -                }[m
[31m -                return this._adapter;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[31m -            get {[m
[31m -                if ((this._connection == null)) {[m
[31m -                    this.InitConnection();[m
[31m -                }[m
[31m -                return this._connection;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._connection = value;[m
[31m -                if ((this.Adapter.InsertCommand != null)) {[m
[31m -                    this.Adapter.InsertCommand.Connection = value;[m
[31m -                }[m
[31m -                if ((this.Adapter.DeleteCommand != null)) {[m
[31m -                    this.Adapter.DeleteCommand.Connection = value;[m
[31m -                }[m
[31m -                if ((this.Adapter.UpdateCommand != null)) {[m
[31m -                    this.Adapter.UpdateCommand.Connection = value;[m
[31m -                }[m
[31m -                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[31m -                    if ((this.CommandCollection[i] != null)) {[m
[31m -                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[31m -            get {[m
[31m -                return this._transaction;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._transaction = value;[m
[31m -                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[31m -                    this.CommandCollection[i].Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.DeleteCommand != null))) {[m
[31m -                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.InsertCommand != null))) {[m
[31m -                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.UpdateCommand != null))) {[m
[31m -                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[31m -            get {[m
[31m -                if ((this._commandCollection == null)) {[m
[31m -                    this.InitCommandCollection();[m
[31m -                }[m
[31m -                return this._commandCollection;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public bool ClearBeforeFill {[m
[31m -            get {[m
[31m -                return this._clearBeforeFill;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._clearBeforeFill = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitAdapter() {[m
[31m -            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[31m -            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[31m -            tableMapping.SourceTable = "Table";[m
[31m -            tableMapping.DataSetTable = "QueueStudentData";[m
[31m -            tableMapping.ColumnMappings.Add("id", "id");[m
[31m -            tableMapping.ColumnMappings.Add("Name", "Name");[m
[31m -            tableMapping.ColumnMappings.Add("Department", "Department");[m
[31m -            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[31m -            tableMapping.ColumnMappings.Add("QueueDate", "QueueDate");[m
[31m -            tableMapping.ColumnMappings.Add("QueueCode", "QueueCode");[m
[31m -            this._adapter.TableMappings.Add(tableMapping);[m
[31m -            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.DeleteCommand.Connection = this.Connection;[m
[31m -            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QueueStudentData] WHERE (([id] = @Original_id) AND ([Name] = @" +[m
[31m -                "Original_Name) AND ([Department] = @Original_Department) AND ([QueueDate] = @Ori" +[m
[31m -                "ginal_QueueDate) AND ([QueueCode] = @Original_QueueCode))";[m
[31m -            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.InsertCommand.Connection = this.Connection;[m
[31m -            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[QueueStudentData] ([Name], [Department], [Purpose], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueDate, @QueueCode);[m
[31m -SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM QueueStudentData WHERE (id = SCOPE_IDENTITY())";[m
[31m -            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.UpdateCommand.Connection = this.Connection;[m
[31m -            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueStudentData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueDate] = @QueueDate, [QueueCode] = @QueueCode WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode));[m
[31m -SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM QueueStudentData WHERE (id = @id)";[m
[31m -            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[31m -            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitConnection() {[m
[31m -            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[31m -            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitCommandCollection() {[m
[31m -            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[31m -            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._commandCollection[0].Connection = this.Connection;[m
[31m -            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM dbo.QueueStudentD" +[m
[31m -                "ata";[m
[31m -            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[31m -        public virtual int Fill(loginformDataSet6.QueueStudentDataDataTable dataTable) {[m
[31m -            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[31m -            if ((this.ClearBeforeFill == true)) {[m
[31m -                dataTable.Clear();[m
[31m -            }[m
[31m -            int returnValue = this.Adapter.Fill(dataTable);[m
[31m -            return returnValue;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[31m -        public virtual loginformDataSet6.QueueStudentDataDataTable GetData() {[m
[31m -            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[31m -            loginformDataSet6.QueueStudentDataDataTable dataTable = new loginformDataSet6.QueueStudentDataDataTable();[m
[31m -            this.Adapter.Fill(dataTable);[m
[31m -            return dataTable;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(loginformDataSet6.QueueStudentDataDataTable dataTable) {[m
[31m -            return this.Adapter.Update(dataTable);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(loginformDataSet6 dataSet) {[m
[31m -            return this.Adapter.Update(dataSet, "QueueStudentData");[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[31m -            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[31m -                        dataRow});[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[31m -            return this.Adapter.Update(dataRows);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[31m -        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, System.DateTime Original_QueueDate, string Original_QueueCode) {[m
[31m -            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[31m -            if ((Original_Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[31m -            }[m
[31m -            if ((Original_Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[31m -            }[m
[31m -            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_QueueDate));[m
[31m -            if ((Original_QueueCode == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_QueueCode");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_QueueCode));[m
[31m -            }[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[31m -            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.DeleteCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.DeleteCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[31m -        public virtual int Insert(string Name, string Department, string Purpose, System.DateTime QueueDate, string QueueCode) {[m
[31m -            if ((Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[31m -            }[m
[31m -            if ((Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[31m -            }[m
[31m -            if ((Purpose == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Purpose");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[31m -            }[m
[31m -            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(QueueDate));[m
[31m -            if ((QueueCode == null)) {[m
[31m -                throw new global::System.ArgumentNullException("QueueCode");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(QueueCode));[m
[31m -            }[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[31m -            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.InsertCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.InsertCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[31m -        public virtual int Update(string Name, string Department, string Purpose, System.DateTime QueueDate, string QueueCode, int Original_id, string Original_Name, string Original_Department, System.DateTime Original_QueueDate, string Original_QueueCode, int id) {[m
[31m -            if ((Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[31m -            }[m
[31m -            if ((Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[31m -            }[m
[31m -            if ((Purpose == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Purpose");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(QueueDate));[m
[31m -            if ((QueueCode == null)) {[m
[31m -                throw new global::System.ArgumentNullException("QueueCode");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(QueueCode));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));[m
[31m -            if ((Original_Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));[m
[31m -            }[m
[31m -            if ((Original_Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Department));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_QueueDate));[m
[31m -            if ((Original_QueueCode == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Original_QueueCode");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_QueueCode));[m
[31m -            }[m
[31m -            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(id));[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[31m -            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.UpdateCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.UpdateCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[31m -        public virtual int Update(string Name, string Department, string Purpose, System.DateTime QueueDate, string QueueCode, int Original_id, string Original_Name, string Original_Department, System.DateTime Original_QueueDate, string Original_QueueCode) {[m
[31m -            return this.Update(Name, Department, Purpose, QueueDate, QueueCode, Original_id, Original_Name, Original_Department, Original_QueueDate, Original_QueueCode, Original_id);[m
[31m -        }[m
[31m -    }[m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[31m -    ///</summary>[m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[31m -        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[31m -    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[31m -        [m
[31m -        private UpdateOrderOption _updateOrder;[m
[31m -        [m
[31m -        private QueueStudentDataTableAdapter _queueStudentDataTableAdapter;[m
[31m -        [m
[31m -        private bool _backupDataSetBeforeUpdate;[m
[31m -        [m
[31m -        private global::System.Data.IDbConnection _connection;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public UpdateOrderOption UpdateOrder {[m
[31m -            get {[m
[31m -                return this._updateOrder;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._updateOrder = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[31m -            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[31m -            "a", "System.Drawing.Design.UITypeEditor")][m
[31m -        public QueueStudentDataTableAdapter QueueStudentDataTableAdapter {[m
[31m -            get {[m
[31m -                return this._queueStudentDataTableAdapter;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._queueStudentDataTableAdapter = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public bool BackupDataSetBeforeUpdate {[m
[31m -            get {[m
[31m -                return this._backupDataSetBeforeUpdate;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._backupDataSetBeforeUpdate = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        public global::System.Data.IDbConnection Connection {[m
[31m -            get {[m
[31m -                if ((this._connection != null)) {[m
[31m -                    return this._connection;[m
[31m -                }[m
[31m -                if (((this._queueStudentDataTableAdapter != null) [m
[31m -                            && (this._queueStudentDataTableAdapter.Connection != null))) {[m
[31m -                    return this._queueStudentDataTableAdapter.Connection;[m
[31m -                }[m
[31m -                return null;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._connection = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        public int TableAdapterInstanceCount {[m
[31m -            get {[m
[31m -                int count = 0;[m
[31m -                if ((this._queueStudentDataTableAdapter != null)) {[m
[31m -                    count = (count + 1);[m
[31m -                }[m
[31m -                return count;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update rows in top-down order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateUpdatedRows(loginformDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueStudentDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] updatedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[31m -                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[31m -                if (((updatedRows != null) [m
[31m -                            && (0 < updatedRows.Length))) {[m
[31m -                    result = (result + this._queueStudentDataTableAdapter.Update(updatedRows));[m
[31m -                    allChangedRows.AddRange(updatedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Insert rows in top-down order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateInsertedRows(loginformDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueStudentDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] addedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[31m -                if (((addedRows != null) [m
[31m -                            && (0 < addedRows.Length))) {[m
[31m -                    result = (result + this._queueStudentDataTableAdapter.Update(addedRows));[m
[31m -                    allAddedRows.AddRange(addedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Delete rows in bottom-up order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateDeletedRows(loginformDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._queueStudentDataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] deletedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[31m -                if (((deletedRows != null) [m
[31m -                            && (0 < deletedRows.Length))) {[m
[31m -                    result = (result + this._queueStudentDataTableAdapter.Update(deletedRows));[m
[31m -                    allChangedRows.AddRange(deletedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            if (((updatedRows == null) [m
[31m -                        || (updatedRows.Length < 1))) {[m
[31m -                return updatedRows;[m
[31m -            }[m
[31m -            if (((allAddedRows == null) [m
[31m -                        || (allAddedRows.Count < 1))) {[m
[31m -                return updatedRows;[m
[31m -            }[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[31m -                global::System.Data.DataRow row = updatedRows[i];[m
[31m -                if ((allAddedRows.Contains(row) == false)) {[m
[31m -                    realUpdatedRows.Add(row);[m
[31m -                }[m
[31m -            }[m
[31m -            return realUpdatedRows.ToArray();[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update all changes to the dataset.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public virtual int UpdateAll(loginformDataSet6 dataSet) {[m
[31m -            if ((dataSet == null)) {[m
[31m -                throw new global::System.ArgumentNullException("dataSet");[m
[31m -            }[m
[31m -            if ((dataSet.HasChanges() == false)) {[m
[31m -                return 0;[m
[31m -            }[m
[31m -            if (((this._queueStudentDataTableAdapter != null) [m
[31m -                        && (this.MatchTableAdapterConnection(this._queueStudentDataTableAdapter.Connection) == false))) {[m
[31m -                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[31m -                        "tring.");[m
[31m -            }[m
[31m -            global::System.Data.IDbConnection workConnection = this.Connection;[m
[31m -            if ((workConnection == null)) {[m
[31m -                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[31m -                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[31m -            }[m
[31m -            bool workConnOpened = false;[m
[31m -            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[31m -                        == global::System.Data.ConnectionState.Broken)) {[m
[31m -                workConnection.Close();[m
[31m -            }[m
[31m -            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[31m -                workConnection.Open();[m
[31m -                workConnOpened = true;[m
[31m -            }[m
[31m -            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[31m -            if ((workTransaction == null)) {[m
[31m -                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[31m -                        "ctions or the current state is not allowing the transaction to begin.");[m
[31m -            }[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[31m -            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[31m -            int result = 0;[m
[31m -            global::System.Data.DataSet backupDataSet = null;[m
[31m -            if (this.BackupDataSetBeforeUpdate) {[m
[31m -                backupDataSet = new global::System.Data.DataSet();[m
[31m -                backupDataSet.Merge(dataSet);[m
[31m -            }[m
[31m -            try {[m
[31m -                // ---- Prepare for update -----------[m
[31m -                //[m
[31m -                if ((this._queueStudentDataTableAdapter != null)) {[m
[31m -                    revertConnections.Add(this._queueStudentDataTableAdapter, this._queueStudentDataTableAdapter.Connection);[m
[31m -                    this._queueStudentDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[31m -                    this._queueStudentDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[31m -                    if (this._queueStudentDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[31m -                        this._queueStudentDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[31m -                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueStudentDataTableAdapter.Adapter);[m
[31m -                    }[m
[31m -                }[m
[31m -                // [m
[31m -                //---- Perform updates -----------[m
[31m -                //[m
[31m -                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[31m -                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[31m -                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[31m -                }[m
[31m -                else {[m
[31m -                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[31m -                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[31m -                }[m
[31m -                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[31m -                // [m
[31m -                //---- Commit updates -----------[m
[31m -                //[m
[31m -                workTransaction.Commit();[m
[31m -                if ((0 < allAddedRows.Count)) {[m
[31m -                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[31m -                    allAddedRows.CopyTo(rows);[m
[31m -                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.DataRow row = rows[i];[m
[31m -                        row.AcceptChanges();[m
[31m -                    }[m
[31m -                }[m
[31m -                if ((0 < allChangedRows.Count)) {[m
[31m -                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[31m -                    allChangedRows.CopyTo(rows);[m
[31m -                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.DataRow row = rows[i];[m
[31m -                        row.AcceptChanges();[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            catch (global::System.Exception ex) {[m
[31m -                workTransaction.Rollback();[m
[31m -                // ---- Restore the dataset -----------[m
[31m -                if (this.BackupDataSetBeforeUpdate) {[m
[31m -                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[31m -                    dataSet.Clear();[m
[31m -                    dataSet.Merge(backupDataSet);[m
[31m -                }[m
[31m -                else {[m
[31m -                    if ((0 < allAddedRows.Count)) {[m
[31m -                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[31m -                        allAddedRows.CopyTo(rows);[m
[31m -                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                            global::System.Data.DataRow row = rows[i];[m
[31m -                            row.AcceptChanges();[m
[31m -                            row.SetAdded();[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                throw ex;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if (workConnOpened) {[m
[31m -                    workConnection.Close();[m
[31m -                }[m
[31m -                if ((this._queueStudentDataTableAdapter != null)) {[m
[31m -                    this._queueStudentDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueStudentDataTableAdapter]));[m
[31m -                    this._queueStudentDataTableAdapter.Transaction = null;[m
[31m -                }[m
[31m -                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[31m -                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[31m -                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[31m -                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[31m -                        adapter.AcceptChangesDuringUpdate = true;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[31m -            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[31m -            if ((this._connection != null)) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            if (((this.Connection == null) [m
[31m -                        || (inputConnection == null))) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update Order Option[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public enum UpdateOrderOption {[m
[31m -            [m
[31m -            InsertUpdateDelete = 0,[m
[31m -            [m
[31m -            UpdateInsertDelete = 1,[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Used to sort self-referenced table's rows[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[31m -            [m
[31m -            private global::System.Data.DataRelation _relation;[m
[31m -            [m
[31m -            private int _childFirst;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[31m -                this._relation = relation;[m
[31m -                if (childFirst) {[m
[31m -                    this._childFirst = -1;[m
[31m -                }[m
[31m -                else {[m
[31m -                    this._childFirst = 1;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[31m -                global::System.Diagnostics.Debug.Assert((row != null));[m
[31m -                global::System.Data.DataRow root = row;[m
[31m -                distance = 0;[m
[31m -[m
[31m -                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[31m -                traversedRows[row] = row;[m
[31m -[m
[31m -                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[31m -                for ([m
[31m -                ; ((parent != null) [m
[31m -                            && (traversedRows.ContainsKey(parent) == false)); [m
[31m -                ) {[m
[31m -                    distance = (distance + 1);[m
[31m -                    root = parent;[m
[31m -                    traversedRows[parent] = parent;[m
[31m -                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[31m -                }[m
[31m -[m
[31m -                if ((distance == 0)) {[m
[31m -                    traversedRows.Clear();[m
[31m -                    traversedRows[row] = row;[m
[31m -                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[31m -                    for ([m
[31m -                    ; ((parent != null) [m
[31m -                                && (traversedRows.ContainsKey(parent) == false)); [m
[31m -                    ) {[m
[31m -                        distance = (distance + 1);[m
[31m -                        root = parent;[m
[31m -                        traversedRows[parent] = parent;[m
[31m -                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[31m -                    }[m
[31m -                }[m
[31m -[m
[31m -                return root;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[31m -                if (object.ReferenceEquals(row1, row2)) {[m
[31m -                    return 0;[m
[31m -                }[m
[31m -                if ((row1 == null)) {[m
[31m -                    return -1;[m
[31m -                }[m
[31m -                if ((row2 == null)) {[m
[31m -                    return 1;[m
[31m -                }[m
[31m -[m
[31m -                int distance1 = 0;[m
[31m -                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[31m -[m
[31m -                int distance2 = 0;[m
[31m -                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[31m -[m
[31m -                if (object.ReferenceEquals(root1, root2)) {[m
[31m -                    return (this._childFirst * distance1.CompareTo(distance2));[m
[31m -                }[m
[31m -                else {[m
[31m -                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[31m -                                    && (root2.Table != null)));[m
[31m -                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[31m -                        return -1;[m
[31m -                    }[m
[31m -                    else {[m
[31m -                        return 1;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -}[m
[31m -[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿//------------------------------------------------------------------------------[m
[32m +// <auto-generated>[m
[32m +//     This code was generated by a tool.[m
[32m +//     Runtime Version:4.0.30319.42000[m
[32m +//[m
[32m +//     Changes to this file may cause incorrect behavior and will be lost if[m
[32m +//     the code is regenerated.[m
[32m +// </auto-generated>[m
[32m +//------------------------------------------------------------------------------[m
[32m +[m
[32m +#pragma warning disable 1591[m
[32m +[m
[32m +namespace capstoneproject {[m
[32m +    [m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///Represents a strongly typed in-memory cache of data.[m
[32m +    ///</summary>[m
[32m +    [global::System.Serializable()][m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[32m +    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet6")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[32m +    public partial class loginformDataSet6 : global::System.Data.DataSet {[m
[32m +        [m
[32m +        private QueueStudentDataDataTable tableQueueStudentData;[m
[32m +        [m
[32m +        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public loginformDataSet6() {[m
[32m +            this.BeginInit();[m
[32m +            this.InitClass();[m
[32m +            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m +            base.Relations.CollectionChanged += schemaChangedHandler;[m
[32m +            this.EndInit();[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected loginformDataSet6(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m +                base(info, context, false) {[m
[32m +            if ((this.IsBinarySerialized(info, context) == true)) {[m
[32m +                this.InitVars(false);[m
[32m +                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[32m +                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[32m +                return;[m
[32m +            }[m
[32m +            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[32m +            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m +                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m +                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m +                if ((ds.Tables["QueueStudentData"] != null)) {[m
[32m +                    base.Tables.Add(new QueueStudentDataDataTable(ds.Tables["QueueStudentData"]));[m
[32m +                }[m
[32m +                this.DataSetName = ds.DataSetName;[m
[32m +                this.Prefix = ds.Prefix;[m
[32m +                this.Namespace = ds.Namespace;[m
[32m +                this.Locale = ds.Locale;[m
[32m +                this.CaseSensitive = ds.CaseSensitive;[m
[32m +                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m +                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            else {[m
[32m +                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m +            }[m
[32m +            this.GetSerializationData(info, context);[m
[32m +            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m +            this.Relations.CollectionChanged += schemaChangedHandler;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[32m +        public QueueStudentDataDataTable QueueStudentData {[m
[32m +            get {[m
[32m +                return this.tableQueueStudentData;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.BrowsableAttribute(true)][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[32m +        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[32m +            get {[m
[32m +                return this._schemaSerializationMode;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._schemaSerializationMode = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m +        public new global::System.Data.DataTableCollection Tables {[m
[32m +            get {[m
[32m +                return base.Tables;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m +        public new global::System.Data.DataRelationCollection Relations {[m
[32m +            get {[m
[32m +                return base.Relations;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override void InitializeDerivedDataSet() {[m
[32m +            this.BeginInit();[m
[32m +            this.InitClass();[m
[32m +            this.EndInit();[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public override global::System.Data.DataSet Clone() {[m
[32m +            loginformDataSet6 cln = ((loginformDataSet6)(base.Clone()));[m
[32m +            cln.InitVars();[m
[32m +            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[32m +            return cln;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override bool ShouldSerializeTables() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override bool ShouldSerializeRelations() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[32m +            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m +                this.Reset();[m
[32m +                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m +                ds.ReadXml(reader);[m
[32m +                if ((ds.Tables["QueueStudentData"] != null)) {[m
[32m +                    base.Tables.Add(new QueueStudentDataDataTable(ds.Tables["QueueStudentData"]));[m
[32m +                }[m
[32m +                this.DataSetName = ds.DataSetName;[m
[32m +                this.Prefix = ds.Prefix;[m
[32m +                this.Namespace = ds.Namespace;[m
[32m +                this.Locale = ds.Locale;[m
[32m +                this.CaseSensitive = ds.CaseSensitive;[m
[32m +                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m +                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            else {[m
[32m +                this.ReadXml(reader);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[32m +            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[32m +            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[32m +            stream.Position = 0;[m
[32m +            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal void InitVars() {[m
[32m +            this.InitVars(true);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal void InitVars(bool initTable) {[m
[32m +            this.tableQueueStudentData = ((QueueStudentDataDataTable)(base.Tables["QueueStudentData"]));[m
[32m +            if ((initTable == true)) {[m
[32m +                if ((this.tableQueueStudentData != null)) {[m
[32m +                    this.tableQueueStudentData.InitVars();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitClass() {[m
[32m +            this.DataSetName = "loginformDataSet6";[m
[32m +            this.Prefix = "";[m
[32m +            this.Namespace = "http://tempuri.org/loginformDataSet6.xsd";[m
[32m +            this.EnforceConstraints = true;[m
[32m +            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +            this.tableQueueStudentData = new QueueStudentDataDataTable();[m
[32m +            base.Tables.Add(this.tableQueueStudentData);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private bool ShouldSerializeQueueStudentData() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[32m +            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m +            loginformDataSet6 ds = new loginformDataSet6();[m
[32m +            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m +            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m +            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +            any.Namespace = ds.Namespace;[m
[32m +            sequence.Items.Add(any);[m
[32m +            type.Particle = sequence;[m
[32m +            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m +            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m +                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m +                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m +                try {[m
[32m +                    global::System.Xml.Schema.XmlSchema schema = null;[m
[32m +                    dsSchema.Write(s1);[m
[32m +                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m +                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m +                        s2.SetLength(0);[m
[32m +                        schema.Write(s2);[m
[32m +                        if ((s1.Length == s2.Length)) {[m
[32m +                            s1.Position = 0;[m
[32m +                            s2.Position = 0;[m
[32m +                            for (; ((s1.Position != s1.Length) [m
[32m +                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m +                                ;[m
[32m +                            }[m
[32m +                            if ((s1.Position == s1.Length)) {[m
[32m +                                return type;[m
[32m +                            }[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                finally {[m
[32m +                    if ((s1 != null)) {[m
[32m +                        s1.Close();[m
[32m +                    }[m
[32m +                    if ((s2 != null)) {[m
[32m +                        s2.Close();[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            xs.Add(dsSchema);[m
[32m +            return type;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public delegate void QueueStudentDataRowChangeEventHandler(object sender, QueueStudentDataRowChangeEvent e);[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Represents the strongly named DataTable class.[m
[32m +        ///</summary>[m
[32m +        [global::System.Serializable()][m
[32m +        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[32m +        public partial class QueueStudentDataDataTable : global::System.Data.TypedTableBase<QueueStudentDataRow> {[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnid;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnName;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnDepartment;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnPurpose;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnQueueDate;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnQueueCode;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueStudentDataDataTable() {[m
[32m +                this.TableName = "QueueStudentData";[m
[32m +                this.BeginInit();[m
[32m +                this.InitClass();[m
[32m +                this.EndInit();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal QueueStudentDataDataTable(global::System.Data.DataTable table) {[m
[32m +                this.TableName = table.TableName;[m
[32m +                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[32m +                    this.CaseSensitive = table.CaseSensitive;[m
[32m +                }[m
[32m +                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[32m +                    this.Locale = table.Locale;[m
[32m +                }[m
[32m +                if ((table.Namespace != table.DataSet.Namespace)) {[m
[32m +                    this.Namespace = table.Namespace;[m
[32m +                }[m
[32m +                this.Prefix = table.Prefix;[m
[32m +                this.MinimumCapacity = table.MinimumCapacity;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected QueueStudentDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m +                    base(info, context) {[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn idColumn {[m
[32m +                get {[m
[32m +                    return this.columnid;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn NameColumn {[m
[32m +                get {[m
[32m +                    return this.columnName;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn DepartmentColumn {[m
[32m +                get {[m
[32m +                    return this.columnDepartment;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn PurposeColumn {[m
[32m +                get {[m
[32m +                    return this.columnPurpose;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn QueueDateColumn {[m
[32m +                get {[m
[32m +                    return this.columnQueueDate;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn QueueCodeColumn {[m
[32m +                get {[m
[32m +                    return this.columnQueueCode;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            [global::System.ComponentModel.Browsable(false)][m
[32m +            public int Count {[m
[32m +                get {[m
[32m +                    return this.Rows.Count;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueStudentDataRow this[int index] {[m
[32m +                get {[m
[32m +                    return ((QueueStudentDataRow)(this.Rows[index]));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowChanging;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowChanged;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowDeleting;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowDeleted;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void AddQueueStudentDataRow(QueueStudentDataRow row) {[m
[32m +                this.Rows.Add(row);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueStudentDataRow AddQueueStudentDataRow(string Name, string Department, string Purpose, System.DateTime QueueDate, string QueueCode) {[m
[32m +                QueueStudentDataRow rowQueueStudentDataRow = ((QueueStudentDataRow)(this.NewRow()));[m
[32m +                object[] columnValuesArray = new object[] {[m
[32m +                        null,[m
[32m +                        Name,[m
[32m +                        Department,[m
[32m +                        Purpose,[m
[32m +                        QueueDate,[m
[32m +                        QueueCode};[m
[32m +                rowQueueStudentDataRow.ItemArray = columnValuesArray;[m
[32m +                this.Rows.Add(rowQueueStudentDataRow);[m
[32m +                return rowQueueStudentDataRow;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueStudentDataRow FindByid(int id) {[m
[32m +                return ((QueueStudentDataRow)(this.Rows.Find(new object[] {[m
[32m +                            id})));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public override global::System.Data.DataTable Clone() {[m
[32m +                QueueStudentDataDataTable cln = ((QueueStudentDataDataTable)(base.Clone()));[m
[32m +                cln.InitVars();[m
[32m +                return cln;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Data.DataTable CreateInstance() {[m
[32m +                return new QueueStudentDataDataTable();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal void InitVars() {[m
[32m +                this.columnid = base.Columns["id"];[m
[32m +                this.columnName = base.Columns["Name"];[m
[32m +                this.columnDepartment = base.Columns["Department"];[m
[32m +                this.columnPurpose = base.Columns["Purpose"];[m
[32m +                this.columnQueueDate = base.Columns["QueueDate"];[m
[32m +                this.columnQueueCode = base.Columns["QueueCode"];[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            private void InitClass() {[m
[32m +                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnid);[m
[32m +                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnName);[m
[32m +                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnDepartment);[m
[32m +                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnPurpose);[m
[32m +                this.columnQueueDate = new global::System.Data.DataColumn("QueueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnQueueDate);[m
[32m +                this.columnQueueCode = new global::System.Data.DataColumn("QueueCode", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnQueueCode);[m
[32m +                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[32m +                                this.columnid}, true));[m
[32m +                this.columnid.AutoIncrement = true;[m
[32m +                this.columnid.AutoIncrementSeed = -1;[m
[32m +                this.columnid.AutoIncrementStep = -1;[m
[32m +                this.columnid.AllowDBNull = false;[m
[32m +                this.columnid.ReadOnly = true;[m
[32m +                this.columnid.Unique = true;[m
[32m +                this.columnName.AllowDBNull = false;[m
[32m +                this.columnName.MaxLength = 50;[m
[32m +                this.columnDepartment.AllowDBNull = false;[m
[32m +                this.columnDepartment.MaxLength = 50;[m
[32m +                this.columnPurpose.AllowDBNull = false;[m
[32m +                this.columnPurpose.MaxLength = 2147483647;[m
[32m +                this.columnQueueDate.AllowDBNull = false;[m
[32m +                this.columnQueueCode.AllowDBNull = false;[m
[32m +                this.columnQueueCode.MaxLength = 10;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueStudentDataRow NewQueueStudentDataRow() {[m
[32m +                return ((QueueStudentDataRow)(this.NewRow()));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[32m +                return new QueueStudentDataRow(builder);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Type GetRowType() {[m
[32m +                return typeof(QueueStudentDataRow);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowChanged(e);[m
[32m +                if ((this.QueueStudentDataRowChanged != null)) {[m
[32m +                    this.QueueStudentDataRowChanged(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowChanging(e);[m
[32m +                if ((this.QueueStudentDataRowChanging != null)) {[m
[32m +                    this.QueueStudentDataRowChanging(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowDeleted(e);[m
[32m +                if ((this.QueueStudentDataRowDeleted != null)) {[m
[32m +                    this.QueueStudentDataRowDeleted(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowDeleting(e);[m
[32m +                if ((this.QueueStudentDataRowDeleting != null)) {[m
[32m +                    this.QueueStudentDataRowDeleting(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void RemoveQueueStudentDataRow(QueueStudentDataRow row) {[m
[32m +                this.Rows.Remove(row);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m +                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m +                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m +                loginformDataSet6 ds = new loginformDataSet6();[m
[32m +                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[32m +                any1.MinOccurs = new decimal(0);[m
[32m +                any1.MaxOccurs = decimal.MaxValue;[m
[32m +                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m +                sequence.Items.Add(any1);[m
[32m +                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[32m +                any2.MinOccurs = new decimal(1);[m
[32m +                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m +                sequence.Items.Add(any2);[m
[32m +                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m +                attribute1.Name = "namespace";[m
[32m +                attribute1.FixedValue = ds.Namespace;[m
[32m +                type.Attributes.Add(attribute1);[m
[32m +                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m +                attribute2.Name = "tableTypeName";[m
[32m +                attribute2.FixedValue = "QueueStudentDataDataTable";[m
[32m +                type.Attributes.Add(attribute2);[m
[32m +                type.Particle = sequence;[m
[32m +                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m +                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m +                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m +                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m +                    try {[m
[32m +                        global::System.Xml.Schema.XmlSchema schema = null;[m
[32m +                        dsSchema.Write(s1);[m
[32m +                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m +                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m +                            s2.SetLength(0);[m
[32m +                            schema.Write(s2);[m
[32m +                            if ((s1.Length == s2.Length)) {[m
[32m +                                s1.Position = 0;[m
[32m +                                s2.Position = 0;[m
[32m +                                for (; ((s1.Position != s1.Length) [m
[32m +                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m +                                    ;[m
[32m +                                }[m
[32m +                                if ((s1.Position == s1.Length)) {[m
[32m +                                    return type;[m
[32m +                                }[m
[32m +                            }[m
[32m +                        }[m
[32m +                    }[m
[32m +                    finally {[m
[32m +                        if ((s1 != null)) {[m
[32m +                            s1.Close();[m
[32m +                        }[m
[32m +                        if ((s2 != null)) {[m
[32m +                            s2.Close();[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                xs.Add(dsSchema);[m
[32m +                return type;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Represents strongly named DataRow class.[m
[32m +        ///</summary>[m
[32m +        public partial class QueueStudentDataRow : global::System.Data.DataRow {[m
[32m +            [m
[32m +            private QueueStudentDataDataTable tableQueueStudentData;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal QueueStudentDataRow(global::System.Data.DataRowBuilder rb) : [m
[32m +                    base(rb) {[m
[32m +                this.tableQueueStudentData = ((QueueStudentDataDataTable)(this.Table));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int id {[m
[32m +                get {[m
[32m +                    return ((int)(this[this.tableQueueStudentData.idColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueStudentData.idColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Name {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueStudentData.NameColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueStudentData.NameColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Department {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueStudentData.DepartmentColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueStudentData.DepartmentColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Purpose {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueStudentData.PurposeColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueStudentData.PurposeColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public System.DateTime QueueDate {[m
[32m +                get {[m
[32m +                    return ((global::System.DateTime)(this[this.tableQueueStudentData.QueueDateColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueStudentData.QueueDateColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string QueueCode {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tableQueueStudentData.QueueCodeColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tableQueueStudentData.QueueCodeColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Row event argument class[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public class QueueStudentDataRowChangeEvent : global::System.EventArgs {[m
[32m +            [m
[32m +            private QueueStudentDataRow eventRow;[m
[32m +            [m
[32m +            private global::System.Data.DataRowAction eventAction;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueStudentDataRowChangeEvent(QueueStudentDataRow row, global::System.Data.DataRowAction action) {[m
[32m +                this.eventRow = row;[m
[32m +                this.eventAction = action;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public QueueStudentDataRow Row {[m
[32m +                get {[m
[32m +                    return this.eventRow;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataRowAction Action {[m
[32m +                get {[m
[32m +                    return this.eventAction;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +namespace capstoneproject.loginformDataSet6TableAdapters {[m
[32m +    [m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///Represents the connection and commands used to retrieve and save data.[m
[32m +    ///</summary>[m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.ComponentModel.DataObjectAttribute(true)][m
[32m +    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[32m +        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +    public partial class QueueStudentDataTableAdapter : global::System.ComponentModel.Component {[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlConnection _connection;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[32m +        [m
[32m +        private bool _clearBeforeFill;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public QueueStudentDataTableAdapter() {[m
[32m +            this.ClearBeforeFill = true;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[32m +            get {[m
[32m +                if ((this._adapter == null)) {[m
[32m +                    this.InitAdapter();[m
[32m +                }[m
[32m +                return this._adapter;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[32m +            get {[m
[32m +                if ((this._connection == null)) {[m
[32m +                    this.InitConnection();[m
[32m +                }[m
[32m +                return this._connection;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._connection = value;[m
[32m +                if ((this.Adapter.InsertCommand != null)) {[m
[32m +                    this.Adapter.InsertCommand.Connection = value;[m
[32m +                }[m
[32m +                if ((this.Adapter.DeleteCommand != null)) {[m
[32m +                    this.Adapter.DeleteCommand.Connection = value;[m
[32m +                }[m
[32m +                if ((this.Adapter.UpdateCommand != null)) {[m
[32m +                    this.Adapter.UpdateCommand.Connection = value;[m
[32m +                }[m
[32m +                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m +                    if ((this.CommandCollection[i] != null)) {[m
[32m +                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[32m +            get {[m
[32m +                return this._transaction;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._transaction = value;[m
[32m +                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m +                    this.CommandCollection[i].Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.DeleteCommand != null))) {[m
[32m +                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.InsertCommand != null))) {[m
[32m +                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.UpdateCommand != null))) {[m
[32m +                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[32m +            get {[m
[32m +                if ((this._commandCollection == null)) {[m
[32m +                    this.InitCommandCollection();[m
[32m +                }[m
[32m +                return this._commandCollection;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public bool ClearBeforeFill {[m
[32m +            get {[m
[32m +                return this._clearBeforeFill;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._clearBeforeFill = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitAdapter() {[m
[32m +            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[32m +            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[32m +            tableMapping.SourceTable = "Table";[m
[32m +            tableMapping.DataSetTable = "QueueStudentData";[m
[32m +            tableMapping.ColumnMappings.Add("id", "id");[m
[32m +            tableMapping.ColumnMappings.Add("Name", "Name");[m
[32m +            tableMapping.ColumnMappings.Add("Department", "Department");[m
[32m +            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[32m +            tableMapping.ColumnMappings.Add("QueueDate", "QueueDate");[m
[32m +            tableMapping.ColumnMappings.Add("QueueCode", "QueueCode");[m
[32m +            this._adapter.TableMappings.Add(tableMapping);[m
[32m +            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.DeleteCommand.Connection = this.Connection;[m
[32m +            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QueueStudentData] WHERE (([id] = @Original_id) AND ([Name] = @" +[m
[32m +                "Original_Name) AND ([Department] = @Original_Department) AND ([QueueDate] = @Ori" +[m
[32m +                "ginal_QueueDate) AND ([QueueCode] = @Original_QueueCode))";[m
[32m +            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.InsertCommand.Connection = this.Connection;[m
[32m +            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[QueueStudentData] ([Name], [Department], [Purpose], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueDate, @QueueCode);[m
[32m +SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM QueueStudentData WHERE (id = SCOPE_IDENTITY())";[m
[32m +            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.UpdateCommand.Connection = this.Connection;[m
[32m +            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueStudentData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueDate] = @QueueDate, [QueueCode] = @QueueCode WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode));[m
[32m +SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM QueueStudentData WHERE (id = @id)";[m
[32m +            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m +            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitConnection() {[m
[32m +            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[32m +            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitCommandCollection() {[m
[32m +            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[32m +            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._commandCollection[0].Connection = this.Connection;[m
[32m +            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM dbo.QueueStudentD" +[m
[32m +                "ata";[m
[32m +            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[32m +        public virtual int Fill(loginformDataSet6.QueueStudentDataDataTable dataTable) {[m
[32m +            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m +            if ((this.ClearBeforeFill == true)) {[m
[32m +                dataTable.Clear();[m
[32m +            }[m
[32m +            int returnValue = this.Adapter.Fill(dataTable);[m
[32m +            return returnValue;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[32m +        public virtual loginformDataSet6.QueueStudentDataDataTable GetData() {[m
[32m +            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m +            loginformDataSet6.QueueStudentDataDataTable dataTable = new loginformDataSet6.QueueStudentDataDataTable();[m
[32m +            this.Adapter.Fill(dataTable);[m
[32m +            return dataTable;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(loginformDataSet6.QueueStudentDataDataTable dataTable) {[m
[32m +            return this.Adapter.Update(dataTable);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(loginformDataSet6 dataSet) {[m
[32m +            return this.Adapter.Update(dataSet, "QueueStudentData");[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[32m +            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[32m +                        dataRow});[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[32m +            return this.Adapter.Update(dataRows);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[32m +        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, System.DateTime Original_QueueDate, string Original_QueueCode) {[m
[32m +            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[32m +            if ((Original_Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[32m +            }[m
[32m +            if ((Original_Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[32m +            }[m
[32m +            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_QueueDate));[m
[32m +            if ((Original_QueueCode == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_QueueCode");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_QueueCode));[m
[32m +            }[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[32m +            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.DeleteCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.DeleteCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[32m +        public virtual int Insert(string Name, string Department, string Purpose, System.DateTime QueueDate, string QueueCode) {[m
[32m +            if ((Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[32m +            }[m
[32m +            if ((Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[32m +            }[m
[32m +            if ((Purpose == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Purpose");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m +            }[m
[32m +            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(QueueDate));[m
[32m +            if ((QueueCode == null)) {[m
[32m +                throw new global::System.ArgumentNullException("QueueCode");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(QueueCode));[m
[32m +            }[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[32m +            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.InsertCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.InsertCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m +        public virtual int Update(string Name, string Department, string Purpose, System.DateTime QueueDate, string QueueCode, int Original_id, string Original_Name, string Original_Department, System.DateTime Original_QueueDate, string Original_QueueCode, int id) {[m
[32m +            if ((Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[32m +            }[m
[32m +            if ((Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[32m +            }[m
[32m +            if ((Purpose == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Purpose");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(QueueDate));[m
[32m +            if ((QueueCode == null)) {[m
[32m +                throw new global::System.ArgumentNullException("QueueCode");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(QueueCode));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));[m
[32m +            if ((Original_Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));[m
[32m +            }[m
[32m +            if ((Original_Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Department));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_QueueDate));[m
[32m +            if ((Original_QueueCode == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Original_QueueCode");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_QueueCode));[m
[32m +            }[m
[32m +            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(id));[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[32m +            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.UpdateCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.UpdateCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m +        public virtual int Update(string Name, string Department, string Purpose, System.DateTime QueueDate, string QueueCode, int Original_id, string Original_Name, string Original_Department, System.DateTime Original_QueueDate, string Original_QueueCode) {[m
[32m +            return this.Update(Name, Department, Purpose, QueueDate, QueueCode, Original_id, Original_Name, Original_Department, Original_QueueDate, Original_QueueCode, Original_id);[m
[32m +        }[m
[32m +    }[m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[32m +    ///</summary>[m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[32m +        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[32m +    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[32m +        [m
[32m +        private UpdateOrderOption _updateOrder;[m
[32m +        [m
[32m +        private QueueStudentDataTableAdapter _queueStudentDataTableAdapter;[m
[32m +        [m
[32m +        private bool _backupDataSetBeforeUpdate;[m
[32m +        [m
[32m +        private global::System.Data.IDbConnection _connection;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public UpdateOrderOption UpdateOrder {[m
[32m +            get {[m
[32m +                return this._updateOrder;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._updateOrder = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[32m +            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[32m +            "a", "System.Drawing.Design.UITypeEditor")][m
[32m +        public QueueStudentDataTableAdapter QueueStudentDataTableAdapter {[m
[32m +            get {[m
[32m +                return this._queueStudentDataTableAdapter;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._queueStudentDataTableAdapter = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public bool BackupDataSetBeforeUpdate {[m
[32m +            get {[m
[32m +                return this._backupDataSetBeforeUpdate;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._backupDataSetBeforeUpdate = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        public global::System.Data.IDbConnection Connection {[m
[32m +            get {[m
[32m +                if ((this._connection != null)) {[m
[32m +                    return this._connection;[m
[32m +                }[m
[32m +                if (((this._queueStudentDataTableAdapter != null) [m
[32m +                            && (this._queueStudentDataTableAdapter.Connection != null))) {[m
[32m +                    return this._queueStudentDataTableAdapter.Connection;[m
[32m +                }[m
[32m +                return null;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._connection = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        public int TableAdapterInstanceCount {[m
[32m +            get {[m
[32m +                int count = 0;[m
[32m +                if ((this._queueStudentDataTableAdapter != null)) {[m
[32m +                    count = (count + 1);[m
[32m +                }[m
[32m +                return count;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update rows in top-down order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateUpdatedRows(loginformDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueStudentDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] updatedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[32m +                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[32m +                if (((updatedRows != null) [m
[32m +                            && (0 < updatedRows.Length))) {[m
[32m +                    result = (result + this._queueStudentDataTableAdapter.Update(updatedRows));[m
[32m +                    allChangedRows.AddRange(updatedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Insert rows in top-down order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateInsertedRows(loginformDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueStudentDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] addedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[32m +                if (((addedRows != null) [m
[32m +                            && (0 < addedRows.Length))) {[m
[32m +                    result = (result + this._queueStudentDataTableAdapter.Update(addedRows));[m
[32m +                    allAddedRows.AddRange(addedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Delete rows in bottom-up order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateDeletedRows(loginformDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._queueStudentDataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] deletedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[32m +                if (((deletedRows != null) [m
[32m +                            && (0 < deletedRows.Length))) {[m
[32m +                    result = (result + this._queueStudentDataTableAdapter.Update(deletedRows));[m
[32m +                    allChangedRows.AddRange(deletedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            if (((updatedRows == null) [m
[32m +                        || (updatedRows.Length < 1))) {[m
[32m +                return updatedRows;[m
[32m +            }[m
[32m +            if (((allAddedRows == null) [m
[32m +                        || (allAddedRows.Count < 1))) {[m
[32m +                return updatedRows;[m
[32m +            }[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[32m +                global::System.Data.DataRow row = updatedRows[i];[m
[32m +                if ((allAddedRows.Contains(row) == false)) {[m
[32m +                    realUpdatedRows.Add(row);[m
[32m +                }[m
[32m +            }[m
[32m +            return realUpdatedRows.ToArray();[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update all changes to the dataset.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public virtual int UpdateAll(loginformDataSet6 dataSet) {[m
[32m +            if ((dataSet == null)) {[m
[32m +                throw new global::System.ArgumentNullException("dataSet");[m
[32m +            }[m
[32m +            if ((dataSet.HasChanges() == false)) {[m
[32m +                return 0;[m
[32m +            }[m
[32m +            if (((this._queueStudentDataTableAdapter != null) [m
[32m +                        && (this.MatchTableAdapterConnection(this._queueStudentDataTableAdapter.Connection) == false))) {[m
[32m +                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[32m +                        "tring.");[m
[32m +            }[m
[32m +            global::System.Data.IDbConnection workConnection = this.Connection;[m
[32m +            if ((workConnection == null)) {[m
[32m +                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[32m +                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[32m +            }[m
[32m +            bool workConnOpened = false;[m
[32m +            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[32m +                        == global::System.Data.ConnectionState.Broken)) {[m
[32m +                workConnection.Close();[m
[32m +            }[m
[32m +            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[32m +                workConnection.Open();[m
[32m +                workConnOpened = true;[m
[32m +            }[m
[32m +            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[32m +            if ((workTransaction == null)) {[m
[32m +                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[32m +                        "ctions or the current state is not allowing the transaction to begin.");[m
[32m +            }[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[32m +            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[32m +            int result = 0;[m
[32m +            global::System.Data.DataSet backupDataSet = null;[m
[32m +            if (this.BackupDataSetBeforeUpdate) {[m
[32m +                backupDataSet = new global::System.Data.DataSet();[m
[32m +                backupDataSet.Merge(dataSet);[m
[32m +            }[m
[32m +            try {[m
[32m +                // ---- Prepare for update -----------[m
[32m +                //[m
[32m +                if ((this._queueStudentDataTableAdapter != null)) {[m
[32m +                    revertConnections.Add(this._queueStudentDataTableAdapter, this._queueStudentDataTableAdapter.Connection);[m
[32m +                    this._queueStudentDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[32m +                    this._queueStudentDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[32m +                    if (this._queueStudentDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[32m +                        this._queueStudentDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[32m +                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueStudentDataTableAdapter.Adapter);[m
[32m +                    }[m
[32m +                }[m
[32m +                // [m
[32m +                //---- Perform updates -----------[m
[32m +                //[m
[32m +                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[32m +                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m +                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m +                }[m
[32m +                else {[m
[32m +                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m +                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m +                }[m
[32m +                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[32m +                // [m
[32m +                //---- Commit updates -----------[m
[32m +                //[m
[32m +                workTransaction.Commit();[m
[32m +                if ((0 < allAddedRows.Count)) {[m
[32m +                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m +                    allAddedRows.CopyTo(rows);[m
[32m +                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.DataRow row = rows[i];[m
[32m +                        row.AcceptChanges();[m
[32m +                    }[m
[32m +                }[m
[32m +                if ((0 < allChangedRows.Count)) {[m
[32m +                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[32m +                    allChangedRows.CopyTo(rows);[m
[32m +                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.DataRow row = rows[i];[m
[32m +                        row.AcceptChanges();[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            catch (global::System.Exception ex) {[m
[32m +                workTransaction.Rollback();[m
[32m +                // ---- Restore the dataset -----------[m
[32m +                if (this.BackupDataSetBeforeUpdate) {[m
[32m +                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[32m +                    dataSet.Clear();[m
[32m +                    dataSet.Merge(backupDataSet);[m
[32m +                }[m
[32m +                else {[m
[32m +                    if ((0 < allAddedRows.Count)) {[m
[32m +                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m +                        allAddedRows.CopyTo(rows);[m
[32m +                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                            global::System.Data.DataRow row = rows[i];[m
[32m +                            row.AcceptChanges();[m
[32m +                            row.SetAdded();[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                throw ex;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if (workConnOpened) {[m
[32m +                    workConnection.Close();[m
[32m +                }[m
[32m +                if ((this._queueStudentDataTableAdapter != null)) {[m
[32m +                    this._queueStudentDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueStudentDataTableAdapter]));[m
[32m +                    this._queueStudentDataTableAdapter.Transaction = null;[m
[32m +                }[m
[32m +                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[32m +                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[32m +                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[32m +                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[32m +                        adapter.AcceptChangesDuringUpdate = true;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[32m +            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[32m +            if ((this._connection != null)) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            if (((this.Connection == null) [m
[32m +                        || (inputConnection == null))) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update Order Option[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public enum UpdateOrderOption {[m
[32m +            [m
[32m +            InsertUpdateDelete = 0,[m
[32m +            [m
[32m +            UpdateInsertDelete = 1,[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Used to sort self-referenced table's rows[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[32m +            [m
[32m +            private global::System.Data.DataRelation _relation;[m
[32m +            [m
[32m +            private int _childFirst;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[32m +                this._relation = relation;[m
[32m +                if (childFirst) {[m
[32m +                    this._childFirst = -1;[m
[32m +                }[m
[32m +                else {[m
[32m +                    this._childFirst = 1;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[32m +                global::System.Diagnostics.Debug.Assert((row != null));[m
[32m +                global::System.Data.DataRow root = row;[m
[32m +                distance = 0;[m
[32m +[m
[32m +                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[32m +                traversedRows[row] = row;[m
[32m +[m
[32m +                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m +                for ([m
[32m +                ; ((parent != null) [m
[32m +                            && (traversedRows.ContainsKey(parent) == false)); [m
[32m +                ) {[m
[32m +                    distance = (distance + 1);[m
[32m +                    root = parent;[m
[32m +                    traversedRows[parent] = parent;[m
[32m +                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m +                }[m
[32m +[m
[32m +                if ((distance == 0)) {[m
[32m +                    traversedRows.Clear();[m
[32m +                    traversedRows[row] = row;[m
[32m +                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m +                    for ([m
[32m +                    ; ((parent != null) [m
[32m +                                && (traversedRows.ContainsKey(parent) == false)); [m
[32m +                    ) {[m
[32m +                        distance = (distance + 1);[m
[32m +                        root = parent;[m
[32m +                        traversedRows[parent] = parent;[m
[32m +                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m +                    }[m
[32m +                }[m
[32m +[m
[32m +                return root;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[32m +                if (object.ReferenceEquals(row1, row2)) {[m
[32m +                    return 0;[m
[32m +                }[m
[32m +                if ((row1 == null)) {[m
[32m +                    return -1;[m
[32m +                }[m
[32m +                if ((row2 == null)) {[m
[32m +                    return 1;[m
[32m +                }[m
[32m +[m
[32m +                int distance1 = 0;[m
[32m +                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[32m +[m
[32m +                int distance2 = 0;[m
[32m +                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[32m +[m
[32m +                if (object.ReferenceEquals(root1, root2)) {[m
[32m +                    return (this._childFirst * distance1.CompareTo(distance2));[m
[32m +                }[m
[32m +                else {[m
[32m +                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[32m +                                    && (root2.Table != null)));[m
[32m +                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[32m +                        return -1;[m
[32m +                    }[m
[32m +                    else {[m
[32m +                        return 1;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +[m
[32m++=======[m
[32m++ï»¿//------------------------------------------------------------------------------[m
[32m++// <auto-generated>[m
[32m++//     This code was generated by a tool.[m
[32m++//     Runtime Version:4.0.30319.42000[m
[32m++//[m
[32m++//     Changes to this file may cause incorrect behavior and will be lost if[m
[32m++//     the code is regenerated.[m
[32m++// </auto-generated>[m
[32m++//------------------------------------------------------------------------------[m
[32m++[m
[32m++#pragma warning disable 1591[m
[32m++[m
[32m++namespace capstoneproject {[m
[32m++    [m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///Represents a strongly typed in-memory cache of data.[m
[32m++    ///</summary>[m
[32m++    [global::System.Serializable()][m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[32m++    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet6")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[32m++    public partial class loginformDataSet6 : global::System.Data.DataSet {[m
[32m++        [m
[32m++        private QueueStudentDataDataTable tableQueueStudentData;[m
[32m++        [m
[32m++        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public loginformDataSet6() {[m
[32m++            this.BeginInit();[m
[32m++            this.InitClass();[m
[32m++            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m++            base.Relations.CollectionChanged += schemaChangedHandler;[m
[32m++            this.EndInit();[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected loginformDataSet6(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m++                base(info, context, false) {[m
[32m++            if ((this.IsBinarySerialized(info, context) == true)) {[m
[32m++                this.InitVars(false);[m
[32m++                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[32m++                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[32m++                return;[m
[32m++            }[m
[32m++            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[32m++            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m++                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m++                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m++                if ((ds.Tables["QueueStudentData"] != null)) {[m
[32m++                    base.Tables.Add(new QueueStudentDataDataTable(ds.Tables["QueueStudentData"]));[m
[32m++                }[m
[32m++                this.DataSetName = ds.DataSetName;[m
[32m++                this.Prefix = ds.Prefix;[m
[32m++                this.Namespace = ds.Namespace;[m
[32m++                this.Locale = ds.Locale;[m
[32m++                this.CaseSensitive = ds.CaseSensitive;[m
[32m++                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m++                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            else {[m
[32m++                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m++            }[m
[32m++            this.GetSerializationData(info, context);[m
[32m++            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m++            this.Relations.CollectionChanged += schemaChangedHandler;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[32m++        public QueueStudentDataDataTable QueueStudentData {[m
[32m++            get {[m
[32m++                return this.tableQueueStudentData;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.BrowsableAttribute(true)][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[32m++        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[32m++            get {[m
[32m++                return this._schemaSerializationMode;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._schemaSerializationMode = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m++        public new global::System.Data.DataTableCollection Tables {[m
[32m++            get {[m
[32m++                return base.Tables;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m++        public new global::System.Data.DataRelationCollection Relations {[m
[32m++            get {[m
[32m++                return base.Relations;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override void InitializeDerivedDataSet() {[m
[32m++            this.BeginInit();[m
[32m++            this.InitClass();[m
[32m++            this.EndInit();[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public override global::System.Data.DataSet Clone() {[m
[32m++            loginformDataSet6 cln = ((loginformDataSet6)(base.Clone()));[m
[32m++            cln.InitVars();[m
[32m++            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[32m++            return cln;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override bool ShouldSerializeTables() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override bool ShouldSerializeRelations() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[32m++            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m++                this.Reset();[m
[32m++                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m++                ds.ReadXml(reader);[m
[32m++                if ((ds.Tables["QueueStudentData"] != null)) {[m
[32m++                    base.Tables.Add(new QueueStudentDataDataTable(ds.Tables["QueueStudentData"]));[m
[32m++                }[m
[32m++                this.DataSetName = ds.DataSetName;[m
[32m++                this.Prefix = ds.Prefix;[m
[32m++                this.Namespace = ds.Namespace;[m
[32m++                this.Locale = ds.Locale;[m
[32m++                this.CaseSensitive = ds.CaseSensitive;[m
[32m++                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m++                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            else {[m
[32m++                this.ReadXml(reader);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[32m++            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[32m++            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[32m++            stream.Position = 0;[m
[32m++            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal void InitVars() {[m
[32m++            this.InitVars(true);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal void InitVars(bool initTable) {[m
[32m++            this.tableQueueStudentData = ((QueueStudentDataDataTable)(base.Tables["QueueStudentData"]));[m
[32m++            if ((initTable == true)) {[m
[32m++                if ((this.tableQueueStudentData != null)) {[m
[32m++                    this.tableQueueStudentData.InitVars();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitClass() {[m
[32m++            this.DataSetName = "loginformDataSet6";[m
[32m++            this.Prefix = "";[m
[32m++            this.Namespace = "http://tempuri.org/loginformDataSet6.xsd";[m
[32m++            this.EnforceConstraints = true;[m
[32m++            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++            this.tableQueueStudentData = new QueueStudentDataDataTable();[m
[32m++            base.Tables.Add(this.tableQueueStudentData);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private bool ShouldSerializeQueueStudentData() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[32m++            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m++            loginformDataSet6 ds = new loginformDataSet6();[m
[32m++            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m++            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m++            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++            any.Namespace = ds.Namespace;[m
[32m++            sequence.Items.Add(any);[m
[32m++            type.Particle = sequence;[m
[32m++            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m++            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m++                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m++                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m++                try {[m
[32m++                    global::System.Xml.Schema.XmlSchema schema = null;[m
[32m++                    dsSchema.Write(s1);[m
[32m++                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m++                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m++                        s2.SetLength(0);[m
[32m++                        schema.Write(s2);[m
[32m++                        if ((s1.Length == s2.Length)) {[m
[32m++                            s1.Position = 0;[m
[32m++                            s2.Position = 0;[m
[32m++                            for (; ((s1.Position != s1.Length) [m
[32m++                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m++                                ;[m
[32m++                            }[m
[32m++                            if ((s1.Position == s1.Length)) {[m
[32m++                                return type;[m
[32m++                            }[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                finally {[m
[32m++                    if ((s1 != null)) {[m
[32m++                        s1.Close();[m
[32m++                    }[m
[32m++                    if ((s2 != null)) {[m
[32m++                        s2.Close();[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            xs.Add(dsSchema);[m
[32m++            return type;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public delegate void QueueStudentDataRowChangeEventHandler(object sender, QueueStudentDataRowChangeEvent e);[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Represents the strongly named DataTable class.[m
[32m++        ///</summary>[m
[32m++        [global::System.Serializable()][m
[32m++        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[32m++        public partial class QueueStudentDataDataTable : global::System.Data.TypedTableBase<QueueStudentDataRow> {[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnid;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnName;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnDepartment;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnPurpose;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnQueueDate;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnQueueCode;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueStudentDataDataTable() {[m
[32m++                this.TableName = "QueueStudentData";[m
[32m++                this.BeginInit();[m
[32m++                this.InitClass();[m
[32m++                this.EndInit();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal QueueStudentDataDataTable(global::System.Data.DataTable table) {[m
[32m++                this.TableName = table.TableName;[m
[32m++                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[32m++                    this.CaseSensitive = table.CaseSensitive;[m
[32m++                }[m
[32m++                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[32m++                    this.Locale = table.Locale;[m
[32m++                }[m
[32m++                if ((table.Namespace != table.DataSet.Namespace)) {[m
[32m++                    this.Namespace = table.Namespace;[m
[32m++                }[m
[32m++                this.Prefix = table.Prefix;[m
[32m++                this.MinimumCapacity = table.MinimumCapacity;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected QueueStudentDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m++                    base(info, context) {[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn idColumn {[m
[32m++                get {[m
[32m++                    return this.columnid;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn NameColumn {[m
[32m++                get {[m
[32m++                    return this.columnName;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn DepartmentColumn {[m
[32m++                get {[m
[32m++                    return this.columnDepartment;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn PurposeColumn {[m
[32m++                get {[m
[32m++                    return this.columnPurpose;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn QueueDateColumn {[m
[32m++                get {[m
[32m++                    return this.columnQueueDate;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn QueueCodeColumn {[m
[32m++                get {[m
[32m++                    return this.columnQueueCode;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            [global::System.ComponentModel.Browsable(false)][m
[32m++            public int Count {[m
[32m++                get {[m
[32m++                    return this.Rows.Count;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueStudentDataRow this[int index] {[m
[32m++                get {[m
[32m++                    return ((QueueStudentDataRow)(this.Rows[index]));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowChanging;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowChanged;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowDeleting;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event QueueStudentDataRowChangeEventHandler QueueStudentDataRowDeleted;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void AddQueueStudentDataRow(QueueStudentDataRow row) {[m
[32m++                this.Rows.Add(row);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueStudentDataRow AddQueueStudentDataRow(string Name, string Department, string Purpose, System.DateTime QueueDate, string QueueCode) {[m
[32m++                QueueStudentDataRow rowQueueStudentDataRow = ((QueueStudentDataRow)(this.NewRow()));[m
[32m++                object[] columnValuesArray = new object[] {[m
[32m++                        null,[m
[32m++                        Name,[m
[32m++                        Department,[m
[32m++                        Purpose,[m
[32m++                        QueueDate,[m
[32m++                        QueueCode};[m
[32m++                rowQueueStudentDataRow.ItemArray = columnValuesArray;[m
[32m++                this.Rows.Add(rowQueueStudentDataRow);[m
[32m++                return rowQueueStudentDataRow;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueStudentDataRow FindByid(int id) {[m
[32m++                return ((QueueStudentDataRow)(this.Rows.Find(new object[] {[m
[32m++                            id})));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public override global::System.Data.DataTable Clone() {[m
[32m++                QueueStudentDataDataTable cln = ((QueueStudentDataDataTable)(base.Clone()));[m
[32m++                cln.InitVars();[m
[32m++                return cln;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Data.DataTable CreateInstance() {[m
[32m++                return new QueueStudentDataDataTable();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal void InitVars() {[m
[32m++                this.columnid = base.Columns["id"];[m
[32m++                this.columnName = base.Columns["Name"];[m
[32m++                this.columnDepartment = base.Columns["Department"];[m
[32m++                this.columnPurpose = base.Columns["Purpose"];[m
[32m++                this.columnQueueDate = base.Columns["QueueDate"];[m
[32m++                this.columnQueueCode = base.Columns["QueueCode"];[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            private void InitClass() {[m
[32m++                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnid);[m
[32m++                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnName);[m
[32m++                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnDepartment);[m
[32m++                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnPurpose);[m
[32m++                this.columnQueueDate = new global::System.Data.DataColumn("QueueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnQueueDate);[m
[32m++                this.columnQueueCode = new global::System.Data.DataColumn("QueueCode", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnQueueCode);[m
[32m++                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {[m
[32m++                                this.columnid}, true));[m
[32m++                this.columnid.AutoIncrement = true;[m
[32m++                this.columnid.AutoIncrementSeed = -1;[m
[32m++                this.columnid.AutoIncrementStep = -1;[m
[32m++                this.columnid.AllowDBNull = false;[m
[32m++                this.columnid.ReadOnly = true;[m
[32m++                this.columnid.Unique = true;[m
[32m++                this.columnName.AllowDBNull = false;[m
[32m++                this.columnName.MaxLength = 50;[m
[32m++                this.columnDepartment.AllowDBNull = false;[m
[32m++                this.columnDepartment.MaxLength = 50;[m
[32m++                this.columnPurpose.AllowDBNull = false;[m
[32m++                this.columnPurpose.MaxLength = 2147483647;[m
[32m++                this.columnQueueDate.AllowDBNull = false;[m
[32m++                this.columnQueueCode.AllowDBNull = false;[m
[32m++                this.columnQueueCode.MaxLength = 10;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueStudentDataRow NewQueueStudentDataRow() {[m
[32m++                return ((QueueStudentDataRow)(this.NewRow()));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[32m++                return new QueueStudentDataRow(builder);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Type GetRowType() {[m
[32m++                return typeof(QueueStudentDataRow);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowChanged(e);[m
[32m++                if ((this.QueueStudentDataRowChanged != null)) {[m
[32m++                    this.QueueStudentDataRowChanged(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowChanging(e);[m
[32m++                if ((this.QueueStudentDataRowChanging != null)) {[m
[32m++                    this.QueueStudentDataRowChanging(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowDeleted(e);[m
[32m++                if ((this.QueueStudentDataRowDeleted != null)) {[m
[32m++                    this.QueueStudentDataRowDeleted(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowDeleting(e);[m
[32m++                if ((this.QueueStudentDataRowDeleting != null)) {[m
[32m++                    this.QueueStudentDataRowDeleting(this, new QueueStudentDataRowChangeEvent(((QueueStudentDataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void RemoveQueueStudentDataRow(QueueStudentDataRow row) {[m
[32m++                this.Rows.Remove(row);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m++                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m++                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m++                loginformDataSet6 ds = new loginformDataSet6();[m
[32m++                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[32m++                any1.MinOccurs = new decimal(0);[m
[32m++                any1.MaxOccurs = decimal.MaxValue;[m
[32m++                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m++                sequence.Items.Add(any1);[m
[32m++                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[32m++                any2.MinOccurs = new decimal(1);[m
[32m++                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m++                sequence.Items.Add(any2);[m
[32m++                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m++                attribute1.Name = "namespace";[m
[32m++                attribute1.FixedValue = ds.Namespace;[m
[32m++                type.Attributes.Add(attribute1);[m
[32m++                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m++                attribute2.Name = "tableTypeName";[m
[32m++                attribute2.FixedValue = "QueueStudentDataDataTable";[m
[32m++                type.Attributes.Add(attribute2);[m
[32m++                type.Particle = sequence;[m
[32m++                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m++                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m++                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m++                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m++                    try {[m
[32m++                        global::System.Xml.Schema.XmlSchema schema = null;[m
[32m++                        dsSchema.Write(s1);[m
[32m++                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m++                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m++                            s2.SetLength(0);[m
[32m++                            schema.Write(s2);[m
[32m++                            if ((s1.Length == s2.Length)) {[m
[32m++                                s1.Position = 0;[m
[32m++                                s2.Position = 0;[m
[32m++                                for (; ((s1.Position != s1.Length) [m
[32m++                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m++                                    ;[m
[32m++                                }[m
[32m++                                if ((s1.Position == s1.Length)) {[m
[32m++                                    return type;[m
[32m++                                }[m
[32m++                            }[m
[32m++                        }[m
[32m++                    }[m
[32m++                    finally {[m
[32m++                        if ((s1 != null)) {[m
[32m++                            s1.Close();[m
[32m++                        }[m
[32m++                        if ((s2 != null)) {[m
[32m++                            s2.Close();[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                xs.Add(dsSchema);[m
[32m++                return type;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Represents strongly named DataRow class.[m
[32m++        ///</summary>[m
[32m++        public partial class QueueStudentDataRow : global::System.Data.DataRow {[m
[32m++            [m
[32m++            private QueueStudentDataDataTable tableQueueStudentData;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal QueueStudentDataRow(global::System.Data.DataRowBuilder rb) : [m
[32m++                    base(rb) {[m
[32m++                this.tableQueueStudentData = ((QueueStudentDataDataTable)(this.Table));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int id {[m
[32m++                get {[m
[32m++                    return ((int)(this[this.tableQueueStudentData.idColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueStudentData.idColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Name {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueStudentData.NameColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueStudentData.NameColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Department {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueStudentData.DepartmentColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueStudentData.DepartmentColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Purpose {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueStudentData.PurposeColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueStudentData.PurposeColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public System.DateTime QueueDate {[m
[32m++                get {[m
[32m++                    return ((global::System.DateTime)(this[this.tableQueueStudentData.QueueDateColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueStudentData.QueueDateColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string QueueCode {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tableQueueStudentData.QueueCodeColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tableQueueStudentData.QueueCodeColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Row event argument class[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public class QueueStudentDataRowChangeEvent : global::System.EventArgs {[m
[32m++            [m
[32m++            private QueueStudentDataRow eventRow;[m
[32m++            [m
[32m++            private global::System.Data.DataRowAction eventAction;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueStudentDataRowChangeEvent(QueueStudentDataRow row, global::System.Data.DataRowAction action) {[m
[32m++                this.eventRow = row;[m
[32m++                this.eventAction = action;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public QueueStudentDataRow Row {[m
[32m++                get {[m
[32m++                    return this.eventRow;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataRowAction Action {[m
[32m++                get {[m
[32m++                    return this.eventAction;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++}[m
[32m++namespace capstoneproject.loginformDataSet6TableAdapters {[m
[32m++    [m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///Represents the connection and commands used to retrieve and save data.[m
[32m++    ///</summary>[m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.ComponentModel.DataObjectAttribute(true)][m
[32m++    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[32m++        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++    public partial class QueueStudentDataTableAdapter : global::System.ComponentModel.Component {[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlConnection _connection;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[32m++        [m
[32m++        private bool _clearBeforeFill;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public QueueStudentDataTableAdapter() {[m
[32m++            this.ClearBeforeFill = true;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[32m++            get {[m
[32m++                if ((this._adapter == null)) {[m
[32m++                    this.InitAdapter();[m
[32m++                }[m
[32m++                return this._adapter;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[32m++            get {[m
[32m++                if ((this._connection == null)) {[m
[32m++                    this.InitConnection();[m
[32m++                }[m
[32m++                return this._connection;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._connection = value;[m
[32m++                if ((this.Adapter.InsertCommand != null)) {[m
[32m++                    this.Adapter.InsertCommand.Connection = value;[m
[32m++                }[m
[32m++                if ((this.Adapter.DeleteCommand != null)) {[m
[32m++                    this.Adapter.DeleteCommand.Connection = value;[m
[32m++                }[m
[32m++                if ((this.Adapter.UpdateCommand != null)) {[m
[32m++                    this.Adapter.UpdateCommand.Connection = value;[m
[32m++                }[m
[32m++                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m++                    if ((this.CommandCollection[i] != null)) {[m
[32m++                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[32m++            get {[m
[32m++                return this._transaction;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._transaction = value;[m
[32m++                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m++                    this.CommandCollection[i].Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.DeleteCommand != null))) {[m
[32m++                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.InsertCommand != null))) {[m
[32m++                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.UpdateCommand != null))) {[m
[32m++                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[32m++            get {[m
[32m++                if ((this._commandCollection == null)) {[m
[32m++                    this.InitCommandCollection();[m
[32m++                }[m
[32m++                return this._commandCollection;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public bool ClearBeforeFill {[m
[32m++            get {[m
[32m++                return this._clearBeforeFill;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._clearBeforeFill = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitAdapter() {[m
[32m++            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[32m++            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[32m++            tableMapping.SourceTable = "Table";[m
[32m++            tableMapping.DataSetTable = "QueueStudentData";[m
[32m++            tableMapping.ColumnMappings.Add("id", "id");[m
[32m++            tableMapping.ColumnMappings.Add("Name", "Name");[m
[32m++            tableMapping.ColumnMappings.Add("Department", "Department");[m
[32m++            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[32m++            tableMapping.ColumnMappings.Add("QueueDate", "QueueDate");[m
[32m++            tableMapping.ColumnMappings.Add("QueueCode", "QueueCode");[m
[32m++            this._adapter.TableMappings.Add(tableMapping);[m
[32m++            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.DeleteCommand.Connection = this.Connection;[m
[32m++            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QueueStudentData] WHERE (([id] = @Original_id) AND ([Name] = @" +[m
[32m++                "Original_Name) AND ([Department] = @Original_Department) AND ([QueueDate] = @Ori" +[m
[32m++                "ginal_QueueDate) AND ([QueueCode] = @Original_QueueCode))";[m
[32m++            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.InsertCommand.Connection = this.Connection;[m
[32m++            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[QueueStudentData] ([Name], [Department], [Purpose], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueDate, @QueueCode);[m
[32m++SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM QueueStudentData WHERE (id = SCOPE_IDENTITY())";[m
[32m++            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.UpdateCommand.Connection = this.Connection;[m
[32m++            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QueueStudentData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueDate] = @QueueDate, [QueueCode] = @QueueCode WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode));[m
[32m++SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM QueueStudentData WHERE (id = @id)";[m
[32m++            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueCode", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));[m
[32m++            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitConnection() {[m
[32m++            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[32m++            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitCommandCollection() {[m
[32m++            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[32m++            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._commandCollection[0].Connection = this.Connection;[m
[32m++            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM dbo.QueueStudentD" +[m
[32m++                "ata";[m
[32m++            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[32m++        public virtual int Fill(loginformDataSet6.QueueStudentDataDataTable dataTable) {[m
[32m++            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m++            if ((this.ClearBeforeFill == true)) {[m
[32m++                dataTable.Clear();[m
[32m++            }[m
[32m++            int returnValue = this.Adapter.Fill(dataTable);[m
[32m++            return returnValue;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[32m++        public virtual loginformDataSet6.QueueStudentDataDataTable GetData() {[m
[32m++            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m++            loginformDataSet6.QueueStudentDataDataTable dataTable = new loginformDataSet6.QueueStudentDataDataTable();[m
[32m++            this.Adapter.Fill(dataTable);[m
[32m++            return dataTable;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(loginformDataSet6.QueueStudentDataDataTable dataTable) {[m
[32m++            return this.Adapter.Update(dataTable);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(loginformDataSet6 dataSet) {[m
[32m++            return this.Adapter.Update(dataSet, "QueueStudentData");[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[32m++            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[32m++                        dataRow});[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[32m++            return this.Adapter.Update(dataRows);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)][m
[32m++        public virtual int Delete(int Original_id, string Original_Name, string Original_Department, System.DateTime Original_QueueDate, string Original_QueueCode) {[m
[32m++            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));[m
[32m++            if ((Original_Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));[m
[32m++            }[m
[32m++            if ((Original_Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Department));[m
[32m++            }[m
[32m++            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_QueueDate));[m
[32m++            if ((Original_QueueCode == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_QueueCode");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_QueueCode));[m
[32m++            }[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;[m
[32m++            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.DeleteCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.DeleteCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[32m++        public virtual int Insert(string Name, string Department, string Purpose, System.DateTime QueueDate, string QueueCode) {[m
[32m++            if ((Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[32m++            }[m
[32m++            if ((Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[32m++            }[m
[32m++            if ((Purpose == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Purpose");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m++            }[m
[32m++            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(QueueDate));[m
[32m++            if ((QueueCode == null)) {[m
[32m++                throw new global::System.ArgumentNullException("QueueCode");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(QueueCode));[m
[32m++            }[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[32m++            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.InsertCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.InsertCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m++        public virtual int Update(string Name, string Department, string Purpose, System.DateTime QueueDate, string QueueCode, int Original_id, string Original_Name, string Original_Department, System.DateTime Original_QueueDate, string Original_QueueCode, int id) {[m
[32m++            if ((Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));[m
[32m++            }[m
[32m++            if ((Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Department));[m
[32m++            }[m
[32m++            if ((Purpose == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Purpose");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(QueueDate));[m
[32m++            if ((QueueCode == null)) {[m
[32m++                throw new global::System.ArgumentNullException("QueueCode");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(QueueCode));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));[m
[32m++            if ((Original_Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));[m
[32m++            }[m
[32m++            if ((Original_Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Department));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_QueueDate));[m
[32m++            if ((Original_QueueCode == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Original_QueueCode");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_QueueCode));[m
[32m++            }[m
[32m++            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(id));[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;[m
[32m++            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.UpdateCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.UpdateCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)][m
[32m++        public virtual int Update(string Name, string Department, string Purpose, System.DateTime QueueDate, string QueueCode, int Original_id, string Original_Name, string Original_Department, System.DateTime Original_QueueDate, string Original_QueueCode) {[m
[32m++            return this.Update(Name, Department, Purpose, QueueDate, QueueCode, Original_id, Original_Name, Original_Department, Original_QueueDate, Original_QueueCode, Original_id);[m
[32m++        }[m
[32m++    }[m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[32m++    ///</summary>[m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[32m++        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[32m++    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[32m++        [m
[32m++        private UpdateOrderOption _updateOrder;[m
[32m++        [m
[32m++        private QueueStudentDataTableAdapter _queueStudentDataTableAdapter;[m
[32m++        [m
[32m++        private bool _backupDataSetBeforeUpdate;[m
[32m++        [m
[32m++        private global::System.Data.IDbConnection _connection;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public UpdateOrderOption UpdateOrder {[m
[32m++            get {[m
[32m++                return this._updateOrder;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._updateOrder = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[32m++            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[32m++            "a", "System.Drawing.Design.UITypeEditor")][m
[32m++        public QueueStudentDataTableAdapter QueueStudentDataTableAdapter {[m
[32m++            get {[m
[32m++                return this._queueStudentDataTableAdapter;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._queueStudentDataTableAdapter = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public bool BackupDataSetBeforeUpdate {[m
[32m++            get {[m
[32m++                return this._backupDataSetBeforeUpdate;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._backupDataSetBeforeUpdate = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        public global::System.Data.IDbConnection Connection {[m
[32m++            get {[m
[32m++                if ((this._connection != null)) {[m
[32m++                    return this._connection;[m
[32m++                }[m
[32m++                if (((this._queueStudentDataTableAdapter != null) [m
[32m++                            && (this._queueStudentDataTableAdapter.Connection != null))) {[m
[32m++                    return this._queueStudentDataTableAdapter.Connection;[m
[32m++                }[m
[32m++                return null;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._connection = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        public int TableAdapterInstanceCount {[m
[32m++            get {[m
[32m++                int count = 0;[m
[32m++                if ((this._queueStudentDataTableAdapter != null)) {[m
[32m++                    count = (count + 1);[m
[32m++                }[m
[32m++                return count;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update rows in top-down order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateUpdatedRows(loginformDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueStudentDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] updatedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[32m++                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[32m++                if (((updatedRows != null) [m
[32m++                            && (0 < updatedRows.Length))) {[m
[32m++                    result = (result + this._queueStudentDataTableAdapter.Update(updatedRows));[m
[32m++                    allChangedRows.AddRange(updatedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Insert rows in top-down order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateInsertedRows(loginformDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueStudentDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] addedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[32m++                if (((addedRows != null) [m
[32m++                            && (0 < addedRows.Length))) {[m
[32m++                    result = (result + this._queueStudentDataTableAdapter.Update(addedRows));[m
[32m++                    allAddedRows.AddRange(addedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Delete rows in bottom-up order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateDeletedRows(loginformDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._queueStudentDataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] deletedRows = dataSet.QueueStudentData.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[32m++                if (((deletedRows != null) [m
[32m++                            && (0 < deletedRows.Length))) {[m
[32m++                    result = (result + this._queueStudentDataTableAdapter.Update(deletedRows));[m
[32m++                    allChangedRows.AddRange(deletedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            if (((updatedRows == null) [m
[32m++                        || (updatedRows.Length < 1))) {[m
[32m++                return updatedRows;[m
[32m++            }[m
[32m++            if (((allAddedRows == null) [m
[32m++                        || (allAddedRows.Count < 1))) {[m
[32m++                return updatedRows;[m
[32m++            }[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[32m++                global::System.Data.DataRow row = updatedRows[i];[m
[32m++                if ((allAddedRows.Contains(row) == false)) {[m
[32m++                    realUpdatedRows.Add(row);[m
[32m++                }[m
[32m++            }[m
[32m++            return realUpdatedRows.ToArray();[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update all changes to the dataset.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public virtual int UpdateAll(loginformDataSet6 dataSet) {[m
[32m++            if ((dataSet == null)) {[m
[32m++                throw new global::System.ArgumentNullException("dataSet");[m
[32m++            }[m
[32m++            if ((dataSet.HasChanges() == false)) {[m
[32m++                return 0;[m
[32m++            }[m
[32m++            if (((this._queueStudentDataTableAdapter != null) [m
[32m++                        && (this.MatchTableAdapterConnection(this._queueStudentDataTableAdapter.Connection) == false))) {[m
[32m++                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[32m++                        "tring.");[m
[32m++            }[m
[32m++            global::System.Data.IDbConnection workConnection = this.Connection;[m
[32m++            if ((workConnection == null)) {[m
[32m++                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[32m++                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[32m++            }[m
[32m++            bool workConnOpened = false;[m
[32m++            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[32m++                        == global::System.Data.ConnectionState.Broken)) {[m
[32m++                workConnection.Close();[m
[32m++            }[m
[32m++            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[32m++                workConnection.Open();[m
[32m++                workConnOpened = true;[m
[32m++            }[m
[32m++            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[32m++            if ((workTransaction == null)) {[m
[32m++                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[32m++                        "ctions or the current state is not allowing the transaction to begin.");[m
[32m++            }[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[32m++            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[32m++            int result = 0;[m
[32m++            global::System.Data.DataSet backupDataSet = null;[m
[32m++            if (this.BackupDataSetBeforeUpdate) {[m
[32m++                backupDataSet = new global::System.Data.DataSet();[m
[32m++                backupDataSet.Merge(dataSet);[m
[32m++            }[m
[32m++            try {[m
[32m++                // ---- Prepare for update -----------[m
[32m++                //[m
[32m++                if ((this._queueStudentDataTableAdapter != null)) {[m
[32m++                    revertConnections.Add(this._queueStudentDataTableAdapter, this._queueStudentDataTableAdapter.Connection);[m
[32m++                    this._queueStudentDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[32m++                    this._queueStudentDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[32m++                    if (this._queueStudentDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[32m++                        this._queueStudentDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[32m++                        adaptersWithAcceptChangesDuringUpdate.Add(this._queueStudentDataTableAdapter.Adapter);[m
[32m++                    }[m
[32m++                }[m
[32m++                // [m
[32m++                //---- Perform updates -----------[m
[32m++                //[m
[32m++                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[32m++                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m++                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m++                }[m
[32m++                else {[m
[32m++                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m++                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m++                }[m
[32m++                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[32m++                // [m
[32m++                //---- Commit updates -----------[m
[32m++                //[m
[32m++                workTransaction.Commit();[m
[32m++                if ((0 < allAddedRows.Count)) {[m
[32m++                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m++                    allAddedRows.CopyTo(rows);[m
[32m++                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.DataRow row = rows[i];[m
[32m++                        row.AcceptChanges();[m
[32m++                    }[m
[32m++                }[m
[32m++                if ((0 < allChangedRows.Count)) {[m
[32m++                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[32m++                    allChangedRows.CopyTo(rows);[m
[32m++                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.DataRow row = rows[i];[m
[32m++                        row.AcceptChanges();[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            catch (global::System.Exception ex) {[m
[32m++                workTransaction.Rollback();[m
[32m++                // ---- Restore the dataset -----------[m
[32m++                if (this.BackupDataSetBeforeUpdate) {[m
[32m++                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[32m++                    dataSet.Clear();[m
[32m++                    dataSet.Merge(backupDataSet);[m
[32m++                }[m
[32m++                else {[m
[32m++                    if ((0 < allAddedRows.Count)) {[m
[32m++                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m++                        allAddedRows.CopyTo(rows);[m
[32m++                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                            global::System.Data.DataRow row = rows[i];[m
[32m++                            row.AcceptChanges();[m
[32m++                            row.SetAdded();[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                throw ex;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if (workConnOpened) {[m
[32m++                    workConnection.Close();[m
[32m++                }[m
[32m++                if ((this._queueStudentDataTableAdapter != null)) {[m
[32m++                    this._queueStudentDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._queueStudentDataTableAdapter]));[m
[32m++                    this._queueStudentDataTableAdapter.Transaction = null;[m
[32m++                }[m
[32m++                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[32m++                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[32m++                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[32m++                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[32m++                        adapter.AcceptChangesDuringUpdate = true;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[32m++            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[32m++            if ((this._connection != null)) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            if (((this.Connection == null) [m
[32m++                        || (inputConnection == null))) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update Order Option[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public enum UpdateOrderOption {[m
[32m++            [m
[32m++            InsertUpdateDelete = 0,[m
[32m++            [m
[32m++            UpdateInsertDelete = 1,[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Used to sort self-referenced table's rows[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[32m++            [m
[32m++            private global::System.Data.DataRelation _relation;[m
[32m++            [m
[32m++            private int _childFirst;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[32m++                this._relation = relation;[m
[32m++                if (childFirst) {[m
[32m++                    this._childFirst = -1;[m
[32m++                }[m
[32m++                else {[m
[32m++                    this._childFirst = 1;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[32m++                global::System.Diagnostics.Debug.Assert((row != null));[m
[32m++                global::System.Data.DataRow root = row;[m
[32m++                distance = 0;[m
[32m++[m
[32m++                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[32m++                traversedRows[row] = row;[m
[32m++[m
[32m++                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m++                for ([m
[32m++                ; ((parent != null) [m
[32m++                            && (traversedRows.ContainsKey(parent) == false)); [m
[32m++                ) {[m
[32m++                    distance = (distance + 1);[m
[32m++                    root = parent;[m
[32m++                    traversedRows[parent] = parent;[m
[32m++                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m++                }[m
[32m++[m
[32m++                if ((distance == 0)) {[m
[32m++                    traversedRows.Clear();[m
[32m++                    traversedRows[row] = row;[m
[32m++                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m++                    for ([m
[32m++                    ; ((parent != null) [m
[32m++                                && (traversedRows.ContainsKey(parent) == false)); [m
[32m++                    ) {[m
[32m++                        distance = (distance + 1);[m
[32m++                        root = parent;[m
[32m++                        traversedRows[parent] = parent;[m
[32m++                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m++                    }[m
[32m++                }[m
[32m++[m
[32m++                return root;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[32m++                if (object.ReferenceEquals(row1, row2)) {[m
[32m++                    return 0;[m
[32m++                }[m
[32m++                if ((row1 == null)) {[m
[32m++                    return -1;[m
[32m++                }[m
[32m++                if ((row2 == null)) {[m
[32m++                    return 1;[m
[32m++                }[m
[32m++[m
[32m++                int distance1 = 0;[m
[32m++                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[32m++[m
[32m++                int distance2 = 0;[m
[32m++                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[32m++[m
[32m++                if (object.ReferenceEquals(root1, root2)) {[m
[32m++                    return (this._childFirst * distance1.CompareTo(distance2));[m
[32m++                }[m
[32m++                else {[m
[32m++                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[32m++                                    && (root2.Table != null)));[m
[32m++ warning: in the working copy of 'capstoneproject/loginformDataSet6.xsd', LF will be replaced by CRLF the next time Git touches it
                   if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[32m++                        return -1;[m
[32m++                    }[m
[32m++                    else {[m
[32m++                        return 1;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++}[m
[32m++[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  #pragma warning restore 1591[m
[1mdiff --cc capstoneproject/loginformDataSet6.xsd[m
[1mindex 8ed9e49,cf06b79..0000000[m
[1m--- a/capstoneproject/loginformDataSet6.xsd[m
[1m+++ b/capstoneproject/loginformDataSet6.xsd[m
[36m@@@ -1,126 -1,126 +1,254 @@@[m
[31m -ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[31m -<xs:schema id="loginformDataSet6" targetNamespace="http://tempuri.org/loginformDataSet6.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet6.xsd" xmlns="http://tempuri.org/loginformDataSet6.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[31m -  <xs:annotation>[m
[31m -    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[31m -      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[31m -        <Connections>[m
[31m -          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[31m -        </Connections>[m
[31m -        <Tables>[m
[31m -          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueStudentDataTableAdapter" GeneratorDataComponentClassName="QueueStudentDataTableAdapter" Name="QueueStudentData" UserDataComponentName="QueueStudentDataTableAdapter">[m
[31m -            <MainSource>[m
[31m -              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueStudentData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[31m -                <DeleteCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>DELETE FROM [dbo].[QueueStudentData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode))</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </DeleteCommand>[m
[31m -                <InsertCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>INSERT INTO [dbo].[QueueStudentData] ([Name], [Department], [Purpose], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueDate, @QueueCode);[m
[31m -SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM QueueStudentData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </InsertCommand>[m
[31m -                <SelectCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM dbo.QueueStudentData</CommandText>[m
[31m -                    <Parameters />[m
[31m -                  </DbCommand>[m
[31m -                </SelectCommand>[m
[31m -                <UpdateCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>UPDATE [dbo].[QueueStudentData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueDate] = @QueueDate, [QueueCode] = @QueueCode WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode));[m
[31m -SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM QueueStudentData WHERE (id = @id)</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueStudentData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </UpdateCommand>[m
[31m -              </DbSource>[m
[31m -            </MainSource>[m
[31m -            <Mappings>[m
[31m -              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[31m -              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[31m -              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[31m -              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[31m -              <Mapping SourceColumn="QueueDate" DataSetColumn="QueueDate" />[m
[31m -              <Mapping SourceColumn="QueueCode" DataSetColumn="QueueCode" />[m
[31m -            </Mappings>[m
[31m -            <Sources />[m
[31m -          </TableAdapter>[m
[31m -        </Tables>[m
[31m -        <Sources />[m
[31m -      </DataSource>[m
[31m -    </xs:appinfo>[m
[31m -  </xs:annotation>[m
[31m -  <xs:element name="loginformDataSet6" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet6" msprop:Generator_UserDSName="loginformDataSet6">[m
[31m -    <xs:complexType>[m
[31m -      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[31m -        <xs:element name="QueueStudentData" msprop:Generator_TableClassName="QueueStudentDataDataTable" msprop:Generator_TableVarName="tableQueueStudentData" msprop:Generator_TablePropName="QueueStudentData" msprop:Generator_RowDeletingName="QueueStudentDataRowDeleting" msprop:Generator_RowChangingName="QueueStudentDataRowChanging" msprop:Generator_RowEvHandlerName="QueueStudentDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueStudentDataRowDeleted" msprop:Generator_UserTableName="QueueStudentData" msprop:Generator_RowChangedName="QueueStudentDataRowChanged" msprop:Generator_RowEvArgName="QueueStudentDataRowChangeEvent" msprop:Generator_RowClassName="QueueStudentDataRow">[m
[31m -          <xs:complexType>[m
[31m -            <xs:sequence>[m
[31m -              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[31m -              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="2147483647" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="QueueDate" msprop:Generator_ColumnVarNameInTable="columnQueueDate" msprop:Generator_ColumnPropNameInRow="QueueDate" msprop:Generator_ColumnPropNameInTable="QueueDateColumn" msprop:Generator_UserColumnName="QueueDate" type="xs:dateTime" />[m
[31m -              <xs:element name="QueueCode" msprop:Generator_ColumnVarNameInTable="columnQueueCode" msprop:Generator_ColumnPropNameInRow="QueueCode" msprop:Generator_ColumnPropNameInTable="QueueCodeColumn" msprop:Generator_UserColumnName="QueueCode">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="10" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -            </xs:sequence>[m
[31m -          </xs:complexType>[m
[31m -        </xs:element>[m
[31m -      </xs:choice>[m
[31m -    </xs:complexType>[m
[31m -    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[31m -      <xs:selector xpath=".//mstns:QueueStudentData" />[m
[31m -      <xs:field xpath="mstns:id" />[m
[31m -    </xs:unique>[m
[31m -  </xs:element>[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m +<xs:schema id="loginformDataSet6" targetNamespace="http://tempuri.org/loginformDataSet6.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet6.xsd" xmlns="http://tempuri.org/loginformDataSet6.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[32m +  <xs:annotation>[m
[32m +    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m +      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m +        <Connections>[m
[32m +          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[32m +        </Connections>[m
[32m +        <Tables>[m
[32m +          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueStudentDataTableAdapter" GeneratorDataComponentClassName="QueueStudentDataTableAdapter" Name="QueueStudentData" UserDataComponentName="QueueStudentDataTableAdapter">[m
[32m +            <MainSource>[m
[32m +              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueStudentData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[32m +                <DeleteCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>DELETE FROM [dbo].[QueueStudentData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode))</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </DeleteCommand>[m
[32m +                <InsertCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>INSERT INTO [dbo].[QueueStudentData] ([Name], [Department], [Purpose], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueDate, @QueueCode);[m
[32m +SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM QueueStudentData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </InsertCommand>[m
[32m +                <SelectCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM dbo.QueueStudentData</CommandText>[m
[32m +                    <Parameters />[m
[32m +                  </DbCommand>[m
[32m +                </SelectCommand>[m
[32m +                <UpdateCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>UPDATE [dbo].[QueueStudentData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueDate] = @QueueDate, [QueueCode] = @QueueCode WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode));[m
[32m +SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM QueueStudentData WHERE (id = @id)</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueStudentData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </UpdateCommand>[m
[32m +              </DbSource>[m
[32m +            </MainSource>[m
[32m +            <Mappings>[m
[32m +              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[32m +              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[32m +              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[32m +              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[32m +              <Mapping SourceColumn="QueueDate" DataSetColumn="QueueDate" />[m
[32m +              <Mapping SourceColumn="QueueCode" DataSetColumn="QueueCode" />[m
[32m +            </Mappings>[m
[32m +            <Sources />[m
[32m +          </TableAdapter>[m
[32m +        </Tables>[m
[32m +        <Sources />[m
[32m +      </DataSource>[m
[32m +    </xs:appinfo>[m
[32m +  </xs:annotation>[m
[32m +  <xs:element name="loginformDataSet6" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet6" msprop:Generator_UserDSName="loginformDataSet6">[m
[32m +    <xs:complexType>[m
[32m +      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[32m +        <xs:element name="QueueStudentData" msprop:Generator_TableClassName="QueueStudentDataDataTable" msprop:Generator_TableVarName="tableQueueStudentData" msprop:Generator_TablePropName="QueueStudentData" msprop:Generator_RowDeletingName="QueueStudentDataRowDeleting" msprop:Generator_RowChangingName="QueueStudentDataRowChanging" msprop:Generator_RowEvHandlerName="QueueStudentDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueStudentDataRowDeleted" msprop:Generator_UserTableName="QueueStudentData" msprop:Generator_RowChangedName="QueueStudentDataRowChanged" msprop:Generator_RowEvArgName="QueueStudentDataRowChangeEvent" msprop:Generator_RowClassName="QueueStudentDataRow">[m
[32m +          <xs:complexType>[m
[32m +            <xs:sequence>[m
[32m +              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[32m +              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="2147483647" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="QueueDate" msprop:Generator_ColumnVarNameInTable="columnQueueDate" msprop:Generator_ColumnPropNameInRow="QueueDate" msprop:Generator_ColumnPropNameInTable="QueueDateColumn" msprop:Generator_UserColumnName="QueueDate" type="xs:dateTime" />[m
[32m +              <xs:element name="QueueCode" msprop:Generator_ColumnVarNameInTable="columnQueueCode" msprop:Generator_ColumnPropNameInRow="QueueCode" msprop:Generator_ColumnPropNameInTable="QueueCodeColumn" msprop:Generator_UserColumnName="QueueCode">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="10" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +            </xs:sequence>[m
[32m +          </xs:complexType>[m
[32m +        </xs:element>[m
[32m +      </xs:choice>[m
[32m +    </xs:complexType>[m
[32m +    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[32m +      <xs:selector xpath=".//mstns:QueueStudentData" />[m
[32m +      <xs:field xpath="mstns:id" />[m
[32m +    </xs:unique>[m
[32m +  </xs:element>[m
[32m++=======[m
[32m++ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m++<xs:schema id="loginformDataSet6" targetNamespace="http://tempuri.org/loginformDataSet6.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet6.xsd" xmlns="http://tempuri.org/loginformDataSet6.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[32m++  <xs:annotation>[m
[32m++    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m++      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m++        <Connections>[m
[32m++          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[32m++        </Connections>[m
[32m++        <Tables>[m
[32m++          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueStudentDataTableAdapter" GeneratorDataComponentClassName="QueueStudentDataTableAdapter" Name="QueueStudentData" UserDataComponentName="QueueStudentDataTableAdapter">[m
[32m++            <MainSource>[m
[32m++              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.QueueStudentData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[32m++                <DeleteCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>DELETE FROM [dbo].[QueueStudentData] WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode))</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </DeleteCommand>[m
[32m++                <InsertCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>INSERT INTO [dbo].[QueueStudentData] ([Name], [Department], [Purpose], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueDate, @QueueCode);[m
[32m++SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM QueueStudentData WHERE (id = SCOPE_IDENTITY())</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </InsertCommand>[m
[32m++                <SelectCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM dbo.QueueStudentData</CommandText>[m
[32m++                    <Parameters />[m
[32m++                  </DbCommand>[m
[32m++                </SelectCommand>[m
[32m++                <UpdateCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>UPDATE [dbo].[QueueStudentData] SET [Name] = @Name, [Department] = @Department, [Purpose] = @Purpose, [QueueDate] = @QueueDate, [QueueCode] = @QueueCode WHERE (([id] = @Original_id) AND ([Name] = @Original_Name) AND ([Department] = @Original_Department) AND ([QueueDate] = @Original_QueueDate) AND ([QueueCode] = @Original_QueueCode));[m
[32m++SELECT id, Name, Department, Purpose, QueueDate, QueueCode FROM QueueStudentData WHERE (id = @id)</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_QueueCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Original" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="loginform.dbo.QueueStudentData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </UpdateCommand>[m
[32m++              </DbSource>[m
[32m++            </MainSource>[m
[32m++            <Mappings>[m
[32m++              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[32m++              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[32m++              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[32m++              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[32m++              <Mapping SourceColumn="QueueDate" DataSetColumn="QueueDate" />[m
[32m++              <Mapping SourceColumn="QueueCode" DataSetColumn="QueueCode" />[m
[32m++            </Mappings>[m
[32m++            <Sources />[m
[32m++          </TableAdapter>[m
[32m++        </Tables>[m
[32m++        <Sources />[m
[32m++      </DataSource>[m
[32m++    </xs:appinfo>[m
[32m++  </xs:annotation>[m
[32m++  <xs:element name="loginformDataSet6" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet6" msprop:Generator_UserDSName="loginformDataSet6">[m
[32m++    <xs:complexType>[m
[32m++      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[32m++        <xs:element name="QueueStudentData" msprop:Generator_TableClassName="QueueStudentDataDataTable" msprop:Generator_TableVarName="tableQueueStudentData" msprop:Generator_TablePropName="QueueStudentData" msprop:Generator_RowDeletingName="QueueStudentDataRowDeleting" msprop:Generator_RowChangingName="QueueStudentDataRowChanging" msprop:Generator_RowEvHandlerName="QueueStudentDataRowChangeEventHandler" msprop:Generator_RowDeletedName="QueueStudentDataRowDeleted" msprop:Generator_UserTableName="QueueStudentData" msprop:Generator_RowChangedName="QueueStudentDataRowChanged" msprop:Generator_RowEvArgName="QueueStudentDataRowChangeEvent" msprop:Generator_RowClassName="QueueStudentDataRow">[m
[32m++          <xs:complexType>[m
[32m++            <xs:sequence>[m
[32m++              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[32m++              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="2147483647" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="QueueDate" msprop:Generator_ColumnVarNameInTable="columnQueueDate" msprop:Generator_ColumnPropNameInRow="QueueDate" msprop:Generator_ColumnPropNameInTable="QueueDateColumn" msprop:Generator_UserColumnName="QueueDate" type="xs:dateTime" />[m
[32m++              <xs:element name="QueueCode" msprop:Generator_ColumnVarNameInTable="columnQueueCode" msprop:Generator_ColumnPropNameInRow="QueueCode" msprop:Generator_ColumnPropNameInTable="QueueCodeColumn" msprop:Generator_UserColumnName="QueueCode">[m
[32m++      warning: in the working copy of 'capstoneproject/loginformDataSet7.Designer.cs', LF will be replaced by CRLF the next time Git touches it
          <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="10" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++            </xs:sequence>[m
[32m++          </xs:complexType>[m
[32m++        </xs:element>[m
[32m++      </xs:choice>[m
[32m++    </xs:complexType>[m
[32m++    <xs:unique name="Constraint1" msdata:PrimaryKey="true">[m
[32m++      <xs:selector xpath=".//mstns:QueueStudentData" />[m
[32m++      <xs:field xpath="mstns:id" />[m
[32m++    </xs:unique>[m
[32m++  </xs:element>[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  </xs:schema>[m
[1mdiff --cc capstoneproject/loginformDataSet7.Designer.cs[m
[1mindex ab431ed,7dd60c8..0000000[m
[1m--- a/capstoneproject/loginformDataSet7.Designer.cs[m
[1m+++ b/capstoneproject/loginformDataSet7.Designer.cs[m
[36m@@@ -1,1441 -1,1441 +1,2884 @@@[m
[31m -ï»¿//------------------------------------------------------------------------------[m
[31m -// <auto-generated>[m
[31m -//     This code was generated by a tool.[m
[31m -//     Runtime Version:4.0.30319.42000[m
[31m -//[m
[31m -//     Changes to this file may cause incorrect behavior and will be lost if[m
[31m -//     the code is regenerated.[m
[31m -// </auto-generated>[m
[31m -//------------------------------------------------------------------------------[m
[31m -[m
[31m -#pragma warning disable 1591[m
[31m -[m
[31m -namespace capstoneproject {[m
[31m -    [m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///Represents a strongly typed in-memory cache of data.[m
[31m -    ///</summary>[m
[31m -    [global::System.Serializable()][m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[31m -    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet7")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[31m -    public partial class loginformDataSet7 : global::System.Data.DataSet {[m
[31m -        [m
[31m -        private stu_dataDataTable tablestu_data;[m
[31m -        [m
[31m -        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public loginformDataSet7() {[m
[31m -            this.BeginInit();[m
[31m -            this.InitClass();[m
[31m -            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -            base.Tables.CollectionChanged += schemaChangedHandler;[m
[31m -            base.Relations.CollectionChanged += schemaChangedHandler;[m
[31m -            this.EndInit();[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected loginformDataSet7(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[31m -                base(info, context, false) {[m
[31m -            if ((this.IsBinarySerialized(info, context) == true)) {[m
[31m -                this.InitVars(false);[m
[31m -                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[31m -                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[31m -                return;[m
[31m -            }[m
[31m -            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[31m -            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[31m -                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[31m -                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[31m -                if ((ds.Tables["stu_data"] != null)) {[m
[31m -                    base.Tables.Add(new stu_dataDataTable(ds.Tables["stu_data"]));[m
[31m -                }[m
[31m -                this.DataSetName = ds.DataSetName;[m
[31m -                this.Prefix = ds.Prefix;[m
[31m -                this.Namespace = ds.Namespace;[m
[31m -                this.Locale = ds.Locale;[m
[31m -                this.CaseSensitive = ds.CaseSensitive;[m
[31m -                this.EnforceConstraints = ds.EnforceConstraints;[m
[31m -                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            else {[m
[31m -                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[31m -            }[m
[31m -            this.GetSerializationData(info, context);[m
[31m -            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[31m -            base.Tables.CollectionChanged += schemaChangedHandler;[m
[31m -            this.Relations.CollectionChanged += schemaChangedHandler;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[31m -        public stu_dataDataTable stu_data {[m
[31m -            get {[m
[31m -                return this.tablestu_data;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.BrowsableAttribute(true)][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[31m -        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[31m -            get {[m
[31m -                return this._schemaSerializationMode;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._schemaSerializationMode = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[31m -        public new global::System.Data.DataTableCollection Tables {[m
[31m -            get {[m
[31m -                return base.Tables;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[31m -        public new global::System.Data.DataRelationCollection Relations {[m
[31m -            get {[m
[31m -                return base.Relations;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override void InitializeDerivedDataSet() {[m
[31m -            this.BeginInit();[m
[31m -            this.InitClass();[m
[31m -            this.EndInit();[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public override global::System.Data.DataSet Clone() {[m
[31m -            loginformDataSet7 cln = ((loginformDataSet7)(base.Clone()));[m
[31m -            cln.InitVars();[m
[31m -            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[31m -            return cln;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override bool ShouldSerializeTables() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override bool ShouldSerializeRelations() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[31m -            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[31m -                this.Reset();[m
[31m -                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[31m -                ds.ReadXml(reader);[m
[31m -                if ((ds.Tables["stu_data"] != null)) {[m
[31m -                    base.Tables.Add(new stu_dataDataTable(ds.Tables["stu_data"]));[m
[31m -                }[m
[31m -                this.DataSetName = ds.DataSetName;[m
[31m -                this.Prefix = ds.Prefix;[m
[31m -                this.Namespace = ds.Namespace;[m
[31m -                this.Locale = ds.Locale;[m
[31m -                this.CaseSensitive = ds.CaseSensitive;[m
[31m -                this.EnforceConstraints = ds.EnforceConstraints;[m
[31m -                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            else {[m
[31m -                this.ReadXml(reader);[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[31m -            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[31m -            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[31m -            stream.Position = 0;[m
[31m -            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal void InitVars() {[m
[31m -            this.InitVars(true);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal void InitVars(bool initTable) {[m
[31m -            this.tablestu_data = ((stu_dataDataTable)(base.Tables["stu_data"]));[m
[31m -            if ((initTable == true)) {[m
[31m -                if ((this.tablestu_data != null)) {[m
[31m -                    this.tablestu_data.InitVars();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitClass() {[m
[31m -            this.DataSetName = "loginformDataSet7";[m
[31m -            this.Prefix = "";[m
[31m -            this.Namespace = "http://tempuri.org/loginformDataSet7.xsd";[m
[31m -            this.EnforceConstraints = true;[m
[31m -            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[31m -            this.tablestu_data = new stu_dataDataTable();[m
[31m -            base.Tables.Add(this.tablestu_data);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private bool ShouldSerializestu_data() {[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[31m -            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[31m -            loginformDataSet7 ds = new loginformDataSet7();[m
[31m -            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[31m -            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[31m -            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -            any.Namespace = ds.Namespace;[m
[31m -            sequence.Items.Add(any);[m
[31m -            type.Particle = sequence;[m
[31m -            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[31m -            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[31m -                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[31m -                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[31m -                try {[m
[31m -                    global::System.Xml.Schema.XmlSchema schema = null;[m
[31m -                    dsSchema.Write(s1);[m
[31m -                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[31m -                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[31m -                        s2.SetLength(0);[m
[31m -                        schema.Write(s2);[m
[31m -                        if ((s1.Length == s2.Length)) {[m
[31m -                            s1.Position = 0;[m
[31m -                            s2.Position = 0;[m
[31m -                            for (; ((s1.Position != s1.Length) [m
[31m -                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[31m -                                ;[m
[31m -                            }[m
[31m -                            if ((s1.Position == s1.Length)) {[m
[31m -                                return type;[m
[31m -                            }[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                finally {[m
[31m -                    if ((s1 != null)) {[m
[31m -                        s1.Close();[m
[31m -                    }[m
[31m -                    if ((s2 != null)) {[m
[31m -                        s2.Close();[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            xs.Add(dsSchema);[m
[31m -            return type;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public delegate void stu_dataRowChangeEventHandler(object sender, stu_dataRowChangeEvent e);[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Represents the strongly named DataTable class.[m
[31m -        ///</summary>[m
[31m -        [global::System.Serializable()][m
[31m -        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[31m -        public partial class stu_dataDataTable : global::System.Data.TypedTableBase<stu_dataRow> {[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnid;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnName;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnDepartment;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnPurpose;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnQueueNumber;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnQueueDate;[m
[31m -            [m
[31m -            private global::System.Data.DataColumn columnQueueCode;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public stu_dataDataTable() {[m
[31m -                this.TableName = "stu_data";[m
[31m -                this.BeginInit();[m
[31m -                this.InitClass();[m
[31m -                this.EndInit();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal stu_dataDataTable(global::System.Data.DataTable table) {[m
[31m -                this.TableName = table.TableName;[m
[31m -                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[31m -                    this.CaseSensitive = table.CaseSensitive;[m
[31m -                }[m
[31m -                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[31m -                    this.Locale = table.Locale;[m
[31m -                }[m
[31m -                if ((table.Namespace != table.DataSet.Namespace)) {[m
[31m -                    this.Namespace = table.Namespace;[m
[31m -                }[m
[31m -                this.Prefix = table.Prefix;[m
[31m -                this.MinimumCapacity = table.MinimumCapacity;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected stu_dataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[31m -                    base(info, context) {[m
[31m -                this.InitVars();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn idColumn {[m
[31m -                get {[m
[31m -                    return this.columnid;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn NameColumn {[m
[31m -                get {[m
[31m -                    return this.columnName;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn DepartmentColumn {[m
[31m -                get {[m
[31m -                    return this.columnDepartment;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn PurposeColumn {[m
[31m -                get {[m
[31m -                    return this.columnPurpose;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn QueueNumberColumn {[m
[31m -                get {[m
[31m -                    return this.columnQueueNumber;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn QueueDateColumn {[m
[31m -                get {[m
[31m -                    return this.columnQueueDate;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataColumn QueueCodeColumn {[m
[31m -                get {[m
[31m -                    return this.columnQueueCode;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            [global::System.ComponentModel.Browsable(false)][m
[31m -            public int Count {[m
[31m -                get {[m
[31m -                    return this.Rows.Count;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public stu_dataRow this[int index] {[m
[31m -                get {[m
[31m -                    return ((stu_dataRow)(this.Rows[index]));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event stu_dataRowChangeEventHandler stu_dataRowChanging;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event stu_dataRowChangeEventHandler stu_dataRowChanged;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event stu_dataRowChangeEventHandler stu_dataRowDeleting;[m
[31m -            [m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public event stu_dataRowChangeEventHandler stu_dataRowDeleted;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void Addstu_dataRow(stu_dataRow row) {[m
[31m -                this.Rows.Add(row);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public stu_dataRow Addstu_dataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode) {[m
[31m -                stu_dataRow rowstu_dataRow = ((stu_dataRow)(this.NewRow()));[m
[31m -                object[] columnValuesArray = new object[] {[m
[31m -                        null,[m
[31m -                        Name,[m
[31m -                        Department,[m
[31m -                        Purpose,[m
[31m -                        QueueNumber,[m
[31m -                        QueueDate,[m
[31m -                        QueueCode};[m
[31m -                rowstu_dataRow.ItemArray = columnValuesArray;[m
[31m -                this.Rows.Add(rowstu_dataRow);[m
[31m -                return rowstu_dataRow;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public override global::System.Data.DataTable Clone() {[m
[31m -                stu_dataDataTable cln = ((stu_dataDataTable)(base.Clone()));[m
[31m -                cln.InitVars();[m
[31m -                return cln;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Data.DataTable CreateInstance() {[m
[31m -                return new stu_dataDataTable();[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal void InitVars() {[m
[31m -                this.columnid = base.Columns["id"];[m
[31m -                this.columnName = base.Columns["Name"];[m
[31m -                this.columnDepartment = base.Columns["Department"];[m
[31m -                this.columnPurpose = base.Columns["Purpose"];[m
[31m -                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[31m -                this.columnQueueDate = base.Columns["QueueDate"];[m
[31m -                this.columnQueueCode = base.Columns["QueueCode"];[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            private void InitClass() {[m
[31m -                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnid);[m
[31m -                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnName);[m
[31m -                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnDepartment);[m
[31m -                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnPurpose);[m
[31m -                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnQueueNumber);[m
[31m -                this.columnQueueDate = new global::System.Data.DataColumn("QueueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnQueueDate);[m
[31m -                this.columnQueueCode = new global::System.Data.DataColumn("QueueCode", typeof(string), null, global::System.Data.MappingType.Element);[m
[31m -                base.Columns.Add(this.columnQueueCode);[m
[31m -                this.columnid.AutoIncrement = true;[m
[31m -                this.columnid.AutoIncrementSeed = -1;[m
[31m -                this.columnid.AutoIncrementStep = -1;[m
[31m -                this.columnid.AllowDBNull = false;[m
[31m -                this.columnid.ReadOnly = true;[m
[31m -                this.columnName.AllowDBNull = false;[m
[31m -                this.columnName.MaxLength = 50;[m
[31m -                this.columnDepartment.AllowDBNull = false;[m
[31m -                this.columnDepartment.MaxLength = 50;[m
[31m -                this.columnPurpose.AllowDBNull = false;[m
[31m -                this.columnPurpose.MaxLength = 2147483647;[m
[31m -                this.columnQueueNumber.AllowDBNull = false;[m
[31m -                this.columnQueueDate.AllowDBNull = false;[m
[31m -                this.columnQueueCode.AllowDBNull = false;[m
[31m -                this.columnQueueCode.MaxLength = 50;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public stu_dataRow Newstu_dataRow() {[m
[31m -                return ((stu_dataRow)(this.NewRow()));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[31m -                return new stu_dataRow(builder);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override global::System.Type GetRowType() {[m
[31m -                return typeof(stu_dataRow);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowChanged(e);[m
[31m -                if ((this.stu_dataRowChanged != null)) {[m
[31m -                    this.stu_dataRowChanged(this, new stu_dataRowChangeEvent(((stu_dataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowChanging(e);[m
[31m -                if ((this.stu_dataRowChanging != null)) {[m
[31m -                    this.stu_dataRowChanging(this, new stu_dataRowChangeEvent(((stu_dataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowDeleted(e);[m
[31m -                if ((this.stu_dataRowDeleted != null)) {[m
[31m -                    this.stu_dataRowDeleted(this, new stu_dataRowChangeEvent(((stu_dataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[31m -                base.OnRowDeleting(e);[m
[31m -                if ((this.stu_dataRowDeleting != null)) {[m
[31m -                    this.stu_dataRowDeleting(this, new stu_dataRowChangeEvent(((stu_dataRow)(e.Row)), e.Action));[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public void Removestu_dataRow(stu_dataRow row) {[m
[31m -                this.Rows.Remove(row);[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[31m -                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[31m -                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[31m -                loginformDataSet7 ds = new loginformDataSet7();[m
[31m -                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[31m -                any1.MinOccurs = new decimal(0);[m
[31m -                any1.MaxOccurs = decimal.MaxValue;[m
[31m -                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[31m -                sequence.Items.Add(any1);[m
[31m -                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[31m -                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[31m -                any2.MinOccurs = new decimal(1);[m
[31m -                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[31m -                sequence.Items.Add(any2);[m
[31m -                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[31m -                attribute1.Name = "namespace";[m
[31m -                attribute1.FixedValue = ds.Namespace;[m
[31m -                type.Attributes.Add(attribute1);[m
[31m -                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[31m -                attribute2.Name = "tableTypeName";[m
[31m -                attribute2.FixedValue = "stu_dataDataTable";[m
[31m -                type.Attributes.Add(attribute2);[m
[31m -                type.Particle = sequence;[m
[31m -                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[31m -                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[31m -                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[31m -                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[31m -                    try {[m
[31m -                        global::System.Xml.Schema.XmlSchema schema = null;[m
[31m -                        dsSchema.Write(s1);[m
[31m -                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[31m -                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[31m -                            s2.SetLength(0);[m
[31m -                            schema.Write(s2);[m
[31m -                            if ((s1.Length == s2.Length)) {[m
[31m -                                s1.Position = 0;[m
[31m -                                s2.Position = 0;[m
[31m -                                for (; ((s1.Position != s1.Length) [m
[31m -                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[31m -                                    ;[m
[31m -                                }[m
[31m -                                if ((s1.Position == s1.Length)) {[m
[31m -                                    return type;[m
[31m -                                }[m
[31m -                            }[m
[31m -                        }[m
[31m -                    }[m
[31m -                    finally {[m
[31m -                        if ((s1 != null)) {[m
[31m -                            s1.Close();[m
[31m -                        }[m
[31m -                        if ((s2 != null)) {[m
[31m -                            s2.Close();[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                xs.Add(dsSchema);[m
[31m -                return type;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Represents strongly named DataRow class.[m
[31m -        ///</summary>[m
[31m -        public partial class stu_dataRow : global::System.Data.DataRow {[m
[31m -            [m
[31m -            private stu_dataDataTable tablestu_data;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal stu_dataRow(global::System.Data.DataRowBuilder rb) : [m
[31m -                    base(rb) {[m
[31m -                this.tablestu_data = ((stu_dataDataTable)(this.Table));[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int id {[m
[31m -                get {[m
[31m -                    return ((int)(this[this.tablestu_data.idColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tablestu_data.idColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Name {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tablestu_data.NameColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tablestu_data.NameColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Department {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tablestu_data.DepartmentColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tablestu_data.DepartmentColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string Purpose {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tablestu_data.PurposeColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tablestu_data.PurposeColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int QueueNumber {[m
[31m -                get {[m
[31m -                    return ((int)(this[this.tablestu_data.QueueNumberColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tablestu_data.QueueNumberColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public System.DateTime QueueDate {[m
[31m -                get {[m
[31m -                    return ((global::System.DateTime)(this[this.tablestu_data.QueueDateColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tablestu_data.QueueDateColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public string QueueCode {[m
[31m -                get {[m
[31m -                    return ((string)(this[this.tablestu_data.QueueCodeColumn]));[m
[31m -                }[m
[31m -                set {[m
[31m -                    this[this.tablestu_data.QueueCodeColumn] = value;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Row event argument class[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public class stu_dataRowChangeEvent : global::System.EventArgs {[m
[31m -            [m
[31m -            private stu_dataRow eventRow;[m
[31m -            [m
[31m -            private global::System.Data.DataRowAction eventAction;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public stu_dataRowChangeEvent(stu_dataRow row, global::System.Data.DataRowAction action) {[m
[31m -                this.eventRow = row;[m
[31m -                this.eventAction = action;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public stu_dataRow Row {[m
[31m -                get {[m
[31m -                    return this.eventRow;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public global::System.Data.DataRowAction Action {[m
[31m -                get {[m
[31m -                    return this.eventAction;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -}[m
[31m -namespace capstoneproject.loginformDataSet7TableAdapters {[m
[31m -    [m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///Represents the connection and commands used to retrieve and save data.[m
[31m -    ///</summary>[m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.ComponentModel.DataObjectAttribute(true)][m
[31m -    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[31m -        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -    public partial class stu_dataTableAdapter : global::System.ComponentModel.Component {[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlConnection _connection;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[31m -        [m
[31m -        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[31m -        [m
[31m -        private bool _clearBeforeFill;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public stu_dataTableAdapter() {[m
[31m -            this.ClearBeforeFill = true;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[31m -            get {[m
[31m -                if ((this._adapter == null)) {[m
[31m -                    this.InitAdapter();[m
[31m -                }[m
[31m -                return this._adapter;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[31m -            get {[m
[31m -                if ((this._connection == null)) {[m
[31m -                    this.InitConnection();[m
[31m -                }[m
[31m -                return this._connection;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._connection = value;[m
[31m -                if ((this.Adapter.InsertCommand != null)) {[m
[31m -                    this.Adapter.InsertCommand.Connection = value;[m
[31m -                }[m
[31m -                if ((this.Adapter.DeleteCommand != null)) {[m
[31m -                    this.Adapter.DeleteCommand.Connection = value;[m
[31m -                }[m
[31m -                if ((this.Adapter.UpdateCommand != null)) {[m
[31m -                    this.Adapter.UpdateCommand.Connection = value;[m
[31m -                }[m
[31m -                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[31m -                    if ((this.CommandCollection[i] != null)) {[m
[31m -                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[31m -            get {[m
[31m -                return this._transaction;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._transaction = value;[m
[31m -                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[31m -                    this.CommandCollection[i].Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.DeleteCommand != null))) {[m
[31m -                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.InsertCommand != null))) {[m
[31m -                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -                if (((this.Adapter != null) [m
[31m -                            && (this.Adapter.UpdateCommand != null))) {[m
[31m -                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[31m -            get {[m
[31m -                if ((this._commandCollection == null)) {[m
[31m -                    this.InitCommandCollection();[m
[31m -                }[m
[31m -                return this._commandCollection;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public bool ClearBeforeFill {[m
[31m -            get {[m
[31m -                return this._clearBeforeFill;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._clearBeforeFill = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitAdapter() {[m
[31m -            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[31m -            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[31m -            tableMapping.SourceTable = "Table";[m
[31m -            tableMapping.DataSetTable = "stu_data";[m
[31m -            tableMapping.ColumnMappings.Add("id", "id");[m
[31m -            tableMapping.ColumnMappings.Add("Name", "Name");[m
[31m -            tableMapping.ColumnMappings.Add("Department", "Department");[m
[31m -            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[31m -            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[31m -            tableMapping.ColumnMappings.Add("QueueDate", "QueueDate");[m
[31m -            tableMapping.ColumnMappings.Add("QueueCode", "QueueCode");[m
[31m -            this._adapter.TableMappings.Add(tableMapping);[m
[31m -            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._adapter.InsertCommand.Connection = this.Connection;[m
[31m -            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[stu_data] ([Name], [Department], [Purpose], [QueueNumber], [Qu" +[m
[31m -                "eueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @Queu" +[m
[31m -                "eDate, @QueueCode)";[m
[31m -            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitConnection() {[m
[31m -            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[31m -            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private void InitCommandCollection() {[m
[31m -            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[31m -            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[31m -            this._commandCollection[0].Connection = this.Connection;[m
[31m -            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM dbo." +[m
[31m -                "stu_data";[m
[31m -            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[31m -        public virtual int Fill(loginformDataSet7.stu_dataDataTable dataTable) {[m
[31m -            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[31m -            if ((this.ClearBeforeFill == true)) {[m
[31m -                dataTable.Clear();[m
[31m -            }[m
[31m -            int returnValue = this.Adapter.Fill(dataTable);[m
[31m -            return returnValue;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[31m -        public virtual loginformDataSet7.stu_dataDataTable GetData() {[m
[31m -            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[31m -            loginformDataSet7.stu_dataDataTable dataTable = new loginformDataSet7.stu_dataDataTable();[m
[31m -            this.Adapter.Fill(dataTable);[m
[31m -            return dataTable;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(loginformDataSet7.stu_dataDataTable dataTable) {[m
[31m -            return this.Adapter.Update(dataTable);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(loginformDataSet7 dataSet) {[m
[31m -            return this.Adapter.Update(dataSet, "stu_data");[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[31m -            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[31m -                        dataRow});[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[31m -            return this.Adapter.Update(dataRows);[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[31m -        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[31m -        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode) {[m
[31m -            if ((Name == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Name");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[31m -            }[m
[31m -            if ((Department == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Department");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[31m -            }[m
[31m -            if ((Purpose == null)) {[m
[31m -                throw new global::System.ArgumentNullException("Purpose");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[31m -            }[m
[31m -            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[31m -            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(QueueDate));[m
[31m -            if ((QueueCode == null)) {[m
[31m -                throw new global::System.ArgumentNullException("QueueCode");[m
[31m -            }[m
[31m -            else {[m
[31m -                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(QueueCode));[m
[31m -            }[m
[31m -            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[31m -            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[31m -                        != global::System.Data.ConnectionState.Open)) {[m
[31m -                this.Adapter.InsertCommand.Connection.Open();[m
[31m -            }[m
[31m -            try {[m
[31m -                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[31m -                return returnValue;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[31m -                    this.Adapter.InsertCommand.Connection.Close();[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -    [m
[31m -    /// <summary>[m
[31m -    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[31m -    ///</summary>[m
[31m -    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[31m -    [global::System.ComponentModel.ToolboxItem(true)][m
[31m -    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[31m -        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[31m -    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[31m -    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[31m -        [m
[31m -        private UpdateOrderOption _updateOrder;[m
[31m -        [m
[31m -        private stu_dataTableAdapter _stu_dataTableAdapter;[m
[31m -        [m
[31m -        private bool _backupDataSetBeforeUpdate;[m
[31m -        [m
[31m -        private global::System.Data.IDbConnection _connection;[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public UpdateOrderOption UpdateOrder {[m
[31m -            get {[m
[31m -                return this._updateOrder;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._updateOrder = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[31m -            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[31m -            "a", "System.Drawing.Design.UITypeEditor")][m
[31m -        public stu_dataTableAdapter stu_dataTableAdapter {[m
[31m -            get {[m
[31m -                return this._stu_dataTableAdapter;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._stu_dataTableAdapter = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public bool BackupDataSetBeforeUpdate {[m
[31m -            get {[m
[31m -                return this._backupDataSetBeforeUpdate;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._backupDataSetBeforeUpdate = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        public global::System.Data.IDbConnection Connection {[m
[31m -            get {[m
[31m -                if ((this._connection != null)) {[m
[31m -                    return this._connection;[m
[31m -                }[m
[31m -                if (((this._stu_dataTableAdapter != null) [m
[31m -                            && (this._stu_dataTableAdapter.Connection != null))) {[m
[31m -                    return this._stu_dataTableAdapter.Connection;[m
[31m -                }[m
[31m -                return null;[m
[31m -            }[m
[31m -            set {[m
[31m -                this._connection = value;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        [global::System.ComponentModel.Browsable(false)][m
[31m -        public int TableAdapterInstanceCount {[m
[31m -            get {[m
[31m -                int count = 0;[m
[31m -                if ((this._stu_dataTableAdapter != null)) {[m
[31m -                    count = (count + 1);[m
[31m -                }[m
[31m -                return count;[m
[31m -            }[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update rows in top-down order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateUpdatedRows(loginformDataSet7 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._stu_dataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] updatedRows = dataSet.stu_data.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[31m -                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[31m -                if (((updatedRows != null) [m
[31m -                            && (0 < updatedRows.Length))) {[m
[31m -                    result = (result + this._stu_dataTableAdapter.Update(updatedRows));[m
[31m -                    allChangedRows.AddRange(updatedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Insert rows in top-down order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateInsertedRows(loginformDataSet7 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._stu_dataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] addedRows = dataSet.stu_data.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[31m -                if (((addedRows != null) [m
[31m -                            && (0 < addedRows.Length))) {[m
[31m -                    result = (result + this._stu_dataTableAdapter.Update(addedRows));[m
[31m -                    allAddedRows.AddRange(addedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Delete rows in bottom-up order.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private int UpdateDeletedRows(loginformDataSet7 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[31m -            int result = 0;[m
[31m -            if ((this._stu_dataTableAdapter != null)) {[m
[31m -                global::System.Data.DataRow[] deletedRows = dataSet.stu_data.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[31m -                if (((deletedRows != null) [m
[31m -                            && (0 < deletedRows.Length))) {[m
[31m -                    result = (result + this._stu_dataTableAdapter.Update(deletedRows));[m
[31m -                    allChangedRows.AddRange(deletedRows);[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[31m -            if (((updatedRows == null) [m
[31m -                        || (updatedRows.Length < 1))) {[m
[31m -                return updatedRows;[m
[31m -            }[m
[31m -            if (((allAddedRows == null) [m
[31m -                        || (allAddedRows.Count < 1))) {[m
[31m -                return updatedRows;[m
[31m -            }[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[31m -                global::System.Data.DataRow row = updatedRows[i];[m
[31m -                if ((allAddedRows.Contains(row) == false)) {[m
[31m -                    realUpdatedRows.Add(row);[m
[31m -                }[m
[31m -            }[m
[31m -            return realUpdatedRows.ToArray();[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update all changes to the dataset.[m
[31m -        ///</summary>[m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public virtual int UpdateAll(loginformDataSet7 dataSet) {[m
[31m -            if ((dataSet == null)) {[m
[31m -                throw new global::System.ArgumentNullException("dataSet");[m
[31m -            }[m
[31m -            if ((dataSet.HasChanges() == false)) {[m
[31m -                return 0;[m
[31m -            }[m
[31m -            if (((this._stu_dataTableAdapter != null) [m
[31m -                        && (this.MatchTableAdapterConnection(this._stu_dataTableAdapter.Connection) == false))) {[m
[31m -                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[31m -                        "tring.");[m
[31m -            }[m
[31m -            global::System.Data.IDbConnection workConnection = this.Connection;[m
[31m -            if ((workConnection == null)) {[m
[31m -                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[31m -                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[31m -            }[m
[31m -            bool workConnOpened = false;[m
[31m -            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[31m -                        == global::System.Data.ConnectionState.Broken)) {[m
[31m -                workConnection.Close();[m
[31m -            }[m
[31m -            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[31m -                workConnection.Open();[m
[31m -                workConnOpened = true;[m
[31m -            }[m
[31m -            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[31m -            if ((workTransaction == null)) {[m
[31m -                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[31m -                        "ctions or the current state is not allowing the transaction to begin.");[m
[31m -            }[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[31m -            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[31m -            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[31m -            int result = 0;[m
[31m -            global::System.Data.DataSet backupDataSet = null;[m
[31m -            if (this.BackupDataSetBeforeUpdate) {[m
[31m -                backupDataSet = new global::System.Data.DataSet();[m
[31m -                backupDataSet.Merge(dataSet);[m
[31m -            }[m
[31m -            try {[m
[31m -                // ---- Prepare for update -----------[m
[31m -                //[m
[31m -                if ((this._stu_dataTableAdapter != null)) {[m
[31m -                    revertConnections.Add(this._stu_dataTableAdapter, this._stu_dataTableAdapter.Connection);[m
[31m -                    this._stu_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[31m -                    this._stu_dataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[31m -                    if (this._stu_dataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[31m -                        this._stu_dataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[31m -                        adaptersWithAcceptChangesDuringUpdate.Add(this._stu_dataTableAdapter.Adapter);[m
[31m -                    }[m
[31m -                }[m
[31m -                // [m
[31m -                //---- Perform updates -----------[m
[31m -                //[m
[31m -                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[31m -                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[31m -                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[31m -                }[m
[31m -                else {[m
[31m -                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[31m -                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[31m -                }[m
[31m -                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[31m -                // [m
[31m -                //---- Commit updates -----------[m
[31m -                //[m
[31m -                workTransaction.Commit();[m
[31m -                if ((0 < allAddedRows.Count)) {[m
[31m -                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[31m -                    allAddedRows.CopyTo(rows);[m
[31m -                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.DataRow row = rows[i];[m
[31m -                        row.AcceptChanges();[m
[31m -                    }[m
[31m -                }[m
[31m -                if ((0 < allChangedRows.Count)) {[m
[31m -                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[31m -                    allChangedRows.CopyTo(rows);[m
[31m -                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.DataRow row = rows[i];[m
[31m -                        row.AcceptChanges();[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            catch (global::System.Exception ex) {[m
[31m -                workTransaction.Rollback();[m
[31m -                // ---- Restore the dataset -----------[m
[31m -                if (this.BackupDataSetBeforeUpdate) {[m
[31m -                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[31m -                    dataSet.Clear();[m
[31m -                    dataSet.Merge(backupDataSet);[m
[31m -                }[m
[31m -                else {[m
[31m -                    if ((0 < allAddedRows.Count)) {[m
[31m -                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[31m -                        allAddedRows.CopyTo(rows);[m
[31m -                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[31m -                            global::System.Data.DataRow row = rows[i];[m
[31m -                            row.AcceptChanges();[m
[31m -                            row.SetAdded();[m
[31m -                        }[m
[31m -                    }[m
[31m -                }[m
[31m -                throw ex;[m
[31m -            }[m
[31m -            finally {[m
[31m -                if (workConnOpened) {[m
[31m -                    workConnection.Close();[m
[31m -                }[m
[31m -                if ((this._stu_dataTableAdapter != null)) {[m
[31m -                    this._stu_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._stu_dataTableAdapter]));[m
[31m -                    this._stu_dataTableAdapter.Transaction = null;[m
[31m -                }[m
[31m -                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[31m -                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[31m -                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[31m -                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[31m -                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[31m -                        adapter.AcceptChangesDuringUpdate = true;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -            return result;[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[31m -            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[31m -        }[m
[31m -        [m
[31m -        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[31m -            if ((this._connection != null)) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            if (((this.Connection == null) [m
[31m -                        || (inputConnection == null))) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[31m -                return true;[m
[31m -            }[m
[31m -            return false;[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Update Order Option[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        public enum UpdateOrderOption {[m
[31m -            [m
[31m -            InsertUpdateDelete = 0,[m
[31m -            [m
[31m -            UpdateInsertDelete = 1,[m
[31m -        }[m
[31m -        [m
[31m -        /// <summary>[m
[31m -        ///Used to sort self-referenced table's rows[m
[31m -        ///</summary>[m
[31m -        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[31m -            [m
[31m -            private global::System.Data.DataRelation _relation;[m
[31m -            [m
[31m -            private int _childFirst;[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[31m -                this._relation = relation;[m
[31m -                if (childFirst) {[m
[31m -                    this._childFirst = -1;[m
[31m -                }[m
[31m -                else {[m
[31m -                    this._childFirst = 1;[m
[31m -                }[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[31m -                global::System.Diagnostics.Debug.Assert((row != null));[m
[31m -                global::System.Data.DataRow root = row;[m
[31m -                distance = 0;[m
[31m -[m
[31m -                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[31m -                traversedRows[row] = row;[m
[31m -[m
[31m -                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[31m -                for ([m
[31m -                ; ((parent != null) [m
[31m -                            && (traversedRows.ContainsKey(parent) == false)); [m
[31m -                ) {[m
[31m -                    distance = (distance + 1);[m
[31m -                    root = parent;[m
[31m -                    traversedRows[parent] = parent;[m
[31m -                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[31m -                }[m
[31m -[m
[31m -                if ((distance == 0)) {[m
[31m -                    traversedRows.Clear();[m
[31m -                    traversedRows[row] = row;[m
[31m -                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[31m -                    for ([m
[31m -                    ; ((parent != null) [m
[31m -                                && (traversedRows.ContainsKey(parent) == false)); [m
[31m -                    ) {[m
[31m -                        distance = (distance + 1);[m
[31m -                        root = parent;[m
[31m -                        traversedRows[parent] = parent;[m
[31m -                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[31m -                    }[m
[31m -                }[m
[31m -[m
[31m -                return root;[m
[31m -            }[m
[31m -            [m
[31m -            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[31m -            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[31m -            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[31m -                if (object.ReferenceEquals(row1, row2)) {[m
[31m -                    return 0;[m
[31m -                }[m
[31m -                if ((row1 == null)) {[m
[31m -                    return -1;[m
[31m -                }[m
[31m -                if ((row2 == null)) {[m
[31m -                    return 1;[m
[31m -                }[m
[31m -[m
[31m -                int distance1 = 0;[m
[31m -                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[31m -[m
[31m -                int distance2 = 0;[m
[31m -                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[31m -[m
[31m -                if (object.ReferenceEquals(root1, root2)) {[m
[31m -                    return (this._childFirst * distance1.CompareTo(distance2));[m
[31m -                }[m
[31m -                else {[m
[31m -                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[31m -                                    && (root2.Table != null)));[m
[31m -                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[31m -                        return -1;[m
[31m -                    }[m
[31m -                    else {[m
[31m -                        return 1;[m
[31m -                    }[m
[31m -                }[m
[31m -            }[m
[31m -        }[m
[31m -    }[m
[31m -}[m
[31m -[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿//------------------------------------------------------------------------------[m
[32m +// <auto-generated>[m
[32m +//     This code was generated by a tool.[m
[32m +//     Runtime Version:4.0.30319.42000[m
[32m +//[m
[32m +//     Changes to this file may cause incorrect behavior and will be lost if[m
[32m +//     the code is regenerated.[m
[32m +// </auto-generated>[m
[32m +//------------------------------------------------------------------------------[m
[32m +[m
[32m +#pragma warning disable 1591[m
[32m +[m
[32m +namespace capstoneproject {[m
[32m +    [m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///Represents a strongly typed in-memory cache of data.[m
[32m +    ///</summary>[m
[32m +    [global::System.Serializable()][m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[32m +    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet7")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[32m +    public partial class loginformDataSet7 : global::System.Data.DataSet {[m
[32m +        [m
[32m +        private stu_dataDataTable tablestu_data;[m
[32m +        [m
[32m +        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public loginformDataSet7() {[m
[32m +            this.BeginInit();[m
[32m +            this.InitClass();[m
[32m +            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m +            base.Relations.CollectionChanged += schemaChangedHandler;[m
[32m +            this.EndInit();[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected loginformDataSet7(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m +                base(info, context, false) {[m
[32m +            if ((this.IsBinarySerialized(info, context) == true)) {[m
[32m +                this.InitVars(false);[m
[32m +                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[32m +                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[32m +                return;[m
[32m +            }[m
[32m +            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[32m +            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m +                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m +                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m +                if ((ds.Tables["stu_data"] != null)) {[m
[32m +                    base.Tables.Add(new stu_dataDataTable(ds.Tables["stu_data"]));[m
[32m +                }[m
[32m +                this.DataSetName = ds.DataSetName;[m
[32m +                this.Prefix = ds.Prefix;[m
[32m +                this.Namespace = ds.Namespace;[m
[32m +                this.Locale = ds.Locale;[m
[32m +                this.CaseSensitive = ds.CaseSensitive;[m
[32m +                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m +                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            else {[m
[32m +                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m +            }[m
[32m +            this.GetSerializationData(info, context);[m
[32m +            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m +            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m +            this.Relations.CollectionChanged += schemaChangedHandler;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[32m +        public stu_dataDataTable stu_data {[m
[32m +            get {[m
[32m +                return this.tablestu_data;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.BrowsableAttribute(true)][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[32m +        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[32m +            get {[m
[32m +                return this._schemaSerializationMode;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._schemaSerializationMode = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m +        public new global::System.Data.DataTableCollection Tables {[m
[32m +            get {[m
[32m +                return base.Tables;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m +        public new global::System.Data.DataRelationCollection Relations {[m
[32m +            get {[m
[32m +                return base.Relations;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override void InitializeDerivedDataSet() {[m
[32m +            this.BeginInit();[m
[32m +            this.InitClass();[m
[32m +            this.EndInit();[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public override global::System.Data.DataSet Clone() {[m
[32m +            loginformDataSet7 cln = ((loginformDataSet7)(base.Clone()));[m
[32m +            cln.InitVars();[m
[32m +            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[32m +            return cln;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override bool ShouldSerializeTables() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override bool ShouldSerializeRelations() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[32m +            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m +                this.Reset();[m
[32m +                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m +                ds.ReadXml(reader);[m
[32m +                if ((ds.Tables["stu_data"] != null)) {[m
[32m +                    base.Tables.Add(new stu_dataDataTable(ds.Tables["stu_data"]));[m
[32m +                }[m
[32m +                this.DataSetName = ds.DataSetName;[m
[32m +                this.Prefix = ds.Prefix;[m
[32m +                this.Namespace = ds.Namespace;[m
[32m +                this.Locale = ds.Locale;[m
[32m +                this.CaseSensitive = ds.CaseSensitive;[m
[32m +                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m +                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            else {[m
[32m +                this.ReadXml(reader);[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[32m +            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[32m +            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[32m +            stream.Position = 0;[m
[32m +            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal void InitVars() {[m
[32m +            this.InitVars(true);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal void InitVars(bool initTable) {[m
[32m +            this.tablestu_data = ((stu_dataDataTable)(base.Tables["stu_data"]));[m
[32m +            if ((initTable == true)) {[m
[32m +                if ((this.tablestu_data != null)) {[m
[32m +                    this.tablestu_data.InitVars();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitClass() {[m
[32m +            this.DataSetName = "loginformDataSet7";[m
[32m +            this.Prefix = "";[m
[32m +            this.Namespace = "http://tempuri.org/loginformDataSet7.xsd";[m
[32m +            this.EnforceConstraints = true;[m
[32m +            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m +            this.tablestu_data = new stu_dataDataTable();[m
[32m +            base.Tables.Add(this.tablestu_data);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private bool ShouldSerializestu_data() {[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[32m +            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m +            loginformDataSet7 ds = new loginformDataSet7();[m
[32m +            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m +            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m +            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +            any.Namespace = ds.Namespace;[m
[32m +            sequence.Items.Add(any);[m
[32m +            type.Particle = sequence;[m
[32m +            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m +            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m +                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m +                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m +                try {[m
[32m +                    global::System.Xml.Schema.XmlSchema schema = null;[m
[32m +                    dsSchema.Write(s1);[m
[32m +                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m +                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m +                        s2.SetLength(0);[m
[32m +                        schema.Write(s2);[m
[32m +                        if ((s1.Length == s2.Length)) {[m
[32m +                            s1.Position = 0;[m
[32m +                            s2.Position = 0;[m
[32m +                            for (; ((s1.Position != s1.Length) [m
[32m +                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m +                                ;[m
[32m +                            }[m
[32m +                            if ((s1.Position == s1.Length)) {[m
[32m +                                return type;[m
[32m +                            }[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                finally {[m
[32m +                    if ((s1 != null)) {[m
[32m +                        s1.Close();[m
[32m +                    }[m
[32m +                    if ((s2 != null)) {[m
[32m +                        s2.Close();[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            xs.Add(dsSchema);[m
[32m +            return type;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public delegate void stu_dataRowChangeEventHandler(object sender, stu_dataRowChangeEvent e);[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Represents the strongly named DataTable class.[m
[32m +        ///</summary>[m
[32m +        [global::System.Serializable()][m
[32m +        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[32m +        public partial class stu_dataDataTable : global::System.Data.TypedTableBase<stu_dataRow> {[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnid;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnName;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnDepartment;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnPurpose;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnQueueNumber;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnQueueDate;[m
[32m +            [m
[32m +            private global::System.Data.DataColumn columnQueueCode;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public stu_dataDataTable() {[m
[32m +                this.TableName = "stu_data";[m
[32m +                this.BeginInit();[m
[32m +                this.InitClass();[m
[32m +                this.EndInit();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal stu_dataDataTable(global::System.Data.DataTable table) {[m
[32m +                this.TableName = table.TableName;[m
[32m +                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[32m +                    this.CaseSensitive = table.CaseSensitive;[m
[32m +                }[m
[32m +                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[32m +                    this.Locale = table.Locale;[m
[32m +                }[m
[32m +                if ((table.Namespace != table.DataSet.Namespace)) {[m
[32m +                    this.Namespace = table.Namespace;[m
[32m +                }[m
[32m +                this.Prefix = table.Prefix;[m
[32m +                this.MinimumCapacity = table.MinimumCapacity;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected stu_dataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m +                    base(info, context) {[m
[32m +                this.InitVars();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn idColumn {[m
[32m +                get {[m
[32m +                    return this.columnid;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn NameColumn {[m
[32m +                get {[m
[32m +                    return this.columnName;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn DepartmentColumn {[m
[32m +                get {[m
[32m +                    return this.columnDepartment;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn PurposeColumn {[m
[32m +                get {[m
[32m +                    return this.columnPurpose;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn QueueNumberColumn {[m
[32m +                get {[m
[32m +                    return this.columnQueueNumber;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn QueueDateColumn {[m
[32m +                get {[m
[32m +                    return this.columnQueueDate;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataColumn QueueCodeColumn {[m
[32m +                get {[m
[32m +                    return this.columnQueueCode;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            [global::System.ComponentModel.Browsable(false)][m
[32m +            public int Count {[m
[32m +                get {[m
[32m +                    return this.Rows.Count;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public stu_dataRow this[int index] {[m
[32m +                get {[m
[32m +                    return ((stu_dataRow)(this.Rows[index]));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event stu_dataRowChangeEventHandler stu_dataRowChanging;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event stu_dataRowChangeEventHandler stu_dataRowChanged;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event stu_dataRowChangeEventHandler stu_dataRowDeleting;[m
[32m +            [m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public event stu_dataRowChangeEventHandler stu_dataRowDeleted;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void Addstu_dataRow(stu_dataRow row) {[m
[32m +                this.Rows.Add(row);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public stu_dataRow Addstu_dataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode) {[m
[32m +                stu_dataRow rowstu_dataRow = ((stu_dataRow)(this.NewRow()));[m
[32m +                object[] columnValuesArray = new object[] {[m
[32m +                        null,[m
[32m +                        Name,[m
[32m +                        Department,[m
[32m +                        Purpose,[m
[32m +                        QueueNumber,[m
[32m +                        QueueDate,[m
[32m +                        QueueCode};[m
[32m +                rowstu_dataRow.ItemArray = columnValuesArray;[m
[32m +                this.Rows.Add(rowstu_dataRow);[m
[32m +                return rowstu_dataRow;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public override global::System.Data.DataTable Clone() {[m
[32m +                stu_dataDataTable cln = ((stu_dataDataTable)(base.Clone()));[m
[32m +                cln.InitVars();[m
[32m +                return cln;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Data.DataTable CreateInstance() {[m
[32m +                return new stu_dataDataTable();[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal void InitVars() {[m
[32m +                this.columnid = base.Columns["id"];[m
[32m +                this.columnName = base.Columns["Name"];[m
[32m +                this.columnDepartment = base.Columns["Department"];[m
[32m +                this.columnPurpose = base.Columns["Purpose"];[m
[32m +                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[32m +                this.columnQueueDate = base.Columns["QueueDate"];[m
[32m +                this.columnQueueCode = base.Columns["QueueCode"];[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            private void InitClass() {[m
[32m +                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnid);[m
[32m +                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnName);[m
[32m +                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnDepartment);[m
[32m +                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnPurpose);[m
[32m +                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnQueueNumber);[m
[32m +                this.columnQueueDate = new global::System.Data.DataColumn("QueueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnQueueDate);[m
[32m +                this.columnQueueCode = new global::System.Data.DataColumn("QueueCode", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m +                base.Columns.Add(this.columnQueueCode);[m
[32m +                this.columnid.AutoIncrement = true;[m
[32m +                this.columnid.AutoIncrementSeed = -1;[m
[32m +                this.columnid.AutoIncrementStep = -1;[m
[32m +                this.columnid.AllowDBNull = false;[m
[32m +                this.columnid.ReadOnly = true;[m
[32m +                this.columnName.AllowDBNull = false;[m
[32m +                this.columnName.MaxLength = 50;[m
[32m +                this.columnDepartment.AllowDBNull = false;[m
[32m +                this.columnDepartment.MaxLength = 50;[m
[32m +                this.columnPurpose.AllowDBNull = false;[m
[32m +                this.columnPurpose.MaxLength = 2147483647;[m
[32m +                this.columnQueueNumber.AllowDBNull = false;[m
[32m +                this.columnQueueDate.AllowDBNull = false;[m
[32m +                this.columnQueueCode.AllowDBNull = false;[m
[32m +                this.columnQueueCode.MaxLength = 50;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public stu_dataRow Newstu_dataRow() {[m
[32m +                return ((stu_dataRow)(this.NewRow()));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[32m +                return new stu_dataRow(builder);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override global::System.Type GetRowType() {[m
[32m +                return typeof(stu_dataRow);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowChanged(e);[m
[32m +                if ((this.stu_dataRowChanged != null)) {[m
[32m +                    this.stu_dataRowChanged(this, new stu_dataRowChangeEvent(((stu_dataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowChanging(e);[m
[32m +                if ((this.stu_dataRowChanging != null)) {[m
[32m +                    this.stu_dataRowChanging(this, new stu_dataRowChangeEvent(((stu_dataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowDeleted(e);[m
[32m +                if ((this.stu_dataRowDeleted != null)) {[m
[32m +                    this.stu_dataRowDeleted(this, new stu_dataRowChangeEvent(((stu_dataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[32m +                base.OnRowDeleting(e);[m
[32m +                if ((this.stu_dataRowDeleting != null)) {[m
[32m +                    this.stu_dataRowDeleting(this, new stu_dataRowChangeEvent(((stu_dataRow)(e.Row)), e.Action));[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public void Removestu_dataRow(stu_dataRow row) {[m
[32m +                this.Rows.Remove(row);[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m +                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m +                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m +                loginformDataSet7 ds = new loginformDataSet7();[m
[32m +                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[32m +                any1.MinOccurs = new decimal(0);[m
[32m +                any1.MaxOccurs = decimal.MaxValue;[m
[32m +                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m +                sequence.Items.Add(any1);[m
[32m +                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m +                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[32m +                any2.MinOccurs = new decimal(1);[m
[32m +                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m +                sequence.Items.Add(any2);[m
[32m +                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m +                attribute1.Name = "namespace";[m
[32m +                attribute1.FixedValue = ds.Namespace;[m
[32m +                type.Attributes.Add(attribute1);[m
[32m +                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m +                attribute2.Name = "tableTypeName";[m
[32m +                attribute2.FixedValue = "stu_dataDataTable";[m
[32m +                type.Attributes.Add(attribute2);[m
[32m +                type.Particle = sequence;[m
[32m +                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m +                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m +                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m +                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m +                    try {[m
[32m +                        global::System.Xml.Schema.XmlSchema schema = null;[m
[32m +                        dsSchema.Write(s1);[m
[32m +                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m +                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m +                            s2.SetLength(0);[m
[32m +                            schema.Write(s2);[m
[32m +                            if ((s1.Length == s2.Length)) {[m
[32m +                                s1.Position = 0;[m
[32m +                                s2.Position = 0;[m
[32m +                                for (; ((s1.Position != s1.Length) [m
[32m +                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m +                                    ;[m
[32m +                                }[m
[32m +                                if ((s1.Position == s1.Length)) {[m
[32m +                                    return type;[m
[32m +                                }[m
[32m +                            }[m
[32m +                        }[m
[32m +                    }[m
[32m +                    finally {[m
[32m +                        if ((s1 != null)) {[m
[32m +                            s1.Close();[m
[32m +                        }[m
[32m +                        if ((s2 != null)) {[m
[32m +                            s2.Close();[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                xs.Add(dsSchema);[m
[32m +                return type;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Represents strongly named DataRow class.[m
[32m +        ///</summary>[m
[32m +        public partial class stu_dataRow : global::System.Data.DataRow {[m
[32m +            [m
[32m +            private stu_dataDataTable tablestu_data;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal stu_dataRow(global::System.Data.DataRowBuilder rb) : [m
[32m +                    base(rb) {[m
[32m +                this.tablestu_data = ((stu_dataDataTable)(this.Table));[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int id {[m
[32m +                get {[m
[32m +                    return ((int)(this[this.tablestu_data.idColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tablestu_data.idColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Name {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tablestu_data.NameColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tablestu_data.NameColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Department {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tablestu_data.DepartmentColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tablestu_data.DepartmentColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string Purpose {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tablestu_data.PurposeColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tablestu_data.PurposeColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int QueueNumber {[m
[32m +                get {[m
[32m +                    return ((int)(this[this.tablestu_data.QueueNumberColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tablestu_data.QueueNumberColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public System.DateTime QueueDate {[m
[32m +                get {[m
[32m +                    return ((global::System.DateTime)(this[this.tablestu_data.QueueDateColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tablestu_data.QueueDateColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public string QueueCode {[m
[32m +                get {[m
[32m +                    return ((string)(this[this.tablestu_data.QueueCodeColumn]));[m
[32m +                }[m
[32m +                set {[m
[32m +                    this[this.tablestu_data.QueueCodeColumn] = value;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Row event argument class[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public class stu_dataRowChangeEvent : global::System.EventArgs {[m
[32m +            [m
[32m +            private stu_dataRow eventRow;[m
[32m +            [m
[32m +            private global::System.Data.DataRowAction eventAction;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public stu_dataRowChangeEvent(stu_dataRow row, global::System.Data.DataRowAction action) {[m
[32m +                this.eventRow = row;[m
[32m +                this.eventAction = action;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public stu_dataRow Row {[m
[32m +                get {[m
[32m +                    return this.eventRow;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public global::System.Data.DataRowAction Action {[m
[32m +                get {[m
[32m +                    return this.eventAction;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +namespace capstoneproject.loginformDataSet7TableAdapters {[m
[32m +    [m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///Represents the connection and commands used to retrieve and save data.[m
[32m +    ///</summary>[m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.ComponentModel.DataObjectAttribute(true)][m
[32m +    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[32m +        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +    public partial class stu_dataTableAdapter : global::System.ComponentModel.Component {[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlConnection _connection;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[32m +        [m
[32m +        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[32m +        [m
[32m +        private bool _clearBeforeFill;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public stu_dataTableAdapter() {[m
[32m +            this.ClearBeforeFill = true;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[32m +            get {[m
[32m +                if ((this._adapter == null)) {[m
[32m +                    this.InitAdapter();[m
[32m +                }[m
[32m +                return this._adapter;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[32m +            get {[m
[32m +                if ((this._connection == null)) {[m
[32m +                    this.InitConnection();[m
[32m +                }[m
[32m +                return this._connection;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._connection = value;[m
[32m +                if ((this.Adapter.InsertCommand != null)) {[m
[32m +                    this.Adapter.InsertCommand.Connection = value;[m
[32m +                }[m
[32m +                if ((this.Adapter.DeleteCommand != null)) {[m
[32m +                    this.Adapter.DeleteCommand.Connection = value;[m
[32m +                }[m
[32m +                if ((this.Adapter.UpdateCommand != null)) {[m
[32m +                    this.Adapter.UpdateCommand.Connection = value;[m
[32m +                }[m
[32m +                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m +                    if ((this.CommandCollection[i] != null)) {[m
[32m +                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[32m +            get {[m
[32m +                return this._transaction;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._transaction = value;[m
[32m +                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m +                    this.CommandCollection[i].Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.DeleteCommand != null))) {[m
[32m +                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.InsertCommand != null))) {[m
[32m +                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +                if (((this.Adapter != null) [m
[32m +                            && (this.Adapter.UpdateCommand != null))) {[m
[32m +                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[32m +            get {[m
[32m +                if ((this._commandCollection == null)) {[m
[32m +                    this.InitCommandCollection();[m
[32m +                }[m
[32m +                return this._commandCollection;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public bool ClearBeforeFill {[m
[32m +            get {[m
[32m +                return this._clearBeforeFill;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._clearBeforeFill = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitAdapter() {[m
[32m +            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[32m +            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[32m +            tableMapping.SourceTable = "Table";[m
[32m +            tableMapping.DataSetTable = "stu_data";[m
[32m +            tableMapping.ColumnMappings.Add("id", "id");[m
[32m +            tableMapping.ColumnMappings.Add("Name", "Name");[m
[32m +            tableMapping.ColumnMappings.Add("Department", "Department");[m
[32m +            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[32m +            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[32m +            tableMapping.ColumnMappings.Add("QueueDate", "QueueDate");[m
[32m +            tableMapping.ColumnMappings.Add("QueueCode", "QueueCode");[m
[32m +            this._adapter.TableMappings.Add(tableMapping);[m
[32m +            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._adapter.InsertCommand.Connection = this.Connection;[m
[32m +            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[stu_data] ([Name], [Department], [Purpose], [QueueNumber], [Qu" +[m
[32m +                "eueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @Queu" +[m
[32m +                "eDate, @QueueCode)";[m
[32m +            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitConnection() {[m
[32m +            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[32m +            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private void InitCommandCollection() {[m
[32m +            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[32m +            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[32m +            this._commandCollection[0].Connection = this.Connection;[m
[32m +            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM dbo." +[m
[32m +                "stu_data";[m
[32m +            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[32m +        public virtual int Fill(loginformDataSet7.stu_dataDataTable dataTable) {[m
[32m +            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m +            if ((this.ClearBeforeFill == true)) {[m
[32m +                dataTable.Clear();[m
[32m +            }[m
[32m +            int returnValue = this.Adapter.Fill(dataTable);[m
[32m +            return returnValue;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[32m +        public virtual loginformDataSet7.stu_dataDataTable GetData() {[m
[32m +            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m +            loginformDataSet7.stu_dataDataTable dataTable = new loginformDataSet7.stu_dataDataTable();[m
[32m +            this.Adapter.Fill(dataTable);[m
[32m +            return dataTable;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(loginformDataSet7.stu_dataDataTable dataTable) {[m
[32m +            return this.Adapter.Update(dataTable);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(loginformDataSet7 dataSet) {[m
[32m +            return this.Adapter.Update(dataSet, "stu_data");[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[32m +            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[32m +                        dataRow});[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[32m +            return this.Adapter.Update(dataRows);[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m +        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[32m +        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode) {[m
[32m +            if ((Name == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Name");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[32m +            }[m
[32m +            if ((Department == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Department");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[32m +            }[m
[32m +            if ((Purpose == null)) {[m
[32m +                throw new global::System.ArgumentNullException("Purpose");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m +            }[m
[32m +            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m +            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(QueueDate));[m
[32m +            if ((QueueCode == null)) {[m
[32m +                throw new global::System.ArgumentNullException("QueueCode");[m
[32m +            }[m
[32m +            else {[m
[32m +                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(QueueCode));[m
[32m +            }[m
[32m +            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[32m +            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m +                        != global::System.Data.ConnectionState.Open)) {[m
[32m +                this.Adapter.InsertCommand.Connection.Open();[m
[32m +            }[m
[32m +            try {[m
[32m +                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[32m +                return returnValue;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m +                    this.Adapter.InsertCommand.Connection.Close();[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +    [m
[32m +    /// <summary>[m
[32m +    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[32m +    ///</summary>[m
[32m +    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m +    [global::System.ComponentModel.ToolboxItem(true)][m
[32m +    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[32m +        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m +    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[32m +    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[32m +        [m
[32m +        private UpdateOrderOption _updateOrder;[m
[32m +        [m
[32m +        private stu_dataTableAdapter _stu_dataTableAdapter;[m
[32m +        [m
[32m +        private bool _backupDataSetBeforeUpdate;[m
[32m +        [m
[32m +        private global::System.Data.IDbConnection _connection;[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public UpdateOrderOption UpdateOrder {[m
[32m +            get {[m
[32m +                return this._updateOrder;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._updateOrder = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[32m +            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[32m +            "a", "System.Drawing.Design.UITypeEditor")][m
[32m +        public stu_dataTableAdapter stu_dataTableAdapter {[m
[32m +            get {[m
[32m +                return this._stu_dataTableAdapter;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._stu_dataTableAdapter = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public bool BackupDataSetBeforeUpdate {[m
[32m +            get {[m
[32m +                return this._backupDataSetBeforeUpdate;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._backupDataSetBeforeUpdate = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        public global::System.Data.IDbConnection Connection {[m
[32m +            get {[m
[32m +                if ((this._connection != null)) {[m
[32m +                    return this._connection;[m
[32m +                }[m
[32m +                if (((this._stu_dataTableAdapter != null) [m
[32m +                            && (this._stu_dataTableAdapter.Connection != null))) {[m
[32m +                    return this._stu_dataTableAdapter.Connection;[m
[32m +                }[m
[32m +                return null;[m
[32m +            }[m
[32m +            set {[m
[32m +                this._connection = value;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        [global::System.ComponentModel.Browsable(false)][m
[32m +        public int TableAdapterInstanceCount {[m
[32m +            get {[m
[32m +                int count = 0;[m
[32m +                if ((this._stu_dataTableAdapter != null)) {[m
[32m +                    count = (count + 1);[m
[32m +                }[m
[32m +                return count;[m
[32m +            }[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update rows in top-down order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateUpdatedRows(loginformDataSet7 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._stu_dataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] updatedRows = dataSet.stu_data.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[32m +                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[32m +                if (((updatedRows != null) [m
[32m +                            && (0 < updatedRows.Length))) {[m
[32m +                    result = (result + this._stu_dataTableAdapter.Update(updatedRows));[m
[32m +                    allChangedRows.AddRange(updatedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Insert rows in top-down order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateInsertedRows(loginformDataSet7 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._stu_dataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] addedRows = dataSet.stu_data.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[32m +                if (((addedRows != null) [m
[32m +                            && (0 < addedRows.Length))) {[m
[32m +                    result = (result + this._stu_dataTableAdapter.Update(addedRows));[m
[32m +                    allAddedRows.AddRange(addedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Delete rows in bottom-up order.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private int UpdateDeletedRows(loginformDataSet7 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[32m +            int result = 0;[m
[32m +            if ((this._stu_dataTableAdapter != null)) {[m
[32m +                global::System.Data.DataRow[] deletedRows = dataSet.stu_data.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[32m +                if (((deletedRows != null) [m
[32m +                            && (0 < deletedRows.Length))) {[m
[32m +                    result = (result + this._stu_dataTableAdapter.Update(deletedRows));[m
[32m +                    allChangedRows.AddRange(deletedRows);[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m +            if (((updatedRows == null) [m
[32m +                        || (updatedRows.Length < 1))) {[m
[32m +                return updatedRows;[m
[32m +            }[m
[32m +            if (((allAddedRows == null) [m
[32m +                        || (allAddedRows.Count < 1))) {[m
[32m +                return updatedRows;[m
[32m +            }[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[32m +                global::System.Data.DataRow row = updatedRows[i];[m
[32m +                if ((allAddedRows.Contains(row) == false)) {[m
[32m +                    realUpdatedRows.Add(row);[m
[32m +                }[m
[32m +            }[m
[32m +            return realUpdatedRows.ToArray();[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update all changes to the dataset.[m
[32m +        ///</summary>[m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public virtual int UpdateAll(loginformDataSet7 dataSet) {[m
[32m +            if ((dataSet == null)) {[m
[32m +                throw new global::System.ArgumentNullException("dataSet");[m
[32m +            }[m
[32m +            if ((dataSet.HasChanges() == false)) {[m
[32m +                return 0;[m
[32m +            }[m
[32m +            if (((this._stu_dataTableAdapter != null) [m
[32m +                        && (this.MatchTableAdapterConnection(this._stu_dataTableAdapter.Connection) == false))) {[m
[32m +                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[32m +                        "tring.");[m
[32m +            }[m
[32m +            global::System.Data.IDbConnection workConnection = this.Connection;[m
[32m +            if ((workConnection == null)) {[m
[32m +                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[32m +                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[32m +            }[m
[32m +            bool workConnOpened = false;[m
[32m +            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[32m +                        == global::System.Data.ConnectionState.Broken)) {[m
[32m +                workConnection.Close();[m
[32m +            }[m
[32m +            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[32m +                workConnection.Open();[m
[32m +                workConnOpened = true;[m
[32m +            }[m
[32m +            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[32m +            if ((workTransaction == null)) {[m
[32m +                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[32m +                        "ctions or the current state is not allowing the transaction to begin.");[m
[32m +            }[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m +            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[32m +            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[32m +            int result = 0;[m
[32m +            global::System.Data.DataSet backupDataSet = null;[m
[32m +            if (this.BackupDataSetBeforeUpdate) {[m
[32m +                backupDataSet = new global::System.Data.DataSet();[m
[32m +                backupDataSet.Merge(dataSet);[m
[32m +            }[m
[32m +            try {[m
[32m +                // ---- Prepare for update -----------[m
[32m +                //[m
[32m +                if ((this._stu_dataTableAdapter != null)) {[m
[32m +                    revertConnections.Add(this._stu_dataTableAdapter, this._stu_dataTableAdapter.Connection);[m
[32m +                    this._stu_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[32m +                    this._stu_dataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[32m +                    if (this._stu_dataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[32m +                        this._stu_dataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[32m +                        adaptersWithAcceptChangesDuringUpdate.Add(this._stu_dataTableAdapter.Adapter);[m
[32m +                    }[m
[32m +                }[m
[32m +                // [m
[32m +                //---- Perform updates -----------[m
[32m +                //[m
[32m +                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[32m +                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m +                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m +                }[m
[32m +                else {[m
[32m +                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m +                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m +                }[m
[32m +                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[32m +                // [m
[32m +                //---- Commit updates -----------[m
[32m +                //[m
[32m +                workTransaction.Commit();[m
[32m +                if ((0 < allAddedRows.Count)) {[m
[32m +                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m +                    allAddedRows.CopyTo(rows);[m
[32m +                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.DataRow row = rows[i];[m
[32m +                        row.AcceptChanges();[m
[32m +                    }[m
[32m +                }[m
[32m +                if ((0 < allChangedRows.Count)) {[m
[32m +                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[32m +                    allChangedRows.CopyTo(rows);[m
[32m +                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.DataRow row = rows[i];[m
[32m +                        row.AcceptChanges();[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            catch (global::System.Exception ex) {[m
[32m +                workTransaction.Rollback();[m
[32m +                // ---- Restore the dataset -----------[m
[32m +                if (this.BackupDataSetBeforeUpdate) {[m
[32m +                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[32m +                    dataSet.Clear();[m
[32m +                    dataSet.Merge(backupDataSet);[m
[32m +                }[m
[32m +                else {[m
[32m +                    if ((0 < allAddedRows.Count)) {[m
[32m +                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m +                        allAddedRows.CopyTo(rows);[m
[32m +                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m +                            global::System.Data.DataRow row = rows[i];[m
[32m +                            row.AcceptChanges();[m
[32m +                            row.SetAdded();[m
[32m +                        }[m
[32m +                    }[m
[32m +                }[m
[32m +                throw ex;[m
[32m +            }[m
[32m +            finally {[m
[32m +                if (workConnOpened) {[m
[32m +                    workConnection.Close();[m
[32m +                }[m
[32m +                if ((this._stu_dataTableAdapter != null)) {[m
[32m +                    this._stu_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._stu_dataTableAdapter]));[m
[32m +                    this._stu_dataTableAdapter.Transaction = null;[m
[32m +                }[m
[32m +                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[32m +                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[32m +                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[32m +                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[32m +                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[32m +                        adapter.AcceptChangesDuringUpdate = true;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +            return result;[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[32m +            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[32m +        }[m
[32m +        [m
[32m +        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[32m +            if ((this._connection != null)) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            if (((this.Connection == null) [m
[32m +                        || (inputConnection == null))) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[32m +                return true;[m
[32m +            }[m
[32m +            return false;[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Update Order Option[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        public enum UpdateOrderOption {[m
[32m +            [m
[32m +            InsertUpdateDelete = 0,[m
[32m +            [m
[32m +            UpdateInsertDelete = 1,[m
[32m +        }[m
[32m +        [m
[32m +        /// <summary>[m
[32m +        ///Used to sort self-referenced table's rows[m
[32m +        ///</summary>[m
[32m +        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[32m +            [m
[32m +            private global::System.Data.DataRelation _relation;[m
[32m +            [m
[32m +            private int _childFirst;[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[32m +                this._relation = relation;[m
[32m +                if (childFirst) {[m
[32m +                    this._childFirst = -1;[m
[32m +                }[m
[32m +                else {[m
[32m +                    this._childFirst = 1;[m
[32m +                }[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[32m +                global::System.Diagnostics.Debug.Assert((row != null));[m
[32m +                global::System.Data.DataRow root = row;[m
[32m +                distance = 0;[m
[32m +[m
[32m +                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[32m +                traversedRows[row] = row;[m
[32m +[m
[32m +                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m +                for ([m
[32m +                ; ((parent != null) [m
[32m +                            && (traversedRows.ContainsKey(parent) == false)); [m
[32m +                ) {[m
[32m +                    distance = (distance + 1);[m
[32m +                    root = parent;[m
[32m +                    traversedRows[parent] = parent;[m
[32m +                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m +                }[m
[32m +[m
[32m +                if ((distance == 0)) {[m
[32m +                    traversedRows.Clear();[m
[32m +                    traversedRows[row] = row;[m
[32m +                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m +                    for ([m
[32m +                    ; ((parent != null) [m
[32m +                                && (traversedRows.ContainsKey(parent) == false)); [m
[32m +                    ) {[m
[32m +                        distance = (distance + 1);[m
[32m +                        root = parent;[m
[32m +                        traversedRows[parent] = parent;[m
[32m +                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m +                    }[m
[32m +                }[m
[32m +[m
[32m +                return root;[m
[32m +            }[m
[32m +            [m
[32m +            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m +            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m +            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[32m +                if (object.ReferenceEquals(row1, row2)) {[m
[32m +                    return 0;[m
[32m +                }[m
[32m +                if ((row1 == null)) {[m
[32m +                    return -1;[m
[32m +                }[m
[32m +                if ((row2 == null)) {[m
[32m +                    return 1;[m
[32m +                }[m
[32m +[m
[32m +                int distance1 = 0;[m
[32m +                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[32m +[m
[32m +                int distance2 = 0;[m
[32m +                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[32m +[m
[32m +                if (object.ReferenceEquals(root1, root2)) {[m
[32m +                    return (this._childFirst * distance1.CompareTo(distance2));[m
[32m +                }[m
[32m +                else {[m
[32m +                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[32m +                                    && (root2.Table != null)));[m
[32m +                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[32m +                        return -1;[m
[32m +                    }[m
[32m +                    else {[m
[32m +                        return 1;[m
[32m +                    }[m
[32m +                }[m
[32m +            }[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +[m
[32m++=======[m
[32m++ï»¿//------------------------------------------------------------------------------[m
[32m++// <auto-generated>[m
[32m++//     This code was generated by a tool.[m
[32m++//     Runtime Version:4.0.30319.42000[m
[32m++//[m
[32m++//     Changes to this file may cause incorrect behavior and will be lost if[m
[32m++//     the code is regenerated.[m
[32m++// </auto-generated>[m
[32m++//------------------------------------------------------------------------------[m
[32m++[m
[32m++#pragma warning disable 1591[m
[32m++[m
[32m++namespace capstoneproject {[m
[32m++    [m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///Represents a strongly typed in-memory cache of data.[m
[32m++    ///</summary>[m
[32m++    [global::System.Serializable()][m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")][m
[32m++    [global::System.Xml.Serialization.XmlRootAttribute("loginformDataSet7")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")][m
[32m++    public partial class loginformDataSet7 : global::System.Data.DataSet {[m
[32m++        [m
[32m++        private stu_dataDataTable tablestu_data;[m
[32m++        [m
[32m++        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public loginformDataSet7() {[m
[32m++            this.BeginInit();[m
[32m++            this.InitClass();[m
[32m++            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m++            base.Relations.CollectionChanged += schemaChangedHandler;[m
[32m++            this.EndInit();[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected loginformDataSet7(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m++                base(info, context, false) {[m
[32m++            if ((this.IsBinarySerialized(info, context) == true)) {[m
[32m++                this.InitVars(false);[m
[32m++                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++                this.Tables.CollectionChanged += schemaChangedHandler1;[m
[32m++                this.Relations.CollectionChanged += schemaChangedHandler1;[m
[32m++                return;[m
[32m++            }[m
[32m++            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));[m
[32m++            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m++                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m++                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m++                if ((ds.Tables["stu_data"] != null)) {[m
[32m++                    base.Tables.Add(new stu_dataDataTable(ds.Tables["stu_data"]));[m
[32m++                }[m
[32m++                this.DataSetName = ds.DataSetName;[m
[32m++                this.Prefix = ds.Prefix;[m
[32m++                this.Namespace = ds.Namespace;[m
[32m++                this.Locale = ds.Locale;[m
[32m++                this.CaseSensitive = ds.CaseSensitive;[m
[32m++                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m++                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            else {[m
[32m++                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));[m
[32m++            }[m
[32m++            this.GetSerializationData(info, context);[m
[32m++            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);[m
[32m++            base.Tables.CollectionChanged += schemaChangedHandler;[m
[32m++            this.Relations.CollectionChanged += schemaChangedHandler;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)][m
[32m++        public stu_dataDataTable stu_data {[m
[32m++            get {[m
[32m++                return this.tablestu_data;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.BrowsableAttribute(true)][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)][m
[32m++        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {[m
[32m++            get {[m
[32m++                return this._schemaSerializationMode;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._schemaSerializationMode = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m++        public new global::System.Data.DataTableCollection Tables {[m
[32m++            get {[m
[32m++                return base.Tables;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)][m
[32m++        public new global::System.Data.DataRelationCollection Relations {[m
[32m++            get {[m
[32m++                return base.Relations;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override void InitializeDerivedDataSet() {[m
[32m++            this.BeginInit();[m
[32m++            this.InitClass();[m
[32m++            this.EndInit();[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public override global::System.Data.DataSet Clone() {[m
[32m++            loginformDataSet7 cln = ((loginformDataSet7)(base.Clone()));[m
[32m++            cln.InitVars();[m
[32m++            cln.SchemaSerializationMode = this.SchemaSerializationMode;[m
[32m++            return cln;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override bool ShouldSerializeTables() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override bool ShouldSerializeRelations() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {[m
[32m++            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {[m
[32m++                this.Reset();[m
[32m++                global::System.Data.DataSet ds = new global::System.Data.DataSet();[m
[32m++                ds.ReadXml(reader);[m
[32m++                if ((ds.Tables["stu_data"] != null)) {[m
[32m++                    base.Tables.Add(new stu_dataDataTable(ds.Tables["stu_data"]));[m
[32m++                }[m
[32m++                this.DataSetName = ds.DataSetName;[m
[32m++                this.Prefix = ds.Prefix;[m
[32m++                this.Namespace = ds.Namespace;[m
[32m++                this.Locale = ds.Locale;[m
[32m++                this.CaseSensitive = ds.CaseSensitive;[m
[32m++                this.EnforceConstraints = ds.EnforceConstraints;[m
[32m++                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            else {[m
[32m++                this.ReadXml(reader);[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {[m
[32m++            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();[m
[32m++            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));[m
[32m++            stream.Position = 0;[m
[32m++            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal void InitVars() {[m
[32m++            this.InitVars(true);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal void InitVars(bool initTable) {[m
[32m++            this.tablestu_data = ((stu_dataDataTable)(base.Tables["stu_data"]));[m
[32m++            if ((initTable == true)) {[m
[32m++                if ((this.tablestu_data != null)) {[m
[32m++                    this.tablestu_data.InitVars();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitClass() {[m
[32m++            this.DataSetName = "loginformDataSet7";[m
[32m++            this.Prefix = "";[m
[32m++            this.Namespace = "http://tempuri.org/loginformDataSet7.xsd";[m
[32m++            this.EnforceConstraints = true;[m
[32m++            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;[m
[32m++            this.tablestu_data = new stu_dataDataTable();[m
[32m++            base.Tables.Add(this.tablestu_data);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private bool ShouldSerializestu_data() {[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {[m
[32m++            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m++            loginformDataSet7 ds = new loginformDataSet7();[m
[32m++            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m++            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m++            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++            any.Namespace = ds.Namespace;[m
[32m++            sequence.Items.Add(any);[m
[32m++            type.Particle = sequence;[m
[32m++            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m++            if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m++                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m++                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m++                try {[m
[32m++                    global::System.Xml.Schema.XmlSchema schema = null;[m
[32m++                    dsSchema.Write(s1);[m
[32m++                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m++                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m++                        s2.SetLength(0);[m
[32m++                        schema.Write(s2);[m
[32m++                        if ((s1.Length == s2.Length)) {[m
[32m++                            s1.Position = 0;[m
[32m++                            s2.Position = 0;[m
[32m++                            for (; ((s1.Position != s1.Length) [m
[32m++                                        && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m++                                ;[m
[32m++                            }[m
[32m++                            if ((s1.Position == s1.Length)) {[m
[32m++                                return type;[m
[32m++                            }[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                finally {[m
[32m++                    if ((s1 != null)) {[m
[32m++                        s1.Close();[m
[32m++                    }[m
[32m++                    if ((s2 != null)) {[m
[32m++                        s2.Close();[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            xs.Add(dsSchema);[m
[32m++            return type;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public delegate void stu_dataRowChangeEventHandler(object sender, stu_dataRowChangeEvent e);[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Represents the strongly named DataTable class.[m
[32m++        ///</summary>[m
[32m++        [global::System.Serializable()][m
[32m++        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")][m
[32m++        public partial class stu_dataDataTable : global::System.Data.TypedTableBase<stu_dataRow> {[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnid;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnName;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnDepartment;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnPurpose;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnQueueNumber;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnQueueDate;[m
[32m++            [m
[32m++            private global::System.Data.DataColumn columnQueueCode;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public stu_dataDataTable() {[m
[32m++                this.TableName = "stu_data";[m
[32m++                this.BeginInit();[m
[32m++                this.InitClass();[m
[32m++                this.EndInit();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal stu_dataDataTable(global::System.Data.DataTable table) {[m
[32m++                this.TableName = table.TableName;[m
[32m++                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {[m
[32m++                    this.CaseSensitive = table.CaseSensitive;[m
[32m++                }[m
[32m++                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {[m
[32m++                    this.Locale = table.Locale;[m
[32m++                }[m
[32m++                if ((table.Namespace != table.DataSet.Namespace)) {[m
[32m++                    this.Namespace = table.Namespace;[m
[32m++                }[m
[32m++                this.Prefix = table.Prefix;[m
[32m++                this.MinimumCapacity = table.MinimumCapacity;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected stu_dataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : [m
[32m++                    base(info, context) {[m
[32m++                this.InitVars();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn idColumn {[m
[32m++                get {[m
[32m++                    return this.columnid;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn NameColumn {[m
[32m++                get {[m
[32m++                    return this.columnName;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn DepartmentColumn {[m
[32m++                get {[m
[32m++                    return this.columnDepartment;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn PurposeColumn {[m
[32m++                get {[m
[32m++                    return this.columnPurpose;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn QueueNumberColumn {[m
[32m++                get {[m
[32m++                    return this.columnQueueNumber;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn QueueDateColumn {[m
[32m++                get {[m
[32m++                    return this.columnQueueDate;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataColumn QueueCodeColumn {[m
[32m++                get {[m
[32m++                    return this.columnQueueCode;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            [global::System.ComponentModel.Browsable(false)][m
[32m++            public int Count {[m
[32m++                get {[m
[32m++                    return this.Rows.Count;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public stu_dataRow this[int index] {[m
[32m++                get {[m
[32m++                    return ((stu_dataRow)(this.Rows[index]));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event stu_dataRowChangeEventHandler stu_dataRowChanging;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event stu_dataRowChangeEventHandler stu_dataRowChanged;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event stu_dataRowChangeEventHandler stu_dataRowDeleting;[m
[32m++            [m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public event stu_dataRowChangeEventHandler stu_dataRowDeleted;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void Addstu_dataRow(stu_dataRow row) {[m
[32m++                this.Rows.Add(row);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public stu_dataRow Addstu_dataRow(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode) {[m
[32m++                stu_dataRow rowstu_dataRow = ((stu_dataRow)(this.NewRow()));[m
[32m++                object[] columnValuesArray = new object[] {[m
[32m++                        null,[m
[32m++                        Name,[m
[32m++                        Department,[m
[32m++                        Purpose,[m
[32m++                        QueueNumber,[m
[32m++                        QueueDate,[m
[32m++                        QueueCode};[m
[32m++                rowstu_dataRow.ItemArray = columnValuesArray;[m
[32m++                this.Rows.Add(rowstu_dataRow);[m
[32m++                return rowstu_dataRow;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public override global::System.Data.DataTable Clone() {[m
[32m++                stu_dataDataTable cln = ((stu_dataDataTable)(base.Clone()));[m
[32m++                cln.InitVars();[m
[32m++                return cln;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Data.DataTable CreateInstance() {[m
[32m++                return new stu_dataDataTable();[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal void InitVars() {[m
[32m++                this.columnid = base.Columns["id"];[m
[32m++                this.columnName = base.Columns["Name"];[m
[32m++                this.columnDepartment = base.Columns["Department"];[m
[32m++                this.columnPurpose = base.Columns["Purpose"];[m
[32m++                this.columnQueueNumber = base.Columns["QueueNumber"];[m
[32m++                this.columnQueueDate = base.Columns["QueueDate"];[m
[32m++                this.columnQueueCode = base.Columns["QueueCode"];[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            private void InitClass() {[m
[32m++                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnid);[m
[32m++                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnName);[m
[32m++                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnDepartment);[m
[32m++                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnPurpose);[m
[32m++                this.columnQueueNumber = new global::System.Data.DataColumn("QueueNumber", typeof(int), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnQueueNumber);[m
[32m++                this.columnQueueDate = new global::System.Data.DataColumn("QueueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnQueueDate);[m
[32m++                this.columnQueueCode = new global::System.Data.DataColumn("QueueCode", typeof(string), null, global::System.Data.MappingType.Element);[m
[32m++                base.Columns.Add(this.columnQueueCode);[m
[32m++                this.columnid.AutoIncrement = true;[m
[32m++                this.columnid.AutoIncrementSeed = -1;[m
[32m++                this.columnid.AutoIncrementStep = -1;[m
[32m++                this.columnid.AllowDBNull = false;[m
[32m++                this.columnid.ReadOnly = true;[m
[32m++                this.columnName.AllowDBNull = false;[m
[32m++                this.columnName.MaxLength = 50;[m
[32m++                this.columnDepartment.AllowDBNull = false;[m
[32m++                this.columnDepartment.MaxLength = 50;[m
[32m++                this.columnPurpose.AllowDBNull = false;[m
[32m++                this.columnPurpose.MaxLength = 2147483647;[m
[32m++                this.columnQueueNumber.AllowDBNull = false;[m
[32m++                this.columnQueueDate.AllowDBNull = false;[m
[32m++                this.columnQueueCode.AllowDBNull = false;[m
[32m++                this.columnQueueCode.MaxLength = 50;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public stu_dataRow Newstu_dataRow() {[m
[32m++                return ((stu_dataRow)(this.NewRow()));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {[m
[32m++                return new stu_dataRow(builder);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override global::System.Type GetRowType() {[m
[32m++                return typeof(stu_dataRow);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowChanged(e);[m
[32m++                if ((this.stu_dataRowChanged != null)) {[m
[32m++                    this.stu_dataRowChanged(this, new stu_dataRowChangeEvent(((stu_dataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowChanging(e);[m
[32m++                if ((this.stu_dataRowChanging != null)) {[m
[32m++                    this.stu_dataRowChanging(this, new stu_dataRowChangeEvent(((stu_dataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowDeleted(e);[m
[32m++                if ((this.stu_dataRowDeleted != null)) {[m
[32m++                    this.stu_dataRowDeleted(this, new stu_dataRowChangeEvent(((stu_dataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {[m
[32m++                base.OnRowDeleting(e);[m
[32m++                if ((this.stu_dataRowDeleting != null)) {[m
[32m++                    this.stu_dataRowDeleting(this, new stu_dataRowChangeEvent(((stu_dataRow)(e.Row)), e.Action));[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public void Removestu_dataRow(stu_dataRow row) {[m
[32m++                this.Rows.Remove(row);[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {[m
[32m++                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();[m
[32m++                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();[m
[32m++                loginformDataSet7 ds = new loginformDataSet7();[m
[32m++                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++                any1.Namespace = "http://www.w3.org/2001/XMLSchema";[m
[32m++                any1.MinOccurs = new decimal(0);[m
[32m++                any1.MaxOccurs = decimal.MaxValue;[m
[32m++                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m++                sequence.Items.Add(any1);[m
[32m++                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();[m
[32m++                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";[m
[32m++                any2.MinOccurs = new decimal(1);[m
[32m++                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;[m
[32m++                sequence.Items.Add(any2);[m
[32m++                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m++                attribute1.Name = "namespace";[m
[32m++                attribute1.FixedValue = ds.Namespace;[m
[32m++                type.Attributes.Add(attribute1);[m
[32m++                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();[m
[32m++                attribute2.Name = "tableTypeName";[m
[32m++                attribute2.FixedValue = "stu_dataDataTable";[m
[32m++                type.Attributes.Add(attribute2);[m
[32m++                type.Particle = sequence;[m
[32m++                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();[m
[32m++                if (xs.Contains(dsSchema.TargetNamespace)) {[m
[32m++                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();[m
[32m++                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();[m
[32m++                    try {[m
[32m++                        global::System.Xml.Schema.XmlSchema schema = null;[m
[32m++                        dsSchema.Write(s1);[m
[32m++                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {[m
[32m++                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));[m
[32m++                            s2.SetLength(0);[m
[32m++                            schema.Write(s2);[m
[32m++                            if ((s1.Length == s2.Length)) {[m
[32m++                                s1.Position = 0;[m
[32m++                                s2.Position = 0;[m
[32m++                                for (; ((s1.Position != s1.Length) [m
[32m++                                            && (s1.ReadByte() == s2.ReadByte())); ) {[m
[32m++                                    ;[m
[32m++                                }[m
[32m++                                if ((s1.Position == s1.Length)) {[m
[32m++                                    return type;[m
[32m++                                }[m
[32m++                            }[m
[32m++                        }[m
[32m++                    }[m
[32m++                    finally {[m
[32m++                        if ((s1 != null)) {[m
[32m++                            s1.Close();[m
[32m++                        }[m
[32m++                        if ((s2 != null)) {[m
[32m++                            s2.Close();[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                xs.Add(dsSchema);[m
[32m++                return type;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Represents strongly named DataRow class.[m
[32m++        ///</summary>[m
[32m++        public partial class stu_dataRow : global::System.Data.DataRow {[m
[32m++            [m
[32m++            private stu_dataDataTable tablestu_data;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal stu_dataRow(global::System.Data.DataRowBuilder rb) : [m
[32m++                    base(rb) {[m
[32m++                this.tablestu_data = ((stu_dataDataTable)(this.Table));[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int id {[m
[32m++                get {[m
[32m++                    return ((int)(this[this.tablestu_data.idColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tablestu_data.idColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Name {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tablestu_data.NameColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tablestu_data.NameColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Department {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tablestu_data.DepartmentColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tablestu_data.DepartmentColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string Purpose {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tablestu_data.PurposeColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tablestu_data.PurposeColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int QueueNumber {[m
[32m++                get {[m
[32m++                    return ((int)(this[this.tablestu_data.QueueNumberColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tablestu_data.QueueNumberColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public System.DateTime QueueDate {[m
[32m++                get {[m
[32m++                    return ((global::System.DateTime)(this[this.tablestu_data.QueueDateColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tablestu_data.QueueDateColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public string QueueCode {[m
[32m++                get {[m
[32m++                    return ((string)(this[this.tablestu_data.QueueCodeColumn]));[m
[32m++                }[m
[32m++                set {[m
[32m++                    this[this.tablestu_data.QueueCodeColumn] = value;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Row event argument class[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public class stu_dataRowChangeEvent : global::System.EventArgs {[m
[32m++            [m
[32m++            private stu_dataRow eventRow;[m
[32m++            [m
[32m++            private global::System.Data.DataRowAction eventAction;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public stu_dataRowChangeEvent(stu_dataRow row, global::System.Data.DataRowAction action) {[m
[32m++                this.eventRow = row;[m
[32m++                this.eventAction = action;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public stu_dataRow Row {[m
[32m++                get {[m
[32m++                    return this.eventRow;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public global::System.Data.DataRowAction Action {[m
[32m++                get {[m
[32m++                    return this.eventAction;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++}[m
[32m++namespace capstoneproject.loginformDataSet7TableAdapters {[m
[32m++    [m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///Represents the connection and commands used to retrieve and save data.[m
[32m++    ///</summary>[m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.ComponentModel.DataObjectAttribute(true)][m
[32m++    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +[m
[32m++        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++    public partial class stu_dataTableAdapter : global::System.ComponentModel.Component {[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlDataAdapter _adapter;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlConnection _connection;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlTransaction _transaction;[m
[32m++        [m
[32m++        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;[m
[32m++        [m
[32m++        private bool _clearBeforeFill;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public stu_dataTableAdapter() {[m
[32m++            this.ClearBeforeFill = true;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {[m
[32m++            get {[m
[32m++                if ((this._adapter == null)) {[m
[32m++                    this.InitAdapter();[m
[32m++                }[m
[32m++                return this._adapter;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal global::System.Data.SqlClient.SqlConnection Connection {[m
[32m++            get {[m
[32m++                if ((this._connection == null)) {[m
[32m++                    this.InitConnection();[m
[32m++                }[m
[32m++                return this._connection;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._connection = value;[m
[32m++                if ((this.Adapter.InsertCommand != null)) {[m
[32m++                    this.Adapter.InsertCommand.Connection = value;[m
[32m++                }[m
[32m++                if ((this.Adapter.DeleteCommand != null)) {[m
[32m++                    this.Adapter.DeleteCommand.Connection = value;[m
[32m++                }[m
[32m++                if ((this.Adapter.UpdateCommand != null)) {[m
[32m++                    this.Adapter.UpdateCommand.Connection = value;[m
[32m++                }[m
[32m++                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m++                    if ((this.CommandCollection[i] != null)) {[m
[32m++                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        internal global::System.Data.SqlClient.SqlTransaction Transaction {[m
[32m++            get {[m
[32m++                return this._transaction;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._transaction = value;[m
[32m++                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {[m
[32m++                    this.CommandCollection[i].Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.DeleteCommand != null))) {[m
[32m++                    this.Adapter.DeleteCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.InsertCommand != null))) {[m
[32m++                    this.Adapter.InsertCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++                if (((this.Adapter != null) [m
[32m++                            && (this.Adapter.UpdateCommand != null))) {[m
[32m++                    this.Adapter.UpdateCommand.Transaction = this._transaction;[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {[m
[32m++            get {[m
[32m++                if ((this._commandCollection == null)) {[m
[32m++                    this.InitCommandCollection();[m
[32m++                }[m
[32m++                return this._commandCollection;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public bool ClearBeforeFill {[m
[32m++            get {[m
[32m++                return this._clearBeforeFill;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._clearBeforeFill = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitAdapter() {[m
[32m++            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();[m
[32m++            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();[m
[32m++            tableMapping.SourceTable = "Table";[m
[32m++            tableMapping.DataSetTable = "stu_data";[m
[32m++            tableMapping.ColumnMappings.Add("id", "id");[m
[32m++            tableMapping.ColumnMappings.Add("Name", "Name");[m
[32m++            tableMapping.ColumnMappings.Add("Department", "Department");[m
[32m++            tableMapping.ColumnMappings.Add("Purpose", "Purpose");[m
[32m++            tableMapping.ColumnMappings.Add("QueueNumber", "QueueNumber");[m
[32m++            tableMapping.ColumnMappings.Add("QueueDate", "QueueDate");[m
[32m++            tableMapping.ColumnMappings.Add("QueueCode", "QueueCode");[m
[32m++            this._adapter.TableMappings.Add(tableMapping);[m
[32m++            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._adapter.InsertCommand.Connection = this.Connection;[m
[32m++            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[stu_data] ([Name], [Department], [Purpose], [QueueNumber], [Qu" +[m
[32m++                "eueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @Queu" +[m
[32m++                "eDate, @QueueCode)";[m
[32m++            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitConnection() {[m
[32m++            this._connection = new global::System.Data.SqlClient.SqlConnection();[m
[32m++            this._connection.ConnectionString = global::capstoneproject.Properties.Settings.Default.loginformConnectionString;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private void InitCommandCollection() {[m
[32m++            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];[m
[32m++            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();[m
[32m++            this._commandCollection[0].Connection = this.Connection;[m
[32m++            this._commandCollection[0].CommandText = "SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM dbo." +[m
[32m++                "stu_data";[m
[32m++            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)][m
[32m++        public virtual int Fill(loginformDataSet7.stu_dataDataTable dataTable) {[m
[32m++            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m++            if ((this.ClearBeforeFill == true)) {[m
[32m++                dataTable.Clear();[m
[32m++            }[m
[32m++            int returnValue = this.Adapter.Fill(dataTable);[m
[32m++            return returnValue;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)][m
[32m++        public virtual loginformDataSet7.stu_dataDataTable GetData() {[m
[32m++            this.Adapter.SelectCommand = this.CommandCollection[0];[m
[32m++            loginformDataSet7.stu_dataDataTable dataTable = new loginformDataSet7.stu_dataDataTable();[m
[32m++            this.Adapter.Fill(dataTable);[m
[32m++            return dataTable;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(loginformDataSet7.stu_dataDataTable dataTable) {[m
[32m++            return this.Adapter.Update(dataTable);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(loginformDataSet7 dataSet) {[m
[32m++            return this.Adapter.Update(dataSet, "stu_data");[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(global::System.Data.DataRow dataRow) {[m
[32m++            return this.Adapter.Update(new global::System.Data.DataRow[] {[m
[32m++                        dataRow});[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        public virtual int Update(global::System.Data.DataRow[] dataRows) {[m
[32m++            return this.Adapter.Update(dataRows);[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")][m
[32m++        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)][m
[32m++        public virtual int Insert(string Name, string Department, string Purpose, int QueueNumber, System.DateTime QueueDate, string QueueCode) {[m
[32m++            if ((Name == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Name");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));[m
[32m++            }[m
[32m++            if ((Department == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Department");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Department));[m
[32m++            }[m
[32m++            if ((Purpose == null)) {[m
[32m++                throw new global::System.ArgumentNullException("Purpose");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Purpose));[m
[32m++            }[m
[32m++            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QueueNumber));[m
[32m++            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(QueueDate));[m
[32m++            if ((QueueCode == null)) {[m
[32m++                throw new global::System.ArgumentNullException("QueueCode");[m
[32m++            }[m
[32m++            else {[m
[32m++                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(QueueCode));[m
[32m++            }[m
[32m++            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;[m
[32m++            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) [m
[32m++                        != global::System.Data.ConnectionState.Open)) {[m
[32m++                this.Adapter.InsertCommand.Connection.Open();[m
[32m++            }[m
[32m++            try {[m
[32m++                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();[m
[32m++                return returnValue;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {[m
[32m++                    this.Adapter.InsertCommand.Connection.Close();[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++    [m
[32m++    /// <summary>[m
[32m++    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios[m
[32m++    ///</summary>[m
[32m++    [global::System.ComponentModel.DesignerCategoryAttribute("code")][m
[32m++    [global::System.ComponentModel.ToolboxItem(true)][m
[32m++    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +[m
[32m++        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")][m
[32m++    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")][m
[32m++    public partial class TableAdapterManager : global::System.ComponentModel.Component {[m
[32m++        [m
[32m++        private UpdateOrderOption _updateOrder;[m
[32m++        [m
[32m++        private stu_dataTableAdapter _stu_dataTableAdapter;[m
[32m++        [m
[32m++        private bool _backupDataSetBeforeUpdate;[m
[32m++        [m
[32m++        private global::System.Data.IDbConnection _connection;[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public UpdateOrderOption UpdateOrder {[m
[32m++            get {[m
[32m++                return this._updateOrder;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._updateOrder = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +[m
[32m++            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +[m
[32m++            "a", "System.Drawing.Design.UITypeEditor")][m
[32m++        public stu_dataTableAdapter stu_dataTableAdapter {[m
[32m++            get {[m
[32m++                return this._stu_dataTableAdapter;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._stu_dataTableAdapter = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public bool BackupDataSetBeforeUpdate {[m
[32m++            get {[m
[32m++                return this._backupDataSetBeforeUpdate;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._backupDataSetBeforeUpdate = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        public global::System.Data.IDbConnection Connection {[m
[32m++            get {[m
[32m++                if ((this._connection != null)) {[m
[32m++                    return this._connection;[m
[32m++                }[m
[32m++                if (((this._stu_dataTableAdapter != null) [m
[32m++                            && (this._stu_dataTableAdapter.Connection != null))) {[m
[32m++                    return this._stu_dataTableAdapter.Connection;[m
[32m++                }[m
[32m++                return null;[m
[32m++            }[m
[32m++            set {[m
[32m++                this._connection = value;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        [global::System.ComponentModel.Browsable(false)][m
[32m++        public int TableAdapterInstanceCount {[m
[32m++            get {[m
[32m++                int count = 0;[m
[32m++                if ((this._stu_dataTableAdapter != null)) {[m
[32m++                    count = (count + 1);[m
[32m++                }[m
[32m++                return count;[m
[32m++            }[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update rows in top-down order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateUpdatedRows(loginformDataSet7 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._stu_dataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] updatedRows = dataSet.stu_data.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);[m
[32m++                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);[m
[32m++                if (((updatedRows != null) [m
[32m++                            && (0 < updatedRows.Length))) {[m
[32m++                    result = (result + this._stu_dataTableAdapter.Update(updatedRows));[m
[32m++                    allChangedRows.AddRange(updatedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Insert rows in top-down order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateInsertedRows(loginformDataSet7 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._stu_dataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] addedRows = dataSet.stu_data.Select(null, null, global::System.Data.DataViewRowState.Added);[m
[32m++                if (((addedRows != null) [m
[32m++                            && (0 < addedRows.Length))) {[m
[32m++                    result = (result + this._stu_dataTableAdapter.Update(addedRows));[m
[32m++                    allAddedRows.AddRange(addedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Delete rows in bottom-up order.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private int UpdateDeletedRows(loginformDataSet7 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {[m
[32m++            int result = 0;[m
[32m++            if ((this._stu_dataTableAdapter != null)) {[m
[32m++                global::System.Data.DataRow[] deletedRows = dataSet.stu_data.Select(null, null, global::System.Data.DataViewRowState.Deleted);[m
[32m++                if (((deletedRows != null) [m
[32m++                            && (0 < deletedRows.Length))) {[m
[32m++                    result = (result + this._stu_dataTableAdapter.Update(deletedRows));[m
[32m++                    allChangedRows.AddRange(deletedRows);[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {[m
[32m++            if (((updatedRows == null) [m
[32m++                        || (updatedRows.Length < 1))) {[m
[32m++                return updatedRows;[m
[32m++            }[m
[32m++            if (((allAddedRows == null) [m
[32m++                        || (allAddedRows.Count < 1))) {[m
[32m++                return updatedRows;[m
[32m++            }[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {[m
[32m++                global::System.Data.DataRow row = updatedRows[i];[m
[32m++                if ((allAddedRows.Contains(row) == false)) {[m
[32m++                    realUpdatedRows.Add(row);[m
[32m++                }[m
[32m++            }[m
[32m++            return realUpdatedRows.ToArray();[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update all changes to the dataset.[m
[32m++        ///</summary>[m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public virtual int UpdateAll(loginformDataSet7 dataSet) {[m
[32m++            if ((dataSet == null)) {[m
[32m++                throw new global::System.ArgumentNullException("dataSet");[m
[32m++            }[m
[32m++            if ((dataSet.HasChanges() == false)) {[m
[32m++                return 0;[m
[32m++            }[m
[32m++            if (((this._stu_dataTableAdapter != null) [m
[32m++                        && (this.MatchTableAdapterConnection(this._stu_dataTableAdapter.Connection) == false))) {[m
[32m++                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +[m
[32m++                        "tring.");[m
[32m++            }[m
[32m++            global::System.Data.IDbConnection workConnection = this.Connection;[m
[32m++            if ((workConnection == null)) {[m
[32m++                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +[m
[32m++                        "ger TableAdapter property to a valid TableAdapter instance.");[m
[32m++            }[m
[32m++            bool workConnOpened = false;[m
[32m++            if (((workConnection.State & global::System.Data.ConnectionState.Broken) [m
[32m++                        == global::System.Data.ConnectionState.Broken)) {[m
[32m++                workConnection.Close();[m
[32m++            }[m
[32m++            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {[m
[32m++                workConnection.Open();[m
[32m++                workConnOpened = true;[m
[32m++            }[m
[32m++            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();[m
[32m++            if ((workTransaction == null)) {[m
[32m++                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +[m
[32m++                        "ctions or the current state is not allowing the transaction to begin.");[m
[32m++            }[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();[m
[32m++            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();[m
[32m++            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();[m
[32m++            int result = 0;[m
[32m++            global::System.Data.DataSet backupDataSet = null;[m
[32m++            if (this.BackupDataSetBeforeUpdate) {[m
[32m++                backupDataSet = new global::System.Data.DataSet();[m
[32m++                backupDataSet.Merge(dataSet);[m
[32m++            }[m
[32m++            try {[m
[32m++                // ---- Prepare for update -----------[m
[32m++                //[m
[32m++                if ((this._stu_dataTableAdapter != null)) {[m
[32m++                    revertConnections.Add(this._stu_dataTableAdapter, this._stu_dataTableAdapter.Connection);[m
[32m++                    this._stu_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));[m
[32m++                    this._stu_dataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));[m
[32m++                    if (this._stu_dataTableAdapter.Adapter.AcceptChangesDuringUpdate) {[m
[32m++                        this._stu_dataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;[m
[32m++                        adaptersWithAcceptChangesDuringUpdate.Add(this._stu_dataTableAdapter.Adapter);[m
[32m++                    }[m
[32m++                }[m
[32m++                // [m
[32m++                //---- Perform updates -----------[m
[32m++                //[m
[32m++                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {[m
[32m++                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m++                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m++                }[m
[32m++                else {[m
[32m++                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));[m
[32m++                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));[m
[32m++                }[m
[32m++                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));[m
[32m++                // [m
[32m++                //---- Commit updates -----------[m
[32m++                //[m
[32m++                workTransaction.Commit();[m
[32m++                if ((0 < allAddedRows.Count)) {[m
[32m++                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m++                    allAddedRows.CopyTo(rows);[m
[32m++                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.DataRow row = rows[i];[m
[32m++                        row.AcceptChanges();[m
[32m++                    }[m
[32m++                }[m
[32m++                if ((0 < allChangedRows.Count)) {[m
[32m++                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];[m
[32m++                    allChangedRows.CopyTo(rows);[m
[32m++                    for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.DataRow row = rows[i];[m
[32m++                        row.AcceptChanges();[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            catch (global::System.Exception ex) {[m
[32m++                workTransaction.Rollback();[m
[32m++                // ---- Restore the dataset -----------[m
[32m++                if (this.BackupDataSetBeforeUpdate) {[m
[32m++                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));[m
[32m++                    dataSet.Clear();[m
[32m++                    dataSet.Merge(backupDataSet);[m
[32m++                }[m
[32m++                else {[m
[32m++                    if ((0 < allAddedRows.Count)) {[m
[32m++                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];[m
[32m++                        allAddedRows.CopyTo(rows);[m
[32m++                        for (int i = 0; (i < rows.Length); i = (i + 1)) {[m
[32m++                            global::System.Data.DataRow row = rows[i];[m
[32m++                            row.AcceptChanges();[m
[32m++                            row.SetAdded();[m
[32m++                        }[m
[32m++                    }[m
[32m++                }[m
[32m++                throw ex;[m
[32m++            }[m
[32m++            finally {[m
[32m++                if (workConnOpened) {[m
[32m++                    workConnection.Close();[m
[32m++                }[m
[32m++                if ((this._stu_dataTableAdapter != null)) {[m
[32m++                    this._stu_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._stu_dataTableAdapter]));[m
[32m++                    this._stu_dataTableAdapter.Transaction = null;[m
[32m++                }[m
[32m++                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {[m
[32m++                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];[m
[32m++                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);[m
[32m++                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {[m
[32m++                        global::System.Data.Common.DataAdapter adapter = adapters[i];[m
[32m++                        adapter.AcceptChangesDuringUpdate = true;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++            return result;[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {[m
[32m++            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));[m
[32m++        }[m
[32m++        [m
[32m++        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {[m
[32m++            if ((this._connection != null)) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            if (((this.Connection == null) [m
[32m++                        || (inputConnection == null))) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {[m
[32m++                return true;[m
[32m++            }[m
[32m++            return false;[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Update Order Option[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        public enum UpdateOrderOption {[m
[32m++            [m
[32m++            InsertUpdateDelete = 0,[m
[32m++            [m
[32m++            UpdateInsertDelete = 1,[m
[32m++        }[m
[32m++        [m
[32m++        /// <summary>[m
[32m++        ///Used to sort self-referenced table's rows[m
[32m++        ///</summary>[m
[32m++        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {[m
[32m++            [m
[32m++            private global::System.Data.DataRelation _relation;[m
[32m++            [m
[32m++            private int _childFirst;[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {[m
[32m++                this._relation = relation;[m
[32m++                if (childFirst) {[m
[32m++                    this._childFirst = -1;[m
[32m++                }[m
[32m++                else {[m
[32m++                    this._childFirst = 1;[m
[32m++                }[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {[m
[32m++                global::System.Diagnostics.Debug.Assert((row != null));[m
[32m++                global::System.Data.DataRow root = row;[m
[32m++                distance = 0;[m
[32m++[m
[32m++                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();[m
[32m++                traversedRows[row] = row;[m
[32m++[m
[32m++                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m++                for ([m
[32m++                ; ((parent != null) [m
[32m++                            && (traversedRows.ContainsKey(parent) == false)); [m
[32m++                ) {[m
[32m++                    distance = (distance + 1);[m
[32m++                    root = parent;[m
[32m++                    traversedRows[parent] = parent;[m
[32m++                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);[m
[32m++                }[m
[32m++[m
[32m++                if ((distance == 0)) {[m
[32m++                    traversedRows.Clear();[m
[32m++                    traversedRows[row] = row;[m
[32m++                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m++                    for ([m
[32m++                    ; ((parent != null) [m
[32m++                                && (traversedRows.ContainsKey(parent) == false)); [m
[32m++                    ) {[m
[32m++                        distance = (distance + 1);[m
[32m++                        root = parent;[m
[32m++                        traversedRows[parent] = parent;[m
[32m++                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);[m
[32m++                    }[m
[32m++                }[m
[32m++[m
[32m++                return root;[m
[32m++            }[m
[32m++            [m
[32m++            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()][m
[32m++            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")][m
[32m++            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {[m
[32m++                if (object.ReferenceEquals(row1, row2)) {[m
[32m++                    return 0;[m
[32m++                }[m
[32m++                if ((row1 == null)) {[m
[32m++                    return -1;[m
[32m++                }[m
[32m++                if ((row2 == null)) {[m
[32m++                    return 1;[m
[32m++                }[m
[32m++[m
[32m++                int distance1 = 0;[m
[32m++                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);[m
[32m++[m
[32m++                int distance2 = 0;[m
[32m++                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);[m
[32m++[m
[32m++                if (object.ReferenceEquals(root1, root2)) {[m
[32m++                    return (this._childFirst * distance1.CompareTo(distance2));[m
[32m++                }[m
[32m++           warning: in the working copy of 'capstoneproject/loginformDataSet7.xsd', LF will be replaced by CRLF the next time Git touches it
     else {[m
[32m++                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) [m
[32m++                                    && (root2.Table != null)));[m
[32m++                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {[m
[32m++                        return -1;[m
[32m++                    }[m
[32m++                    else {[m
[32m++                        return 1;[m
[32m++                    }[m
[32m++                }[m
[32m++            }[m
[32m++        }[m
[32m++    }[m
[32m++}[m
[32m++[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  #pragma warning restore 1591[m
[1mdiff --cc capstoneproject/loginformDataSet7.xsd[m
[1mindex 32a52e2,415f2f5..0000000[m
[1m--- a/capstoneproject/loginformDataSet7.xsd[m
[1m+++ b/capstoneproject/loginformDataSet7.xsd[m
[36m@@@ -1,93 -1,93 +1,188 @@@[m
[31m -ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[31m -<xs:schema id="loginformDataSet7" targetNamespace="http://tempuri.org/loginformDataSet7.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet7.xsd" xmlns="http://tempuri.org/loginformDataSet7.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[31m -  <xs:annotation>[m
[31m -    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[31m -      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[31m -        <Connections>[m
[31m -          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[31m -        </Connections>[m
[31m -        <Tables>[m
[31m -          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="stu_dataTableAdapter" GeneratorDataComponentClassName="stu_dataTableAdapter" Name="stu_data" UserDataComponentName="stu_dataTableAdapter">[m
[31m -            <MainSource>[m
[31m -              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.stu_data" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[31m -                <InsertCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>INSERT INTO [dbo].[stu_data] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate, @QueueCode)</CommandText>[m
[31m -                    <Parameters>[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[31m -                    </Parameters>[m
[31m -                  </DbCommand>[m
[31m -                </InsertCommand>[m
[31m -                <SelectCommand>[m
[31m -                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[31m -                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM dbo.stu_data</CommandText>[m
[31m -                    <Parameters />[m
[31m -                  </DbCommand>[m
[31m -                </SelectCommand>[m
[31m -              </DbSource>[m
[31m -            </MainSource>[m
[31m -            <Mappings>[m
[31m -              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[31m -              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[31m -              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[31m -              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[31m -              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[31m -              <Mapping SourceColumn="QueueDate" DataSetColumn="QueueDate" />[m
[31m -              <Mapping SourceColumn="QueueCode" DataSetColumn="QueueCode" />[m
[31m -            </Mappings>[m
[31m -            <Sources />[m
[31m -          </TableAdapter>[m
[31m -        </Tables>[m
[31m -        <Sources />[m
[31m -      </DataSource>[m
[31m -    </xs:appinfo>[m
[31m -  </xs:annotation>[m
[31m -  <xs:element name="loginformDataSet7" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet7" msprop:Generator_UserDSName="loginformDataSet7">[m
[31m -    <xs:complexType>[m
[31m -      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[31m -        <xs:element name="stu_data" msprop:Generator_TableClassName="stu_dataDataTable" msprop:Generator_TableVarName="tablestu_data" msprop:Generator_TablePropName="stu_data" msprop:Generator_RowDeletingName="stu_dataRowDeleting" msprop:Generator_RowChangingName="stu_dataRowChanging" msprop:Generator_RowEvHandlerName="stu_dataRowChangeEventHandler" msprop:Generator_RowDeletedName="stu_dataRowDeleted" msprop:Generator_UserTableName="stu_data" msprop:Generator_RowChangedName="stu_dataRowChanged" msprop:Generator_RowEvArgName="stu_dataRowChangeEvent" msprop:Generator_RowClassName="stu_dataRow">[m
[31m -          <xs:complexType>[m
[31m -            <xs:sequence>[m
[31m -              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[31m -              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="2147483647" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[31m -              <xs:element name="QueueDate" msprop:Generator_ColumnVarNameInTable="columnQueueDate" msprop:Generator_ColumnPropNameInRow="QueueDate" msprop:Generator_ColumnPropNameInTable="QueueDateColumn" msprop:Generator_UserColumnName="QueueDate" type="xs:dateTime" />[m
[31m -              <xs:element name="QueueCode" msprop:Generator_ColumnVarNameInTable="columnQueueCode" msprop:Generator_ColumnPropNameInRow="QueueCode" msprop:Generator_ColumnPropNameInTable="QueueCodeColumn" msprop:Generator_UserColumnName="QueueCode">[m
[31m -                <xs:simpleType>[m
[31m -                  <xs:restriction base="xs:string">[m
[31m -                    <xs:maxLength value="50" />[m
[31m -                  </xs:restriction>[m
[31m -                </xs:simpleType>[m
[31m -              </xs:element>[m
[31m -            </xs:sequence>[m
[31m -          </xs:complexType>[m
[31m -        </xs:element>[m
[31m -      </xs:choice>[m
[31m -    </xs:complexType>[m
[31m -  </xs:element>[m
[32m++<<<<<<< HEAD[m
[32m +ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m +<xs:schema id="loginformDataSet7" targetNamespace="http://tempuri.org/loginformDataSet7.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet7.xsd" xmlns="http://tempuri.org/loginformDataSet7.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[32m +  <xs:annotation>[m
[32m +    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m +      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m +        <Connections>[m
[32m +          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[32m +        </Connections>[m
[32m +        <Tables>[m
[32m +          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="stu_dataTableAdapter" GeneratorDataComponentClassName="stu_dataTableAdapter" Name="stu_data" UserDataComponentName="stu_dataTableAdapter">[m
[32m +            <MainSource>[m
[32m +              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.stu_data" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[32m +                <InsertCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>INSERT INTO [dbo].[stu_data] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate, @QueueCode)</CommandText>[m
[32m +                    <Parameters>[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m +                    </Parameters>[m
[32m +                  </DbCommand>[m
[32m +                </InsertCommand>[m
[32m +                <SelectCommand>[m
[32m +                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m +                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM dbo.stu_data</CommandText>[m
[32m +                    <Parameters />[m
[32m +                  </DbCommand>[m
[32m +                </SelectCommand>[m
[32m +              </DbSource>[m
[32m +            </MainSource>[m
[32m +            <Mappings>[m
[32m +              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[32m +              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[32m +              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[32m +              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[32m +              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[32m +              <Mapping SourceColumn="QueueDate" DataSetColumn="QueueDate" />[m
[32m +              <Mapping SourceColumn="QueueCode" DataSetColumn="QueueCode" />[m
[32m +            </Mappings>[m
[32m +            <Sources />[m
[32m +          </TableAdapter>[m
[32m +        </Tables>[m
[32m +        <Sources />[m
[32m +      </DataSource>[m
[32m +    </xs:appinfo>[m
[32m +  </xs:annotation>[m
[32m +  <xs:element name="loginformDataSet7" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet7" msprop:Generator_UserDSName="loginformDataSet7">[m
[32m +    <xs:complexType>[m
[32m +      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[32m +        <xs:element name="stu_data" msprop:Generator_TableClassName="stu_dataDataTable" msprop:Generator_TableVarName="tablestu_data" msprop:Generator_TablePropName="stu_data" msprop:Generator_RowDeletingName="stu_dataRowDeleting" msprop:Generator_RowChangingName="stu_dataRowChanging" msprop:Generator_RowEvHandlerName="stu_dataRowChangeEventHandler" msprop:Generator_RowDeletedName="stu_dataRowDeleted" msprop:Generator_UserTableName="stu_data" msprop:Generator_RowChangedName="stu_dataRowChanged" msprop:Generator_RowEvArgName="stu_dataRowChangeEvent" msprop:Generator_RowClassName="stu_dataRow">[m
[32m +          <xs:complexType>[m
[32m +            <xs:sequence>[m
[32m +              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[32m +              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="2147483647" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[32m +              <xs:element name="QueueDate" msprop:Generator_ColumnVarNameInTable="columnQueueDate" msprop:Generator_ColumnPropNameInRow="QueueDate" msprop:Generator_ColumnPropNameInTable="QueueDateColumn" msprop:Generator_UserColumnName="QueueDate" type="xs:dateTime" />[m
[32m +              <xs:element name="QueueCode" msprop:Generator_ColumnVarNameInTable="columnQueueCode" msprop:Generator_ColumnPropNameInRow="QueueCode" msprop:Generator_ColumnPropNameInTable="QueueCodeColumn" msprop:Generator_UserColumnName="QueueCode">[m
[32m +                <xs:simpleType>[m
[32m +                  <xs:restriction base="xs:string">[m
[32m +                    <xs:maxLength value="50" />[m
[32m +                  </xs:restriction>[m
[32m +                </xs:simpleType>[m
[32m +              </xs:element>[m
[32m +            </xs:sequence>[m
[32m +          </xs:complexType>[m
[32m +        </xs:element>[m
[32m +      </xs:choice>[m
[32m +    </xs:complexType>[m
[32m +  </xs:element>[m
[32m++=======[m
[32m++ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[32m++<xs:schema id="loginformDataSet7" targetNamespace="http://tempuri.org/loginformDataSet7.xsd" xmlns:mstns="http://tempuri.org/loginformDataSet7.xsd" xmlns="http://tempuri.org/loginformDataSet7.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">[m
[32m++  <xs:annotation>[m
[32m++    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m++      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">[m
[32m++        <Connections>[m
[32m++          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="loginformConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="loginformConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.capstoneproject.Properties.Settings.GlobalReference.Default.loginformConnectionString" Provider="System.Data.SqlClient" />[m
[32m++        </Connections>[m
[32m++        <Tables>[m
[32m++          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="stu_dataTableAdapter" GeneratorDataComponentClassName="stu_dataTableAdapter" Name="stu_data" UserDataComponentName="stu_dataTableAdapter">[m
[32m++            <MainSource>[m
[32m++              <DbSource ConnectionRef="loginformConnectionString (Settings)" DbObjectName="loginform.dbo.stu_data" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">[m
[32m++                <InsertCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>INSERT INTO [dbo].[stu_data] ([Name], [Department], [Purpose], [QueueNumber], [QueueDate], [QueueCode]) VALUES (@Name, @Department, @Purpose, @QueueNumber, @QueueDate, @QueueCode)</CommandText>[m
[32m++                    <Parameters>[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Department" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Department" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Purpose" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Purpose" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QueueNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QueueNumber" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@QueueDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="QueueDate" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@QueueCode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="QueueCode" SourceColumnNullMapping="false" SourceVersion="Current" />[m
[32m++                    </Parameters>[m
[32m++                  </DbCommand>[m
[32m++                </InsertCommand>[m
[32m++                <SelectCommand>[m
[32m++                  <DbCommand CommandType="Text" ModifiedByUser="false">[m
[32m++                    <CommandText>SELECT id, Name, Department, Purpose, QueueNumber, QueueDate, QueueCode FROM dbo.stu_data</CommandText>[m
[32m++                    <Parameters />[m
[32m++                  </DbCommand>[m
[32m++                </SelectCommand>[m
[32m++              </DbSource>[m
[32m++            </MainSource>[m
[32m++            <Mappings>[m
[32m++              <Mapping SourceColumn="id" DataSetColumn="id" />[m
[32m++              <Mapping SourceColumn="Name" DataSetColumn="Name" />[m
[32m++              <Mapping SourceColumn="Department" DataSetColumn="Department" />[m
[32m++              <Mapping SourceColumn="Purpose" DataSetColumn="Purpose" />[m
[32m++              <Mapping SourceColumn="QueueNumber" DataSetColumn="QueueNumber" />[m
[32m++              <Mapping SourceColumn="QueueDate" DataSetColumn="QueueDate" />[m
[32m++              <Mapping SourceColumn="QueueCode" DataSetColumn="QueueCode" />[m
[32m++            </Mappings>[m
[32m++            <Sources />[m
[32m++          </TableAdapter>[m
[32m++        </Tables>[m
[32m++        <Sources />[m
[32m++      </DataSource>[m
[32m++    </xs:appinfo>[m
[32m++  </xs:annotation>[m
[32m++  <xs:element name="loginformDataSet7" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="loginformDataSet7" msprop:Generator_UserDSName="loginformDataSet7">[m
[32m++    <xs:complexType>[m
[32m++      <xs:choice minOccurs="0" maxOccurs="unbounded">[m
[32m++        <xs:element name="stu_data" msprop:Generator_TableClassName="stu_dataDataTable" msprop:Generator_TableVarName="tablestu_data" msprop:Generator_TablePropName="stu_data" msprop:Generator_RowDeletingName="stu_dataRowDeleting" msprop:Generator_RowChangingName="stu_dataRowChanging" msprop:Generator_RowEvHandlerName="stu_dataRowChangeEventHandler" msprop:Generator_RowDeletedName="stu_dataRowDeleted" msprop:Generator_UserTableName="stu_data" msprop:Generator_RowChangedName="stu_dataRowChanged" msprop:Generator_RowEvArgName="stu_dataRowChangeEvent" msprop:Generator_RowClassName="stu_dataRow">[m
[32m++          <xs:complexType>[m
[32m++            <xs:sequence>[m
[32m++              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropwarning: in the working copy of 'capstoneproject/obj/Debug/capstoneproject.csproj.FileListAbsolute.txt', LF will be replaced by CRLF the next time Git touches it
NameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />[m
[32m++              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="Department" msprop:Generator_ColumnVarNameInTable="columnDepartment" msprop:Generator_ColumnPropNameInRow="Department" msprop:Generator_ColumnPropNameInTable="DepartmentColumn" msprop:Generator_UserColumnName="Department">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="Purpose" msprop:Generator_ColumnVarNameInTable="columnPurpose" msprop:Generator_ColumnPropNameInRow="Purpose" msprop:Generator_ColumnPropNameInTable="PurposeColumn" msprop:Generator_UserColumnName="Purpose">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="2147483647" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++              <xs:element name="QueueNumber" msprop:Generator_ColumnVarNameInTable="columnQueueNumber" msprop:Generator_ColumnPropNameInRow="QueueNumber" msprop:Generator_ColumnPropNameInTable="QueueNumberColumn" msprop:Generator_UserColumnName="QueueNumber" type="xs:int" />[m
[32m++              <xs:element name="QueueDate" msprop:Generator_ColumnVarNameInTable="columnQueueDate" msprop:Generator_ColumnPropNameInRow="QueueDate" msprop:Generator_ColumnPropNameInTable="QueueDateColumn" msprop:Generator_UserColumnName="QueueDate" type="xs:dateTime" />[m
[32m++              <xs:element name="QueueCode" msprop:Generator_ColumnVarNameInTable="columnQueueCode" msprop:Generator_ColumnPropNameInRow="QueueCode" msprop:Generator_ColumnPropNameInTable="QueueCodeColumn" msprop:Generator_UserColumnName="QueueCode">[m
[32m++                <xs:simpleType>[m
[32m++                  <xs:restriction base="xs:string">[m
[32m++                    <xs:maxLength value="50" />[m
[32m++                  </xs:restriction>[m
[32m++                </xs:simpleType>[m
[32m++              </xs:element>[m
[32m++            </xs:sequence>[m
[32m++          </xs:complexType>[m
[32m++        </xs:element>[m
[32m++      </xs:choice>[m
[32m++    </xs:complexType>[m
[32m++  </xs:element>[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
  </xs:schema>[m
[1mdiff --cc capstoneproject/obj/Debug/DesignTimeResolveAssemblyReferencesInput.cache[m
[1mindex 648516c,f539392..0000000[m
Binary files differ
[1mdiff --cc capstoneproject/obj/Debug/capstoneproject.csproj.FileListAbsolute.txt[m
[1mindex f19286b,53b31b3..0000000[m
[1m--- a/capstoneproject/obj/Debug/capstoneproject.csproj.FileListAbsolute.txt[m
[1m+++ b/capstoneproject/obj/Debug/capstoneproject.csproj.FileListAbsolute.txt[m
[36m@@@ -1,36 -1,36 +1,75 @@@[m
[31m -c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\bin\Debug\capstoneproject.exe.config[m
[31m -c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.csprojResolveAssemblyReference.cache[m
[31m -c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.adduser.resources[m
[31m -c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.dashboard.resources[m
[31m -c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.Form1.resources[m
[31m -c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.Properties.Resources.resources[m
[31m -c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.Users.resources[m
[31m -c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.csproj.GenerateResource.Cache[m
[31m -c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\bin\Debug\capstoneproject.exe[m
[31m -c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\bin\Debug\capstoneproject.pdb[m
[31m -c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.exe[m
[31m -c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.pdb[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.exe.config[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.exe[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.pdb[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.exe[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.pdb[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.csprojResolveAssemblyReference.cache[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.adduser.resources[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.dashboard.resources[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Form1.resources[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Properties.Resources.resources[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Users.resources[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.csproj.GenerateResource.Cache[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.exe.config[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.exe[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.pdb[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.exe[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.pdb[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.csprojResolveAssemblyReference.cache[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.adduser.resources[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.dashboard.resources[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Form1.resources[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Properties.Resources.resources[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Users.resources[m
[31m -C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.csproj.GenerateResource.Cache[m
[32m++<<<<<<< HEAD[m
[32m +c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\bin\Debug\capstoneproject.exe.config[m
[32m +c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.csprojResolveAssemblyReference.cache[m
[32m +c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.adduser.resources[m
[32m +c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.dashboard.resources[m
[32m +c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.Form1.resources[m
[32m +c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.Properties.Resources.resources[m
[32m +c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.Users.resources[m
[32m +c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.csproj.GenerateResource.Cache[m
[32m +c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\bin\Debug\capstoneproject.exe[m
[32m +c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\bin\Debug\capstoneproject.pdb[m
[32m +c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.exe[m
[32m +c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.pdb[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.exe.config[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.exe[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.pdb[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.exe[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.pdb[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.csprojResolveAssemblyReference.cache[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.adduser.resources[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.dashboard.resources[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Form1.resources[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Properties.Resources.resources[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Users.resources[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.csproj.GenerateResource.Cache[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.exe.config[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.exe[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.pdb[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.exe[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.pdb[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.csprojResolveAssemblyReference.cache[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.adduser.resources[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.dashboard.resources[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Form1.resources[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Properties.Resources.resources[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Users.resources[m
[32m +C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.csproj.GenerateResource.Cache[m
[32m++=======[m
[32m++c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\bin\Debug\capstoneproject.exe.config[m
[32m++c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.csprojResolveAssemblyReference.cache[m
[32m++c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.adduser.resources[m
[32m++c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.dashboard.resources[m
[32m++c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.Form1.resources[m
[32m++c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.Properties.Resources.resources[m
[32m++c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.Users.resources[m
[32m++c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.csproj.GenerateResource.Cache[m
[32m++c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\bin\Debug\capstoneproject.exe[m
[32m++c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\bin\Debug\capstoneproject.pdb[m
[32m++c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.exe[m
[32m++c:\users\minem\onedrive\documents\visual studio 2015\Projects\capstoneproject\capstoneproject\obj\Debug\capstoneproject.pdb[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.exe.config[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.exe[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.pdb[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.exe[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.pdb[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.csprojResolveAssemblyReference.cache[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.adduser.resources[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.dashboard.resources[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Form1.resources[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Properties.Resources.resources[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Users.resources[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.csproj.GenerateResource.Cache[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.exe.config[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.exe[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.pdb[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.exe[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\bin\Debug\capstoneproject.pdb[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.csprojResolveAssemblyReference.cache[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.adduser.resources[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.dashboard.resources[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Form1.resources[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Properties.Resources.resources[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.Users.resources[m
[32m++C:\Users\minem\source\repos\capstone-project-queiung-management\capstone-project-queiung-management\capstoneproject\obj\Debug\capstoneproject.csproj.GenerateResource.Cache[m
[32m++>>>>>>> d15cd4c031007eb79e9c3bfc97acce81f2a00d2f[m
[1mdiff --cc capstoneproject/obj/Debug/capstoneproject.csproj.GenerateResource.Cache[m
[1mindex 7ee302c,7802a2c..0000000[m
Binary files differ
[1mdiff --cc capstoneproject/obj/Debug/capstoneproject.exe[m
[1mindex 4e8bbf0,5651bd8..0000000[m
Binary files differ
[1mdiff --cc capstoneproject/obj/Debug/capstoneproject.pdb[m
[1mindex b1e148e,7947332..0000000[m
Binary files differ
